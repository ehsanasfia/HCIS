#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OMOApp.Data.IMData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IndustrialMedicine")]
	public partial class IMClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAmoozeshActivity(AmoozeshActivity instance);
    partial void UpdateAmoozeshActivity(AmoozeshActivity instance);
    partial void DeleteAmoozeshActivity(AmoozeshActivity instance);
    partial void InsertWorkLimitCondition(WorkLimitCondition instance);
    partial void UpdateWorkLimitCondition(WorkLimitCondition instance);
    partial void DeleteWorkLimitCondition(WorkLimitCondition instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCompanyDailyCapacity(CompanyDailyCapacity instance);
    partial void UpdateCompanyDailyCapacity(CompanyDailyCapacity instance);
    partial void DeleteCompanyDailyCapacity(CompanyDailyCapacity instance);
    partial void InsertConsultType(ConsultType instance);
    partial void UpdateConsultType(ConsultType instance);
    partial void DeleteConsultType(ConsultType instance);
    partial void InsertCounsultRequest(CounsultRequest instance);
    partial void UpdateCounsultRequest(CounsultRequest instance);
    partial void DeleteCounsultRequest(CounsultRequest instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertDiagnosisItem(DiagnosisItem instance);
    partial void UpdateDiagnosisItem(DiagnosisItem instance);
    partial void DeleteDiagnosisItem(DiagnosisItem instance);
    partial void InsertDoctorDiagnosisD(DoctorDiagnosisD instance);
    partial void UpdateDoctorDiagnosisD(DoctorDiagnosisD instance);
    partial void DeleteDoctorDiagnosisD(DoctorDiagnosisD instance);
    partial void InsertDoctorDiagnosisM(DoctorDiagnosisM instance);
    partial void UpdateDoctorDiagnosisM(DoctorDiagnosisM instance);
    partial void DeleteDoctorDiagnosisM(DoctorDiagnosisM instance);
    partial void InsertDoctorSignAndStamp(DoctorSignAndStamp instance);
    partial void UpdateDoctorSignAndStamp(DoctorSignAndStamp instance);
    partial void DeleteDoctorSignAndStamp(DoctorSignAndStamp instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocumentResult(DocumentResult instance);
    partial void UpdateDocumentResult(DocumentResult instance);
    partial void DeleteDocumentResult(DocumentResult instance);
    partial void InsertDocumentResultCondition(DocumentResultCondition instance);
    partial void UpdateDocumentResultCondition(DocumentResultCondition instance);
    partial void DeleteDocumentResultCondition(DocumentResultCondition instance);
    partial void InsertDocumentResultRecommendation(DocumentResultRecommendation instance);
    partial void UpdateDocumentResultRecommendation(DocumentResultRecommendation instance);
    partial void DeleteDocumentResultRecommendation(DocumentResultRecommendation instance);
    partial void InsertDossierDentall(DossierDentall instance);
    partial void UpdateDossierDentall(DossierDentall instance);
    partial void DeleteDossierDentall(DossierDentall instance);
    partial void InsertEspirometry(Espirometry instance);
    partial void UpdateEspirometry(Espirometry instance);
    partial void DeleteEspirometry(Espirometry instance);
    partial void InsertEvaluationResult(EvaluationResult instance);
    partial void UpdateEvaluationResult(EvaluationResult instance);
    partial void DeleteEvaluationResult(EvaluationResult instance);
    partial void InsertFamilyIllnessHistory(FamilyIllnessHistory instance);
    partial void UpdateFamilyIllnessHistory(FamilyIllnessHistory instance);
    partial void DeleteFamilyIllnessHistory(FamilyIllnessHistory instance);
    partial void InsertFamilyRelation(FamilyRelation instance);
    partial void UpdateFamilyRelation(FamilyRelation instance);
    partial void DeleteFamilyRelation(FamilyRelation instance);
    partial void InsertHarmCause(HarmCause instance);
    partial void UpdateHarmCause(HarmCause instance);
    partial void DeleteHarmCause(HarmCause instance);
    partial void InsertIllnessHistory(IllnessHistory instance);
    partial void UpdateIllnessHistory(IllnessHistory instance);
    partial void DeleteIllnessHistory(IllnessHistory instance);
    partial void InsertJobHistory(JobHistory instance);
    partial void UpdateJobHistory(JobHistory instance);
    partial void DeleteJobHistory(JobHistory instance);
    partial void InsertLaboratoryRequest(LaboratoryRequest instance);
    partial void UpdateLaboratoryRequest(LaboratoryRequest instance);
    partial void DeleteLaboratoryRequest(LaboratoryRequest instance);
    partial void InsertNotritionConsult(NotritionConsult instance);
    partial void UpdateNotritionConsult(NotritionConsult instance);
    partial void DeleteNotritionConsult(NotritionConsult instance);
    partial void InsertNotritionIllness(NotritionIllness instance);
    partial void UpdateNotritionIllness(NotritionIllness instance);
    partial void DeleteNotritionIllness(NotritionIllness instance);
    partial void InsertNurseDiagnose(NurseDiagnose instance);
    partial void UpdateNurseDiagnose(NurseDiagnose instance);
    partial void DeleteNurseDiagnose(NurseDiagnose instance);
    partial void InsertNutritionConsultant(NutritionConsultant instance);
    partial void UpdateNutritionConsultant(NutritionConsultant instance);
    partial void DeleteNutritionConsultant(NutritionConsultant instance);
    partial void InsertOdiometry(Odiometry instance);
    partial void UpdateOdiometry(Odiometry instance);
    partial void DeleteOdiometry(Odiometry instance);
    partial void InsertOptometry(Optometry instance);
    partial void UpdateOptometry(Optometry instance);
    partial void DeleteOptometry(Optometry instance);
    partial void InsertOtherTest(OtherTest instance);
    partial void UpdateOtherTest(OtherTest instance);
    partial void DeleteOtherTest(OtherTest instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPsychologyTest(PsychologyTest instance);
    partial void UpdatePsychologyTest(PsychologyTest instance);
    partial void DeletePsychologyTest(PsychologyTest instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    partial void InsertQuestionResultD(QuestionResultD instance);
    partial void UpdateQuestionResultD(QuestionResultD instance);
    partial void DeleteQuestionResultD(QuestionResultD instance);
    partial void InsertQuestionResultM(QuestionResultM instance);
    partial void UpdateQuestionResultM(QuestionResultM instance);
    partial void DeleteQuestionResultM(QuestionResultM instance);
    partial void InsertRadiography(Radiography instance);
    partial void UpdateRadiography(Radiography instance);
    partial void DeleteRadiography(Radiography instance);
    partial void InsertRequestType(RequestType instance);
    partial void UpdateRequestType(RequestType instance);
    partial void DeleteRequestType(RequestType instance);
    partial void InsertSicknessDetail(SicknessDetail instance);
    partial void UpdateSicknessDetail(SicknessDetail instance);
    partial void DeleteSicknessDetail(SicknessDetail instance);
    partial void InsertSurveillance(Surveillance instance);
    partial void UpdateSurveillance(Surveillance instance);
    partial void DeleteSurveillance(Surveillance instance);
    partial void InsertSurveillanceIllness(SurveillanceIllness instance);
    partial void UpdateSurveillanceIllness(SurveillanceIllness instance);
    partial void DeleteSurveillanceIllness(SurveillanceIllness instance);
    partial void InsertSurviellanceIllnessLevel(SurviellanceIllnessLevel instance);
    partial void UpdateSurviellanceIllnessLevel(SurviellanceIllnessLevel instance);
    partial void DeleteSurviellanceIllnessLevel(SurviellanceIllnessLevel instance);
    partial void InsertTbl_ValidCenter(Tbl_ValidCenter instance);
    partial void UpdateTbl_ValidCenter(Tbl_ValidCenter instance);
    partial void DeleteTbl_ValidCenter(Tbl_ValidCenter instance);
    partial void InsertTbl_ValidCenterZone(Tbl_ValidCenterZone instance);
    partial void UpdateTbl_ValidCenterZone(Tbl_ValidCenterZone instance);
    partial void DeleteTbl_ValidCenterZone(Tbl_ValidCenterZone instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public IMClassesDataContext() : 
				base(global::OMOApp.Properties.Settings.Default.IndustrialMedicineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IMClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AmoozeshActivity> AmoozeshActivities
		{
			get
			{
				return this.GetTable<AmoozeshActivity>();
			}
		}
		
		public System.Data.Linq.Table<WorkLimitCondition> WorkLimitConditions
		{
			get
			{
				return this.GetTable<WorkLimitCondition>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<CompanyDailyCapacity> CompanyDailyCapacities
		{
			get
			{
				return this.GetTable<CompanyDailyCapacity>();
			}
		}
		
		public System.Data.Linq.Table<ConsultType> ConsultTypes
		{
			get
			{
				return this.GetTable<ConsultType>();
			}
		}
		
		public System.Data.Linq.Table<CounsultRequest> CounsultRequests
		{
			get
			{
				return this.GetTable<CounsultRequest>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<DiagnosisItem> DiagnosisItems
		{
			get
			{
				return this.GetTable<DiagnosisItem>();
			}
		}
		
		public System.Data.Linq.Table<DoctorDiagnosisD> DoctorDiagnosisDs
		{
			get
			{
				return this.GetTable<DoctorDiagnosisD>();
			}
		}
		
		public System.Data.Linq.Table<DoctorDiagnosisM> DoctorDiagnosisMs
		{
			get
			{
				return this.GetTable<DoctorDiagnosisM>();
			}
		}
		
		public System.Data.Linq.Table<DoctorSignAndStamp> DoctorSignAndStamps
		{
			get
			{
				return this.GetTable<DoctorSignAndStamp>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentResult> DocumentResults
		{
			get
			{
				return this.GetTable<DocumentResult>();
			}
		}
		
		public System.Data.Linq.Table<DocumentResultCondition> DocumentResultConditions
		{
			get
			{
				return this.GetTable<DocumentResultCondition>();
			}
		}
		
		public System.Data.Linq.Table<DocumentResultRecommendation> DocumentResultRecommendations
		{
			get
			{
				return this.GetTable<DocumentResultRecommendation>();
			}
		}
		
		public System.Data.Linq.Table<DossierDentall> DossierDentalls
		{
			get
			{
				return this.GetTable<DossierDentall>();
			}
		}
		
		public System.Data.Linq.Table<Espirometry> Espirometries
		{
			get
			{
				return this.GetTable<Espirometry>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationResult> EvaluationResults
		{
			get
			{
				return this.GetTable<EvaluationResult>();
			}
		}
		
		public System.Data.Linq.Table<FamilyIllnessHistory> FamilyIllnessHistories
		{
			get
			{
				return this.GetTable<FamilyIllnessHistory>();
			}
		}
		
		public System.Data.Linq.Table<FamilyRelation> FamilyRelations
		{
			get
			{
				return this.GetTable<FamilyRelation>();
			}
		}
		
		public System.Data.Linq.Table<HarmCause> HarmCauses
		{
			get
			{
				return this.GetTable<HarmCause>();
			}
		}
		
		public System.Data.Linq.Table<IllnessHistory> IllnessHistories
		{
			get
			{
				return this.GetTable<IllnessHistory>();
			}
		}
		
		public System.Data.Linq.Table<JobHistory> JobHistories
		{
			get
			{
				return this.GetTable<JobHistory>();
			}
		}
		
		public System.Data.Linq.Table<LaboratoryRequest> LaboratoryRequests
		{
			get
			{
				return this.GetTable<LaboratoryRequest>();
			}
		}
		
		public System.Data.Linq.Table<NotritionConsult> NotritionConsults
		{
			get
			{
				return this.GetTable<NotritionConsult>();
			}
		}
		
		public System.Data.Linq.Table<NotritionIllness> NotritionIllnesses
		{
			get
			{
				return this.GetTable<NotritionIllness>();
			}
		}
		
		public System.Data.Linq.Table<NurseDiagnose> NurseDiagnoses
		{
			get
			{
				return this.GetTable<NurseDiagnose>();
			}
		}
		
		public System.Data.Linq.Table<NutritionConsultant> NutritionConsultants
		{
			get
			{
				return this.GetTable<NutritionConsultant>();
			}
		}
		
		public System.Data.Linq.Table<Odiometry> Odiometries
		{
			get
			{
				return this.GetTable<Odiometry>();
			}
		}
		
		public System.Data.Linq.Table<Optometry> Optometries
		{
			get
			{
				return this.GetTable<Optometry>();
			}
		}
		
		public System.Data.Linq.Table<OtherTest> OtherTests
		{
			get
			{
				return this.GetTable<OtherTest>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<PsychologyTest> PsychologyTests
		{
			get
			{
				return this.GetTable<PsychologyTest>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
		
		public System.Data.Linq.Table<QuestionResultD> QuestionResultDs
		{
			get
			{
				return this.GetTable<QuestionResultD>();
			}
		}
		
		public System.Data.Linq.Table<QuestionResultM> QuestionResultMs
		{
			get
			{
				return this.GetTable<QuestionResultM>();
			}
		}
		
		public System.Data.Linq.Table<Radiography> Radiographies
		{
			get
			{
				return this.GetTable<Radiography>();
			}
		}
		
		public System.Data.Linq.Table<RequestType> RequestTypes
		{
			get
			{
				return this.GetTable<RequestType>();
			}
		}
		
		public System.Data.Linq.Table<Sheet1> Sheet1s
		{
			get
			{
				return this.GetTable<Sheet1>();
			}
		}
		
		public System.Data.Linq.Table<SicknessDetail> SicknessDetails
		{
			get
			{
				return this.GetTable<SicknessDetail>();
			}
		}
		
		public System.Data.Linq.Table<Surveillance> Surveillances
		{
			get
			{
				return this.GetTable<Surveillance>();
			}
		}
		
		public System.Data.Linq.Table<SurveillanceIllness> SurveillanceIllnesses
		{
			get
			{
				return this.GetTable<SurveillanceIllness>();
			}
		}
		
		public System.Data.Linq.Table<SurviellanceIllnessLevel> SurviellanceIllnessLevels
		{
			get
			{
				return this.GetTable<SurviellanceIllnessLevel>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_ValidCenter> Tbl_ValidCenters
		{
			get
			{
				return this.GetTable<Tbl_ValidCenter>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_ValidCenterZone> Tbl_ValidCenterZones
		{
			get
			{
				return this.GetTable<Tbl_ValidCenterZone>();
			}
		}
		
		public System.Data.Linq.Table<TestResult96_1> TestResult96_1s
		{
			get
			{
				return this.GetTable<TestResult96_1>();
			}
		}
		
		public System.Data.Linq.Table<TestResult96_2> TestResult96_2s
		{
			get
			{
				return this.GetTable<TestResult96_2>();
			}
		}
		
		public System.Data.Linq.Table<TestResult96_3> TestResult96_3s
		{
			get
			{
				return this.GetTable<TestResult96_3>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmoozeshActivities")]
	public partial class AmoozeshActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ParticipantGroup;
		
		private System.Nullable<int> _ParticipantNum;
		
		private string _TrainingSubject;
		
		private string _vahed;
		
		private string _Method;
		
		private string _Instrument;
		
		private string _Instructor;
		
		private System.Nullable<bool> _SHerkatiORnot;
		
		private string _DurationDays;
		
		private string _DurationHours;
		
		private string _InstrumentProvisin;
		
		private string _Publications;
		
		private System.Nullable<int> _PunlicationsNum;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private System.Nullable<bool> _Deleted;
		
		private string _Explanation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParticipantGroupChanging(string value);
    partial void OnParticipantGroupChanged();
    partial void OnParticipantNumChanging(System.Nullable<int> value);
    partial void OnParticipantNumChanged();
    partial void OnTrainingSubjectChanging(string value);
    partial void OnTrainingSubjectChanged();
    partial void OnvahedChanging(string value);
    partial void OnvahedChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnInstrumentChanging(string value);
    partial void OnInstrumentChanged();
    partial void OnInstructorChanging(string value);
    partial void OnInstructorChanged();
    partial void OnSHerkatiORnotChanging(System.Nullable<bool> value);
    partial void OnSHerkatiORnotChanged();
    partial void OnDurationDaysChanging(string value);
    partial void OnDurationDaysChanged();
    partial void OnDurationHoursChanging(string value);
    partial void OnDurationHoursChanged();
    partial void OnInstrumentProvisinChanging(string value);
    partial void OnInstrumentProvisinChanged();
    partial void OnPublicationsChanging(string value);
    partial void OnPublicationsChanged();
    partial void OnPunlicationsNumChanging(System.Nullable<int> value);
    partial void OnPunlicationsNumChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    #endregion
		
		public AmoozeshActivity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantGroup", DbType="NVarChar(50)")]
		public string ParticipantGroup
		{
			get
			{
				return this._ParticipantGroup;
			}
			set
			{
				if ((this._ParticipantGroup != value))
				{
					this.OnParticipantGroupChanging(value);
					this.SendPropertyChanging();
					this._ParticipantGroup = value;
					this.SendPropertyChanged("ParticipantGroup");
					this.OnParticipantGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantNum", DbType="Int")]
		public System.Nullable<int> ParticipantNum
		{
			get
			{
				return this._ParticipantNum;
			}
			set
			{
				if ((this._ParticipantNum != value))
				{
					this.OnParticipantNumChanging(value);
					this.SendPropertyChanging();
					this._ParticipantNum = value;
					this.SendPropertyChanged("ParticipantNum");
					this.OnParticipantNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingSubject", DbType="NVarChar(50)")]
		public string TrainingSubject
		{
			get
			{
				return this._TrainingSubject;
			}
			set
			{
				if ((this._TrainingSubject != value))
				{
					this.OnTrainingSubjectChanging(value);
					this.SendPropertyChanging();
					this._TrainingSubject = value;
					this.SendPropertyChanged("TrainingSubject");
					this.OnTrainingSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vahed", DbType="NVarChar(50)")]
		public string vahed
		{
			get
			{
				return this._vahed;
			}
			set
			{
				if ((this._vahed != value))
				{
					this.OnvahedChanging(value);
					this.SendPropertyChanging();
					this._vahed = value;
					this.SendPropertyChanged("vahed");
					this.OnvahedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NVarChar(50)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrument", DbType="NVarChar(50)")]
		public string Instrument
		{
			get
			{
				return this._Instrument;
			}
			set
			{
				if ((this._Instrument != value))
				{
					this.OnInstrumentChanging(value);
					this.SendPropertyChanging();
					this._Instrument = value;
					this.SendPropertyChanged("Instrument");
					this.OnInstrumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructor", DbType="NVarChar(50)")]
		public string Instructor
		{
			get
			{
				return this._Instructor;
			}
			set
			{
				if ((this._Instructor != value))
				{
					this.OnInstructorChanging(value);
					this.SendPropertyChanging();
					this._Instructor = value;
					this.SendPropertyChanged("Instructor");
					this.OnInstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHerkatiORnot", DbType="Bit")]
		public System.Nullable<bool> SHerkatiORnot
		{
			get
			{
				return this._SHerkatiORnot;
			}
			set
			{
				if ((this._SHerkatiORnot != value))
				{
					this.OnSHerkatiORnotChanging(value);
					this.SendPropertyChanging();
					this._SHerkatiORnot = value;
					this.SendPropertyChanged("SHerkatiORnot");
					this.OnSHerkatiORnotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDays", DbType="NVarChar(50)")]
		public string DurationDays
		{
			get
			{
				return this._DurationDays;
			}
			set
			{
				if ((this._DurationDays != value))
				{
					this.OnDurationDaysChanging(value);
					this.SendPropertyChanging();
					this._DurationDays = value;
					this.SendPropertyChanged("DurationDays");
					this.OnDurationDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationHours", DbType="NVarChar(50)")]
		public string DurationHours
		{
			get
			{
				return this._DurationHours;
			}
			set
			{
				if ((this._DurationHours != value))
				{
					this.OnDurationHoursChanging(value);
					this.SendPropertyChanging();
					this._DurationHours = value;
					this.SendPropertyChanged("DurationHours");
					this.OnDurationHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstrumentProvisin", DbType="NVarChar(50)")]
		public string InstrumentProvisin
		{
			get
			{
				return this._InstrumentProvisin;
			}
			set
			{
				if ((this._InstrumentProvisin != value))
				{
					this.OnInstrumentProvisinChanging(value);
					this.SendPropertyChanging();
					this._InstrumentProvisin = value;
					this.SendPropertyChanged("InstrumentProvisin");
					this.OnInstrumentProvisinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publications", DbType="NVarChar(50)")]
		public string Publications
		{
			get
			{
				return this._Publications;
			}
			set
			{
				if ((this._Publications != value))
				{
					this.OnPublicationsChanging(value);
					this.SendPropertyChanging();
					this._Publications = value;
					this.SendPropertyChanged("Publications");
					this.OnPublicationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunlicationsNum", DbType="Int")]
		public System.Nullable<int> PunlicationsNum
		{
			get
			{
				return this._PunlicationsNum;
			}
			set
			{
				if ((this._PunlicationsNum != value))
				{
					this.OnPunlicationsNumChanging(value);
					this.SendPropertyChanging();
					this._PunlicationsNum = value;
					this.SendPropertyChanged("PunlicationsNum");
					this.OnPunlicationsNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NVarChar(50)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkLimitCondition")]
	public partial class WorkLimitCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<WorkLimitCondition> _WorkLimitConditions;
		
		private EntitySet<DocumentResultCondition> _DocumentResultConditions;
		
		private EntityRef<WorkLimitCondition> _WorkLimitCondition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public WorkLimitCondition()
		{
			this._WorkLimitConditions = new EntitySet<WorkLimitCondition>(new Action<WorkLimitCondition>(this.attach_WorkLimitConditions), new Action<WorkLimitCondition>(this.detach_WorkLimitConditions));
			this._DocumentResultConditions = new EntitySet<DocumentResultCondition>(new Action<DocumentResultCondition>(this.attach_DocumentResultConditions), new Action<DocumentResultCondition>(this.detach_DocumentResultConditions));
			this._WorkLimitCondition1 = default(EntityRef<WorkLimitCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._WorkLimitCondition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkLimitCondition_WorkLimitCondition", Storage="_WorkLimitConditions", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<WorkLimitCondition> WorkLimitConditions
		{
			get
			{
				return this._WorkLimitConditions;
			}
			set
			{
				this._WorkLimitConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkLimitCondition_DocumentResultCondition", Storage="_DocumentResultConditions", ThisKey="ID", OtherKey="LimitConditionID")]
		public EntitySet<DocumentResultCondition> DocumentResultConditions
		{
			get
			{
				return this._DocumentResultConditions;
			}
			set
			{
				this._DocumentResultConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkLimitCondition_WorkLimitCondition", Storage="_WorkLimitCondition1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public WorkLimitCondition WorkLimitCondition1
		{
			get
			{
				return this._WorkLimitCondition1.Entity;
			}
			set
			{
				WorkLimitCondition previousValue = this._WorkLimitCondition1.Entity;
				if (((previousValue != value) 
							|| (this._WorkLimitCondition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkLimitCondition1.Entity = null;
						previousValue.WorkLimitConditions.Remove(this);
					}
					this._WorkLimitCondition1.Entity = value;
					if ((value != null))
					{
						value.WorkLimitConditions.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkLimitCondition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkLimitConditions(WorkLimitCondition entity)
		{
			this.SendPropertyChanging();
			entity.WorkLimitCondition1 = this;
		}
		
		private void detach_WorkLimitConditions(WorkLimitCondition entity)
		{
			this.SendPropertyChanging();
			entity.WorkLimitCondition1 = null;
		}
		
		private void attach_DocumentResultConditions(DocumentResultCondition entity)
		{
			this.SendPropertyChanging();
			entity.WorkLimitCondition = this;
		}
		
		private void detach_DocumentResultConditions(DocumentResultCondition entity)
		{
			this.SendPropertyChanging();
			entity.WorkLimitCondition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Name;
		
		private System.Nullable<int> _IDValidCenterZone;
		
		private bool _Active;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDValidCenterZoneChanging(System.Nullable<int> value);
    partial void OnIDValidCenterZoneChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public City()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="Int")]
		public System.Nullable<int> IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this.OnIDValidCenterZoneChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenterZone = value;
					this.SendPropertyChanged("IDValidCenterZone");
					this.OnIDValidCenterZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Person", Storage="_Persons", ThisKey="ID", OtherKey="BirthCityID")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="BirthCertificateCityID")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.City1 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.City1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<int> _IDCo;
		
		private System.Nullable<int> _IDMg;
		
		private System.Nullable<int> _IDOrg;
		
		private System.Nullable<int> _IDUnit;
		
		private string _FullName;
		
		private EntitySet<CompanyDailyCapacity> _CompanyDailyCapacities;
		
		private EntitySet<Document> _Documents;
		
		private EntitySet<JobHistory> _JobHistories;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnIDCoChanging(System.Nullable<int> value);
    partial void OnIDCoChanged();
    partial void OnIDMgChanging(System.Nullable<int> value);
    partial void OnIDMgChanged();
    partial void OnIDOrgChanging(System.Nullable<int> value);
    partial void OnIDOrgChanged();
    partial void OnIDUnitChanging(System.Nullable<int> value);
    partial void OnIDUnitChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public Company()
		{
			this._CompanyDailyCapacities = new EntitySet<CompanyDailyCapacity>(new Action<CompanyDailyCapacity>(this.attach_CompanyDailyCapacities), new Action<CompanyDailyCapacity>(this.detach_CompanyDailyCapacities));
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._JobHistories = new EntitySet<JobHistory>(new Action<JobHistory>(this.attach_JobHistories), new Action<JobHistory>(this.detach_JobHistories));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCo", DbType="Int")]
		public System.Nullable<int> IDCo
		{
			get
			{
				return this._IDCo;
			}
			set
			{
				if ((this._IDCo != value))
				{
					this.OnIDCoChanging(value);
					this.SendPropertyChanging();
					this._IDCo = value;
					this.SendPropertyChanged("IDCo");
					this.OnIDCoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMg", DbType="Int")]
		public System.Nullable<int> IDMg
		{
			get
			{
				return this._IDMg;
			}
			set
			{
				if ((this._IDMg != value))
				{
					this.OnIDMgChanging(value);
					this.SendPropertyChanging();
					this._IDMg = value;
					this.SendPropertyChanged("IDMg");
					this.OnIDMgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrg", DbType="Int")]
		public System.Nullable<int> IDOrg
		{
			get
			{
				return this._IDOrg;
			}
			set
			{
				if ((this._IDOrg != value))
				{
					this.OnIDOrgChanging(value);
					this.SendPropertyChanging();
					this._IDOrg = value;
					this.SendPropertyChanged("IDOrg");
					this.OnIDOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUnit", DbType="Int")]
		public System.Nullable<int> IDUnit
		{
			get
			{
				return this._IDUnit;
			}
			set
			{
				if ((this._IDUnit != value))
				{
					this.OnIDUnitChanging(value);
					this.SendPropertyChanging();
					this._IDUnit = value;
					this.SendPropertyChanged("IDUnit");
					this.OnIDUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", AutoSync=AutoSync.Always, DbType="NVarChar(MAX)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_CompanyDailyCapacity", Storage="_CompanyDailyCapacities", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<CompanyDailyCapacity> CompanyDailyCapacities
		{
			get
			{
				return this._CompanyDailyCapacities;
			}
			set
			{
				this._CompanyDailyCapacities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Document", Storage="_Documents", ThisKey="ID", OtherKey="ReferralCompanyID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_JobHistory", Storage="_JobHistories", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<JobHistory> JobHistories
		{
			get
			{
				return this._JobHistories;
			}
			set
			{
				this._JobHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Person", Storage="_Persons", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Users", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompanyDailyCapacities(CompanyDailyCapacity entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_CompanyDailyCapacities(CompanyDailyCapacity entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyDailyCapacity")]
	public partial class CompanyDailyCapacity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _CompanyID;
		
		private string _Date;
		
		private System.Nullable<int> _Capacity;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    #endregion
		
		public CompanyDailyCapacity()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_CompanyDailyCapacity", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.CompanyDailyCapacities.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.CompanyDailyCapacities.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConsultType")]
	public partial class ConsultType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ConsultName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConsultNameChanging(string value);
    partial void OnConsultNameChanged();
    #endregion
		
		public ConsultType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsultName", DbType="NVarChar(30)")]
		public string ConsultName
		{
			get
			{
				return this._ConsultName;
			}
			set
			{
				if ((this._ConsultName != value))
				{
					this.OnConsultNameChanging(value);
					this.SendPropertyChanging();
					this._ConsultName = value;
					this.SendPropertyChanged("ConsultName");
					this.OnConsultNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CounsultRequest")]
	public partial class CounsultRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PersonID;
		
		private System.Nullable<int> _PersonelNo;
		
		private string _Applicant;
		
		private string _Reason;
		
		private string _Explanation;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private System.Nullable<int> _counsultType;
		
		private System.Nullable<bool> _NOTsherkati;
		
		private System.Nullable<int> _NOTsherkatiCOD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<int> value);
    partial void OnPersonIDChanged();
    partial void OnPersonelNoChanging(System.Nullable<int> value);
    partial void OnPersonelNoChanged();
    partial void OnApplicantChanging(string value);
    partial void OnApplicantChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OncounsultTypeChanging(System.Nullable<int> value);
    partial void OncounsultTypeChanged();
    partial void OnNOTsherkatiChanging(System.Nullable<bool> value);
    partial void OnNOTsherkatiChanged();
    partial void OnNOTsherkatiCODChanging(System.Nullable<int> value);
    partial void OnNOTsherkatiCODChanged();
    #endregion
		
		public CounsultRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int")]
		public System.Nullable<int> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelNo", DbType="Int")]
		public System.Nullable<int> PersonelNo
		{
			get
			{
				return this._PersonelNo;
			}
			set
			{
				if ((this._PersonelNo != value))
				{
					this.OnPersonelNoChanging(value);
					this.SendPropertyChanging();
					this._PersonelNo = value;
					this.SendPropertyChanged("PersonelNo");
					this.OnPersonelNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applicant", DbType="NVarChar(50)")]
		public string Applicant
		{
			get
			{
				return this._Applicant;
			}
			set
			{
				if ((this._Applicant != value))
				{
					this.OnApplicantChanging(value);
					this.SendPropertyChanging();
					this._Applicant = value;
					this.SendPropertyChanged("Applicant");
					this.OnApplicantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(50)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NVarChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counsultType", DbType="Int")]
		public System.Nullable<int> counsultType
		{
			get
			{
				return this._counsultType;
			}
			set
			{
				if ((this._counsultType != value))
				{
					this.OncounsultTypeChanging(value);
					this.SendPropertyChanging();
					this._counsultType = value;
					this.SendPropertyChanged("counsultType");
					this.OncounsultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTsherkati", DbType="Bit")]
		public System.Nullable<bool> NOTsherkati
		{
			get
			{
				return this._NOTsherkati;
			}
			set
			{
				if ((this._NOTsherkati != value))
				{
					this.OnNOTsherkatiChanging(value);
					this.SendPropertyChanging();
					this._NOTsherkati = value;
					this.SendPropertyChanged("NOTsherkati");
					this.OnNOTsherkatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTsherkatiCOD", DbType="Int")]
		public System.Nullable<int> NOTsherkatiCOD
		{
			get
			{
				return this._NOTsherkatiCOD;
			}
			set
			{
				if ((this._NOTsherkatiCOD != value))
				{
					this.OnNOTsherkatiCODChanging(value);
					this.SendPropertyChanging();
					this._NOTsherkatiCOD = value;
					this.SendPropertyChanged("NOTsherkatiCOD");
					this.OnNOTsherkatiCODChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<Definition> _Definitions;
		
		private EntitySet<DocumentResultRecommendation> _DocumentResultRecommendations;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public Definition()
		{
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._DocumentResultRecommendations = new EntitySet<DocumentResultRecommendation>(new Action<DocumentResultRecommendation>(this.attach_DocumentResultRecommendations), new Action<DocumentResultRecommendation>(this.detach_DocumentResultRecommendations));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_DocumentResultRecommendation", Storage="_DocumentResultRecommendations", ThisKey="ID", OtherKey="DefinitionID")]
		public EntitySet<DocumentResultRecommendation> DocumentResultRecommendations
		{
			get
			{
				return this._DocumentResultRecommendations;
			}
			set
			{
				this._DocumentResultRecommendations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_DocumentResultRecommendations(DocumentResultRecommendation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_DocumentResultRecommendations(DocumentResultRecommendation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiagnosisItem")]
	public partial class DiagnosisItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<int> _ICD10ID;
		
		private bool _Deleted;
		
		private EntitySet<DiagnosisItem> _DiagnosisItems;
		
		private EntitySet<DoctorDiagnosisD> _DoctorDiagnosisDs;
		
		private EntityRef<DiagnosisItem> _DiagnosisItem1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnICD10IDChanging(System.Nullable<int> value);
    partial void OnICD10IDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public DiagnosisItem()
		{
			this._DiagnosisItems = new EntitySet<DiagnosisItem>(new Action<DiagnosisItem>(this.attach_DiagnosisItems), new Action<DiagnosisItem>(this.detach_DiagnosisItems));
			this._DoctorDiagnosisDs = new EntitySet<DoctorDiagnosisD>(new Action<DoctorDiagnosisD>(this.attach_DoctorDiagnosisDs), new Action<DoctorDiagnosisD>(this.detach_DoctorDiagnosisDs));
			this._DiagnosisItem1 = default(EntityRef<DiagnosisItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._DiagnosisItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICD10ID", DbType="Int")]
		public System.Nullable<int> ICD10ID
		{
			get
			{
				return this._ICD10ID;
			}
			set
			{
				if ((this._ICD10ID != value))
				{
					this.OnICD10IDChanging(value);
					this.SendPropertyChanging();
					this._ICD10ID = value;
					this.SendPropertyChanged("ICD10ID");
					this.OnICD10IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiagnosisItem_DiagnosisItem", Storage="_DiagnosisItems", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<DiagnosisItem> DiagnosisItems
		{
			get
			{
				return this._DiagnosisItems;
			}
			set
			{
				this._DiagnosisItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiagnosisItem_DoctorDiagnosisD", Storage="_DoctorDiagnosisDs", ThisKey="ID", OtherKey="Item")]
		public EntitySet<DoctorDiagnosisD> DoctorDiagnosisDs
		{
			get
			{
				return this._DoctorDiagnosisDs;
			}
			set
			{
				this._DoctorDiagnosisDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiagnosisItem_DiagnosisItem", Storage="_DiagnosisItem1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public DiagnosisItem DiagnosisItem1
		{
			get
			{
				return this._DiagnosisItem1.Entity;
			}
			set
			{
				DiagnosisItem previousValue = this._DiagnosisItem1.Entity;
				if (((previousValue != value) 
							|| (this._DiagnosisItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiagnosisItem1.Entity = null;
						previousValue.DiagnosisItems.Remove(this);
					}
					this._DiagnosisItem1.Entity = value;
					if ((value != null))
					{
						value.DiagnosisItems.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiagnosisItem1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiagnosisItems(DiagnosisItem entity)
		{
			this.SendPropertyChanging();
			entity.DiagnosisItem1 = this;
		}
		
		private void detach_DiagnosisItems(DiagnosisItem entity)
		{
			this.SendPropertyChanging();
			entity.DiagnosisItem1 = null;
		}
		
		private void attach_DoctorDiagnosisDs(DoctorDiagnosisD entity)
		{
			this.SendPropertyChanging();
			entity.DiagnosisItem = this;
		}
		
		private void detach_DoctorDiagnosisDs(DoctorDiagnosisD entity)
		{
			this.SendPropertyChanging();
			entity.DiagnosisItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorDiagnosisD")]
	public partial class DoctorDiagnosisD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DoctorDiagnosisID;
		
		private System.Nullable<int> _Item;
		
		private string _Description;
		
		private EntityRef<DiagnosisItem> _DiagnosisItem;
		
		private EntityRef<DoctorDiagnosisM> _DoctorDiagnosisM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDoctorDiagnosisIDChanging(System.Guid value);
    partial void OnDoctorDiagnosisIDChanged();
    partial void OnItemChanging(System.Nullable<int> value);
    partial void OnItemChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DoctorDiagnosisD()
		{
			this._DiagnosisItem = default(EntityRef<DiagnosisItem>);
			this._DoctorDiagnosisM = default(EntityRef<DoctorDiagnosisM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDiagnosisID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DoctorDiagnosisID
		{
			get
			{
				return this._DoctorDiagnosisID;
			}
			set
			{
				if ((this._DoctorDiagnosisID != value))
				{
					if (this._DoctorDiagnosisM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoctorDiagnosisIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorDiagnosisID = value;
					this.SendPropertyChanged("DoctorDiagnosisID");
					this.OnDoctorDiagnosisIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="Int")]
		public System.Nullable<int> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					if (this._DiagnosisItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiagnosisItem_DoctorDiagnosisD", Storage="_DiagnosisItem", ThisKey="Item", OtherKey="ID", IsForeignKey=true)]
		public DiagnosisItem DiagnosisItem
		{
			get
			{
				return this._DiagnosisItem.Entity;
			}
			set
			{
				DiagnosisItem previousValue = this._DiagnosisItem.Entity;
				if (((previousValue != value) 
							|| (this._DiagnosisItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiagnosisItem.Entity = null;
						previousValue.DoctorDiagnosisDs.Remove(this);
					}
					this._DiagnosisItem.Entity = value;
					if ((value != null))
					{
						value.DoctorDiagnosisDs.Add(this);
						this._Item = value.ID;
					}
					else
					{
						this._Item = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiagnosisItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorDiagnosisM_DoctorDiagnosisD", Storage="_DoctorDiagnosisM", ThisKey="DoctorDiagnosisID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DoctorDiagnosisM DoctorDiagnosisM
		{
			get
			{
				return this._DoctorDiagnosisM.Entity;
			}
			set
			{
				DoctorDiagnosisM previousValue = this._DoctorDiagnosisM.Entity;
				if (((previousValue != value) 
							|| (this._DoctorDiagnosisM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorDiagnosisM.Entity = null;
						previousValue.DoctorDiagnosisDs.Remove(this);
					}
					this._DoctorDiagnosisM.Entity = value;
					if ((value != null))
					{
						value.DoctorDiagnosisDs.Add(this);
						this._DoctorDiagnosisID = value.ID;
					}
					else
					{
						this._DoctorDiagnosisID = default(System.Guid);
					}
					this.SendPropertyChanged("DoctorDiagnosisM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorDiagnosisM")]
	public partial class DoctorDiagnosisM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private System.Nullable<int> _DoctorID;
		
		private string _Date;
		
		private string _Time;
		
		private string _MainMoan;
		
		private string _ProbableDiagnosis;
		
		private string _EfteraghiDiagnosis;
		
		private string _FinalDiagnosis;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private EntitySet<DoctorDiagnosisD> _DoctorDiagnosisDs;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnDoctorIDChanging(System.Nullable<int> value);
    partial void OnDoctorIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnMainMoanChanging(string value);
    partial void OnMainMoanChanged();
    partial void OnProbableDiagnosisChanging(string value);
    partial void OnProbableDiagnosisChanged();
    partial void OnEfteraghiDiagnosisChanging(string value);
    partial void OnEfteraghiDiagnosisChanged();
    partial void OnFinalDiagnosisChanging(string value);
    partial void OnFinalDiagnosisChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public DoctorDiagnosisM()
		{
			this._DoctorDiagnosisDs = new EntitySet<DoctorDiagnosisD>(new Action<DoctorDiagnosisD>(this.attach_DoctorDiagnosisDs), new Action<DoctorDiagnosisD>(this.detach_DoctorDiagnosisDs));
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="Int")]
		public System.Nullable<int> DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(5)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainMoan", DbType="NVarChar(MAX)")]
		public string MainMoan
		{
			get
			{
				return this._MainMoan;
			}
			set
			{
				if ((this._MainMoan != value))
				{
					this.OnMainMoanChanging(value);
					this.SendPropertyChanging();
					this._MainMoan = value;
					this.SendPropertyChanged("MainMoan");
					this.OnMainMoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbableDiagnosis", DbType="NVarChar(MAX)")]
		public string ProbableDiagnosis
		{
			get
			{
				return this._ProbableDiagnosis;
			}
			set
			{
				if ((this._ProbableDiagnosis != value))
				{
					this.OnProbableDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._ProbableDiagnosis = value;
					this.SendPropertyChanged("ProbableDiagnosis");
					this.OnProbableDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EfteraghiDiagnosis", DbType="NVarChar(MAX)")]
		public string EfteraghiDiagnosis
		{
			get
			{
				return this._EfteraghiDiagnosis;
			}
			set
			{
				if ((this._EfteraghiDiagnosis != value))
				{
					this.OnEfteraghiDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._EfteraghiDiagnosis = value;
					this.SendPropertyChanged("EfteraghiDiagnosis");
					this.OnEfteraghiDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDiagnosis", DbType="NVarChar(MAX)")]
		public string FinalDiagnosis
		{
			get
			{
				return this._FinalDiagnosis;
			}
			set
			{
				if ((this._FinalDiagnosis != value))
				{
					this.OnFinalDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._FinalDiagnosis = value;
					this.SendPropertyChanged("FinalDiagnosis");
					this.OnFinalDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorDiagnosisM_DoctorDiagnosisD", Storage="_DoctorDiagnosisDs", ThisKey="ID", OtherKey="DoctorDiagnosisID")]
		public EntitySet<DoctorDiagnosisD> DoctorDiagnosisDs
		{
			get
			{
				return this._DoctorDiagnosisDs;
			}
			set
			{
				this._DoctorDiagnosisDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DoctorDiagnosisM", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DoctorDiagnosisMs.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DoctorDiagnosisMs.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoctorDiagnosisDs(DoctorDiagnosisD entity)
		{
			this.SendPropertyChanging();
			entity.DoctorDiagnosisM = this;
		}
		
		private void detach_DoctorDiagnosisDs(DoctorDiagnosisD entity)
		{
			this.SendPropertyChanging();
			entity.DoctorDiagnosisM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorSignAndStamp")]
	public partial class DoctorSignAndStamp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Data.Linq.Binary _Photo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    #endregion
		
		public DoctorSignAndStamp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Code;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Date;
		
		private string _Description;
		
		private bool _Deleted;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private short _RequestTypeID;
		
		private string _ReferralDate;
		
		private string _CurrentPost;
		
		private string _OfferedPost;
		
		private System.Nullable<bool> _Smoking;
		
		private System.Nullable<short> _DailySmokeCount;
		
		private string _SmokeStartDate;
		
		private string _SmokeEndDate;
		
		private System.Nullable<bool> _UsingDrug;
		
		private System.Nullable<bool> _IsSensitive;
		
		private System.Nullable<int> _ReferralCompanyID;
		
		private EntitySet<DoctorDiagnosisM> _DoctorDiagnosisMs;
		
		private EntitySet<DocumentResult> _DocumentResults;
		
		private EntitySet<DossierDentall> _DossierDentalls;
		
		private EntitySet<Espirometry> _Espirometries;
		
		private EntitySet<IllnessHistory> _IllnessHistories;
		
		private EntitySet<LaboratoryRequest> _LaboratoryRequests;
		
		private EntitySet<NurseDiagnose> _NurseDiagnoses;
		
		private EntitySet<NutritionConsultant> _NutritionConsultants;
		
		private EntitySet<Odiometry> _Odiometries;
		
		private EntitySet<Optometry> _Optometries;
		
		private EntitySet<OtherTest> _OtherTests;
		
		private EntitySet<PsychologyTest> _PsychologyTests;
		
		private EntitySet<Radiography> _Radiographies;
		
		private EntitySet<SicknessDetail> _SicknessDetails;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<RequestType> _RequestType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnRequestTypeIDChanging(short value);
    partial void OnRequestTypeIDChanged();
    partial void OnReferralDateChanging(string value);
    partial void OnReferralDateChanged();
    partial void OnCurrentPostChanging(string value);
    partial void OnCurrentPostChanged();
    partial void OnOfferedPostChanging(string value);
    partial void OnOfferedPostChanged();
    partial void OnSmokingChanging(System.Nullable<bool> value);
    partial void OnSmokingChanged();
    partial void OnDailySmokeCountChanging(System.Nullable<short> value);
    partial void OnDailySmokeCountChanged();
    partial void OnSmokeStartDateChanging(string value);
    partial void OnSmokeStartDateChanged();
    partial void OnSmokeEndDateChanging(string value);
    partial void OnSmokeEndDateChanged();
    partial void OnUsingDrugChanging(System.Nullable<bool> value);
    partial void OnUsingDrugChanged();
    partial void OnIsSensitiveChanging(System.Nullable<bool> value);
    partial void OnIsSensitiveChanged();
    partial void OnReferralCompanyIDChanging(System.Nullable<int> value);
    partial void OnReferralCompanyIDChanged();
    #endregion
		
		public Document()
		{
			this._DoctorDiagnosisMs = new EntitySet<DoctorDiagnosisM>(new Action<DoctorDiagnosisM>(this.attach_DoctorDiagnosisMs), new Action<DoctorDiagnosisM>(this.detach_DoctorDiagnosisMs));
			this._DocumentResults = new EntitySet<DocumentResult>(new Action<DocumentResult>(this.attach_DocumentResults), new Action<DocumentResult>(this.detach_DocumentResults));
			this._DossierDentalls = new EntitySet<DossierDentall>(new Action<DossierDentall>(this.attach_DossierDentalls), new Action<DossierDentall>(this.detach_DossierDentalls));
			this._Espirometries = new EntitySet<Espirometry>(new Action<Espirometry>(this.attach_Espirometries), new Action<Espirometry>(this.detach_Espirometries));
			this._IllnessHistories = new EntitySet<IllnessHistory>(new Action<IllnessHistory>(this.attach_IllnessHistories), new Action<IllnessHistory>(this.detach_IllnessHistories));
			this._LaboratoryRequests = new EntitySet<LaboratoryRequest>(new Action<LaboratoryRequest>(this.attach_LaboratoryRequests), new Action<LaboratoryRequest>(this.detach_LaboratoryRequests));
			this._NurseDiagnoses = new EntitySet<NurseDiagnose>(new Action<NurseDiagnose>(this.attach_NurseDiagnoses), new Action<NurseDiagnose>(this.detach_NurseDiagnoses));
			this._NutritionConsultants = new EntitySet<NutritionConsultant>(new Action<NutritionConsultant>(this.attach_NutritionConsultants), new Action<NutritionConsultant>(this.detach_NutritionConsultants));
			this._Odiometries = new EntitySet<Odiometry>(new Action<Odiometry>(this.attach_Odiometries), new Action<Odiometry>(this.detach_Odiometries));
			this._Optometries = new EntitySet<Optometry>(new Action<Optometry>(this.attach_Optometries), new Action<Optometry>(this.detach_Optometries));
			this._OtherTests = new EntitySet<OtherTest>(new Action<OtherTest>(this.attach_OtherTests), new Action<OtherTest>(this.detach_OtherTests));
			this._PsychologyTests = new EntitySet<PsychologyTest>(new Action<PsychologyTest>(this.attach_PsychologyTests), new Action<PsychologyTest>(this.detach_PsychologyTests));
			this._Radiographies = new EntitySet<Radiography>(new Action<Radiography>(this.attach_Radiographies), new Action<Radiography>(this.detach_Radiographies));
			this._SicknessDetails = new EntitySet<SicknessDetail>(new Action<SicknessDetail>(this.attach_SicknessDetails), new Action<SicknessDetail>(this.detach_SicknessDetails));
			this._Company = default(EntityRef<Company>);
			this._Person = default(EntityRef<Person>);
			this._RequestType = default(EntityRef<RequestType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTypeID", DbType="SmallInt NOT NULL")]
		public short RequestTypeID
		{
			get
			{
				return this._RequestTypeID;
			}
			set
			{
				if ((this._RequestTypeID != value))
				{
					if (this._RequestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RequestTypeID = value;
					this.SendPropertyChanged("RequestTypeID");
					this.OnRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralDate", DbType="NChar(10)")]
		public string ReferralDate
		{
			get
			{
				return this._ReferralDate;
			}
			set
			{
				if ((this._ReferralDate != value))
				{
					this.OnReferralDateChanging(value);
					this.SendPropertyChanging();
					this._ReferralDate = value;
					this.SendPropertyChanged("ReferralDate");
					this.OnReferralDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPost", DbType="NVarChar(50)")]
		public string CurrentPost
		{
			get
			{
				return this._CurrentPost;
			}
			set
			{
				if ((this._CurrentPost != value))
				{
					this.OnCurrentPostChanging(value);
					this.SendPropertyChanging();
					this._CurrentPost = value;
					this.SendPropertyChanged("CurrentPost");
					this.OnCurrentPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferedPost", DbType="NVarChar(50)")]
		public string OfferedPost
		{
			get
			{
				return this._OfferedPost;
			}
			set
			{
				if ((this._OfferedPost != value))
				{
					this.OnOfferedPostChanging(value);
					this.SendPropertyChanging();
					this._OfferedPost = value;
					this.SendPropertyChanged("OfferedPost");
					this.OnOfferedPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smoking", DbType="Bit")]
		public System.Nullable<bool> Smoking
		{
			get
			{
				return this._Smoking;
			}
			set
			{
				if ((this._Smoking != value))
				{
					this.OnSmokingChanging(value);
					this.SendPropertyChanging();
					this._Smoking = value;
					this.SendPropertyChanged("Smoking");
					this.OnSmokingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySmokeCount", DbType="SmallInt")]
		public System.Nullable<short> DailySmokeCount
		{
			get
			{
				return this._DailySmokeCount;
			}
			set
			{
				if ((this._DailySmokeCount != value))
				{
					this.OnDailySmokeCountChanging(value);
					this.SendPropertyChanging();
					this._DailySmokeCount = value;
					this.SendPropertyChanged("DailySmokeCount");
					this.OnDailySmokeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokeStartDate", DbType="NChar(10)")]
		public string SmokeStartDate
		{
			get
			{
				return this._SmokeStartDate;
			}
			set
			{
				if ((this._SmokeStartDate != value))
				{
					this.OnSmokeStartDateChanging(value);
					this.SendPropertyChanging();
					this._SmokeStartDate = value;
					this.SendPropertyChanged("SmokeStartDate");
					this.OnSmokeStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokeEndDate", DbType="NChar(10)")]
		public string SmokeEndDate
		{
			get
			{
				return this._SmokeEndDate;
			}
			set
			{
				if ((this._SmokeEndDate != value))
				{
					this.OnSmokeEndDateChanging(value);
					this.SendPropertyChanging();
					this._SmokeEndDate = value;
					this.SendPropertyChanged("SmokeEndDate");
					this.OnSmokeEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingDrug", DbType="Bit")]
		public System.Nullable<bool> UsingDrug
		{
			get
			{
				return this._UsingDrug;
			}
			set
			{
				if ((this._UsingDrug != value))
				{
					this.OnUsingDrugChanging(value);
					this.SendPropertyChanging();
					this._UsingDrug = value;
					this.SendPropertyChanged("UsingDrug");
					this.OnUsingDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSensitive", DbType="Bit")]
		public System.Nullable<bool> IsSensitive
		{
			get
			{
				return this._IsSensitive;
			}
			set
			{
				if ((this._IsSensitive != value))
				{
					this.OnIsSensitiveChanging(value);
					this.SendPropertyChanging();
					this._IsSensitive = value;
					this.SendPropertyChanged("IsSensitive");
					this.OnIsSensitiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralCompanyID", DbType="Int")]
		public System.Nullable<int> ReferralCompanyID
		{
			get
			{
				return this._ReferralCompanyID;
			}
			set
			{
				if ((this._ReferralCompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferralCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._ReferralCompanyID = value;
					this.SendPropertyChanged("ReferralCompanyID");
					this.OnReferralCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DoctorDiagnosisM", Storage="_DoctorDiagnosisMs", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<DoctorDiagnosisM> DoctorDiagnosisMs
		{
			get
			{
				return this._DoctorDiagnosisMs;
			}
			set
			{
				this._DoctorDiagnosisMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DocumentResult", Storage="_DocumentResults", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<DocumentResult> DocumentResults
		{
			get
			{
				return this._DocumentResults;
			}
			set
			{
				this._DocumentResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DossierDentall", Storage="_DossierDentalls", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<DossierDentall> DossierDentalls
		{
			get
			{
				return this._DossierDentalls;
			}
			set
			{
				this._DossierDentalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Espirometry", Storage="_Espirometries", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<Espirometry> Espirometries
		{
			get
			{
				return this._Espirometries;
			}
			set
			{
				this._Espirometries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_IllnessHistory", Storage="_IllnessHistories", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<IllnessHistory> IllnessHistories
		{
			get
			{
				return this._IllnessHistories;
			}
			set
			{
				this._IllnessHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_LaboratoryRequest", Storage="_LaboratoryRequests", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<LaboratoryRequest> LaboratoryRequests
		{
			get
			{
				return this._LaboratoryRequests;
			}
			set
			{
				this._LaboratoryRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_NurseDiagnose", Storage="_NurseDiagnoses", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<NurseDiagnose> NurseDiagnoses
		{
			get
			{
				return this._NurseDiagnoses;
			}
			set
			{
				this._NurseDiagnoses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_NutritionConsultant", Storage="_NutritionConsultants", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<NutritionConsultant> NutritionConsultants
		{
			get
			{
				return this._NutritionConsultants;
			}
			set
			{
				this._NutritionConsultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Odiometry", Storage="_Odiometries", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<Odiometry> Odiometries
		{
			get
			{
				return this._Odiometries;
			}
			set
			{
				this._Odiometries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Optometry", Storage="_Optometries", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<Optometry> Optometries
		{
			get
			{
				return this._Optometries;
			}
			set
			{
				this._Optometries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_OtherTest", Storage="_OtherTests", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<OtherTest> OtherTests
		{
			get
			{
				return this._OtherTests;
			}
			set
			{
				this._OtherTests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_PsychologyTest", Storage="_PsychologyTests", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<PsychologyTest> PsychologyTests
		{
			get
			{
				return this._PsychologyTests;
			}
			set
			{
				this._PsychologyTests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Radiography", Storage="_Radiographies", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<Radiography> Radiographies
		{
			get
			{
				return this._Radiographies;
			}
			set
			{
				this._Radiographies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_SicknessDetail", Storage="_SicknessDetails", ThisKey="ID", OtherKey="DocummentID")]
		public EntitySet<SicknessDetail> SicknessDetails
		{
			get
			{
				return this._SicknessDetails;
			}
			set
			{
				this._SicknessDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Document", Storage="_Company", ThisKey="ReferralCompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._ReferralCompanyID = value.ID;
					}
					else
					{
						this._ReferralCompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Document", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_Document", Storage="_RequestType", ThisKey="RequestTypeID", OtherKey="ID", IsForeignKey=true)]
		public RequestType RequestType
		{
			get
			{
				return this._RequestType.Entity;
			}
			set
			{
				RequestType previousValue = this._RequestType.Entity;
				if (((previousValue != value) 
							|| (this._RequestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestType.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._RequestType.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._RequestTypeID = value.ID;
					}
					else
					{
						this._RequestTypeID = default(short);
					}
					this.SendPropertyChanged("RequestType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoctorDiagnosisMs(DoctorDiagnosisM entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DoctorDiagnosisMs(DoctorDiagnosisM entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_DocumentResults(DocumentResult entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DocumentResults(DocumentResult entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_DossierDentalls(DossierDentall entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DossierDentalls(DossierDentall entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_Espirometries(Espirometry entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Espirometries(Espirometry entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_IllnessHistories(IllnessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_IllnessHistories(IllnessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_LaboratoryRequests(LaboratoryRequest entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_LaboratoryRequests(LaboratoryRequest entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_NurseDiagnoses(NurseDiagnose entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_NurseDiagnoses(NurseDiagnose entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_NutritionConsultants(NutritionConsultant entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_NutritionConsultants(NutritionConsultant entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_Odiometries(Odiometry entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Odiometries(Odiometry entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_Optometries(Optometry entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Optometries(Optometry entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_OtherTests(OtherTest entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_OtherTests(OtherTest entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_PsychologyTests(PsychologyTest entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_PsychologyTests(PsychologyTest entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_Radiographies(Radiography entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Radiographies(Radiography entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_SicknessDetails(SicknessDetail entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_SicknessDetails(SicknessDetail entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentResult")]
	public partial class DocumentResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private System.Nullable<int> _DoctorID;
		
		private System.Nullable<byte> _ResultID;
		
		private string _Description;
		
		private System.Nullable<bool> _LimitType;
		
		private string _LimitEndDate;
		
		private string _DisqualificationReson;
		
		private string _MedicalAdvertisment;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private bool _Deleted;
		
		private string _NextReferDate;
		
		private EntitySet<DocumentResultCondition> _DocumentResultConditions;
		
		private EntitySet<DocumentResultRecommendation> _DocumentResultRecommendations;
		
		private EntityRef<Document> _Document;
		
		private EntityRef<EvaluationResult> _EvaluationResult;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnDoctorIDChanging(System.Nullable<int> value);
    partial void OnDoctorIDChanged();
    partial void OnResultIDChanging(System.Nullable<byte> value);
    partial void OnResultIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLimitTypeChanging(System.Nullable<bool> value);
    partial void OnLimitTypeChanged();
    partial void OnLimitEndDateChanging(string value);
    partial void OnLimitEndDateChanged();
    partial void OnDisqualificationResonChanging(string value);
    partial void OnDisqualificationResonChanged();
    partial void OnMedicalAdvertismentChanging(string value);
    partial void OnMedicalAdvertismentChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnNextReferDateChanging(string value);
    partial void OnNextReferDateChanged();
    #endregion
		
		public DocumentResult()
		{
			this._DocumentResultConditions = new EntitySet<DocumentResultCondition>(new Action<DocumentResultCondition>(this.attach_DocumentResultConditions), new Action<DocumentResultCondition>(this.detach_DocumentResultConditions));
			this._DocumentResultRecommendations = new EntitySet<DocumentResultRecommendation>(new Action<DocumentResultRecommendation>(this.attach_DocumentResultRecommendations), new Action<DocumentResultRecommendation>(this.detach_DocumentResultRecommendations));
			this._Document = default(EntityRef<Document>);
			this._EvaluationResult = default(EntityRef<EvaluationResult>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="Int")]
		public System.Nullable<int> DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", DbType="TinyInt")]
		public System.Nullable<byte> ResultID
		{
			get
			{
				return this._ResultID;
			}
			set
			{
				if ((this._ResultID != value))
				{
					if (this._EvaluationResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultIDChanging(value);
					this.SendPropertyChanging();
					this._ResultID = value;
					this.SendPropertyChanged("ResultID");
					this.OnResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitType", DbType="Bit")]
		public System.Nullable<bool> LimitType
		{
			get
			{
				return this._LimitType;
			}
			set
			{
				if ((this._LimitType != value))
				{
					this.OnLimitTypeChanging(value);
					this.SendPropertyChanging();
					this._LimitType = value;
					this.SendPropertyChanged("LimitType");
					this.OnLimitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitEndDate", DbType="NChar(10)")]
		public string LimitEndDate
		{
			get
			{
				return this._LimitEndDate;
			}
			set
			{
				if ((this._LimitEndDate != value))
				{
					this.OnLimitEndDateChanging(value);
					this.SendPropertyChanging();
					this._LimitEndDate = value;
					this.SendPropertyChanged("LimitEndDate");
					this.OnLimitEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisqualificationReson", DbType="NVarChar(MAX)")]
		public string DisqualificationReson
		{
			get
			{
				return this._DisqualificationReson;
			}
			set
			{
				if ((this._DisqualificationReson != value))
				{
					this.OnDisqualificationResonChanging(value);
					this.SendPropertyChanging();
					this._DisqualificationReson = value;
					this.SendPropertyChanged("DisqualificationReson");
					this.OnDisqualificationResonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalAdvertisment", DbType="NVarChar(MAX)")]
		public string MedicalAdvertisment
		{
			get
			{
				return this._MedicalAdvertisment;
			}
			set
			{
				if ((this._MedicalAdvertisment != value))
				{
					this.OnMedicalAdvertismentChanging(value);
					this.SendPropertyChanging();
					this._MedicalAdvertisment = value;
					this.SendPropertyChanged("MedicalAdvertisment");
					this.OnMedicalAdvertismentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextReferDate", DbType="NChar(10)")]
		public string NextReferDate
		{
			get
			{
				return this._NextReferDate;
			}
			set
			{
				if ((this._NextReferDate != value))
				{
					this.OnNextReferDateChanging(value);
					this.SendPropertyChanging();
					this._NextReferDate = value;
					this.SendPropertyChanged("NextReferDate");
					this.OnNextReferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentResult_DocumentResultCondition", Storage="_DocumentResultConditions", ThisKey="ID", OtherKey="DocumentResultID")]
		public EntitySet<DocumentResultCondition> DocumentResultConditions
		{
			get
			{
				return this._DocumentResultConditions;
			}
			set
			{
				this._DocumentResultConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentResult_DocumentResultRecommendation", Storage="_DocumentResultRecommendations", ThisKey="ID", OtherKey="DocumentResultID")]
		public EntitySet<DocumentResultRecommendation> DocumentResultRecommendations
		{
			get
			{
				return this._DocumentResultRecommendations;
			}
			set
			{
				this._DocumentResultRecommendations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DocumentResult", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DocumentResults.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DocumentResults.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationResult_DocumentResult", Storage="_EvaluationResult", ThisKey="ResultID", OtherKey="ID", IsForeignKey=true)]
		public EvaluationResult EvaluationResult
		{
			get
			{
				return this._EvaluationResult.Entity;
			}
			set
			{
				EvaluationResult previousValue = this._EvaluationResult.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationResult.Entity = null;
						previousValue.DocumentResults.Remove(this);
					}
					this._EvaluationResult.Entity = value;
					if ((value != null))
					{
						value.DocumentResults.Add(this);
						this._ResultID = value.ID;
					}
					else
					{
						this._ResultID = default(Nullable<byte>);
					}
					this.SendPropertyChanged("EvaluationResult");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentResultConditions(DocumentResultCondition entity)
		{
			this.SendPropertyChanging();
			entity.DocumentResult = this;
		}
		
		private void detach_DocumentResultConditions(DocumentResultCondition entity)
		{
			this.SendPropertyChanging();
			entity.DocumentResult = null;
		}
		
		private void attach_DocumentResultRecommendations(DocumentResultRecommendation entity)
		{
			this.SendPropertyChanging();
			entity.DocumentResult = this;
		}
		
		private void detach_DocumentResultRecommendations(DocumentResultRecommendation entity)
		{
			this.SendPropertyChanging();
			entity.DocumentResult = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentResultCondition")]
	public partial class DocumentResultCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentResultID;
		
		private System.Nullable<int> _LimitConditionID;
		
		private string _Description;
		
		private EntityRef<DocumentResult> _DocumentResult;
		
		private EntityRef<WorkLimitCondition> _WorkLimitCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentResultIDChanging(System.Guid value);
    partial void OnDocumentResultIDChanged();
    partial void OnLimitConditionIDChanging(System.Nullable<int> value);
    partial void OnLimitConditionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DocumentResultCondition()
		{
			this._DocumentResult = default(EntityRef<DocumentResult>);
			this._WorkLimitCondition = default(EntityRef<WorkLimitCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentResultID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentResultID
		{
			get
			{
				return this._DocumentResultID;
			}
			set
			{
				if ((this._DocumentResultID != value))
				{
					if (this._DocumentResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentResultIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentResultID = value;
					this.SendPropertyChanged("DocumentResultID");
					this.OnDocumentResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitConditionID", DbType="Int")]
		public System.Nullable<int> LimitConditionID
		{
			get
			{
				return this._LimitConditionID;
			}
			set
			{
				if ((this._LimitConditionID != value))
				{
					if (this._WorkLimitCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitConditionIDChanging(value);
					this.SendPropertyChanging();
					this._LimitConditionID = value;
					this.SendPropertyChanged("LimitConditionID");
					this.OnLimitConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentResult_DocumentResultCondition", Storage="_DocumentResult", ThisKey="DocumentResultID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DocumentResult DocumentResult
		{
			get
			{
				return this._DocumentResult.Entity;
			}
			set
			{
				DocumentResult previousValue = this._DocumentResult.Entity;
				if (((previousValue != value) 
							|| (this._DocumentResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentResult.Entity = null;
						previousValue.DocumentResultConditions.Remove(this);
					}
					this._DocumentResult.Entity = value;
					if ((value != null))
					{
						value.DocumentResultConditions.Add(this);
						this._DocumentResultID = value.ID;
					}
					else
					{
						this._DocumentResultID = default(System.Guid);
					}
					this.SendPropertyChanged("DocumentResult");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkLimitCondition_DocumentResultCondition", Storage="_WorkLimitCondition", ThisKey="LimitConditionID", OtherKey="ID", IsForeignKey=true)]
		public WorkLimitCondition WorkLimitCondition
		{
			get
			{
				return this._WorkLimitCondition.Entity;
			}
			set
			{
				WorkLimitCondition previousValue = this._WorkLimitCondition.Entity;
				if (((previousValue != value) 
							|| (this._WorkLimitCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkLimitCondition.Entity = null;
						previousValue.DocumentResultConditions.Remove(this);
					}
					this._WorkLimitCondition.Entity = value;
					if ((value != null))
					{
						value.DocumentResultConditions.Add(this);
						this._LimitConditionID = value.ID;
					}
					else
					{
						this._LimitConditionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkLimitCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentResultRecommendations")]
	public partial class DocumentResultRecommendation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentResultID;
		
		private int _DefinitionID;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _Description;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<DocumentResult> _DocumentResult;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentResultIDChanging(System.Guid value);
    partial void OnDocumentResultIDChanged();
    partial void OnDefinitionIDChanging(int value);
    partial void OnDefinitionIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DocumentResultRecommendation()
		{
			this._Definition = default(EntityRef<Definition>);
			this._DocumentResult = default(EntityRef<DocumentResult>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentResultID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentResultID
		{
			get
			{
				return this._DocumentResultID;
			}
			set
			{
				if ((this._DocumentResultID != value))
				{
					if (this._DocumentResult.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentResultIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentResultID = value;
					this.SendPropertyChanged("DocumentResultID");
					this.OnDocumentResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionID", DbType="Int NOT NULL")]
		public int DefinitionID
		{
			get
			{
				return this._DefinitionID;
			}
			set
			{
				if ((this._DefinitionID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._DefinitionID = value;
					this.SendPropertyChanged("DefinitionID");
					this.OnDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_DocumentResultRecommendation", Storage="_Definition", ThisKey="DefinitionID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.DocumentResultRecommendations.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.DocumentResultRecommendations.Add(this);
						this._DefinitionID = value.ID;
					}
					else
					{
						this._DefinitionID = default(int);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentResult_DocumentResultRecommendation", Storage="_DocumentResult", ThisKey="DocumentResultID", OtherKey="ID", IsForeignKey=true)]
		public DocumentResult DocumentResult
		{
			get
			{
				return this._DocumentResult.Entity;
			}
			set
			{
				DocumentResult previousValue = this._DocumentResult.Entity;
				if (((previousValue != value) 
							|| (this._DocumentResult.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentResult.Entity = null;
						previousValue.DocumentResultRecommendations.Remove(this);
					}
					this._DocumentResult.Entity = value;
					if ((value != null))
					{
						value.DocumentResultRecommendations.Add(this);
						this._DocumentResultID = value.ID;
					}
					else
					{
						this._DocumentResultID = default(System.Guid);
					}
					this.SendPropertyChanged("DocumentResult");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DossierDentall")]
	public partial class DossierDentall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _DocumentID;
		
		private string _Period;
		
		private string _Date;
		
		private string _ConditionDentalMouth;
		
		private string _CheckupOutMouth;
		
		private string _CheckupTMJ;
		
		private string _CheckupMucusMoth;
		
		private string _CheckupPeriodontal;
		
		private string _CheckupOcclusion;
		
		private string _ProsthodonticsCondition;
		
		private string _ReferralItems;
		
		private System.Nullable<bool> _DoctorConfirm;
		
		private string @__11;
		
		private string @__12;
		
		private string @__13;
		
		private string @__14;
		
		private string @__15;
		
		private string @__16;
		
		private string @__17;
		
		private string @__18;
		
		private string @__21;
		
		private string @__22;
		
		private string @__23;
		
		private string @__24;
		
		private string @__25;
		
		private string @__26;
		
		private string @__27;
		
		private string @__28;
		
		private string @__31;
		
		private string @__32;
		
		private string @__33;
		
		private string @__34;
		
		private string @__35;
		
		private string @__36;
		
		private string @__37;
		
		private string @__38;
		
		private string @__41;
		
		private string @__42;
		
		private string @__43;
		
		private string @__44;
		
		private string @__45;
		
		private string @__46;
		
		private string @__47;
		
		private string @__48;
		
		private System.Nullable<bool> _TreatmentRoot;
		
		private System.Nullable<bool> _Periodontal;
		
		private System.Nullable<bool> _Prosthesis;
		
		private System.Nullable<bool> _Restorative;
		
		private System.Nullable<bool> _Surgery;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentIDChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnConditionDentalMouthChanging(string value);
    partial void OnConditionDentalMouthChanged();
    partial void OnCheckupOutMouthChanging(string value);
    partial void OnCheckupOutMouthChanged();
    partial void OnCheckupTMJChanging(string value);
    partial void OnCheckupTMJChanged();
    partial void OnCheckupMucusMothChanging(string value);
    partial void OnCheckupMucusMothChanged();
    partial void OnCheckupPeriodontalChanging(string value);
    partial void OnCheckupPeriodontalChanged();
    partial void OnCheckupOcclusionChanging(string value);
    partial void OnCheckupOcclusionChanged();
    partial void OnProsthodonticsConditionChanging(string value);
    partial void OnProsthodonticsConditionChanged();
    partial void OnReferralItemsChanging(string value);
    partial void OnReferralItemsChanged();
    partial void OnDoctorConfirmChanging(System.Nullable<bool> value);
    partial void OnDoctorConfirmChanged();
    partial void On_11Changing(string value);
    partial void On_11Changed();
    partial void On_12Changing(string value);
    partial void On_12Changed();
    partial void On_13Changing(string value);
    partial void On_13Changed();
    partial void On_14Changing(string value);
    partial void On_14Changed();
    partial void On_15Changing(string value);
    partial void On_15Changed();
    partial void On_16Changing(string value);
    partial void On_16Changed();
    partial void On_17Changing(string value);
    partial void On_17Changed();
    partial void On_18Changing(string value);
    partial void On_18Changed();
    partial void On_21Changing(string value);
    partial void On_21Changed();
    partial void On_22Changing(string value);
    partial void On_22Changed();
    partial void On_23Changing(string value);
    partial void On_23Changed();
    partial void On_24Changing(string value);
    partial void On_24Changed();
    partial void On_25Changing(string value);
    partial void On_25Changed();
    partial void On_26Changing(string value);
    partial void On_26Changed();
    partial void On_27Changing(string value);
    partial void On_27Changed();
    partial void On_28Changing(string value);
    partial void On_28Changed();
    partial void On_31Changing(string value);
    partial void On_31Changed();
    partial void On_32Changing(string value);
    partial void On_32Changed();
    partial void On_33Changing(string value);
    partial void On_33Changed();
    partial void On_34Changing(string value);
    partial void On_34Changed();
    partial void On_35Changing(string value);
    partial void On_35Changed();
    partial void On_36Changing(string value);
    partial void On_36Changed();
    partial void On_37Changing(string value);
    partial void On_37Changed();
    partial void On_38Changing(string value);
    partial void On_38Changed();
    partial void On_41Changing(string value);
    partial void On_41Changed();
    partial void On_42Changing(string value);
    partial void On_42Changed();
    partial void On_43Changing(string value);
    partial void On_43Changed();
    partial void On_44Changing(string value);
    partial void On_44Changed();
    partial void On_45Changing(string value);
    partial void On_45Changed();
    partial void On_46Changing(string value);
    partial void On_46Changed();
    partial void On_47Changing(string value);
    partial void On_47Changed();
    partial void On_48Changing(string value);
    partial void On_48Changed();
    partial void OnTreatmentRootChanging(System.Nullable<bool> value);
    partial void OnTreatmentRootChanged();
    partial void OnPeriodontalChanging(System.Nullable<bool> value);
    partial void OnPeriodontalChanged();
    partial void OnProsthesisChanging(System.Nullable<bool> value);
    partial void OnProsthesisChanged();
    partial void OnRestorativeChanging(System.Nullable<bool> value);
    partial void OnRestorativeChanged();
    partial void OnSurgeryChanging(System.Nullable<bool> value);
    partial void OnSurgeryChanged();
    #endregion
		
		public DossierDentall()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(50)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDentalMouth", DbType="NVarChar(50)")]
		public string ConditionDentalMouth
		{
			get
			{
				return this._ConditionDentalMouth;
			}
			set
			{
				if ((this._ConditionDentalMouth != value))
				{
					this.OnConditionDentalMouthChanging(value);
					this.SendPropertyChanging();
					this._ConditionDentalMouth = value;
					this.SendPropertyChanged("ConditionDentalMouth");
					this.OnConditionDentalMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckupOutMouth", DbType="NVarChar(50)")]
		public string CheckupOutMouth
		{
			get
			{
				return this._CheckupOutMouth;
			}
			set
			{
				if ((this._CheckupOutMouth != value))
				{
					this.OnCheckupOutMouthChanging(value);
					this.SendPropertyChanging();
					this._CheckupOutMouth = value;
					this.SendPropertyChanged("CheckupOutMouth");
					this.OnCheckupOutMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckupTMJ", DbType="NVarChar(50)")]
		public string CheckupTMJ
		{
			get
			{
				return this._CheckupTMJ;
			}
			set
			{
				if ((this._CheckupTMJ != value))
				{
					this.OnCheckupTMJChanging(value);
					this.SendPropertyChanging();
					this._CheckupTMJ = value;
					this.SendPropertyChanged("CheckupTMJ");
					this.OnCheckupTMJChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckupMucusMoth", DbType="NVarChar(50)")]
		public string CheckupMucusMoth
		{
			get
			{
				return this._CheckupMucusMoth;
			}
			set
			{
				if ((this._CheckupMucusMoth != value))
				{
					this.OnCheckupMucusMothChanging(value);
					this.SendPropertyChanging();
					this._CheckupMucusMoth = value;
					this.SendPropertyChanged("CheckupMucusMoth");
					this.OnCheckupMucusMothChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckupPeriodontal", DbType="NVarChar(50)")]
		public string CheckupPeriodontal
		{
			get
			{
				return this._CheckupPeriodontal;
			}
			set
			{
				if ((this._CheckupPeriodontal != value))
				{
					this.OnCheckupPeriodontalChanging(value);
					this.SendPropertyChanging();
					this._CheckupPeriodontal = value;
					this.SendPropertyChanged("CheckupPeriodontal");
					this.OnCheckupPeriodontalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckupOcclusion", DbType="NVarChar(50)")]
		public string CheckupOcclusion
		{
			get
			{
				return this._CheckupOcclusion;
			}
			set
			{
				if ((this._CheckupOcclusion != value))
				{
					this.OnCheckupOcclusionChanging(value);
					this.SendPropertyChanging();
					this._CheckupOcclusion = value;
					this.SendPropertyChanged("CheckupOcclusion");
					this.OnCheckupOcclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProsthodonticsCondition", DbType="NVarChar(50)")]
		public string ProsthodonticsCondition
		{
			get
			{
				return this._ProsthodonticsCondition;
			}
			set
			{
				if ((this._ProsthodonticsCondition != value))
				{
					this.OnProsthodonticsConditionChanging(value);
					this.SendPropertyChanging();
					this._ProsthodonticsCondition = value;
					this.SendPropertyChanged("ProsthodonticsCondition");
					this.OnProsthodonticsConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferralItems", DbType="NVarChar(50)")]
		public string ReferralItems
		{
			get
			{
				return this._ReferralItems;
			}
			set
			{
				if ((this._ReferralItems != value))
				{
					this.OnReferralItemsChanging(value);
					this.SendPropertyChanging();
					this._ReferralItems = value;
					this.SendPropertyChanged("ReferralItems");
					this.OnReferralItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorConfirm", DbType="Bit")]
		public System.Nullable<bool> DoctorConfirm
		{
			get
			{
				return this._DoctorConfirm;
			}
			set
			{
				if ((this._DoctorConfirm != value))
				{
					this.OnDoctorConfirmChanging(value);
					this.SendPropertyChanging();
					this._DoctorConfirm = value;
					this.SendPropertyChanged("DoctorConfirm");
					this.OnDoctorConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[11]", Storage="__11", DbType="NVarChar(1)")]
		public string _11
		{
			get
			{
				return this.@__11;
			}
			set
			{
				if ((this.@__11 != value))
				{
					this.On_11Changing(value);
					this.SendPropertyChanging();
					this.@__11 = value;
					this.SendPropertyChanged("_11");
					this.On_11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[12]", Storage="__12", DbType="NVarChar(1)")]
		public string _12
		{
			get
			{
				return this.@__12;
			}
			set
			{
				if ((this.@__12 != value))
				{
					this.On_12Changing(value);
					this.SendPropertyChanging();
					this.@__12 = value;
					this.SendPropertyChanged("_12");
					this.On_12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[13]", Storage="__13", DbType="NVarChar(1)")]
		public string _13
		{
			get
			{
				return this.@__13;
			}
			set
			{
				if ((this.@__13 != value))
				{
					this.On_13Changing(value);
					this.SendPropertyChanging();
					this.@__13 = value;
					this.SendPropertyChanged("_13");
					this.On_13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[14]", Storage="__14", DbType="NVarChar(1)")]
		public string _14
		{
			get
			{
				return this.@__14;
			}
			set
			{
				if ((this.@__14 != value))
				{
					this.On_14Changing(value);
					this.SendPropertyChanging();
					this.@__14 = value;
					this.SendPropertyChanged("_14");
					this.On_14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[15]", Storage="__15", DbType="NVarChar(1)")]
		public string _15
		{
			get
			{
				return this.@__15;
			}
			set
			{
				if ((this.@__15 != value))
				{
					this.On_15Changing(value);
					this.SendPropertyChanging();
					this.@__15 = value;
					this.SendPropertyChanged("_15");
					this.On_15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[16]", Storage="__16", DbType="NVarChar(1)")]
		public string _16
		{
			get
			{
				return this.@__16;
			}
			set
			{
				if ((this.@__16 != value))
				{
					this.On_16Changing(value);
					this.SendPropertyChanging();
					this.@__16 = value;
					this.SendPropertyChanged("_16");
					this.On_16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[17]", Storage="__17", DbType="NVarChar(1)")]
		public string _17
		{
			get
			{
				return this.@__17;
			}
			set
			{
				if ((this.@__17 != value))
				{
					this.On_17Changing(value);
					this.SendPropertyChanging();
					this.@__17 = value;
					this.SendPropertyChanged("_17");
					this.On_17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[18]", Storage="__18", DbType="NVarChar(1)")]
		public string _18
		{
			get
			{
				return this.@__18;
			}
			set
			{
				if ((this.@__18 != value))
				{
					this.On_18Changing(value);
					this.SendPropertyChanging();
					this.@__18 = value;
					this.SendPropertyChanged("_18");
					this.On_18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[21]", Storage="__21", DbType="NVarChar(1)")]
		public string _21
		{
			get
			{
				return this.@__21;
			}
			set
			{
				if ((this.@__21 != value))
				{
					this.On_21Changing(value);
					this.SendPropertyChanging();
					this.@__21 = value;
					this.SendPropertyChanged("_21");
					this.On_21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[22]", Storage="__22", DbType="NVarChar(1)")]
		public string _22
		{
			get
			{
				return this.@__22;
			}
			set
			{
				if ((this.@__22 != value))
				{
					this.On_22Changing(value);
					this.SendPropertyChanging();
					this.@__22 = value;
					this.SendPropertyChanged("_22");
					this.On_22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[23]", Storage="__23", DbType="NVarChar(1)")]
		public string _23
		{
			get
			{
				return this.@__23;
			}
			set
			{
				if ((this.@__23 != value))
				{
					this.On_23Changing(value);
					this.SendPropertyChanging();
					this.@__23 = value;
					this.SendPropertyChanged("_23");
					this.On_23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[24]", Storage="__24", DbType="NVarChar(1)")]
		public string _24
		{
			get
			{
				return this.@__24;
			}
			set
			{
				if ((this.@__24 != value))
				{
					this.On_24Changing(value);
					this.SendPropertyChanging();
					this.@__24 = value;
					this.SendPropertyChanged("_24");
					this.On_24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[25]", Storage="__25", DbType="NVarChar(1)")]
		public string _25
		{
			get
			{
				return this.@__25;
			}
			set
			{
				if ((this.@__25 != value))
				{
					this.On_25Changing(value);
					this.SendPropertyChanging();
					this.@__25 = value;
					this.SendPropertyChanged("_25");
					this.On_25Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[26]", Storage="__26", DbType="NVarChar(1)")]
		public string _26
		{
			get
			{
				return this.@__26;
			}
			set
			{
				if ((this.@__26 != value))
				{
					this.On_26Changing(value);
					this.SendPropertyChanging();
					this.@__26 = value;
					this.SendPropertyChanged("_26");
					this.On_26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[27]", Storage="__27", DbType="NVarChar(1)")]
		public string _27
		{
			get
			{
				return this.@__27;
			}
			set
			{
				if ((this.@__27 != value))
				{
					this.On_27Changing(value);
					this.SendPropertyChanging();
					this.@__27 = value;
					this.SendPropertyChanged("_27");
					this.On_27Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[28]", Storage="__28", DbType="NVarChar(1)")]
		public string _28
		{
			get
			{
				return this.@__28;
			}
			set
			{
				if ((this.@__28 != value))
				{
					this.On_28Changing(value);
					this.SendPropertyChanging();
					this.@__28 = value;
					this.SendPropertyChanged("_28");
					this.On_28Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[31]", Storage="__31", DbType="NVarChar(1)")]
		public string _31
		{
			get
			{
				return this.@__31;
			}
			set
			{
				if ((this.@__31 != value))
				{
					this.On_31Changing(value);
					this.SendPropertyChanging();
					this.@__31 = value;
					this.SendPropertyChanged("_31");
					this.On_31Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[32]", Storage="__32", DbType="NVarChar(1)")]
		public string _32
		{
			get
			{
				return this.@__32;
			}
			set
			{
				if ((this.@__32 != value))
				{
					this.On_32Changing(value);
					this.SendPropertyChanging();
					this.@__32 = value;
					this.SendPropertyChanged("_32");
					this.On_32Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[33]", Storage="__33", DbType="NVarChar(1)")]
		public string _33
		{
			get
			{
				return this.@__33;
			}
			set
			{
				if ((this.@__33 != value))
				{
					this.On_33Changing(value);
					this.SendPropertyChanging();
					this.@__33 = value;
					this.SendPropertyChanged("_33");
					this.On_33Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[34]", Storage="__34", DbType="NVarChar(1)")]
		public string _34
		{
			get
			{
				return this.@__34;
			}
			set
			{
				if ((this.@__34 != value))
				{
					this.On_34Changing(value);
					this.SendPropertyChanging();
					this.@__34 = value;
					this.SendPropertyChanged("_34");
					this.On_34Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[35]", Storage="__35", DbType="NVarChar(1)")]
		public string _35
		{
			get
			{
				return this.@__35;
			}
			set
			{
				if ((this.@__35 != value))
				{
					this.On_35Changing(value);
					this.SendPropertyChanging();
					this.@__35 = value;
					this.SendPropertyChanged("_35");
					this.On_35Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[36]", Storage="__36", DbType="NVarChar(1)")]
		public string _36
		{
			get
			{
				return this.@__36;
			}
			set
			{
				if ((this.@__36 != value))
				{
					this.On_36Changing(value);
					this.SendPropertyChanging();
					this.@__36 = value;
					this.SendPropertyChanged("_36");
					this.On_36Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[37]", Storage="__37", DbType="NVarChar(1)")]
		public string _37
		{
			get
			{
				return this.@__37;
			}
			set
			{
				if ((this.@__37 != value))
				{
					this.On_37Changing(value);
					this.SendPropertyChanging();
					this.@__37 = value;
					this.SendPropertyChanged("_37");
					this.On_37Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[38]", Storage="__38", DbType="NVarChar(1)")]
		public string _38
		{
			get
			{
				return this.@__38;
			}
			set
			{
				if ((this.@__38 != value))
				{
					this.On_38Changing(value);
					this.SendPropertyChanging();
					this.@__38 = value;
					this.SendPropertyChanged("_38");
					this.On_38Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[41]", Storage="__41", DbType="NVarChar(1)")]
		public string _41
		{
			get
			{
				return this.@__41;
			}
			set
			{
				if ((this.@__41 != value))
				{
					this.On_41Changing(value);
					this.SendPropertyChanging();
					this.@__41 = value;
					this.SendPropertyChanged("_41");
					this.On_41Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[42]", Storage="__42", DbType="NVarChar(1)")]
		public string _42
		{
			get
			{
				return this.@__42;
			}
			set
			{
				if ((this.@__42 != value))
				{
					this.On_42Changing(value);
					this.SendPropertyChanging();
					this.@__42 = value;
					this.SendPropertyChanged("_42");
					this.On_42Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[43]", Storage="__43", DbType="NVarChar(1)")]
		public string _43
		{
			get
			{
				return this.@__43;
			}
			set
			{
				if ((this.@__43 != value))
				{
					this.On_43Changing(value);
					this.SendPropertyChanging();
					this.@__43 = value;
					this.SendPropertyChanged("_43");
					this.On_43Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[44]", Storage="__44", DbType="NVarChar(1)")]
		public string _44
		{
			get
			{
				return this.@__44;
			}
			set
			{
				if ((this.@__44 != value))
				{
					this.On_44Changing(value);
					this.SendPropertyChanging();
					this.@__44 = value;
					this.SendPropertyChanged("_44");
					this.On_44Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[45]", Storage="__45", DbType="NVarChar(1)")]
		public string _45
		{
			get
			{
				return this.@__45;
			}
			set
			{
				if ((this.@__45 != value))
				{
					this.On_45Changing(value);
					this.SendPropertyChanging();
					this.@__45 = value;
					this.SendPropertyChanged("_45");
					this.On_45Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[46]", Storage="__46", DbType="NVarChar(1)")]
		public string _46
		{
			get
			{
				return this.@__46;
			}
			set
			{
				if ((this.@__46 != value))
				{
					this.On_46Changing(value);
					this.SendPropertyChanging();
					this.@__46 = value;
					this.SendPropertyChanged("_46");
					this.On_46Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[47]", Storage="__47", DbType="NVarChar(1)")]
		public string _47
		{
			get
			{
				return this.@__47;
			}
			set
			{
				if ((this.@__47 != value))
				{
					this.On_47Changing(value);
					this.SendPropertyChanging();
					this.@__47 = value;
					this.SendPropertyChanged("_47");
					this.On_47Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[48]", Storage="__48", DbType="NVarChar(1)")]
		public string _48
		{
			get
			{
				return this.@__48;
			}
			set
			{
				if ((this.@__48 != value))
				{
					this.On_48Changing(value);
					this.SendPropertyChanging();
					this.@__48 = value;
					this.SendPropertyChanged("_48");
					this.On_48Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentRoot", DbType="Bit")]
		public System.Nullable<bool> TreatmentRoot
		{
			get
			{
				return this._TreatmentRoot;
			}
			set
			{
				if ((this._TreatmentRoot != value))
				{
					this.OnTreatmentRootChanging(value);
					this.SendPropertyChanging();
					this._TreatmentRoot = value;
					this.SendPropertyChanged("TreatmentRoot");
					this.OnTreatmentRootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Periodontal", DbType="Bit")]
		public System.Nullable<bool> Periodontal
		{
			get
			{
				return this._Periodontal;
			}
			set
			{
				if ((this._Periodontal != value))
				{
					this.OnPeriodontalChanging(value);
					this.SendPropertyChanging();
					this._Periodontal = value;
					this.SendPropertyChanged("Periodontal");
					this.OnPeriodontalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prosthesis", DbType="Bit")]
		public System.Nullable<bool> Prosthesis
		{
			get
			{
				return this._Prosthesis;
			}
			set
			{
				if ((this._Prosthesis != value))
				{
					this.OnProsthesisChanging(value);
					this.SendPropertyChanging();
					this._Prosthesis = value;
					this.SendPropertyChanged("Prosthesis");
					this.OnProsthesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Restorative", DbType="Bit")]
		public System.Nullable<bool> Restorative
		{
			get
			{
				return this._Restorative;
			}
			set
			{
				if ((this._Restorative != value))
				{
					this.OnRestorativeChanging(value);
					this.SendPropertyChanging();
					this._Restorative = value;
					this.SendPropertyChanged("Restorative");
					this.OnRestorativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surgery", DbType="Bit")]
		public System.Nullable<bool> Surgery
		{
			get
			{
				return this._Surgery;
			}
			set
			{
				if ((this._Surgery != value))
				{
					this.OnSurgeryChanging(value);
					this.SendPropertyChanging();
					this._Surgery = value;
					this.SendPropertyChanged("Surgery");
					this.OnSurgeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DossierDentall", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DossierDentalls.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DossierDentalls.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Espirometry")]
	public partial class Espirometry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _MTCDate;
		
		private string _MTCTime;
		
		private System.Nullable<int> _MTCInterpreter;
		
		private System.Nullable<int> _MTCDone;
		
		private System.Nullable<decimal> _PC20;
		
		private string _PC20D;
		
		private System.Nullable<bool> _MTCResult;
		
		private string _MTCResultD;
		
		private string _PietysmographyDate;
		
		private string _PietysmographyTime;
		
		private System.Nullable<int> _PietysmographyInterpreter;
		
		private System.Nullable<int> _PietysmographyDone;
		
		private System.Nullable<decimal> _TLC;
		
		private string _TLCD;
		
		private System.Nullable<decimal> _RV;
		
		private string _RVD;
		
		private System.Nullable<decimal> _RV_TLC;
		
		private string _RV_TLCD;
		
		private string _BodyBox;
		
		private string _BodyBoxD;
		
		private string _EspirometricDate;
		
		private string _EspirometricTime;
		
		private System.Nullable<int> _EspirometricInterpreter;
		
		private System.Nullable<int> _EspirometricDone;
		
		private System.Nullable<decimal> _FVC;
		
		private string _FVCD;
		
		private System.Nullable<decimal> _FVC_;
		
		private string _FVC_D;
		
		private System.Nullable<decimal> _FEV1;
		
		private string _FEV1D;
		
		private System.Nullable<decimal> _FEV_FVC;
		
		private string _FEV_FVCD;
		
		private System.Nullable<decimal> _PEF;
		
		private string _PEFD;
		
		private System.Nullable<decimal> _PEF_;
		
		private string _PEF_D;
		
		private System.Nullable<decimal> _FEF25_75;
		
		private string _FEF25_75D;
		
		private System.Nullable<decimal> _FEF25_75_;
		
		private string _FEF25_75_D;
		
		private System.Nullable<decimal> _VC;
		
		private string _VCD;
		
		private System.Nullable<decimal> _VC_;
		
		private string _VC_D;
		
		private string _NoeEkhtelal;
		
		private string _NoeEkhtelalD;
		
		private string _SheddateEkhtelal;
		
		private string _SheddateEkhtelalD;
		
		private System.Nullable<bool> _BronchodilatorTest;
		
		private string _BronchodilatorTestD;
		
		private string _EspirometricPFTDate;
		
		private string _EspirometricPFTTime;
		
		private System.Nullable<int> _EspirometricPFTInterpreter;
		
		private System.Nullable<int> _EspirometricPFTDone;
		
		private System.Nullable<int> _VEXT;
		
		private string _VEXTD;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private System.Nullable<decimal> _FEV1_;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnMTCDateChanging(string value);
    partial void OnMTCDateChanged();
    partial void OnMTCTimeChanging(string value);
    partial void OnMTCTimeChanged();
    partial void OnMTCInterpreterChanging(System.Nullable<int> value);
    partial void OnMTCInterpreterChanged();
    partial void OnMTCDoneChanging(System.Nullable<int> value);
    partial void OnMTCDoneChanged();
    partial void OnPC20Changing(System.Nullable<decimal> value);
    partial void OnPC20Changed();
    partial void OnPC20DChanging(string value);
    partial void OnPC20DChanged();
    partial void OnMTCResultChanging(System.Nullable<bool> value);
    partial void OnMTCResultChanged();
    partial void OnMTCResultDChanging(string value);
    partial void OnMTCResultDChanged();
    partial void OnPietysmographyDateChanging(string value);
    partial void OnPietysmographyDateChanged();
    partial void OnPietysmographyTimeChanging(string value);
    partial void OnPietysmographyTimeChanged();
    partial void OnPietysmographyInterpreterChanging(System.Nullable<int> value);
    partial void OnPietysmographyInterpreterChanged();
    partial void OnPietysmographyDoneChanging(System.Nullable<int> value);
    partial void OnPietysmographyDoneChanged();
    partial void OnTLCChanging(System.Nullable<decimal> value);
    partial void OnTLCChanged();
    partial void OnTLCDChanging(string value);
    partial void OnTLCDChanged();
    partial void OnRVChanging(System.Nullable<decimal> value);
    partial void OnRVChanged();
    partial void OnRVDChanging(string value);
    partial void OnRVDChanged();
    partial void OnRV_TLCChanging(System.Nullable<decimal> value);
    partial void OnRV_TLCChanged();
    partial void OnRV_TLCDChanging(string value);
    partial void OnRV_TLCDChanged();
    partial void OnBodyBoxChanging(string value);
    partial void OnBodyBoxChanged();
    partial void OnBodyBoxDChanging(string value);
    partial void OnBodyBoxDChanged();
    partial void OnEspirometricDateChanging(string value);
    partial void OnEspirometricDateChanged();
    partial void OnEspirometricTimeChanging(string value);
    partial void OnEspirometricTimeChanged();
    partial void OnEspirometricInterpreterChanging(System.Nullable<int> value);
    partial void OnEspirometricInterpreterChanged();
    partial void OnEspirometricDoneChanging(System.Nullable<int> value);
    partial void OnEspirometricDoneChanged();
    partial void OnFVCChanging(System.Nullable<decimal> value);
    partial void OnFVCChanged();
    partial void OnFVCDChanging(string value);
    partial void OnFVCDChanged();
    partial void OnFVC_Changing(System.Nullable<decimal> value);
    partial void OnFVC_Changed();
    partial void OnFVC_DChanging(string value);
    partial void OnFVC_DChanged();
    partial void OnFEV1Changing(System.Nullable<decimal> value);
    partial void OnFEV1Changed();
    partial void OnFEV1DChanging(string value);
    partial void OnFEV1DChanged();
    partial void OnFEV_FVCChanging(System.Nullable<decimal> value);
    partial void OnFEV_FVCChanged();
    partial void OnFEV_FVCDChanging(string value);
    partial void OnFEV_FVCDChanged();
    partial void OnPEFChanging(System.Nullable<decimal> value);
    partial void OnPEFChanged();
    partial void OnPEFDChanging(string value);
    partial void OnPEFDChanged();
    partial void OnPEF_Changing(System.Nullable<decimal> value);
    partial void OnPEF_Changed();
    partial void OnPEF_DChanging(string value);
    partial void OnPEF_DChanged();
    partial void OnFEF25_75Changing(System.Nullable<decimal> value);
    partial void OnFEF25_75Changed();
    partial void OnFEF25_75DChanging(string value);
    partial void OnFEF25_75DChanged();
    partial void OnFEF25_75_Changing(System.Nullable<decimal> value);
    partial void OnFEF25_75_Changed();
    partial void OnFEF25_75_DChanging(string value);
    partial void OnFEF25_75_DChanged();
    partial void OnVCChanging(System.Nullable<decimal> value);
    partial void OnVCChanged();
    partial void OnVCDChanging(string value);
    partial void OnVCDChanged();
    partial void OnVC_Changing(System.Nullable<decimal> value);
    partial void OnVC_Changed();
    partial void OnVC_DChanging(string value);
    partial void OnVC_DChanged();
    partial void OnNoeEkhtelalChanging(string value);
    partial void OnNoeEkhtelalChanged();
    partial void OnNoeEkhtelalDChanging(string value);
    partial void OnNoeEkhtelalDChanged();
    partial void OnSheddateEkhtelalChanging(string value);
    partial void OnSheddateEkhtelalChanged();
    partial void OnSheddateEkhtelalDChanging(string value);
    partial void OnSheddateEkhtelalDChanged();
    partial void OnBronchodilatorTestChanging(System.Nullable<bool> value);
    partial void OnBronchodilatorTestChanged();
    partial void OnBronchodilatorTestDChanging(string value);
    partial void OnBronchodilatorTestDChanged();
    partial void OnEspirometricPFTDateChanging(string value);
    partial void OnEspirometricPFTDateChanged();
    partial void OnEspirometricPFTTimeChanging(string value);
    partial void OnEspirometricPFTTimeChanged();
    partial void OnEspirometricPFTInterpreterChanging(System.Nullable<int> value);
    partial void OnEspirometricPFTInterpreterChanged();
    partial void OnEspirometricPFTDoneChanging(System.Nullable<int> value);
    partial void OnEspirometricPFTDoneChanged();
    partial void OnVEXTChanging(System.Nullable<int> value);
    partial void OnVEXTChanged();
    partial void OnVEXTDChanging(string value);
    partial void OnVEXTDChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFEV1_Changing(System.Nullable<decimal> value);
    partial void OnFEV1_Changed();
    #endregion
		
		public Espirometry()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTCDate", DbType="NChar(10)")]
		public string MTCDate
		{
			get
			{
				return this._MTCDate;
			}
			set
			{
				if ((this._MTCDate != value))
				{
					this.OnMTCDateChanging(value);
					this.SendPropertyChanging();
					this._MTCDate = value;
					this.SendPropertyChanged("MTCDate");
					this.OnMTCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTCTime", DbType="NChar(5)")]
		public string MTCTime
		{
			get
			{
				return this._MTCTime;
			}
			set
			{
				if ((this._MTCTime != value))
				{
					this.OnMTCTimeChanging(value);
					this.SendPropertyChanging();
					this._MTCTime = value;
					this.SendPropertyChanged("MTCTime");
					this.OnMTCTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTCInterpreter", DbType="Int")]
		public System.Nullable<int> MTCInterpreter
		{
			get
			{
				return this._MTCInterpreter;
			}
			set
			{
				if ((this._MTCInterpreter != value))
				{
					this.OnMTCInterpreterChanging(value);
					this.SendPropertyChanging();
					this._MTCInterpreter = value;
					this.SendPropertyChanged("MTCInterpreter");
					this.OnMTCInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTCDone", DbType="Int")]
		public System.Nullable<int> MTCDone
		{
			get
			{
				return this._MTCDone;
			}
			set
			{
				if ((this._MTCDone != value))
				{
					this.OnMTCDoneChanging(value);
					this.SendPropertyChanging();
					this._MTCDone = value;
					this.SendPropertyChanged("MTCDone");
					this.OnMTCDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC20", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PC20
		{
			get
			{
				return this._PC20;
			}
			set
			{
				if ((this._PC20 != value))
				{
					this.OnPC20Changing(value);
					this.SendPropertyChanging();
					this._PC20 = value;
					this.SendPropertyChanged("PC20");
					this.OnPC20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PC20D", DbType="NVarChar(MAX)")]
		public string PC20D
		{
			get
			{
				return this._PC20D;
			}
			set
			{
				if ((this._PC20D != value))
				{
					this.OnPC20DChanging(value);
					this.SendPropertyChanging();
					this._PC20D = value;
					this.SendPropertyChanged("PC20D");
					this.OnPC20DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTCResult", DbType="Bit")]
		public System.Nullable<bool> MTCResult
		{
			get
			{
				return this._MTCResult;
			}
			set
			{
				if ((this._MTCResult != value))
				{
					this.OnMTCResultChanging(value);
					this.SendPropertyChanging();
					this._MTCResult = value;
					this.SendPropertyChanged("MTCResult");
					this.OnMTCResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MTCResultD", DbType="NVarChar(MAX)")]
		public string MTCResultD
		{
			get
			{
				return this._MTCResultD;
			}
			set
			{
				if ((this._MTCResultD != value))
				{
					this.OnMTCResultDChanging(value);
					this.SendPropertyChanging();
					this._MTCResultD = value;
					this.SendPropertyChanged("MTCResultD");
					this.OnMTCResultDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PietysmographyDate", DbType="NChar(10)")]
		public string PietysmographyDate
		{
			get
			{
				return this._PietysmographyDate;
			}
			set
			{
				if ((this._PietysmographyDate != value))
				{
					this.OnPietysmographyDateChanging(value);
					this.SendPropertyChanging();
					this._PietysmographyDate = value;
					this.SendPropertyChanged("PietysmographyDate");
					this.OnPietysmographyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PietysmographyTime", DbType="NChar(5)")]
		public string PietysmographyTime
		{
			get
			{
				return this._PietysmographyTime;
			}
			set
			{
				if ((this._PietysmographyTime != value))
				{
					this.OnPietysmographyTimeChanging(value);
					this.SendPropertyChanging();
					this._PietysmographyTime = value;
					this.SendPropertyChanged("PietysmographyTime");
					this.OnPietysmographyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PietysmographyInterpreter", DbType="Int")]
		public System.Nullable<int> PietysmographyInterpreter
		{
			get
			{
				return this._PietysmographyInterpreter;
			}
			set
			{
				if ((this._PietysmographyInterpreter != value))
				{
					this.OnPietysmographyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._PietysmographyInterpreter = value;
					this.SendPropertyChanged("PietysmographyInterpreter");
					this.OnPietysmographyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PietysmographyDone", DbType="Int")]
		public System.Nullable<int> PietysmographyDone
		{
			get
			{
				return this._PietysmographyDone;
			}
			set
			{
				if ((this._PietysmographyDone != value))
				{
					this.OnPietysmographyDoneChanging(value);
					this.SendPropertyChanging();
					this._PietysmographyDone = value;
					this.SendPropertyChanged("PietysmographyDone");
					this.OnPietysmographyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLC", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TLC
		{
			get
			{
				return this._TLC;
			}
			set
			{
				if ((this._TLC != value))
				{
					this.OnTLCChanging(value);
					this.SendPropertyChanging();
					this._TLC = value;
					this.SendPropertyChanged("TLC");
					this.OnTLCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLCD", DbType="NVarChar(MAX)")]
		public string TLCD
		{
			get
			{
				return this._TLCD;
			}
			set
			{
				if ((this._TLCD != value))
				{
					this.OnTLCDChanging(value);
					this.SendPropertyChanging();
					this._TLCD = value;
					this.SendPropertyChanged("TLCD");
					this.OnTLCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RV", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RV
		{
			get
			{
				return this._RV;
			}
			set
			{
				if ((this._RV != value))
				{
					this.OnRVChanging(value);
					this.SendPropertyChanging();
					this._RV = value;
					this.SendPropertyChanged("RV");
					this.OnRVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVD", DbType="NVarChar(MAX)")]
		public string RVD
		{
			get
			{
				return this._RVD;
			}
			set
			{
				if ((this._RVD != value))
				{
					this.OnRVDChanging(value);
					this.SendPropertyChanging();
					this._RVD = value;
					this.SendPropertyChanged("RVD");
					this.OnRVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[RV/TLC]", Storage="_RV_TLC", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RV_TLC
		{
			get
			{
				return this._RV_TLC;
			}
			set
			{
				if ((this._RV_TLC != value))
				{
					this.OnRV_TLCChanging(value);
					this.SendPropertyChanging();
					this._RV_TLC = value;
					this.SendPropertyChanged("RV_TLC");
					this.OnRV_TLCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[RV/TLCD]", Storage="_RV_TLCD", DbType="NVarChar(MAX)")]
		public string RV_TLCD
		{
			get
			{
				return this._RV_TLCD;
			}
			set
			{
				if ((this._RV_TLCD != value))
				{
					this.OnRV_TLCDChanging(value);
					this.SendPropertyChanging();
					this._RV_TLCD = value;
					this.SendPropertyChanged("RV_TLCD");
					this.OnRV_TLCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyBox", DbType="NVarChar(25)")]
		public string BodyBox
		{
			get
			{
				return this._BodyBox;
			}
			set
			{
				if ((this._BodyBox != value))
				{
					this.OnBodyBoxChanging(value);
					this.SendPropertyChanging();
					this._BodyBox = value;
					this.SendPropertyChanged("BodyBox");
					this.OnBodyBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyBoxD", DbType="NVarChar(MAX)")]
		public string BodyBoxD
		{
			get
			{
				return this._BodyBoxD;
			}
			set
			{
				if ((this._BodyBoxD != value))
				{
					this.OnBodyBoxDChanging(value);
					this.SendPropertyChanging();
					this._BodyBoxD = value;
					this.SendPropertyChanged("BodyBoxD");
					this.OnBodyBoxDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricDate", DbType="NChar(10)")]
		public string EspirometricDate
		{
			get
			{
				return this._EspirometricDate;
			}
			set
			{
				if ((this._EspirometricDate != value))
				{
					this.OnEspirometricDateChanging(value);
					this.SendPropertyChanging();
					this._EspirometricDate = value;
					this.SendPropertyChanged("EspirometricDate");
					this.OnEspirometricDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricTime", DbType="NChar(5)")]
		public string EspirometricTime
		{
			get
			{
				return this._EspirometricTime;
			}
			set
			{
				if ((this._EspirometricTime != value))
				{
					this.OnEspirometricTimeChanging(value);
					this.SendPropertyChanging();
					this._EspirometricTime = value;
					this.SendPropertyChanged("EspirometricTime");
					this.OnEspirometricTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricInterpreter", DbType="Int")]
		public System.Nullable<int> EspirometricInterpreter
		{
			get
			{
				return this._EspirometricInterpreter;
			}
			set
			{
				if ((this._EspirometricInterpreter != value))
				{
					this.OnEspirometricInterpreterChanging(value);
					this.SendPropertyChanging();
					this._EspirometricInterpreter = value;
					this.SendPropertyChanged("EspirometricInterpreter");
					this.OnEspirometricInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricDone", DbType="Int")]
		public System.Nullable<int> EspirometricDone
		{
			get
			{
				return this._EspirometricDone;
			}
			set
			{
				if ((this._EspirometricDone != value))
				{
					this.OnEspirometricDoneChanging(value);
					this.SendPropertyChanging();
					this._EspirometricDone = value;
					this.SendPropertyChanged("EspirometricDone");
					this.OnEspirometricDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FVC", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FVC
		{
			get
			{
				return this._FVC;
			}
			set
			{
				if ((this._FVC != value))
				{
					this.OnFVCChanging(value);
					this.SendPropertyChanging();
					this._FVC = value;
					this.SendPropertyChanged("FVC");
					this.OnFVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FVCD", DbType="NVarChar(MAX)")]
		public string FVCD
		{
			get
			{
				return this._FVCD;
			}
			set
			{
				if ((this._FVCD != value))
				{
					this.OnFVCDChanging(value);
					this.SendPropertyChanging();
					this._FVCD = value;
					this.SendPropertyChanged("FVCD");
					this.OnFVCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FVC%]", Storage="_FVC_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FVC_
		{
			get
			{
				return this._FVC_;
			}
			set
			{
				if ((this._FVC_ != value))
				{
					this.OnFVC_Changing(value);
					this.SendPropertyChanging();
					this._FVC_ = value;
					this.SendPropertyChanged("FVC_");
					this.OnFVC_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FVC%D]", Storage="_FVC_D", DbType="NVarChar(MAX)")]
		public string FVC_D
		{
			get
			{
				return this._FVC_D;
			}
			set
			{
				if ((this._FVC_D != value))
				{
					this.OnFVC_DChanging(value);
					this.SendPropertyChanging();
					this._FVC_D = value;
					this.SendPropertyChanged("FVC_D");
					this.OnFVC_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FEV1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FEV1
		{
			get
			{
				return this._FEV1;
			}
			set
			{
				if ((this._FEV1 != value))
				{
					this.OnFEV1Changing(value);
					this.SendPropertyChanging();
					this._FEV1 = value;
					this.SendPropertyChanged("FEV1");
					this.OnFEV1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FEV1D", DbType="NVarChar(MAX)")]
		public string FEV1D
		{
			get
			{
				return this._FEV1D;
			}
			set
			{
				if ((this._FEV1D != value))
				{
					this.OnFEV1DChanging(value);
					this.SendPropertyChanging();
					this._FEV1D = value;
					this.SendPropertyChanged("FEV1D");
					this.OnFEV1DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEV/FVC]", Storage="_FEV_FVC", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FEV_FVC
		{
			get
			{
				return this._FEV_FVC;
			}
			set
			{
				if ((this._FEV_FVC != value))
				{
					this.OnFEV_FVCChanging(value);
					this.SendPropertyChanging();
					this._FEV_FVC = value;
					this.SendPropertyChanged("FEV_FVC");
					this.OnFEV_FVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEV/FVCD]", Storage="_FEV_FVCD", DbType="NVarChar(MAX)")]
		public string FEV_FVCD
		{
			get
			{
				return this._FEV_FVCD;
			}
			set
			{
				if ((this._FEV_FVCD != value))
				{
					this.OnFEV_FVCDChanging(value);
					this.SendPropertyChanging();
					this._FEV_FVCD = value;
					this.SendPropertyChanged("FEV_FVCD");
					this.OnFEV_FVCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEF", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PEF
		{
			get
			{
				return this._PEF;
			}
			set
			{
				if ((this._PEF != value))
				{
					this.OnPEFChanging(value);
					this.SendPropertyChanging();
					this._PEF = value;
					this.SendPropertyChanged("PEF");
					this.OnPEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEFD", DbType="NVarChar(MAX)")]
		public string PEFD
		{
			get
			{
				return this._PEFD;
			}
			set
			{
				if ((this._PEFD != value))
				{
					this.OnPEFDChanging(value);
					this.SendPropertyChanging();
					this._PEFD = value;
					this.SendPropertyChanged("PEFD");
					this.OnPEFDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PEF%]", Storage="_PEF_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PEF_
		{
			get
			{
				return this._PEF_;
			}
			set
			{
				if ((this._PEF_ != value))
				{
					this.OnPEF_Changing(value);
					this.SendPropertyChanging();
					this._PEF_ = value;
					this.SendPropertyChanged("PEF_");
					this.OnPEF_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[PEF%D]", Storage="_PEF_D", DbType="NVarChar(MAX)")]
		public string PEF_D
		{
			get
			{
				return this._PEF_D;
			}
			set
			{
				if ((this._PEF_D != value))
				{
					this.OnPEF_DChanging(value);
					this.SendPropertyChanging();
					this._PEF_D = value;
					this.SendPropertyChanged("PEF_D");
					this.OnPEF_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEF25-75]", Storage="_FEF25_75", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FEF25_75
		{
			get
			{
				return this._FEF25_75;
			}
			set
			{
				if ((this._FEF25_75 != value))
				{
					this.OnFEF25_75Changing(value);
					this.SendPropertyChanging();
					this._FEF25_75 = value;
					this.SendPropertyChanged("FEF25_75");
					this.OnFEF25_75Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEF25-75D]", Storage="_FEF25_75D", DbType="NVarChar(MAX)")]
		public string FEF25_75D
		{
			get
			{
				return this._FEF25_75D;
			}
			set
			{
				if ((this._FEF25_75D != value))
				{
					this.OnFEF25_75DChanging(value);
					this.SendPropertyChanging();
					this._FEF25_75D = value;
					this.SendPropertyChanged("FEF25_75D");
					this.OnFEF25_75DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEF25-75%]", Storage="_FEF25_75_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FEF25_75_
		{
			get
			{
				return this._FEF25_75_;
			}
			set
			{
				if ((this._FEF25_75_ != value))
				{
					this.OnFEF25_75_Changing(value);
					this.SendPropertyChanging();
					this._FEF25_75_ = value;
					this.SendPropertyChanged("FEF25_75_");
					this.OnFEF25_75_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEF25-75%D]", Storage="_FEF25_75_D", DbType="NVarChar(MAX)")]
		public string FEF25_75_D
		{
			get
			{
				return this._FEF25_75_D;
			}
			set
			{
				if ((this._FEF25_75_D != value))
				{
					this.OnFEF25_75_DChanging(value);
					this.SendPropertyChanging();
					this._FEF25_75_D = value;
					this.SendPropertyChanged("FEF25_75_D");
					this.OnFEF25_75_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VC", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> VC
		{
			get
			{
				return this._VC;
			}
			set
			{
				if ((this._VC != value))
				{
					this.OnVCChanging(value);
					this.SendPropertyChanging();
					this._VC = value;
					this.SendPropertyChanged("VC");
					this.OnVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VCD", DbType="NVarChar(MAX)")]
		public string VCD
		{
			get
			{
				return this._VCD;
			}
			set
			{
				if ((this._VCD != value))
				{
					this.OnVCDChanging(value);
					this.SendPropertyChanging();
					this._VCD = value;
					this.SendPropertyChanged("VCD");
					this.OnVCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[VC%]", Storage="_VC_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> VC_
		{
			get
			{
				return this._VC_;
			}
			set
			{
				if ((this._VC_ != value))
				{
					this.OnVC_Changing(value);
					this.SendPropertyChanging();
					this._VC_ = value;
					this.SendPropertyChanged("VC_");
					this.OnVC_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[VC%D]", Storage="_VC_D", DbType="NVarChar(MAX)")]
		public string VC_D
		{
			get
			{
				return this._VC_D;
			}
			set
			{
				if ((this._VC_D != value))
				{
					this.OnVC_DChanging(value);
					this.SendPropertyChanging();
					this._VC_D = value;
					this.SendPropertyChanged("VC_D");
					this.OnVC_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoeEkhtelal", DbType="NVarChar(20)")]
		public string NoeEkhtelal
		{
			get
			{
				return this._NoeEkhtelal;
			}
			set
			{
				if ((this._NoeEkhtelal != value))
				{
					this.OnNoeEkhtelalChanging(value);
					this.SendPropertyChanging();
					this._NoeEkhtelal = value;
					this.SendPropertyChanged("NoeEkhtelal");
					this.OnNoeEkhtelalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoeEkhtelalD", DbType="NVarChar(MAX)")]
		public string NoeEkhtelalD
		{
			get
			{
				return this._NoeEkhtelalD;
			}
			set
			{
				if ((this._NoeEkhtelalD != value))
				{
					this.OnNoeEkhtelalDChanging(value);
					this.SendPropertyChanging();
					this._NoeEkhtelalD = value;
					this.SendPropertyChanged("NoeEkhtelalD");
					this.OnNoeEkhtelalDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheddateEkhtelal", DbType="NVarChar(20)")]
		public string SheddateEkhtelal
		{
			get
			{
				return this._SheddateEkhtelal;
			}
			set
			{
				if ((this._SheddateEkhtelal != value))
				{
					this.OnSheddateEkhtelalChanging(value);
					this.SendPropertyChanging();
					this._SheddateEkhtelal = value;
					this.SendPropertyChanged("SheddateEkhtelal");
					this.OnSheddateEkhtelalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheddateEkhtelalD", DbType="NVarChar(MAX)")]
		public string SheddateEkhtelalD
		{
			get
			{
				return this._SheddateEkhtelalD;
			}
			set
			{
				if ((this._SheddateEkhtelalD != value))
				{
					this.OnSheddateEkhtelalDChanging(value);
					this.SendPropertyChanging();
					this._SheddateEkhtelalD = value;
					this.SendPropertyChanged("SheddateEkhtelalD");
					this.OnSheddateEkhtelalDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BronchodilatorTest", DbType="Bit")]
		public System.Nullable<bool> BronchodilatorTest
		{
			get
			{
				return this._BronchodilatorTest;
			}
			set
			{
				if ((this._BronchodilatorTest != value))
				{
					this.OnBronchodilatorTestChanging(value);
					this.SendPropertyChanging();
					this._BronchodilatorTest = value;
					this.SendPropertyChanged("BronchodilatorTest");
					this.OnBronchodilatorTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BronchodilatorTestD", DbType="NVarChar(MAX)")]
		public string BronchodilatorTestD
		{
			get
			{
				return this._BronchodilatorTestD;
			}
			set
			{
				if ((this._BronchodilatorTestD != value))
				{
					this.OnBronchodilatorTestDChanging(value);
					this.SendPropertyChanging();
					this._BronchodilatorTestD = value;
					this.SendPropertyChanged("BronchodilatorTestD");
					this.OnBronchodilatorTestDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricPFTDate", DbType="NChar(10)")]
		public string EspirometricPFTDate
		{
			get
			{
				return this._EspirometricPFTDate;
			}
			set
			{
				if ((this._EspirometricPFTDate != value))
				{
					this.OnEspirometricPFTDateChanging(value);
					this.SendPropertyChanging();
					this._EspirometricPFTDate = value;
					this.SendPropertyChanged("EspirometricPFTDate");
					this.OnEspirometricPFTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricPFTTime", DbType="NChar(5)")]
		public string EspirometricPFTTime
		{
			get
			{
				return this._EspirometricPFTTime;
			}
			set
			{
				if ((this._EspirometricPFTTime != value))
				{
					this.OnEspirometricPFTTimeChanging(value);
					this.SendPropertyChanging();
					this._EspirometricPFTTime = value;
					this.SendPropertyChanged("EspirometricPFTTime");
					this.OnEspirometricPFTTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricPFTInterpreter", DbType="Int")]
		public System.Nullable<int> EspirometricPFTInterpreter
		{
			get
			{
				return this._EspirometricPFTInterpreter;
			}
			set
			{
				if ((this._EspirometricPFTInterpreter != value))
				{
					this.OnEspirometricPFTInterpreterChanging(value);
					this.SendPropertyChanging();
					this._EspirometricPFTInterpreter = value;
					this.SendPropertyChanged("EspirometricPFTInterpreter");
					this.OnEspirometricPFTInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspirometricPFTDone", DbType="Int")]
		public System.Nullable<int> EspirometricPFTDone
		{
			get
			{
				return this._EspirometricPFTDone;
			}
			set
			{
				if ((this._EspirometricPFTDone != value))
				{
					this.OnEspirometricPFTDoneChanging(value);
					this.SendPropertyChanging();
					this._EspirometricPFTDone = value;
					this.SendPropertyChanged("EspirometricPFTDone");
					this.OnEspirometricPFTDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEXT", DbType="Int")]
		public System.Nullable<int> VEXT
		{
			get
			{
				return this._VEXT;
			}
			set
			{
				if ((this._VEXT != value))
				{
					this.OnVEXTChanging(value);
					this.SendPropertyChanging();
					this._VEXT = value;
					this.SendPropertyChanged("VEXT");
					this.OnVEXTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VEXTD", DbType="NVarChar(MAX)")]
		public string VEXTD
		{
			get
			{
				return this._VEXTD;
			}
			set
			{
				if ((this._VEXTD != value))
				{
					this.OnVEXTDChanging(value);
					this.SendPropertyChanging();
					this._VEXTD = value;
					this.SendPropertyChanged("VEXTD");
					this.OnVEXTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[FEV1%]", Storage="_FEV1_", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FEV1_
		{
			get
			{
				return this._FEV1_;
			}
			set
			{
				if ((this._FEV1_ != value))
				{
					this.OnFEV1_Changing(value);
					this.SendPropertyChanging();
					this._FEV1_ = value;
					this.SendPropertyChanged("FEV1_");
					this.OnFEV1_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Espirometry", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Espirometries.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Espirometries.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationResult")]
	public partial class EvaluationResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<DocumentResult> _DocumentResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EvaluationResult()
		{
			this._DocumentResults = new EntitySet<DocumentResult>(new Action<DocumentResult>(this.attach_DocumentResults), new Action<DocumentResult>(this.detach_DocumentResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationResult_DocumentResult", Storage="_DocumentResults", ThisKey="ID", OtherKey="ResultID")]
		public EntitySet<DocumentResult> DocumentResults
		{
			get
			{
				return this._DocumentResults;
			}
			set
			{
				this._DocumentResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentResults(DocumentResult entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationResult = this;
		}
		
		private void detach_DocumentResults(DocumentResult entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationResult = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyIllnessHistory")]
	public partial class FamilyIllnessHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private string _Illness;
		
		private byte _RelationID;
		
		private EntityRef<FamilyRelation> _FamilyRelation;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnIllnessChanging(string value);
    partial void OnIllnessChanged();
    partial void OnRelationIDChanging(byte value);
    partial void OnRelationIDChanged();
    #endregion
		
		public FamilyIllnessHistory()
		{
			this._FamilyRelation = default(EntityRef<FamilyRelation>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Illness", DbType="NVarChar(100)")]
		public string Illness
		{
			get
			{
				return this._Illness;
			}
			set
			{
				if ((this._Illness != value))
				{
					this.OnIllnessChanging(value);
					this.SendPropertyChanging();
					this._Illness = value;
					this.SendPropertyChanged("Illness");
					this.OnIllnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationID", DbType="TinyInt NOT NULL")]
		public byte RelationID
		{
			get
			{
				return this._RelationID;
			}
			set
			{
				if ((this._RelationID != value))
				{
					if (this._FamilyRelation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationIDChanging(value);
					this.SendPropertyChanging();
					this._RelationID = value;
					this.SendPropertyChanged("RelationID");
					this.OnRelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FamilyRelation_FamilyIllnessHistory", Storage="_FamilyRelation", ThisKey="RelationID", OtherKey="ID", IsForeignKey=true)]
		public FamilyRelation FamilyRelation
		{
			get
			{
				return this._FamilyRelation.Entity;
			}
			set
			{
				FamilyRelation previousValue = this._FamilyRelation.Entity;
				if (((previousValue != value) 
							|| (this._FamilyRelation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FamilyRelation.Entity = null;
						previousValue.FamilyIllnessHistories.Remove(this);
					}
					this._FamilyRelation.Entity = value;
					if ((value != null))
					{
						value.FamilyIllnessHistories.Add(this);
						this._RelationID = value.ID;
					}
					else
					{
						this._RelationID = default(byte);
					}
					this.SendPropertyChanged("FamilyRelation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_FamilyIllnessHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.FamilyIllnessHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.FamilyIllnessHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyRelation")]
	public partial class FamilyRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<FamilyIllnessHistory> _FamilyIllnessHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FamilyRelation()
		{
			this._FamilyIllnessHistories = new EntitySet<FamilyIllnessHistory>(new Action<FamilyIllnessHistory>(this.attach_FamilyIllnessHistories), new Action<FamilyIllnessHistory>(this.detach_FamilyIllnessHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(15)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FamilyRelation_FamilyIllnessHistory", Storage="_FamilyIllnessHistories", ThisKey="ID", OtherKey="RelationID")]
		public EntitySet<FamilyIllnessHistory> FamilyIllnessHistories
		{
			get
			{
				return this._FamilyIllnessHistories;
			}
			set
			{
				this._FamilyIllnessHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FamilyIllnessHistories(FamilyIllnessHistory entity)
		{
			this.SendPropertyChanging();
			entity.FamilyRelation = this;
		}
		
		private void detach_FamilyIllnessHistories(FamilyIllnessHistory entity)
		{
			this.SendPropertyChanging();
			entity.FamilyRelation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HarmCause")]
	public partial class HarmCause : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public HarmCause()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IllnessHistory")]
	public partial class IllnessHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _Date;
		
		private string _Name;
		
		private string _Result;
		
		private string _Category;
		
		private string _State;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public IllnessHistory()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(100)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(20)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_IllnessHistory", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.IllnessHistories.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.IllnessHistories.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobHistory")]
	public partial class JobHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private string _Title;
		
		private System.Nullable<byte> _Duration;
		
		private System.Nullable<bool> _IsCurrent;
		
		private string _StartDate;
		
		private System.Nullable<int> _CompanyID;
		
		private string _AssignedWork;
		
		private string _Shift;
		
		private string _HarmCauses;
		
		private string _HarmCausesDescription;
		
		private string _Description;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDurationChanging(System.Nullable<byte> value);
    partial void OnDurationChanged();
    partial void OnIsCurrentChanging(System.Nullable<bool> value);
    partial void OnIsCurrentChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnAssignedWorkChanging(string value);
    partial void OnAssignedWorkChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnHarmCausesChanging(string value);
    partial void OnHarmCausesChanged();
    partial void OnHarmCausesDescriptionChanging(string value);
    partial void OnHarmCausesDescriptionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public JobHistory()
		{
			this._Company = default(EntityRef<Company>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="TinyInt")]
		public System.Nullable<byte> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrent", DbType="Bit")]
		public System.Nullable<bool> IsCurrent
		{
			get
			{
				return this._IsCurrent;
			}
			set
			{
				if ((this._IsCurrent != value))
				{
					this.OnIsCurrentChanging(value);
					this.SendPropertyChanging();
					this._IsCurrent = value;
					this.SendPropertyChanged("IsCurrent");
					this.OnIsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedWork", DbType="NVarChar(50)")]
		public string AssignedWork
		{
			get
			{
				return this._AssignedWork;
			}
			set
			{
				if ((this._AssignedWork != value))
				{
					this.OnAssignedWorkChanging(value);
					this.SendPropertyChanging();
					this._AssignedWork = value;
					this.SendPropertyChanged("AssignedWork");
					this.OnAssignedWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(20)")]
		public string Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmCauses", DbType="NVarChar(300)")]
		public string HarmCauses
		{
			get
			{
				return this._HarmCauses;
			}
			set
			{
				if ((this._HarmCauses != value))
				{
					this.OnHarmCausesChanging(value);
					this.SendPropertyChanging();
					this._HarmCauses = value;
					this.SendPropertyChanged("HarmCauses");
					this.OnHarmCausesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmCausesDescription", DbType="NVarChar(300)")]
		public string HarmCausesDescription
		{
			get
			{
				return this._HarmCausesDescription;
			}
			set
			{
				if ((this._HarmCausesDescription != value))
				{
					this.OnHarmCausesDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HarmCausesDescription = value;
					this.SendPropertyChanged("HarmCausesDescription");
					this.OnHarmCausesDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_JobHistory", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.JobHistories.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.JobHistories.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_JobHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.JobHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.JobHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LaboratoryRequest")]
	public partial class LaboratoryRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private System.Nullable<int> _SerialNumber;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnSerialNumberChanging(System.Nullable<int> value);
    partial void OnSerialNumberChanged();
    #endregion
		
		public LaboratoryRequest()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int")]
		public System.Nullable<int> SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_LaboratoryRequest", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.LaboratoryRequests.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.LaboratoryRequests.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotritionConsult")]
	public partial class NotritionConsult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ConsultID;
		
		private string _Education;
		
		private string _School;
		
		private System.Nullable<int> _Age;
		
		private string _Ghomiat;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _Weight;
		
		private System.Nullable<double> _BMI;
		
		private string _Illnesses;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private System.Nullable<bool> _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnConsultIDChanging(System.Nullable<int> value);
    partial void OnConsultIDChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnSchoolChanging(string value);
    partial void OnSchoolChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnGhomiatChanging(string value);
    partial void OnGhomiatChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<int> value);
    partial void OnWeightChanged();
    partial void OnBMIChanging(System.Nullable<double> value);
    partial void OnBMIChanged();
    partial void OnIllnessesChanging(string value);
    partial void OnIllnessesChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public NotritionConsult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsultID", DbType="Int")]
		public System.Nullable<int> ConsultID
		{
			get
			{
				return this._ConsultID;
			}
			set
			{
				if ((this._ConsultID != value))
				{
					this.OnConsultIDChanging(value);
					this.SendPropertyChanging();
					this._ConsultID = value;
					this.SendPropertyChanged("ConsultID");
					this.OnConsultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(50)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School", DbType="NVarChar(50)")]
		public string School
		{
			get
			{
				return this._School;
			}
			set
			{
				if ((this._School != value))
				{
					this.OnSchoolChanging(value);
					this.SendPropertyChanging();
					this._School = value;
					this.SendPropertyChanged("School");
					this.OnSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ghomiat", DbType="NVarChar(10)")]
		public string Ghomiat
		{
			get
			{
				return this._Ghomiat;
			}
			set
			{
				if ((this._Ghomiat != value))
				{
					this.OnGhomiatChanging(value);
					this.SendPropertyChanging();
					this._Ghomiat = value;
					this.SendPropertyChanged("Ghomiat");
					this.OnGhomiatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int")]
		public System.Nullable<int> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMI", DbType="Float")]
		public System.Nullable<double> BMI
		{
			get
			{
				return this._BMI;
			}
			set
			{
				if ((this._BMI != value))
				{
					this.OnBMIChanging(value);
					this.SendPropertyChanging();
					this._BMI = value;
					this.SendPropertyChanged("BMI");
					this.OnBMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Illnesses", DbType="NVarChar(MAX)")]
		public string Illnesses
		{
			get
			{
				return this._Illnesses;
			}
			set
			{
				if ((this._Illnesses != value))
				{
					this.OnIllnessesChanging(value);
					this.SendPropertyChanging();
					this._Illnesses = value;
					this.SendPropertyChanged("Illnesses");
					this.OnIllnessesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NVarChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotritionIllnesses")]
	public partial class NotritionIllness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IllnessName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIllnessNameChanging(string value);
    partial void OnIllnessNameChanged();
    #endregion
		
		public NotritionIllness()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IllnessName", DbType="NVarChar(30)")]
		public string IllnessName
		{
			get
			{
				return this._IllnessName;
			}
			set
			{
				if ((this._IllnessName != value))
				{
					this.OnIllnessNameChanging(value);
					this.SendPropertyChanging();
					this._IllnessName = value;
					this.SendPropertyChanged("IllnessName");
					this.OnIllnessNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NurseDiagnose")]
	public partial class NurseDiagnose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _Date;
		
		private string _Time;
		
		private System.Nullable<int> _Interpreter;
		
		private System.Nullable<int> _Done;
		
		private System.Nullable<short> _Weight;
		
		private System.Nullable<short> _Heght;
		
		private System.Nullable<byte> _BPSistoly;
		
		private System.Nullable<byte> _BPDiastoly;
		
		private System.Nullable<short> _Pulse;
		
		private System.Nullable<short> _BreathPerMinute;
		
		private System.Nullable<byte> _Tempreture;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<int> _Waist;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInterpreterChanging(System.Nullable<int> value);
    partial void OnInterpreterChanged();
    partial void OnDoneChanging(System.Nullable<int> value);
    partial void OnDoneChanged();
    partial void OnWeightChanging(System.Nullable<short> value);
    partial void OnWeightChanged();
    partial void OnHeghtChanging(System.Nullable<short> value);
    partial void OnHeghtChanged();
    partial void OnBPSistolyChanging(System.Nullable<byte> value);
    partial void OnBPSistolyChanged();
    partial void OnBPDiastolyChanging(System.Nullable<byte> value);
    partial void OnBPDiastolyChanged();
    partial void OnPulseChanging(System.Nullable<short> value);
    partial void OnPulseChanged();
    partial void OnBreathPerMinuteChanging(System.Nullable<short> value);
    partial void OnBreathPerMinuteChanged();
    partial void OnTempretureChanging(System.Nullable<byte> value);
    partial void OnTempretureChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnWaistChanging(System.Nullable<int> value);
    partial void OnWaistChanged();
    #endregion
		
		public NurseDiagnose()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(5)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interpreter", DbType="Int")]
		public System.Nullable<int> Interpreter
		{
			get
			{
				return this._Interpreter;
			}
			set
			{
				if ((this._Interpreter != value))
				{
					this.OnInterpreterChanging(value);
					this.SendPropertyChanging();
					this._Interpreter = value;
					this.SendPropertyChanged("Interpreter");
					this.OnInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Done", DbType="Int")]
		public System.Nullable<int> Done
		{
			get
			{
				return this._Done;
			}
			set
			{
				if ((this._Done != value))
				{
					this.OnDoneChanging(value);
					this.SendPropertyChanging();
					this._Done = value;
					this.SendPropertyChanged("Done");
					this.OnDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="SmallInt")]
		public System.Nullable<short> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heght", DbType="SmallInt")]
		public System.Nullable<short> Heght
		{
			get
			{
				return this._Heght;
			}
			set
			{
				if ((this._Heght != value))
				{
					this.OnHeghtChanging(value);
					this.SendPropertyChanging();
					this._Heght = value;
					this.SendPropertyChanged("Heght");
					this.OnHeghtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPSistoly", DbType="TinyInt")]
		public System.Nullable<byte> BPSistoly
		{
			get
			{
				return this._BPSistoly;
			}
			set
			{
				if ((this._BPSistoly != value))
				{
					this.OnBPSistolyChanging(value);
					this.SendPropertyChanging();
					this._BPSistoly = value;
					this.SendPropertyChanged("BPSistoly");
					this.OnBPSistolyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPDiastoly", DbType="TinyInt")]
		public System.Nullable<byte> BPDiastoly
		{
			get
			{
				return this._BPDiastoly;
			}
			set
			{
				if ((this._BPDiastoly != value))
				{
					this.OnBPDiastolyChanging(value);
					this.SendPropertyChanging();
					this._BPDiastoly = value;
					this.SendPropertyChanged("BPDiastoly");
					this.OnBPDiastolyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pulse", DbType="SmallInt")]
		public System.Nullable<short> Pulse
		{
			get
			{
				return this._Pulse;
			}
			set
			{
				if ((this._Pulse != value))
				{
					this.OnPulseChanging(value);
					this.SendPropertyChanging();
					this._Pulse = value;
					this.SendPropertyChanged("Pulse");
					this.OnPulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreathPerMinute", DbType="SmallInt")]
		public System.Nullable<short> BreathPerMinute
		{
			get
			{
				return this._BreathPerMinute;
			}
			set
			{
				if ((this._BreathPerMinute != value))
				{
					this.OnBreathPerMinuteChanging(value);
					this.SendPropertyChanging();
					this._BreathPerMinute = value;
					this.SendPropertyChanged("BreathPerMinute");
					this.OnBreathPerMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tempreture", DbType="TinyInt")]
		public System.Nullable<byte> Tempreture
		{
			get
			{
				return this._Tempreture;
			}
			set
			{
				if ((this._Tempreture != value))
				{
					this.OnTempretureChanging(value);
					this.SendPropertyChanging();
					this._Tempreture = value;
					this.SendPropertyChanged("Tempreture");
					this.OnTempretureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waist", DbType="Int")]
		public System.Nullable<int> Waist
		{
			get
			{
				return this._Waist;
			}
			set
			{
				if ((this._Waist != value))
				{
					this.OnWaistChanging(value);
					this.SendPropertyChanging();
					this._Waist = value;
					this.SendPropertyChanged("Waist");
					this.OnWaistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_NurseDiagnose", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.NurseDiagnoses.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.NurseDiagnoses.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NutritionConsultant")]
	public partial class NutritionConsultant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _DocumentID;
		
		private string _Date;
		
		private string _Hb;
		
		private string _FBS;
		
		private string _BUN;
		
		private string _Cr;
		
		private string _Chol;
		
		private string _TG;
		
		private string _RegimeType;
		
		private string _CalorieCount;
		
		private string _Weight;
		
		private string _BMI;
		
		private string _Diabet;
		
		private string _HTN;
		
		private string _IHD;
		
		private string _HLP;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnHbChanging(string value);
    partial void OnHbChanged();
    partial void OnFBSChanging(string value);
    partial void OnFBSChanged();
    partial void OnBUNChanging(string value);
    partial void OnBUNChanged();
    partial void OnCrChanging(string value);
    partial void OnCrChanged();
    partial void OnCholChanging(string value);
    partial void OnCholChanged();
    partial void OnTGChanging(string value);
    partial void OnTGChanged();
    partial void OnRegimeTypeChanging(string value);
    partial void OnRegimeTypeChanged();
    partial void OnCalorieCountChanging(string value);
    partial void OnCalorieCountChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnBMIChanging(string value);
    partial void OnBMIChanged();
    partial void OnDiabetChanging(string value);
    partial void OnDiabetChanged();
    partial void OnHTNChanging(string value);
    partial void OnHTNChanged();
    partial void OnIHDChanging(string value);
    partial void OnIHDChanged();
    partial void OnHLPChanging(string value);
    partial void OnHLPChanged();
    #endregion
		
		public NutritionConsultant()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hb", DbType="NVarChar(50)")]
		public string Hb
		{
			get
			{
				return this._Hb;
			}
			set
			{
				if ((this._Hb != value))
				{
					this.OnHbChanging(value);
					this.SendPropertyChanging();
					this._Hb = value;
					this.SendPropertyChanged("Hb");
					this.OnHbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBS", DbType="NVarChar(50)")]
		public string FBS
		{
			get
			{
				return this._FBS;
			}
			set
			{
				if ((this._FBS != value))
				{
					this.OnFBSChanging(value);
					this.SendPropertyChanging();
					this._FBS = value;
					this.SendPropertyChanged("FBS");
					this.OnFBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUN", DbType="NVarChar(50)")]
		public string BUN
		{
			get
			{
				return this._BUN;
			}
			set
			{
				if ((this._BUN != value))
				{
					this.OnBUNChanging(value);
					this.SendPropertyChanging();
					this._BUN = value;
					this.SendPropertyChanged("BUN");
					this.OnBUNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cr", DbType="NVarChar(50)")]
		public string Cr
		{
			get
			{
				return this._Cr;
			}
			set
			{
				if ((this._Cr != value))
				{
					this.OnCrChanging(value);
					this.SendPropertyChanging();
					this._Cr = value;
					this.SendPropertyChanged("Cr");
					this.OnCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chol", DbType="NVarChar(50)")]
		public string Chol
		{
			get
			{
				return this._Chol;
			}
			set
			{
				if ((this._Chol != value))
				{
					this.OnCholChanging(value);
					this.SendPropertyChanging();
					this._Chol = value;
					this.SendPropertyChanged("Chol");
					this.OnCholChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TG", DbType="NVarChar(50)")]
		public string TG
		{
			get
			{
				return this._TG;
			}
			set
			{
				if ((this._TG != value))
				{
					this.OnTGChanging(value);
					this.SendPropertyChanging();
					this._TG = value;
					this.SendPropertyChanged("TG");
					this.OnTGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegimeType", DbType="NVarChar(50)")]
		public string RegimeType
		{
			get
			{
				return this._RegimeType;
			}
			set
			{
				if ((this._RegimeType != value))
				{
					this.OnRegimeTypeChanging(value);
					this.SendPropertyChanging();
					this._RegimeType = value;
					this.SendPropertyChanged("RegimeType");
					this.OnRegimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalorieCount", DbType="NVarChar(50)")]
		public string CalorieCount
		{
			get
			{
				return this._CalorieCount;
			}
			set
			{
				if ((this._CalorieCount != value))
				{
					this.OnCalorieCountChanging(value);
					this.SendPropertyChanging();
					this._CalorieCount = value;
					this.SendPropertyChanged("CalorieCount");
					this.OnCalorieCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMI", DbType="NVarChar(50)")]
		public string BMI
		{
			get
			{
				return this._BMI;
			}
			set
			{
				if ((this._BMI != value))
				{
					this.OnBMIChanging(value);
					this.SendPropertyChanging();
					this._BMI = value;
					this.SendPropertyChanged("BMI");
					this.OnBMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diabet", DbType="NVarChar(50)")]
		public string Diabet
		{
			get
			{
				return this._Diabet;
			}
			set
			{
				if ((this._Diabet != value))
				{
					this.OnDiabetChanging(value);
					this.SendPropertyChanging();
					this._Diabet = value;
					this.SendPropertyChanged("Diabet");
					this.OnDiabetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTN", DbType="NVarChar(50)")]
		public string HTN
		{
			get
			{
				return this._HTN;
			}
			set
			{
				if ((this._HTN != value))
				{
					this.OnHTNChanging(value);
					this.SendPropertyChanging();
					this._HTN = value;
					this.SendPropertyChanged("HTN");
					this.OnHTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IHD", DbType="NVarChar(50)")]
		public string IHD
		{
			get
			{
				return this._IHD;
			}
			set
			{
				if ((this._IHD != value))
				{
					this.OnIHDChanging(value);
					this.SendPropertyChanging();
					this._IHD = value;
					this.SendPropertyChanged("IHD");
					this.OnIHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLP", DbType="NVarChar(50)")]
		public string HLP
		{
			get
			{
				return this._HLP;
			}
			set
			{
				if ((this._HLP != value))
				{
					this.OnHLPChanging(value);
					this.SendPropertyChanging();
					this._HLP = value;
					this.SendPropertyChanged("HLP");
					this.OnHLPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_NutritionConsultant", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.NutritionConsultants.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.NutritionConsultants.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Odiometry")]
	public partial class Odiometry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _OdiometryDate;
		
		private string _OdiometryTime;
		
		private System.Nullable<int> _OdiometryInterpreter;
		
		private System.Nullable<int> _OdiometryDone;
		
		private System.Nullable<byte> _RA250;
		
		private System.Nullable<byte> _RA500;
		
		private System.Nullable<byte> _RA1000;
		
		private System.Nullable<byte> _RA2000;
		
		private System.Nullable<byte> _RA3000;
		
		private System.Nullable<byte> _RA4000;
		
		private System.Nullable<byte> _RA6000;
		
		private System.Nullable<byte> _RA8000;
		
		private System.Nullable<byte> _RS250;
		
		private System.Nullable<byte> _RS500;
		
		private System.Nullable<byte> _RS1000;
		
		private System.Nullable<byte> _RS2000;
		
		private System.Nullable<byte> _RS3000;
		
		private System.Nullable<byte> _RS4000;
		
		private System.Nullable<byte> _RS6000;
		
		private System.Nullable<byte> _RS8000;
		
		private System.Nullable<byte> _LA250;
		
		private System.Nullable<byte> _LA500;
		
		private System.Nullable<byte> _LA1000;
		
		private System.Nullable<byte> _LA2000;
		
		private System.Nullable<byte> _LA3000;
		
		private System.Nullable<byte> _LA4000;
		
		private System.Nullable<byte> _LA6000;
		
		private System.Nullable<byte> _LA8000;
		
		private System.Nullable<byte> _LS250;
		
		private System.Nullable<byte> _LS500;
		
		private System.Nullable<byte> _LS1000;
		
		private System.Nullable<byte> _LS2000;
		
		private System.Nullable<byte> _LS3000;
		
		private System.Nullable<byte> _LS4000;
		
		private System.Nullable<byte> _LS6000;
		
		private System.Nullable<byte> _LS8000;
		
		private string _OdiometryResult;
		
		private string _OdiometryDisorder;
		
		private string _Description;
		
		private string _REarComment;
		
		private string _LEarComment;
		
		private string _REarDisorder;
		
		private string _LEarDisorder;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private string _HearingDetectionDate;
		
		private string _HearingDetectionTime;
		
		private System.Nullable<int> _HearingDetectionInterpreter;
		
		private System.Nullable<int> _HearingDetectionDone;
		
		private string _Tempatometry;
		
		private string _TempatometryD;
		
		private System.Nullable<decimal> _SRTR;
		
		private string _SRTRD;
		
		private System.Nullable<decimal> _SRTL;
		
		private string _SRTLD;
		
		private System.Nullable<decimal> _SDSL;
		
		private string _SDSLD;
		
		private System.Nullable<decimal> _SDSR;
		
		private string _SDSRD;
		
		private string _AutoscopyR;
		
		private string _AutoscopyL;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnOdiometryDateChanging(string value);
    partial void OnOdiometryDateChanged();
    partial void OnOdiometryTimeChanging(string value);
    partial void OnOdiometryTimeChanged();
    partial void OnOdiometryInterpreterChanging(System.Nullable<int> value);
    partial void OnOdiometryInterpreterChanged();
    partial void OnOdiometryDoneChanging(System.Nullable<int> value);
    partial void OnOdiometryDoneChanged();
    partial void OnRA250Changing(System.Nullable<byte> value);
    partial void OnRA250Changed();
    partial void OnRA500Changing(System.Nullable<byte> value);
    partial void OnRA500Changed();
    partial void OnRA1000Changing(System.Nullable<byte> value);
    partial void OnRA1000Changed();
    partial void OnRA2000Changing(System.Nullable<byte> value);
    partial void OnRA2000Changed();
    partial void OnRA3000Changing(System.Nullable<byte> value);
    partial void OnRA3000Changed();
    partial void OnRA4000Changing(System.Nullable<byte> value);
    partial void OnRA4000Changed();
    partial void OnRA6000Changing(System.Nullable<byte> value);
    partial void OnRA6000Changed();
    partial void OnRA8000Changing(System.Nullable<byte> value);
    partial void OnRA8000Changed();
    partial void OnRS250Changing(System.Nullable<byte> value);
    partial void OnRS250Changed();
    partial void OnRS500Changing(System.Nullable<byte> value);
    partial void OnRS500Changed();
    partial void OnRS1000Changing(System.Nullable<byte> value);
    partial void OnRS1000Changed();
    partial void OnRS2000Changing(System.Nullable<byte> value);
    partial void OnRS2000Changed();
    partial void OnRS3000Changing(System.Nullable<byte> value);
    partial void OnRS3000Changed();
    partial void OnRS4000Changing(System.Nullable<byte> value);
    partial void OnRS4000Changed();
    partial void OnRS6000Changing(System.Nullable<byte> value);
    partial void OnRS6000Changed();
    partial void OnRS8000Changing(System.Nullable<byte> value);
    partial void OnRS8000Changed();
    partial void OnLA250Changing(System.Nullable<byte> value);
    partial void OnLA250Changed();
    partial void OnLA500Changing(System.Nullable<byte> value);
    partial void OnLA500Changed();
    partial void OnLA1000Changing(System.Nullable<byte> value);
    partial void OnLA1000Changed();
    partial void OnLA2000Changing(System.Nullable<byte> value);
    partial void OnLA2000Changed();
    partial void OnLA3000Changing(System.Nullable<byte> value);
    partial void OnLA3000Changed();
    partial void OnLA4000Changing(System.Nullable<byte> value);
    partial void OnLA4000Changed();
    partial void OnLA6000Changing(System.Nullable<byte> value);
    partial void OnLA6000Changed();
    partial void OnLA8000Changing(System.Nullable<byte> value);
    partial void OnLA8000Changed();
    partial void OnLS250Changing(System.Nullable<byte> value);
    partial void OnLS250Changed();
    partial void OnLS500Changing(System.Nullable<byte> value);
    partial void OnLS500Changed();
    partial void OnLS1000Changing(System.Nullable<byte> value);
    partial void OnLS1000Changed();
    partial void OnLS2000Changing(System.Nullable<byte> value);
    partial void OnLS2000Changed();
    partial void OnLS3000Changing(System.Nullable<byte> value);
    partial void OnLS3000Changed();
    partial void OnLS4000Changing(System.Nullable<byte> value);
    partial void OnLS4000Changed();
    partial void OnLS6000Changing(System.Nullable<byte> value);
    partial void OnLS6000Changed();
    partial void OnLS8000Changing(System.Nullable<byte> value);
    partial void OnLS8000Changed();
    partial void OnOdiometryResultChanging(string value);
    partial void OnOdiometryResultChanged();
    partial void OnOdiometryDisorderChanging(string value);
    partial void OnOdiometryDisorderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnREarCommentChanging(string value);
    partial void OnREarCommentChanged();
    partial void OnLEarCommentChanging(string value);
    partial void OnLEarCommentChanged();
    partial void OnREarDisorderChanging(string value);
    partial void OnREarDisorderChanged();
    partial void OnLEarDisorderChanging(string value);
    partial void OnLEarDisorderChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnHearingDetectionDateChanging(string value);
    partial void OnHearingDetectionDateChanged();
    partial void OnHearingDetectionTimeChanging(string value);
    partial void OnHearingDetectionTimeChanged();
    partial void OnHearingDetectionInterpreterChanging(System.Nullable<int> value);
    partial void OnHearingDetectionInterpreterChanged();
    partial void OnHearingDetectionDoneChanging(System.Nullable<int> value);
    partial void OnHearingDetectionDoneChanged();
    partial void OnTempatometryChanging(string value);
    partial void OnTempatometryChanged();
    partial void OnTempatometryDChanging(string value);
    partial void OnTempatometryDChanged();
    partial void OnSRTRChanging(System.Nullable<decimal> value);
    partial void OnSRTRChanged();
    partial void OnSRTRDChanging(string value);
    partial void OnSRTRDChanged();
    partial void OnSRTLChanging(System.Nullable<decimal> value);
    partial void OnSRTLChanged();
    partial void OnSRTLDChanging(string value);
    partial void OnSRTLDChanged();
    partial void OnSDSLChanging(System.Nullable<decimal> value);
    partial void OnSDSLChanged();
    partial void OnSDSLDChanging(string value);
    partial void OnSDSLDChanged();
    partial void OnSDSRChanging(System.Nullable<decimal> value);
    partial void OnSDSRChanged();
    partial void OnSDSRDChanging(string value);
    partial void OnSDSRDChanged();
    partial void OnAutoscopyRChanging(string value);
    partial void OnAutoscopyRChanged();
    partial void OnAutoscopyLChanging(string value);
    partial void OnAutoscopyLChanged();
    #endregion
		
		public Odiometry()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdiometryDate", DbType="NChar(10)")]
		public string OdiometryDate
		{
			get
			{
				return this._OdiometryDate;
			}
			set
			{
				if ((this._OdiometryDate != value))
				{
					this.OnOdiometryDateChanging(value);
					this.SendPropertyChanging();
					this._OdiometryDate = value;
					this.SendPropertyChanged("OdiometryDate");
					this.OnOdiometryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdiometryTime", DbType="NChar(5)")]
		public string OdiometryTime
		{
			get
			{
				return this._OdiometryTime;
			}
			set
			{
				if ((this._OdiometryTime != value))
				{
					this.OnOdiometryTimeChanging(value);
					this.SendPropertyChanging();
					this._OdiometryTime = value;
					this.SendPropertyChanged("OdiometryTime");
					this.OnOdiometryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdiometryInterpreter", DbType="Int")]
		public System.Nullable<int> OdiometryInterpreter
		{
			get
			{
				return this._OdiometryInterpreter;
			}
			set
			{
				if ((this._OdiometryInterpreter != value))
				{
					this.OnOdiometryInterpreterChanging(value);
					this.SendPropertyChanging();
					this._OdiometryInterpreter = value;
					this.SendPropertyChanged("OdiometryInterpreter");
					this.OnOdiometryInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdiometryDone", DbType="Int")]
		public System.Nullable<int> OdiometryDone
		{
			get
			{
				return this._OdiometryDone;
			}
			set
			{
				if ((this._OdiometryDone != value))
				{
					this.OnOdiometryDoneChanging(value);
					this.SendPropertyChanging();
					this._OdiometryDone = value;
					this.SendPropertyChanged("OdiometryDone");
					this.OnOdiometryDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA250", DbType="TinyInt")]
		public System.Nullable<byte> RA250
		{
			get
			{
				return this._RA250;
			}
			set
			{
				if ((this._RA250 != value))
				{
					this.OnRA250Changing(value);
					this.SendPropertyChanging();
					this._RA250 = value;
					this.SendPropertyChanged("RA250");
					this.OnRA250Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA500", DbType="TinyInt")]
		public System.Nullable<byte> RA500
		{
			get
			{
				return this._RA500;
			}
			set
			{
				if ((this._RA500 != value))
				{
					this.OnRA500Changing(value);
					this.SendPropertyChanging();
					this._RA500 = value;
					this.SendPropertyChanged("RA500");
					this.OnRA500Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA1000", DbType="TinyInt")]
		public System.Nullable<byte> RA1000
		{
			get
			{
				return this._RA1000;
			}
			set
			{
				if ((this._RA1000 != value))
				{
					this.OnRA1000Changing(value);
					this.SendPropertyChanging();
					this._RA1000 = value;
					this.SendPropertyChanged("RA1000");
					this.OnRA1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA2000", DbType="TinyInt")]
		public System.Nullable<byte> RA2000
		{
			get
			{
				return this._RA2000;
			}
			set
			{
				if ((this._RA2000 != value))
				{
					this.OnRA2000Changing(value);
					this.SendPropertyChanging();
					this._RA2000 = value;
					this.SendPropertyChanged("RA2000");
					this.OnRA2000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA3000", DbType="TinyInt")]
		public System.Nullable<byte> RA3000
		{
			get
			{
				return this._RA3000;
			}
			set
			{
				if ((this._RA3000 != value))
				{
					this.OnRA3000Changing(value);
					this.SendPropertyChanging();
					this._RA3000 = value;
					this.SendPropertyChanged("RA3000");
					this.OnRA3000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA4000", DbType="TinyInt")]
		public System.Nullable<byte> RA4000
		{
			get
			{
				return this._RA4000;
			}
			set
			{
				if ((this._RA4000 != value))
				{
					this.OnRA4000Changing(value);
					this.SendPropertyChanging();
					this._RA4000 = value;
					this.SendPropertyChanged("RA4000");
					this.OnRA4000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA6000", DbType="TinyInt")]
		public System.Nullable<byte> RA6000
		{
			get
			{
				return this._RA6000;
			}
			set
			{
				if ((this._RA6000 != value))
				{
					this.OnRA6000Changing(value);
					this.SendPropertyChanging();
					this._RA6000 = value;
					this.SendPropertyChanged("RA6000");
					this.OnRA6000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA8000", DbType="TinyInt")]
		public System.Nullable<byte> RA8000
		{
			get
			{
				return this._RA8000;
			}
			set
			{
				if ((this._RA8000 != value))
				{
					this.OnRA8000Changing(value);
					this.SendPropertyChanging();
					this._RA8000 = value;
					this.SendPropertyChanged("RA8000");
					this.OnRA8000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS250", DbType="TinyInt")]
		public System.Nullable<byte> RS250
		{
			get
			{
				return this._RS250;
			}
			set
			{
				if ((this._RS250 != value))
				{
					this.OnRS250Changing(value);
					this.SendPropertyChanging();
					this._RS250 = value;
					this.SendPropertyChanged("RS250");
					this.OnRS250Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS500", DbType="TinyInt")]
		public System.Nullable<byte> RS500
		{
			get
			{
				return this._RS500;
			}
			set
			{
				if ((this._RS500 != value))
				{
					this.OnRS500Changing(value);
					this.SendPropertyChanging();
					this._RS500 = value;
					this.SendPropertyChanged("RS500");
					this.OnRS500Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS1000", DbType="TinyInt")]
		public System.Nullable<byte> RS1000
		{
			get
			{
				return this._RS1000;
			}
			set
			{
				if ((this._RS1000 != value))
				{
					this.OnRS1000Changing(value);
					this.SendPropertyChanging();
					this._RS1000 = value;
					this.SendPropertyChanged("RS1000");
					this.OnRS1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS2000", DbType="TinyInt")]
		public System.Nullable<byte> RS2000
		{
			get
			{
				return this._RS2000;
			}
			set
			{
				if ((this._RS2000 != value))
				{
					this.OnRS2000Changing(value);
					this.SendPropertyChanging();
					this._RS2000 = value;
					this.SendPropertyChanged("RS2000");
					this.OnRS2000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS3000", DbType="TinyInt")]
		public System.Nullable<byte> RS3000
		{
			get
			{
				return this._RS3000;
			}
			set
			{
				if ((this._RS3000 != value))
				{
					this.OnRS3000Changing(value);
					this.SendPropertyChanging();
					this._RS3000 = value;
					this.SendPropertyChanged("RS3000");
					this.OnRS3000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS4000", DbType="TinyInt")]
		public System.Nullable<byte> RS4000
		{
			get
			{
				return this._RS4000;
			}
			set
			{
				if ((this._RS4000 != value))
				{
					this.OnRS4000Changing(value);
					this.SendPropertyChanging();
					this._RS4000 = value;
					this.SendPropertyChanged("RS4000");
					this.OnRS4000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS6000", DbType="TinyInt")]
		public System.Nullable<byte> RS6000
		{
			get
			{
				return this._RS6000;
			}
			set
			{
				if ((this._RS6000 != value))
				{
					this.OnRS6000Changing(value);
					this.SendPropertyChanging();
					this._RS6000 = value;
					this.SendPropertyChanged("RS6000");
					this.OnRS6000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS8000", DbType="TinyInt")]
		public System.Nullable<byte> RS8000
		{
			get
			{
				return this._RS8000;
			}
			set
			{
				if ((this._RS8000 != value))
				{
					this.OnRS8000Changing(value);
					this.SendPropertyChanging();
					this._RS8000 = value;
					this.SendPropertyChanged("RS8000");
					this.OnRS8000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA250", DbType="TinyInt")]
		public System.Nullable<byte> LA250
		{
			get
			{
				return this._LA250;
			}
			set
			{
				if ((this._LA250 != value))
				{
					this.OnLA250Changing(value);
					this.SendPropertyChanging();
					this._LA250 = value;
					this.SendPropertyChanged("LA250");
					this.OnLA250Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA500", DbType="TinyInt")]
		public System.Nullable<byte> LA500
		{
			get
			{
				return this._LA500;
			}
			set
			{
				if ((this._LA500 != value))
				{
					this.OnLA500Changing(value);
					this.SendPropertyChanging();
					this._LA500 = value;
					this.SendPropertyChanged("LA500");
					this.OnLA500Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA1000", DbType="TinyInt")]
		public System.Nullable<byte> LA1000
		{
			get
			{
				return this._LA1000;
			}
			set
			{
				if ((this._LA1000 != value))
				{
					this.OnLA1000Changing(value);
					this.SendPropertyChanging();
					this._LA1000 = value;
					this.SendPropertyChanged("LA1000");
					this.OnLA1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA2000", DbType="TinyInt")]
		public System.Nullable<byte> LA2000
		{
			get
			{
				return this._LA2000;
			}
			set
			{
				if ((this._LA2000 != value))
				{
					this.OnLA2000Changing(value);
					this.SendPropertyChanging();
					this._LA2000 = value;
					this.SendPropertyChanged("LA2000");
					this.OnLA2000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA3000", DbType="TinyInt")]
		public System.Nullable<byte> LA3000
		{
			get
			{
				return this._LA3000;
			}
			set
			{
				if ((this._LA3000 != value))
				{
					this.OnLA3000Changing(value);
					this.SendPropertyChanging();
					this._LA3000 = value;
					this.SendPropertyChanged("LA3000");
					this.OnLA3000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA4000", DbType="TinyInt")]
		public System.Nullable<byte> LA4000
		{
			get
			{
				return this._LA4000;
			}
			set
			{
				if ((this._LA4000 != value))
				{
					this.OnLA4000Changing(value);
					this.SendPropertyChanging();
					this._LA4000 = value;
					this.SendPropertyChanged("LA4000");
					this.OnLA4000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA6000", DbType="TinyInt")]
		public System.Nullable<byte> LA6000
		{
			get
			{
				return this._LA6000;
			}
			set
			{
				if ((this._LA6000 != value))
				{
					this.OnLA6000Changing(value);
					this.SendPropertyChanging();
					this._LA6000 = value;
					this.SendPropertyChanged("LA6000");
					this.OnLA6000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA8000", DbType="TinyInt")]
		public System.Nullable<byte> LA8000
		{
			get
			{
				return this._LA8000;
			}
			set
			{
				if ((this._LA8000 != value))
				{
					this.OnLA8000Changing(value);
					this.SendPropertyChanging();
					this._LA8000 = value;
					this.SendPropertyChanged("LA8000");
					this.OnLA8000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS250", DbType="TinyInt")]
		public System.Nullable<byte> LS250
		{
			get
			{
				return this._LS250;
			}
			set
			{
				if ((this._LS250 != value))
				{
					this.OnLS250Changing(value);
					this.SendPropertyChanging();
					this._LS250 = value;
					this.SendPropertyChanged("LS250");
					this.OnLS250Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS500", DbType="TinyInt")]
		public System.Nullable<byte> LS500
		{
			get
			{
				return this._LS500;
			}
			set
			{
				if ((this._LS500 != value))
				{
					this.OnLS500Changing(value);
					this.SendPropertyChanging();
					this._LS500 = value;
					this.SendPropertyChanged("LS500");
					this.OnLS500Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS1000", DbType="TinyInt")]
		public System.Nullable<byte> LS1000
		{
			get
			{
				return this._LS1000;
			}
			set
			{
				if ((this._LS1000 != value))
				{
					this.OnLS1000Changing(value);
					this.SendPropertyChanging();
					this._LS1000 = value;
					this.SendPropertyChanged("LS1000");
					this.OnLS1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS2000", DbType="TinyInt")]
		public System.Nullable<byte> LS2000
		{
			get
			{
				return this._LS2000;
			}
			set
			{
				if ((this._LS2000 != value))
				{
					this.OnLS2000Changing(value);
					this.SendPropertyChanging();
					this._LS2000 = value;
					this.SendPropertyChanged("LS2000");
					this.OnLS2000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS3000", DbType="TinyInt")]
		public System.Nullable<byte> LS3000
		{
			get
			{
				return this._LS3000;
			}
			set
			{
				if ((this._LS3000 != value))
				{
					this.OnLS3000Changing(value);
					this.SendPropertyChanging();
					this._LS3000 = value;
					this.SendPropertyChanged("LS3000");
					this.OnLS3000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS4000", DbType="TinyInt")]
		public System.Nullable<byte> LS4000
		{
			get
			{
				return this._LS4000;
			}
			set
			{
				if ((this._LS4000 != value))
				{
					this.OnLS4000Changing(value);
					this.SendPropertyChanging();
					this._LS4000 = value;
					this.SendPropertyChanged("LS4000");
					this.OnLS4000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS6000", DbType="TinyInt")]
		public System.Nullable<byte> LS6000
		{
			get
			{
				return this._LS6000;
			}
			set
			{
				if ((this._LS6000 != value))
				{
					this.OnLS6000Changing(value);
					this.SendPropertyChanging();
					this._LS6000 = value;
					this.SendPropertyChanged("LS6000");
					this.OnLS6000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LS8000", DbType="TinyInt")]
		public System.Nullable<byte> LS8000
		{
			get
			{
				return this._LS8000;
			}
			set
			{
				if ((this._LS8000 != value))
				{
					this.OnLS8000Changing(value);
					this.SendPropertyChanging();
					this._LS8000 = value;
					this.SendPropertyChanged("LS8000");
					this.OnLS8000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdiometryResult", DbType="NVarChar(50)")]
		public string OdiometryResult
		{
			get
			{
				return this._OdiometryResult;
			}
			set
			{
				if ((this._OdiometryResult != value))
				{
					this.OnOdiometryResultChanging(value);
					this.SendPropertyChanging();
					this._OdiometryResult = value;
					this.SendPropertyChanged("OdiometryResult");
					this.OnOdiometryResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdiometryDisorder", DbType="NVarChar(20)")]
		public string OdiometryDisorder
		{
			get
			{
				return this._OdiometryDisorder;
			}
			set
			{
				if ((this._OdiometryDisorder != value))
				{
					this.OnOdiometryDisorderChanging(value);
					this.SendPropertyChanging();
					this._OdiometryDisorder = value;
					this.SendPropertyChanged("OdiometryDisorder");
					this.OnOdiometryDisorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REarComment", DbType="NVarChar(MAX)")]
		public string REarComment
		{
			get
			{
				return this._REarComment;
			}
			set
			{
				if ((this._REarComment != value))
				{
					this.OnREarCommentChanging(value);
					this.SendPropertyChanging();
					this._REarComment = value;
					this.SendPropertyChanged("REarComment");
					this.OnREarCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEarComment", DbType="NVarChar(MAX)")]
		public string LEarComment
		{
			get
			{
				return this._LEarComment;
			}
			set
			{
				if ((this._LEarComment != value))
				{
					this.OnLEarCommentChanging(value);
					this.SendPropertyChanging();
					this._LEarComment = value;
					this.SendPropertyChanged("LEarComment");
					this.OnLEarCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REarDisorder", DbType="NVarChar(50)")]
		public string REarDisorder
		{
			get
			{
				return this._REarDisorder;
			}
			set
			{
				if ((this._REarDisorder != value))
				{
					this.OnREarDisorderChanging(value);
					this.SendPropertyChanging();
					this._REarDisorder = value;
					this.SendPropertyChanged("REarDisorder");
					this.OnREarDisorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEarDisorder", DbType="NVarChar(50)")]
		public string LEarDisorder
		{
			get
			{
				return this._LEarDisorder;
			}
			set
			{
				if ((this._LEarDisorder != value))
				{
					this.OnLEarDisorderChanging(value);
					this.SendPropertyChanging();
					this._LEarDisorder = value;
					this.SendPropertyChanged("LEarDisorder");
					this.OnLEarDisorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearingDetectionDate", DbType="NChar(10)")]
		public string HearingDetectionDate
		{
			get
			{
				return this._HearingDetectionDate;
			}
			set
			{
				if ((this._HearingDetectionDate != value))
				{
					this.OnHearingDetectionDateChanging(value);
					this.SendPropertyChanging();
					this._HearingDetectionDate = value;
					this.SendPropertyChanged("HearingDetectionDate");
					this.OnHearingDetectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearingDetectionTime", DbType="NChar(5)")]
		public string HearingDetectionTime
		{
			get
			{
				return this._HearingDetectionTime;
			}
			set
			{
				if ((this._HearingDetectionTime != value))
				{
					this.OnHearingDetectionTimeChanging(value);
					this.SendPropertyChanging();
					this._HearingDetectionTime = value;
					this.SendPropertyChanged("HearingDetectionTime");
					this.OnHearingDetectionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearingDetectionInterpreter", DbType="Int")]
		public System.Nullable<int> HearingDetectionInterpreter
		{
			get
			{
				return this._HearingDetectionInterpreter;
			}
			set
			{
				if ((this._HearingDetectionInterpreter != value))
				{
					this.OnHearingDetectionInterpreterChanging(value);
					this.SendPropertyChanging();
					this._HearingDetectionInterpreter = value;
					this.SendPropertyChanged("HearingDetectionInterpreter");
					this.OnHearingDetectionInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HearingDetectionDone", DbType="Int")]
		public System.Nullable<int> HearingDetectionDone
		{
			get
			{
				return this._HearingDetectionDone;
			}
			set
			{
				if ((this._HearingDetectionDone != value))
				{
					this.OnHearingDetectionDoneChanging(value);
					this.SendPropertyChanging();
					this._HearingDetectionDone = value;
					this.SendPropertyChanged("HearingDetectionDone");
					this.OnHearingDetectionDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tempatometry", DbType="NVarChar(50)")]
		public string Tempatometry
		{
			get
			{
				return this._Tempatometry;
			}
			set
			{
				if ((this._Tempatometry != value))
				{
					this.OnTempatometryChanging(value);
					this.SendPropertyChanging();
					this._Tempatometry = value;
					this.SendPropertyChanged("Tempatometry");
					this.OnTempatometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempatometryD", DbType="NVarChar(MAX)")]
		public string TempatometryD
		{
			get
			{
				return this._TempatometryD;
			}
			set
			{
				if ((this._TempatometryD != value))
				{
					this.OnTempatometryDChanging(value);
					this.SendPropertyChanging();
					this._TempatometryD = value;
					this.SendPropertyChanged("TempatometryD");
					this.OnTempatometryDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRTR", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SRTR
		{
			get
			{
				return this._SRTR;
			}
			set
			{
				if ((this._SRTR != value))
				{
					this.OnSRTRChanging(value);
					this.SendPropertyChanging();
					this._SRTR = value;
					this.SendPropertyChanged("SRTR");
					this.OnSRTRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRTRD", DbType="NVarChar(MAX)")]
		public string SRTRD
		{
			get
			{
				return this._SRTRD;
			}
			set
			{
				if ((this._SRTRD != value))
				{
					this.OnSRTRDChanging(value);
					this.SendPropertyChanging();
					this._SRTRD = value;
					this.SendPropertyChanged("SRTRD");
					this.OnSRTRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRTL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SRTL
		{
			get
			{
				return this._SRTL;
			}
			set
			{
				if ((this._SRTL != value))
				{
					this.OnSRTLChanging(value);
					this.SendPropertyChanging();
					this._SRTL = value;
					this.SendPropertyChanged("SRTL");
					this.OnSRTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRTLD", DbType="NVarChar(MAX)")]
		public string SRTLD
		{
			get
			{
				return this._SRTLD;
			}
			set
			{
				if ((this._SRTLD != value))
				{
					this.OnSRTLDChanging(value);
					this.SendPropertyChanging();
					this._SRTLD = value;
					this.SendPropertyChanged("SRTLD");
					this.OnSRTLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDSL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SDSL
		{
			get
			{
				return this._SDSL;
			}
			set
			{
				if ((this._SDSL != value))
				{
					this.OnSDSLChanging(value);
					this.SendPropertyChanging();
					this._SDSL = value;
					this.SendPropertyChanged("SDSL");
					this.OnSDSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDSLD", DbType="NVarChar(MAX)")]
		public string SDSLD
		{
			get
			{
				return this._SDSLD;
			}
			set
			{
				if ((this._SDSLD != value))
				{
					this.OnSDSLDChanging(value);
					this.SendPropertyChanging();
					this._SDSLD = value;
					this.SendPropertyChanged("SDSLD");
					this.OnSDSLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDSR", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SDSR
		{
			get
			{
				return this._SDSR;
			}
			set
			{
				if ((this._SDSR != value))
				{
					this.OnSDSRChanging(value);
					this.SendPropertyChanging();
					this._SDSR = value;
					this.SendPropertyChanged("SDSR");
					this.OnSDSRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDSRD", DbType="NVarChar(MAX)")]
		public string SDSRD
		{
			get
			{
				return this._SDSRD;
			}
			set
			{
				if ((this._SDSRD != value))
				{
					this.OnSDSRDChanging(value);
					this.SendPropertyChanging();
					this._SDSRD = value;
					this.SendPropertyChanged("SDSRD");
					this.OnSDSRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoscopyR", DbType="NVarChar(50)")]
		public string AutoscopyR
		{
			get
			{
				return this._AutoscopyR;
			}
			set
			{
				if ((this._AutoscopyR != value))
				{
					this.OnAutoscopyRChanging(value);
					this.SendPropertyChanging();
					this._AutoscopyR = value;
					this.SendPropertyChanged("AutoscopyR");
					this.OnAutoscopyRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoscopyL", DbType="NVarChar(50)")]
		public string AutoscopyL
		{
			get
			{
				return this._AutoscopyL;
			}
			set
			{
				if ((this._AutoscopyL != value))
				{
					this.OnAutoscopyLChanging(value);
					this.SendPropertyChanging();
					this._AutoscopyL = value;
					this.SendPropertyChanged("AutoscopyL");
					this.OnAutoscopyLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Odiometry", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Odiometries.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Odiometries.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Optometry")]
	public partial class Optometry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _OptometryDate;
		
		private string _OptometryTime;
		
		private System.Nullable<int> _OptometryInterpreter;
		
		private System.Nullable<int> _OptometryDone;
		
		private System.Nullable<int> _Omgh;
		
		private string _OmghD;
		
		private string _WithGlassDate;
		
		private string _WithGlassTime;
		
		private System.Nullable<int> _WithGlassInterpreter;
		
		private System.Nullable<int> _WithGlassDone;
		
		private System.Nullable<byte> _WithGlassR;
		
		private string _WithGlassRD;
		
		private System.Nullable<byte> _WithGlassL;
		
		private string _WithGlassLD;
		
		private string _VisionDate;
		
		private string _VisionTime;
		
		private System.Nullable<int> _VisionInterpreter;
		
		private System.Nullable<int> _VisionDone;
		
		private System.Nullable<byte> _VisionR;
		
		private string _VisionRD;
		
		private System.Nullable<byte> _VisionL;
		
		private string _VisionLD;
		
		private System.Nullable<bool> _VisionNear;
		
		private string _ColorVisionDate;
		
		private string _ColorVisionTime;
		
		private System.Nullable<int> _ColorVisionInterpreter;
		
		private System.Nullable<int> _ColorVisionDone;
		
		private System.Nullable<bool> _ColorVisionR;
		
		private string _ColorVisionRD;
		
		private System.Nullable<bool> _ColorVisionL;
		
		private string _ColorVisionLD;
		
		private string _VisionFieldDate;
		
		private string _VisionFieldTime;
		
		private System.Nullable<int> _VisionFieldInterpreter;
		
		private System.Nullable<int> _VisionFieldDone;
		
		private System.Nullable<bool> _VisionFieldUpL;
		
		private string _VisionFieldUpLD;
		
		private System.Nullable<bool> _VisionFieldDownL;
		
		private string _VisionFieldDownLD;
		
		private System.Nullable<bool> _VisionFieldLetralL;
		
		private string _VisionFieldLetralLD;
		
		private System.Nullable<bool> _VisionFieldMedialL;
		
		private string _VisionFieldMedialLD;
		
		private System.Nullable<bool> _VisionFieldResultL;
		
		private string _VisionFieldResultLD;
		
		private System.Nullable<bool> _VisionFieldUpR;
		
		private string _VisionFieldUpRD;
		
		private System.Nullable<bool> _VisionFieldDownR;
		
		private string _VisionFieldDownRD;
		
		private System.Nullable<bool> _VisionFieldLetralR;
		
		private string _VisionFieldLetralRD;
		
		private System.Nullable<bool> _VisionFieldMedialR;
		
		private string _VisionFieldMedialRD;
		
		private System.Nullable<bool> _VisionFieldResultR;
		
		private string _VisionFieldResultRD;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private System.Nullable<int> _NearVisionWithGlassL;
		
		private System.Nullable<int> _NearVisionWithGlassR;
		
		private System.Nullable<int> _NearVisionWithoutGL;
		
		private System.Nullable<int> _NearVisionWithoutGR;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnOptometryDateChanging(string value);
    partial void OnOptometryDateChanged();
    partial void OnOptometryTimeChanging(string value);
    partial void OnOptometryTimeChanged();
    partial void OnOptometryInterpreterChanging(System.Nullable<int> value);
    partial void OnOptometryInterpreterChanged();
    partial void OnOptometryDoneChanging(System.Nullable<int> value);
    partial void OnOptometryDoneChanged();
    partial void OnOmghChanging(System.Nullable<int> value);
    partial void OnOmghChanged();
    partial void OnOmghDChanging(string value);
    partial void OnOmghDChanged();
    partial void OnWithGlassDateChanging(string value);
    partial void OnWithGlassDateChanged();
    partial void OnWithGlassTimeChanging(string value);
    partial void OnWithGlassTimeChanged();
    partial void OnWithGlassInterpreterChanging(System.Nullable<int> value);
    partial void OnWithGlassInterpreterChanged();
    partial void OnWithGlassDoneChanging(System.Nullable<int> value);
    partial void OnWithGlassDoneChanged();
    partial void OnWithGlassRChanging(System.Nullable<byte> value);
    partial void OnWithGlassRChanged();
    partial void OnWithGlassRDChanging(string value);
    partial void OnWithGlassRDChanged();
    partial void OnWithGlassLChanging(System.Nullable<byte> value);
    partial void OnWithGlassLChanged();
    partial void OnWithGlassLDChanging(string value);
    partial void OnWithGlassLDChanged();
    partial void OnVisionDateChanging(string value);
    partial void OnVisionDateChanged();
    partial void OnVisionTimeChanging(string value);
    partial void OnVisionTimeChanged();
    partial void OnVisionInterpreterChanging(System.Nullable<int> value);
    partial void OnVisionInterpreterChanged();
    partial void OnVisionDoneChanging(System.Nullable<int> value);
    partial void OnVisionDoneChanged();
    partial void OnVisionRChanging(System.Nullable<byte> value);
    partial void OnVisionRChanged();
    partial void OnVisionRDChanging(string value);
    partial void OnVisionRDChanged();
    partial void OnVisionLChanging(System.Nullable<byte> value);
    partial void OnVisionLChanged();
    partial void OnVisionLDChanging(string value);
    partial void OnVisionLDChanged();
    partial void OnVisionNearChanging(System.Nullable<bool> value);
    partial void OnVisionNearChanged();
    partial void OnColorVisionDateChanging(string value);
    partial void OnColorVisionDateChanged();
    partial void OnColorVisionTimeChanging(string value);
    partial void OnColorVisionTimeChanged();
    partial void OnColorVisionInterpreterChanging(System.Nullable<int> value);
    partial void OnColorVisionInterpreterChanged();
    partial void OnColorVisionDoneChanging(System.Nullable<int> value);
    partial void OnColorVisionDoneChanged();
    partial void OnColorVisionRChanging(System.Nullable<bool> value);
    partial void OnColorVisionRChanged();
    partial void OnColorVisionRDChanging(string value);
    partial void OnColorVisionRDChanged();
    partial void OnColorVisionLChanging(System.Nullable<bool> value);
    partial void OnColorVisionLChanged();
    partial void OnColorVisionLDChanging(string value);
    partial void OnColorVisionLDChanged();
    partial void OnVisionFieldDateChanging(string value);
    partial void OnVisionFieldDateChanged();
    partial void OnVisionFieldTimeChanging(string value);
    partial void OnVisionFieldTimeChanged();
    partial void OnVisionFieldInterpreterChanging(System.Nullable<int> value);
    partial void OnVisionFieldInterpreterChanged();
    partial void OnVisionFieldDoneChanging(System.Nullable<int> value);
    partial void OnVisionFieldDoneChanged();
    partial void OnVisionFieldUpLChanging(System.Nullable<bool> value);
    partial void OnVisionFieldUpLChanged();
    partial void OnVisionFieldUpLDChanging(string value);
    partial void OnVisionFieldUpLDChanged();
    partial void OnVisionFieldDownLChanging(System.Nullable<bool> value);
    partial void OnVisionFieldDownLChanged();
    partial void OnVisionFieldDownLDChanging(string value);
    partial void OnVisionFieldDownLDChanged();
    partial void OnVisionFieldLetralLChanging(System.Nullable<bool> value);
    partial void OnVisionFieldLetralLChanged();
    partial void OnVisionFieldLetralLDChanging(string value);
    partial void OnVisionFieldLetralLDChanged();
    partial void OnVisionFieldMedialLChanging(System.Nullable<bool> value);
    partial void OnVisionFieldMedialLChanged();
    partial void OnVisionFieldMedialLDChanging(string value);
    partial void OnVisionFieldMedialLDChanged();
    partial void OnVisionFieldResultLChanging(System.Nullable<bool> value);
    partial void OnVisionFieldResultLChanged();
    partial void OnVisionFieldResultLDChanging(string value);
    partial void OnVisionFieldResultLDChanged();
    partial void OnVisionFieldUpRChanging(System.Nullable<bool> value);
    partial void OnVisionFieldUpRChanged();
    partial void OnVisionFieldUpRDChanging(string value);
    partial void OnVisionFieldUpRDChanged();
    partial void OnVisionFieldDownRChanging(System.Nullable<bool> value);
    partial void OnVisionFieldDownRChanged();
    partial void OnVisionFieldDownRDChanging(string value);
    partial void OnVisionFieldDownRDChanged();
    partial void OnVisionFieldLetralRChanging(System.Nullable<bool> value);
    partial void OnVisionFieldLetralRChanged();
    partial void OnVisionFieldLetralRDChanging(string value);
    partial void OnVisionFieldLetralRDChanged();
    partial void OnVisionFieldMedialRChanging(System.Nullable<bool> value);
    partial void OnVisionFieldMedialRChanged();
    partial void OnVisionFieldMedialRDChanging(string value);
    partial void OnVisionFieldMedialRDChanged();
    partial void OnVisionFieldResultRChanging(System.Nullable<bool> value);
    partial void OnVisionFieldResultRChanged();
    partial void OnVisionFieldResultRDChanging(string value);
    partial void OnVisionFieldResultRDChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnNearVisionWithGlassLChanging(System.Nullable<int> value);
    partial void OnNearVisionWithGlassLChanged();
    partial void OnNearVisionWithGlassRChanging(System.Nullable<int> value);
    partial void OnNearVisionWithGlassRChanged();
    partial void OnNearVisionWithoutGLChanging(System.Nullable<int> value);
    partial void OnNearVisionWithoutGLChanged();
    partial void OnNearVisionWithoutGRChanging(System.Nullable<int> value);
    partial void OnNearVisionWithoutGRChanged();
    #endregion
		
		public Optometry()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryDate", DbType="NChar(10)")]
		public string OptometryDate
		{
			get
			{
				return this._OptometryDate;
			}
			set
			{
				if ((this._OptometryDate != value))
				{
					this.OnOptometryDateChanging(value);
					this.SendPropertyChanging();
					this._OptometryDate = value;
					this.SendPropertyChanged("OptometryDate");
					this.OnOptometryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryTime", DbType="NChar(5)")]
		public string OptometryTime
		{
			get
			{
				return this._OptometryTime;
			}
			set
			{
				if ((this._OptometryTime != value))
				{
					this.OnOptometryTimeChanging(value);
					this.SendPropertyChanging();
					this._OptometryTime = value;
					this.SendPropertyChanged("OptometryTime");
					this.OnOptometryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryInterpreter", DbType="Int")]
		public System.Nullable<int> OptometryInterpreter
		{
			get
			{
				return this._OptometryInterpreter;
			}
			set
			{
				if ((this._OptometryInterpreter != value))
				{
					this.OnOptometryInterpreterChanging(value);
					this.SendPropertyChanging();
					this._OptometryInterpreter = value;
					this.SendPropertyChanged("OptometryInterpreter");
					this.OnOptometryInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryDone", DbType="Int")]
		public System.Nullable<int> OptometryDone
		{
			get
			{
				return this._OptometryDone;
			}
			set
			{
				if ((this._OptometryDone != value))
				{
					this.OnOptometryDoneChanging(value);
					this.SendPropertyChanging();
					this._OptometryDone = value;
					this.SendPropertyChanged("OptometryDone");
					this.OnOptometryDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Omgh", DbType="Int")]
		public System.Nullable<int> Omgh
		{
			get
			{
				return this._Omgh;
			}
			set
			{
				if ((this._Omgh != value))
				{
					this.OnOmghChanging(value);
					this.SendPropertyChanging();
					this._Omgh = value;
					this.SendPropertyChanged("Omgh");
					this.OnOmghChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OmghD", DbType="NVarChar(MAX)")]
		public string OmghD
		{
			get
			{
				return this._OmghD;
			}
			set
			{
				if ((this._OmghD != value))
				{
					this.OnOmghDChanging(value);
					this.SendPropertyChanging();
					this._OmghD = value;
					this.SendPropertyChanged("OmghD");
					this.OnOmghDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassDate", DbType="NChar(10)")]
		public string WithGlassDate
		{
			get
			{
				return this._WithGlassDate;
			}
			set
			{
				if ((this._WithGlassDate != value))
				{
					this.OnWithGlassDateChanging(value);
					this.SendPropertyChanging();
					this._WithGlassDate = value;
					this.SendPropertyChanged("WithGlassDate");
					this.OnWithGlassDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassTime", DbType="NChar(5)")]
		public string WithGlassTime
		{
			get
			{
				return this._WithGlassTime;
			}
			set
			{
				if ((this._WithGlassTime != value))
				{
					this.OnWithGlassTimeChanging(value);
					this.SendPropertyChanging();
					this._WithGlassTime = value;
					this.SendPropertyChanged("WithGlassTime");
					this.OnWithGlassTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassInterpreter", DbType="Int")]
		public System.Nullable<int> WithGlassInterpreter
		{
			get
			{
				return this._WithGlassInterpreter;
			}
			set
			{
				if ((this._WithGlassInterpreter != value))
				{
					this.OnWithGlassInterpreterChanging(value);
					this.SendPropertyChanging();
					this._WithGlassInterpreter = value;
					this.SendPropertyChanged("WithGlassInterpreter");
					this.OnWithGlassInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassDone", DbType="Int")]
		public System.Nullable<int> WithGlassDone
		{
			get
			{
				return this._WithGlassDone;
			}
			set
			{
				if ((this._WithGlassDone != value))
				{
					this.OnWithGlassDoneChanging(value);
					this.SendPropertyChanging();
					this._WithGlassDone = value;
					this.SendPropertyChanged("WithGlassDone");
					this.OnWithGlassDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassR", DbType="TinyInt")]
		public System.Nullable<byte> WithGlassR
		{
			get
			{
				return this._WithGlassR;
			}
			set
			{
				if ((this._WithGlassR != value))
				{
					this.OnWithGlassRChanging(value);
					this.SendPropertyChanging();
					this._WithGlassR = value;
					this.SendPropertyChanged("WithGlassR");
					this.OnWithGlassRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassRD", DbType="NVarChar(MAX)")]
		public string WithGlassRD
		{
			get
			{
				return this._WithGlassRD;
			}
			set
			{
				if ((this._WithGlassRD != value))
				{
					this.OnWithGlassRDChanging(value);
					this.SendPropertyChanging();
					this._WithGlassRD = value;
					this.SendPropertyChanged("WithGlassRD");
					this.OnWithGlassRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassL", DbType="TinyInt")]
		public System.Nullable<byte> WithGlassL
		{
			get
			{
				return this._WithGlassL;
			}
			set
			{
				if ((this._WithGlassL != value))
				{
					this.OnWithGlassLChanging(value);
					this.SendPropertyChanging();
					this._WithGlassL = value;
					this.SendPropertyChanged("WithGlassL");
					this.OnWithGlassLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithGlassLD", DbType="NVarChar(MAX)")]
		public string WithGlassLD
		{
			get
			{
				return this._WithGlassLD;
			}
			set
			{
				if ((this._WithGlassLD != value))
				{
					this.OnWithGlassLDChanging(value);
					this.SendPropertyChanging();
					this._WithGlassLD = value;
					this.SendPropertyChanged("WithGlassLD");
					this.OnWithGlassLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionDate", DbType="NChar(10)")]
		public string VisionDate
		{
			get
			{
				return this._VisionDate;
			}
			set
			{
				if ((this._VisionDate != value))
				{
					this.OnVisionDateChanging(value);
					this.SendPropertyChanging();
					this._VisionDate = value;
					this.SendPropertyChanged("VisionDate");
					this.OnVisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionTime", DbType="NChar(5)")]
		public string VisionTime
		{
			get
			{
				return this._VisionTime;
			}
			set
			{
				if ((this._VisionTime != value))
				{
					this.OnVisionTimeChanging(value);
					this.SendPropertyChanging();
					this._VisionTime = value;
					this.SendPropertyChanged("VisionTime");
					this.OnVisionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionInterpreter", DbType="Int")]
		public System.Nullable<int> VisionInterpreter
		{
			get
			{
				return this._VisionInterpreter;
			}
			set
			{
				if ((this._VisionInterpreter != value))
				{
					this.OnVisionInterpreterChanging(value);
					this.SendPropertyChanging();
					this._VisionInterpreter = value;
					this.SendPropertyChanged("VisionInterpreter");
					this.OnVisionInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionDone", DbType="Int")]
		public System.Nullable<int> VisionDone
		{
			get
			{
				return this._VisionDone;
			}
			set
			{
				if ((this._VisionDone != value))
				{
					this.OnVisionDoneChanging(value);
					this.SendPropertyChanging();
					this._VisionDone = value;
					this.SendPropertyChanged("VisionDone");
					this.OnVisionDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionR", DbType="TinyInt")]
		public System.Nullable<byte> VisionR
		{
			get
			{
				return this._VisionR;
			}
			set
			{
				if ((this._VisionR != value))
				{
					this.OnVisionRChanging(value);
					this.SendPropertyChanging();
					this._VisionR = value;
					this.SendPropertyChanged("VisionR");
					this.OnVisionRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionRD", DbType="NVarChar(MAX)")]
		public string VisionRD
		{
			get
			{
				return this._VisionRD;
			}
			set
			{
				if ((this._VisionRD != value))
				{
					this.OnVisionRDChanging(value);
					this.SendPropertyChanging();
					this._VisionRD = value;
					this.SendPropertyChanged("VisionRD");
					this.OnVisionRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionL", DbType="TinyInt")]
		public System.Nullable<byte> VisionL
		{
			get
			{
				return this._VisionL;
			}
			set
			{
				if ((this._VisionL != value))
				{
					this.OnVisionLChanging(value);
					this.SendPropertyChanging();
					this._VisionL = value;
					this.SendPropertyChanged("VisionL");
					this.OnVisionLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionLD", DbType="NVarChar(MAX)")]
		public string VisionLD
		{
			get
			{
				return this._VisionLD;
			}
			set
			{
				if ((this._VisionLD != value))
				{
					this.OnVisionLDChanging(value);
					this.SendPropertyChanging();
					this._VisionLD = value;
					this.SendPropertyChanged("VisionLD");
					this.OnVisionLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionNear", DbType="Bit")]
		public System.Nullable<bool> VisionNear
		{
			get
			{
				return this._VisionNear;
			}
			set
			{
				if ((this._VisionNear != value))
				{
					this.OnVisionNearChanging(value);
					this.SendPropertyChanging();
					this._VisionNear = value;
					this.SendPropertyChanged("VisionNear");
					this.OnVisionNearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionDate", DbType="NChar(10)")]
		public string ColorVisionDate
		{
			get
			{
				return this._ColorVisionDate;
			}
			set
			{
				if ((this._ColorVisionDate != value))
				{
					this.OnColorVisionDateChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionDate = value;
					this.SendPropertyChanged("ColorVisionDate");
					this.OnColorVisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionTime", DbType="NChar(5)")]
		public string ColorVisionTime
		{
			get
			{
				return this._ColorVisionTime;
			}
			set
			{
				if ((this._ColorVisionTime != value))
				{
					this.OnColorVisionTimeChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionTime = value;
					this.SendPropertyChanged("ColorVisionTime");
					this.OnColorVisionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionInterpreter", DbType="Int")]
		public System.Nullable<int> ColorVisionInterpreter
		{
			get
			{
				return this._ColorVisionInterpreter;
			}
			set
			{
				if ((this._ColorVisionInterpreter != value))
				{
					this.OnColorVisionInterpreterChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionInterpreter = value;
					this.SendPropertyChanged("ColorVisionInterpreter");
					this.OnColorVisionInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionDone", DbType="Int")]
		public System.Nullable<int> ColorVisionDone
		{
			get
			{
				return this._ColorVisionDone;
			}
			set
			{
				if ((this._ColorVisionDone != value))
				{
					this.OnColorVisionDoneChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionDone = value;
					this.SendPropertyChanged("ColorVisionDone");
					this.OnColorVisionDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionR", DbType="Bit")]
		public System.Nullable<bool> ColorVisionR
		{
			get
			{
				return this._ColorVisionR;
			}
			set
			{
				if ((this._ColorVisionR != value))
				{
					this.OnColorVisionRChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionR = value;
					this.SendPropertyChanged("ColorVisionR");
					this.OnColorVisionRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionRD", DbType="NVarChar(MAX)")]
		public string ColorVisionRD
		{
			get
			{
				return this._ColorVisionRD;
			}
			set
			{
				if ((this._ColorVisionRD != value))
				{
					this.OnColorVisionRDChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionRD = value;
					this.SendPropertyChanged("ColorVisionRD");
					this.OnColorVisionRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionL", DbType="Bit")]
		public System.Nullable<bool> ColorVisionL
		{
			get
			{
				return this._ColorVisionL;
			}
			set
			{
				if ((this._ColorVisionL != value))
				{
					this.OnColorVisionLChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionL = value;
					this.SendPropertyChanged("ColorVisionL");
					this.OnColorVisionLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorVisionLD", DbType="NVarChar(MAX)")]
		public string ColorVisionLD
		{
			get
			{
				return this._ColorVisionLD;
			}
			set
			{
				if ((this._ColorVisionLD != value))
				{
					this.OnColorVisionLDChanging(value);
					this.SendPropertyChanging();
					this._ColorVisionLD = value;
					this.SendPropertyChanged("ColorVisionLD");
					this.OnColorVisionLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldDate", DbType="NChar(10)")]
		public string VisionFieldDate
		{
			get
			{
				return this._VisionFieldDate;
			}
			set
			{
				if ((this._VisionFieldDate != value))
				{
					this.OnVisionFieldDateChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldDate = value;
					this.SendPropertyChanged("VisionFieldDate");
					this.OnVisionFieldDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldTime", DbType="NChar(5)")]
		public string VisionFieldTime
		{
			get
			{
				return this._VisionFieldTime;
			}
			set
			{
				if ((this._VisionFieldTime != value))
				{
					this.OnVisionFieldTimeChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldTime = value;
					this.SendPropertyChanged("VisionFieldTime");
					this.OnVisionFieldTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldInterpreter", DbType="Int")]
		public System.Nullable<int> VisionFieldInterpreter
		{
			get
			{
				return this._VisionFieldInterpreter;
			}
			set
			{
				if ((this._VisionFieldInterpreter != value))
				{
					this.OnVisionFieldInterpreterChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldInterpreter = value;
					this.SendPropertyChanged("VisionFieldInterpreter");
					this.OnVisionFieldInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldDone", DbType="Int")]
		public System.Nullable<int> VisionFieldDone
		{
			get
			{
				return this._VisionFieldDone;
			}
			set
			{
				if ((this._VisionFieldDone != value))
				{
					this.OnVisionFieldDoneChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldDone = value;
					this.SendPropertyChanged("VisionFieldDone");
					this.OnVisionFieldDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldUpL", DbType="Bit")]
		public System.Nullable<bool> VisionFieldUpL
		{
			get
			{
				return this._VisionFieldUpL;
			}
			set
			{
				if ((this._VisionFieldUpL != value))
				{
					this.OnVisionFieldUpLChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldUpL = value;
					this.SendPropertyChanged("VisionFieldUpL");
					this.OnVisionFieldUpLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldUpLD", DbType="NVarChar(MAX)")]
		public string VisionFieldUpLD
		{
			get
			{
				return this._VisionFieldUpLD;
			}
			set
			{
				if ((this._VisionFieldUpLD != value))
				{
					this.OnVisionFieldUpLDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldUpLD = value;
					this.SendPropertyChanged("VisionFieldUpLD");
					this.OnVisionFieldUpLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldDownL", DbType="Bit")]
		public System.Nullable<bool> VisionFieldDownL
		{
			get
			{
				return this._VisionFieldDownL;
			}
			set
			{
				if ((this._VisionFieldDownL != value))
				{
					this.OnVisionFieldDownLChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldDownL = value;
					this.SendPropertyChanged("VisionFieldDownL");
					this.OnVisionFieldDownLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldDownLD", DbType="NVarChar(MAX)")]
		public string VisionFieldDownLD
		{
			get
			{
				return this._VisionFieldDownLD;
			}
			set
			{
				if ((this._VisionFieldDownLD != value))
				{
					this.OnVisionFieldDownLDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldDownLD = value;
					this.SendPropertyChanged("VisionFieldDownLD");
					this.OnVisionFieldDownLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldLetralL", DbType="Bit")]
		public System.Nullable<bool> VisionFieldLetralL
		{
			get
			{
				return this._VisionFieldLetralL;
			}
			set
			{
				if ((this._VisionFieldLetralL != value))
				{
					this.OnVisionFieldLetralLChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldLetralL = value;
					this.SendPropertyChanged("VisionFieldLetralL");
					this.OnVisionFieldLetralLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldLetralLD", DbType="NVarChar(MAX)")]
		public string VisionFieldLetralLD
		{
			get
			{
				return this._VisionFieldLetralLD;
			}
			set
			{
				if ((this._VisionFieldLetralLD != value))
				{
					this.OnVisionFieldLetralLDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldLetralLD = value;
					this.SendPropertyChanged("VisionFieldLetralLD");
					this.OnVisionFieldLetralLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldMedialL", DbType="Bit")]
		public System.Nullable<bool> VisionFieldMedialL
		{
			get
			{
				return this._VisionFieldMedialL;
			}
			set
			{
				if ((this._VisionFieldMedialL != value))
				{
					this.OnVisionFieldMedialLChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldMedialL = value;
					this.SendPropertyChanged("VisionFieldMedialL");
					this.OnVisionFieldMedialLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldMedialLD", DbType="NVarChar(MAX)")]
		public string VisionFieldMedialLD
		{
			get
			{
				return this._VisionFieldMedialLD;
			}
			set
			{
				if ((this._VisionFieldMedialLD != value))
				{
					this.OnVisionFieldMedialLDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldMedialLD = value;
					this.SendPropertyChanged("VisionFieldMedialLD");
					this.OnVisionFieldMedialLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldResultL", DbType="Bit")]
		public System.Nullable<bool> VisionFieldResultL
		{
			get
			{
				return this._VisionFieldResultL;
			}
			set
			{
				if ((this._VisionFieldResultL != value))
				{
					this.OnVisionFieldResultLChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldResultL = value;
					this.SendPropertyChanged("VisionFieldResultL");
					this.OnVisionFieldResultLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldResultLD", DbType="NVarChar(MAX)")]
		public string VisionFieldResultLD
		{
			get
			{
				return this._VisionFieldResultLD;
			}
			set
			{
				if ((this._VisionFieldResultLD != value))
				{
					this.OnVisionFieldResultLDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldResultLD = value;
					this.SendPropertyChanged("VisionFieldResultLD");
					this.OnVisionFieldResultLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldUpR", DbType="Bit")]
		public System.Nullable<bool> VisionFieldUpR
		{
			get
			{
				return this._VisionFieldUpR;
			}
			set
			{
				if ((this._VisionFieldUpR != value))
				{
					this.OnVisionFieldUpRChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldUpR = value;
					this.SendPropertyChanged("VisionFieldUpR");
					this.OnVisionFieldUpRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldUpRD", DbType="NVarChar(MAX)")]
		public string VisionFieldUpRD
		{
			get
			{
				return this._VisionFieldUpRD;
			}
			set
			{
				if ((this._VisionFieldUpRD != value))
				{
					this.OnVisionFieldUpRDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldUpRD = value;
					this.SendPropertyChanged("VisionFieldUpRD");
					this.OnVisionFieldUpRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldDownR", DbType="Bit")]
		public System.Nullable<bool> VisionFieldDownR
		{
			get
			{
				return this._VisionFieldDownR;
			}
			set
			{
				if ((this._VisionFieldDownR != value))
				{
					this.OnVisionFieldDownRChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldDownR = value;
					this.SendPropertyChanged("VisionFieldDownR");
					this.OnVisionFieldDownRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldDownRD", DbType="NVarChar(MAX)")]
		public string VisionFieldDownRD
		{
			get
			{
				return this._VisionFieldDownRD;
			}
			set
			{
				if ((this._VisionFieldDownRD != value))
				{
					this.OnVisionFieldDownRDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldDownRD = value;
					this.SendPropertyChanged("VisionFieldDownRD");
					this.OnVisionFieldDownRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldLetralR", DbType="Bit")]
		public System.Nullable<bool> VisionFieldLetralR
		{
			get
			{
				return this._VisionFieldLetralR;
			}
			set
			{
				if ((this._VisionFieldLetralR != value))
				{
					this.OnVisionFieldLetralRChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldLetralR = value;
					this.SendPropertyChanged("VisionFieldLetralR");
					this.OnVisionFieldLetralRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldLetralRD", DbType="NVarChar(MAX)")]
		public string VisionFieldLetralRD
		{
			get
			{
				return this._VisionFieldLetralRD;
			}
			set
			{
				if ((this._VisionFieldLetralRD != value))
				{
					this.OnVisionFieldLetralRDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldLetralRD = value;
					this.SendPropertyChanged("VisionFieldLetralRD");
					this.OnVisionFieldLetralRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldMedialR", DbType="Bit")]
		public System.Nullable<bool> VisionFieldMedialR
		{
			get
			{
				return this._VisionFieldMedialR;
			}
			set
			{
				if ((this._VisionFieldMedialR != value))
				{
					this.OnVisionFieldMedialRChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldMedialR = value;
					this.SendPropertyChanged("VisionFieldMedialR");
					this.OnVisionFieldMedialRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldMedialRD", DbType="NVarChar(MAX)")]
		public string VisionFieldMedialRD
		{
			get
			{
				return this._VisionFieldMedialRD;
			}
			set
			{
				if ((this._VisionFieldMedialRD != value))
				{
					this.OnVisionFieldMedialRDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldMedialRD = value;
					this.SendPropertyChanged("VisionFieldMedialRD");
					this.OnVisionFieldMedialRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldResultR", DbType="Bit")]
		public System.Nullable<bool> VisionFieldResultR
		{
			get
			{
				return this._VisionFieldResultR;
			}
			set
			{
				if ((this._VisionFieldResultR != value))
				{
					this.OnVisionFieldResultRChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldResultR = value;
					this.SendPropertyChanged("VisionFieldResultR");
					this.OnVisionFieldResultRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionFieldResultRD", DbType="NVarChar(MAX)")]
		public string VisionFieldResultRD
		{
			get
			{
				return this._VisionFieldResultRD;
			}
			set
			{
				if ((this._VisionFieldResultRD != value))
				{
					this.OnVisionFieldResultRDChanging(value);
					this.SendPropertyChanging();
					this._VisionFieldResultRD = value;
					this.SendPropertyChanged("VisionFieldResultRD");
					this.OnVisionFieldResultRDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearVisionWithGlassL", DbType="Int")]
		public System.Nullable<int> NearVisionWithGlassL
		{
			get
			{
				return this._NearVisionWithGlassL;
			}
			set
			{
				if ((this._NearVisionWithGlassL != value))
				{
					this.OnNearVisionWithGlassLChanging(value);
					this.SendPropertyChanging();
					this._NearVisionWithGlassL = value;
					this.SendPropertyChanged("NearVisionWithGlassL");
					this.OnNearVisionWithGlassLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearVisionWithGlassR", DbType="Int")]
		public System.Nullable<int> NearVisionWithGlassR
		{
			get
			{
				return this._NearVisionWithGlassR;
			}
			set
			{
				if ((this._NearVisionWithGlassR != value))
				{
					this.OnNearVisionWithGlassRChanging(value);
					this.SendPropertyChanging();
					this._NearVisionWithGlassR = value;
					this.SendPropertyChanged("NearVisionWithGlassR");
					this.OnNearVisionWithGlassRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearVisionWithoutGL", DbType="Int")]
		public System.Nullable<int> NearVisionWithoutGL
		{
			get
			{
				return this._NearVisionWithoutGL;
			}
			set
			{
				if ((this._NearVisionWithoutGL != value))
				{
					this.OnNearVisionWithoutGLChanging(value);
					this.SendPropertyChanging();
					this._NearVisionWithoutGL = value;
					this.SendPropertyChanged("NearVisionWithoutGL");
					this.OnNearVisionWithoutGLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearVisionWithoutGR", DbType="Int")]
		public System.Nullable<int> NearVisionWithoutGR
		{
			get
			{
				return this._NearVisionWithoutGR;
			}
			set
			{
				if ((this._NearVisionWithoutGR != value))
				{
					this.OnNearVisionWithoutGRChanging(value);
					this.SendPropertyChanging();
					this._NearVisionWithoutGR = value;
					this.SendPropertyChanged("NearVisionWithoutGR");
					this.OnNearVisionWithoutGRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Optometry", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Optometries.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Optometries.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OtherTest")]
	public partial class OtherTest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _EMGDate;
		
		private string _EMGTime;
		
		private System.Nullable<int> _EMGDone;
		
		private System.Nullable<int> _EMGInterpreter;
		
		private string _EMGUpperLimbs;
		
		private string _EMGUpperLimbsD;
		
		private string _EMGLowerLimbs;
		
		private string _EMGLowerLimbsD;
		
		private string _AndoscopyDate;
		
		private string _AndoscopyTime;
		
		private System.Nullable<int> _AndoscopyInterpreter;
		
		private System.Nullable<int> _AndoscopyDone;
		
		private System.Nullable<bool> _AndoscopyResult;
		
		private string _AndoscopyResultD;
		
		private string _RectosigmoidoscopyDate;
		
		private string _RectosigmoidoscopyTime;
		
		private System.Nullable<int> _RectosigmoidoscopyInterpreter;
		
		private System.Nullable<int> _RectosigmoidoscopyDone;
		
		private System.Nullable<bool> _RectosigmoidoscopyResult;
		
		private string _RectosigmoidoscopyResultD;
		
		private string _RectoscopyDate;
		
		private string _RectoscopyTime;
		
		private System.Nullable<int> _RectoscopyInterpreter;
		
		private System.Nullable<int> _RectoscopyDone;
		
		private System.Nullable<bool> _RectoscopyResult;
		
		private string _RectoscopyResultD;
		
		private string _CardiologyDate;
		
		private string _CardiologyTime;
		
		private System.Nullable<int> _CardiologyInterpreter;
		
		private System.Nullable<int> _CardiologyDone;
		
		private string _ECG;
		
		private string _ECGD;
		
		private string _Echocardiography;
		
		private string _EchocardiographyD;
		
		private string _ExerciseTest;
		
		private string _ExerciseTestD;
		
		private string _METs;
		
		private string _METsD;
		
		private string _Angiography;
		
		private string _AngiographyD;
		
		private string _CigarClinicDate;
		
		private string _CigarClinicTime;
		
		private System.Nullable<int> _CigarClinicInterpreter;
		
		private System.Nullable<int> _CigarClinicDone;
		
		private System.Nullable<bool> _CotininTest;
		
		private string _CotininTestD;
		
		private string _ClonoscopyDate;
		
		private string _ClonoscopyTime;
		
		private System.Nullable<int> _ClonoscopyInterpreter;
		
		private System.Nullable<int> _ClonoscopyDone;
		
		private System.Nullable<bool> _ClonoscopyResult;
		
		private string _ClonoscopyResultD;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private bool _Deleted;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnEMGDateChanging(string value);
    partial void OnEMGDateChanged();
    partial void OnEMGTimeChanging(string value);
    partial void OnEMGTimeChanged();
    partial void OnEMGDoneChanging(System.Nullable<int> value);
    partial void OnEMGDoneChanged();
    partial void OnEMGInterpreterChanging(System.Nullable<int> value);
    partial void OnEMGInterpreterChanged();
    partial void OnEMGUpperLimbsChanging(string value);
    partial void OnEMGUpperLimbsChanged();
    partial void OnEMGUpperLimbsDChanging(string value);
    partial void OnEMGUpperLimbsDChanged();
    partial void OnEMGLowerLimbsChanging(string value);
    partial void OnEMGLowerLimbsChanged();
    partial void OnEMGLowerLimbsDChanging(string value);
    partial void OnEMGLowerLimbsDChanged();
    partial void OnAndoscopyDateChanging(string value);
    partial void OnAndoscopyDateChanged();
    partial void OnAndoscopyTimeChanging(string value);
    partial void OnAndoscopyTimeChanged();
    partial void OnAndoscopyInterpreterChanging(System.Nullable<int> value);
    partial void OnAndoscopyInterpreterChanged();
    partial void OnAndoscopyDoneChanging(System.Nullable<int> value);
    partial void OnAndoscopyDoneChanged();
    partial void OnAndoscopyResultChanging(System.Nullable<bool> value);
    partial void OnAndoscopyResultChanged();
    partial void OnAndoscopyResultDChanging(string value);
    partial void OnAndoscopyResultDChanged();
    partial void OnRectosigmoidoscopyDateChanging(string value);
    partial void OnRectosigmoidoscopyDateChanged();
    partial void OnRectosigmoidoscopyTimeChanging(string value);
    partial void OnRectosigmoidoscopyTimeChanged();
    partial void OnRectosigmoidoscopyInterpreterChanging(System.Nullable<int> value);
    partial void OnRectosigmoidoscopyInterpreterChanged();
    partial void OnRectosigmoidoscopyDoneChanging(System.Nullable<int> value);
    partial void OnRectosigmoidoscopyDoneChanged();
    partial void OnRectosigmoidoscopyResultChanging(System.Nullable<bool> value);
    partial void OnRectosigmoidoscopyResultChanged();
    partial void OnRectosigmoidoscopyResultDChanging(string value);
    partial void OnRectosigmoidoscopyResultDChanged();
    partial void OnRectoscopyDateChanging(string value);
    partial void OnRectoscopyDateChanged();
    partial void OnRectoscopyTimeChanging(string value);
    partial void OnRectoscopyTimeChanged();
    partial void OnRectoscopyInterpreterChanging(System.Nullable<int> value);
    partial void OnRectoscopyInterpreterChanged();
    partial void OnRectoscopyDoneChanging(System.Nullable<int> value);
    partial void OnRectoscopyDoneChanged();
    partial void OnRectoscopyResultChanging(System.Nullable<bool> value);
    partial void OnRectoscopyResultChanged();
    partial void OnRectoscopyResultDChanging(string value);
    partial void OnRectoscopyResultDChanged();
    partial void OnCardiologyDateChanging(string value);
    partial void OnCardiologyDateChanged();
    partial void OnCardiologyTimeChanging(string value);
    partial void OnCardiologyTimeChanged();
    partial void OnCardiologyInterpreterChanging(System.Nullable<int> value);
    partial void OnCardiologyInterpreterChanged();
    partial void OnCardiologyDoneChanging(System.Nullable<int> value);
    partial void OnCardiologyDoneChanged();
    partial void OnECGChanging(string value);
    partial void OnECGChanged();
    partial void OnECGDChanging(string value);
    partial void OnECGDChanged();
    partial void OnEchocardiographyChanging(string value);
    partial void OnEchocardiographyChanged();
    partial void OnEchocardiographyDChanging(string value);
    partial void OnEchocardiographyDChanged();
    partial void OnExerciseTestChanging(string value);
    partial void OnExerciseTestChanged();
    partial void OnExerciseTestDChanging(string value);
    partial void OnExerciseTestDChanged();
    partial void OnMETsChanging(string value);
    partial void OnMETsChanged();
    partial void OnMETsDChanging(string value);
    partial void OnMETsDChanged();
    partial void OnAngiographyChanging(string value);
    partial void OnAngiographyChanged();
    partial void OnAngiographyDChanging(string value);
    partial void OnAngiographyDChanged();
    partial void OnCigarClinicDateChanging(string value);
    partial void OnCigarClinicDateChanged();
    partial void OnCigarClinicTimeChanging(string value);
    partial void OnCigarClinicTimeChanged();
    partial void OnCigarClinicInterpreterChanging(System.Nullable<int> value);
    partial void OnCigarClinicInterpreterChanged();
    partial void OnCigarClinicDoneChanging(System.Nullable<int> value);
    partial void OnCigarClinicDoneChanged();
    partial void OnCotininTestChanging(System.Nullable<bool> value);
    partial void OnCotininTestChanged();
    partial void OnCotininTestDChanging(string value);
    partial void OnCotininTestDChanged();
    partial void OnClonoscopyDateChanging(string value);
    partial void OnClonoscopyDateChanged();
    partial void OnClonoscopyTimeChanging(string value);
    partial void OnClonoscopyTimeChanged();
    partial void OnClonoscopyInterpreterChanging(System.Nullable<int> value);
    partial void OnClonoscopyInterpreterChanged();
    partial void OnClonoscopyDoneChanging(System.Nullable<int> value);
    partial void OnClonoscopyDoneChanged();
    partial void OnClonoscopyResultChanging(System.Nullable<bool> value);
    partial void OnClonoscopyResultChanged();
    partial void OnClonoscopyResultDChanging(string value);
    partial void OnClonoscopyResultDChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public OtherTest()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGDate", DbType="NChar(10)")]
		public string EMGDate
		{
			get
			{
				return this._EMGDate;
			}
			set
			{
				if ((this._EMGDate != value))
				{
					this.OnEMGDateChanging(value);
					this.SendPropertyChanging();
					this._EMGDate = value;
					this.SendPropertyChanged("EMGDate");
					this.OnEMGDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGTime", DbType="NChar(5)")]
		public string EMGTime
		{
			get
			{
				return this._EMGTime;
			}
			set
			{
				if ((this._EMGTime != value))
				{
					this.OnEMGTimeChanging(value);
					this.SendPropertyChanging();
					this._EMGTime = value;
					this.SendPropertyChanged("EMGTime");
					this.OnEMGTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGDone", DbType="Int")]
		public System.Nullable<int> EMGDone
		{
			get
			{
				return this._EMGDone;
			}
			set
			{
				if ((this._EMGDone != value))
				{
					this.OnEMGDoneChanging(value);
					this.SendPropertyChanging();
					this._EMGDone = value;
					this.SendPropertyChanged("EMGDone");
					this.OnEMGDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGInterpreter", DbType="Int")]
		public System.Nullable<int> EMGInterpreter
		{
			get
			{
				return this._EMGInterpreter;
			}
			set
			{
				if ((this._EMGInterpreter != value))
				{
					this.OnEMGInterpreterChanging(value);
					this.SendPropertyChanging();
					this._EMGInterpreter = value;
					this.SendPropertyChanged("EMGInterpreter");
					this.OnEMGInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGUpperLimbs", DbType="NVarChar(50)")]
		public string EMGUpperLimbs
		{
			get
			{
				return this._EMGUpperLimbs;
			}
			set
			{
				if ((this._EMGUpperLimbs != value))
				{
					this.OnEMGUpperLimbsChanging(value);
					this.SendPropertyChanging();
					this._EMGUpperLimbs = value;
					this.SendPropertyChanged("EMGUpperLimbs");
					this.OnEMGUpperLimbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGUpperLimbsD", DbType="NVarChar(MAX)")]
		public string EMGUpperLimbsD
		{
			get
			{
				return this._EMGUpperLimbsD;
			}
			set
			{
				if ((this._EMGUpperLimbsD != value))
				{
					this.OnEMGUpperLimbsDChanging(value);
					this.SendPropertyChanging();
					this._EMGUpperLimbsD = value;
					this.SendPropertyChanged("EMGUpperLimbsD");
					this.OnEMGUpperLimbsDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGLowerLimbs", DbType="NVarChar(50)")]
		public string EMGLowerLimbs
		{
			get
			{
				return this._EMGLowerLimbs;
			}
			set
			{
				if ((this._EMGLowerLimbs != value))
				{
					this.OnEMGLowerLimbsChanging(value);
					this.SendPropertyChanging();
					this._EMGLowerLimbs = value;
					this.SendPropertyChanged("EMGLowerLimbs");
					this.OnEMGLowerLimbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMGLowerLimbsD", DbType="NVarChar(MAX)")]
		public string EMGLowerLimbsD
		{
			get
			{
				return this._EMGLowerLimbsD;
			}
			set
			{
				if ((this._EMGLowerLimbsD != value))
				{
					this.OnEMGLowerLimbsDChanging(value);
					this.SendPropertyChanging();
					this._EMGLowerLimbsD = value;
					this.SendPropertyChanged("EMGLowerLimbsD");
					this.OnEMGLowerLimbsDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndoscopyDate", DbType="NChar(10)")]
		public string AndoscopyDate
		{
			get
			{
				return this._AndoscopyDate;
			}
			set
			{
				if ((this._AndoscopyDate != value))
				{
					this.OnAndoscopyDateChanging(value);
					this.SendPropertyChanging();
					this._AndoscopyDate = value;
					this.SendPropertyChanged("AndoscopyDate");
					this.OnAndoscopyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndoscopyTime", DbType="NChar(5)")]
		public string AndoscopyTime
		{
			get
			{
				return this._AndoscopyTime;
			}
			set
			{
				if ((this._AndoscopyTime != value))
				{
					this.OnAndoscopyTimeChanging(value);
					this.SendPropertyChanging();
					this._AndoscopyTime = value;
					this.SendPropertyChanged("AndoscopyTime");
					this.OnAndoscopyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndoscopyInterpreter", DbType="Int")]
		public System.Nullable<int> AndoscopyInterpreter
		{
			get
			{
				return this._AndoscopyInterpreter;
			}
			set
			{
				if ((this._AndoscopyInterpreter != value))
				{
					this.OnAndoscopyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._AndoscopyInterpreter = value;
					this.SendPropertyChanged("AndoscopyInterpreter");
					this.OnAndoscopyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndoscopyDone", DbType="Int")]
		public System.Nullable<int> AndoscopyDone
		{
			get
			{
				return this._AndoscopyDone;
			}
			set
			{
				if ((this._AndoscopyDone != value))
				{
					this.OnAndoscopyDoneChanging(value);
					this.SendPropertyChanging();
					this._AndoscopyDone = value;
					this.SendPropertyChanged("AndoscopyDone");
					this.OnAndoscopyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndoscopyResult", DbType="Bit")]
		public System.Nullable<bool> AndoscopyResult
		{
			get
			{
				return this._AndoscopyResult;
			}
			set
			{
				if ((this._AndoscopyResult != value))
				{
					this.OnAndoscopyResultChanging(value);
					this.SendPropertyChanging();
					this._AndoscopyResult = value;
					this.SendPropertyChanged("AndoscopyResult");
					this.OnAndoscopyResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndoscopyResultD", DbType="NVarChar(MAX)")]
		public string AndoscopyResultD
		{
			get
			{
				return this._AndoscopyResultD;
			}
			set
			{
				if ((this._AndoscopyResultD != value))
				{
					this.OnAndoscopyResultDChanging(value);
					this.SendPropertyChanging();
					this._AndoscopyResultD = value;
					this.SendPropertyChanged("AndoscopyResultD");
					this.OnAndoscopyResultDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectosigmoidoscopyDate", DbType="NChar(10)")]
		public string RectosigmoidoscopyDate
		{
			get
			{
				return this._RectosigmoidoscopyDate;
			}
			set
			{
				if ((this._RectosigmoidoscopyDate != value))
				{
					this.OnRectosigmoidoscopyDateChanging(value);
					this.SendPropertyChanging();
					this._RectosigmoidoscopyDate = value;
					this.SendPropertyChanged("RectosigmoidoscopyDate");
					this.OnRectosigmoidoscopyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectosigmoidoscopyTime", DbType="NChar(5)")]
		public string RectosigmoidoscopyTime
		{
			get
			{
				return this._RectosigmoidoscopyTime;
			}
			set
			{
				if ((this._RectosigmoidoscopyTime != value))
				{
					this.OnRectosigmoidoscopyTimeChanging(value);
					this.SendPropertyChanging();
					this._RectosigmoidoscopyTime = value;
					this.SendPropertyChanged("RectosigmoidoscopyTime");
					this.OnRectosigmoidoscopyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectosigmoidoscopyInterpreter", DbType="Int")]
		public System.Nullable<int> RectosigmoidoscopyInterpreter
		{
			get
			{
				return this._RectosigmoidoscopyInterpreter;
			}
			set
			{
				if ((this._RectosigmoidoscopyInterpreter != value))
				{
					this.OnRectosigmoidoscopyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._RectosigmoidoscopyInterpreter = value;
					this.SendPropertyChanged("RectosigmoidoscopyInterpreter");
					this.OnRectosigmoidoscopyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectosigmoidoscopyDone", DbType="Int")]
		public System.Nullable<int> RectosigmoidoscopyDone
		{
			get
			{
				return this._RectosigmoidoscopyDone;
			}
			set
			{
				if ((this._RectosigmoidoscopyDone != value))
				{
					this.OnRectosigmoidoscopyDoneChanging(value);
					this.SendPropertyChanging();
					this._RectosigmoidoscopyDone = value;
					this.SendPropertyChanged("RectosigmoidoscopyDone");
					this.OnRectosigmoidoscopyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectosigmoidoscopyResult", DbType="Bit")]
		public System.Nullable<bool> RectosigmoidoscopyResult
		{
			get
			{
				return this._RectosigmoidoscopyResult;
			}
			set
			{
				if ((this._RectosigmoidoscopyResult != value))
				{
					this.OnRectosigmoidoscopyResultChanging(value);
					this.SendPropertyChanging();
					this._RectosigmoidoscopyResult = value;
					this.SendPropertyChanged("RectosigmoidoscopyResult");
					this.OnRectosigmoidoscopyResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectosigmoidoscopyResultD", DbType="NVarChar(MAX)")]
		public string RectosigmoidoscopyResultD
		{
			get
			{
				return this._RectosigmoidoscopyResultD;
			}
			set
			{
				if ((this._RectosigmoidoscopyResultD != value))
				{
					this.OnRectosigmoidoscopyResultDChanging(value);
					this.SendPropertyChanging();
					this._RectosigmoidoscopyResultD = value;
					this.SendPropertyChanged("RectosigmoidoscopyResultD");
					this.OnRectosigmoidoscopyResultDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectoscopyDate", DbType="NChar(10)")]
		public string RectoscopyDate
		{
			get
			{
				return this._RectoscopyDate;
			}
			set
			{
				if ((this._RectoscopyDate != value))
				{
					this.OnRectoscopyDateChanging(value);
					this.SendPropertyChanging();
					this._RectoscopyDate = value;
					this.SendPropertyChanged("RectoscopyDate");
					this.OnRectoscopyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectoscopyTime", DbType="NChar(5)")]
		public string RectoscopyTime
		{
			get
			{
				return this._RectoscopyTime;
			}
			set
			{
				if ((this._RectoscopyTime != value))
				{
					this.OnRectoscopyTimeChanging(value);
					this.SendPropertyChanging();
					this._RectoscopyTime = value;
					this.SendPropertyChanged("RectoscopyTime");
					this.OnRectoscopyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectoscopyInterpreter", DbType="Int")]
		public System.Nullable<int> RectoscopyInterpreter
		{
			get
			{
				return this._RectoscopyInterpreter;
			}
			set
			{
				if ((this._RectoscopyInterpreter != value))
				{
					this.OnRectoscopyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._RectoscopyInterpreter = value;
					this.SendPropertyChanged("RectoscopyInterpreter");
					this.OnRectoscopyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectoscopyDone", DbType="Int")]
		public System.Nullable<int> RectoscopyDone
		{
			get
			{
				return this._RectoscopyDone;
			}
			set
			{
				if ((this._RectoscopyDone != value))
				{
					this.OnRectoscopyDoneChanging(value);
					this.SendPropertyChanging();
					this._RectoscopyDone = value;
					this.SendPropertyChanged("RectoscopyDone");
					this.OnRectoscopyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectoscopyResult", DbType="Bit")]
		public System.Nullable<bool> RectoscopyResult
		{
			get
			{
				return this._RectoscopyResult;
			}
			set
			{
				if ((this._RectoscopyResult != value))
				{
					this.OnRectoscopyResultChanging(value);
					this.SendPropertyChanging();
					this._RectoscopyResult = value;
					this.SendPropertyChanged("RectoscopyResult");
					this.OnRectoscopyResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectoscopyResultD", DbType="NVarChar(MAX)")]
		public string RectoscopyResultD
		{
			get
			{
				return this._RectoscopyResultD;
			}
			set
			{
				if ((this._RectoscopyResultD != value))
				{
					this.OnRectoscopyResultDChanging(value);
					this.SendPropertyChanging();
					this._RectoscopyResultD = value;
					this.SendPropertyChanged("RectoscopyResultD");
					this.OnRectoscopyResultDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardiologyDate", DbType="NChar(10)")]
		public string CardiologyDate
		{
			get
			{
				return this._CardiologyDate;
			}
			set
			{
				if ((this._CardiologyDate != value))
				{
					this.OnCardiologyDateChanging(value);
					this.SendPropertyChanging();
					this._CardiologyDate = value;
					this.SendPropertyChanged("CardiologyDate");
					this.OnCardiologyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardiologyTime", DbType="NChar(5)")]
		public string CardiologyTime
		{
			get
			{
				return this._CardiologyTime;
			}
			set
			{
				if ((this._CardiologyTime != value))
				{
					this.OnCardiologyTimeChanging(value);
					this.SendPropertyChanging();
					this._CardiologyTime = value;
					this.SendPropertyChanged("CardiologyTime");
					this.OnCardiologyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardiologyInterpreter", DbType="Int")]
		public System.Nullable<int> CardiologyInterpreter
		{
			get
			{
				return this._CardiologyInterpreter;
			}
			set
			{
				if ((this._CardiologyInterpreter != value))
				{
					this.OnCardiologyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._CardiologyInterpreter = value;
					this.SendPropertyChanged("CardiologyInterpreter");
					this.OnCardiologyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardiologyDone", DbType="Int")]
		public System.Nullable<int> CardiologyDone
		{
			get
			{
				return this._CardiologyDone;
			}
			set
			{
				if ((this._CardiologyDone != value))
				{
					this.OnCardiologyDoneChanging(value);
					this.SendPropertyChanging();
					this._CardiologyDone = value;
					this.SendPropertyChanged("CardiologyDone");
					this.OnCardiologyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECG", DbType="NVarChar(50)")]
		public string ECG
		{
			get
			{
				return this._ECG;
			}
			set
			{
				if ((this._ECG != value))
				{
					this.OnECGChanging(value);
					this.SendPropertyChanging();
					this._ECG = value;
					this.SendPropertyChanged("ECG");
					this.OnECGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECGD", DbType="NVarChar(MAX)")]
		public string ECGD
		{
			get
			{
				return this._ECGD;
			}
			set
			{
				if ((this._ECGD != value))
				{
					this.OnECGDChanging(value);
					this.SendPropertyChanging();
					this._ECGD = value;
					this.SendPropertyChanged("ECGD");
					this.OnECGDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Echocardiography", DbType="NVarChar(50)")]
		public string Echocardiography
		{
			get
			{
				return this._Echocardiography;
			}
			set
			{
				if ((this._Echocardiography != value))
				{
					this.OnEchocardiographyChanging(value);
					this.SendPropertyChanging();
					this._Echocardiography = value;
					this.SendPropertyChanged("Echocardiography");
					this.OnEchocardiographyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EchocardiographyD", DbType="NVarChar(MAX)")]
		public string EchocardiographyD
		{
			get
			{
				return this._EchocardiographyD;
			}
			set
			{
				if ((this._EchocardiographyD != value))
				{
					this.OnEchocardiographyDChanging(value);
					this.SendPropertyChanging();
					this._EchocardiographyD = value;
					this.SendPropertyChanged("EchocardiographyD");
					this.OnEchocardiographyDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseTest", DbType="NVarChar(50)")]
		public string ExerciseTest
		{
			get
			{
				return this._ExerciseTest;
			}
			set
			{
				if ((this._ExerciseTest != value))
				{
					this.OnExerciseTestChanging(value);
					this.SendPropertyChanging();
					this._ExerciseTest = value;
					this.SendPropertyChanged("ExerciseTest");
					this.OnExerciseTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseTestD", DbType="NVarChar(MAX)")]
		public string ExerciseTestD
		{
			get
			{
				return this._ExerciseTestD;
			}
			set
			{
				if ((this._ExerciseTestD != value))
				{
					this.OnExerciseTestDChanging(value);
					this.SendPropertyChanging();
					this._ExerciseTestD = value;
					this.SendPropertyChanged("ExerciseTestD");
					this.OnExerciseTestDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_METs", DbType="NVarChar(50)")]
		public string METs
		{
			get
			{
				return this._METs;
			}
			set
			{
				if ((this._METs != value))
				{
					this.OnMETsChanging(value);
					this.SendPropertyChanging();
					this._METs = value;
					this.SendPropertyChanged("METs");
					this.OnMETsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_METsD", DbType="NVarChar(MAX)")]
		public string METsD
		{
			get
			{
				return this._METsD;
			}
			set
			{
				if ((this._METsD != value))
				{
					this.OnMETsDChanging(value);
					this.SendPropertyChanging();
					this._METsD = value;
					this.SendPropertyChanged("METsD");
					this.OnMETsDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Angiography", DbType="NVarChar(50)")]
		public string Angiography
		{
			get
			{
				return this._Angiography;
			}
			set
			{
				if ((this._Angiography != value))
				{
					this.OnAngiographyChanging(value);
					this.SendPropertyChanging();
					this._Angiography = value;
					this.SendPropertyChanged("Angiography");
					this.OnAngiographyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AngiographyD", DbType="NVarChar(MAX)")]
		public string AngiographyD
		{
			get
			{
				return this._AngiographyD;
			}
			set
			{
				if ((this._AngiographyD != value))
				{
					this.OnAngiographyDChanging(value);
					this.SendPropertyChanging();
					this._AngiographyD = value;
					this.SendPropertyChanged("AngiographyD");
					this.OnAngiographyDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CigarClinicDate", DbType="NChar(10)")]
		public string CigarClinicDate
		{
			get
			{
				return this._CigarClinicDate;
			}
			set
			{
				if ((this._CigarClinicDate != value))
				{
					this.OnCigarClinicDateChanging(value);
					this.SendPropertyChanging();
					this._CigarClinicDate = value;
					this.SendPropertyChanged("CigarClinicDate");
					this.OnCigarClinicDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CigarClinicTime", DbType="NChar(5)")]
		public string CigarClinicTime
		{
			get
			{
				return this._CigarClinicTime;
			}
			set
			{
				if ((this._CigarClinicTime != value))
				{
					this.OnCigarClinicTimeChanging(value);
					this.SendPropertyChanging();
					this._CigarClinicTime = value;
					this.SendPropertyChanged("CigarClinicTime");
					this.OnCigarClinicTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CigarClinicInterpreter", DbType="Int")]
		public System.Nullable<int> CigarClinicInterpreter
		{
			get
			{
				return this._CigarClinicInterpreter;
			}
			set
			{
				if ((this._CigarClinicInterpreter != value))
				{
					this.OnCigarClinicInterpreterChanging(value);
					this.SendPropertyChanging();
					this._CigarClinicInterpreter = value;
					this.SendPropertyChanged("CigarClinicInterpreter");
					this.OnCigarClinicInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CigarClinicDone", DbType="Int")]
		public System.Nullable<int> CigarClinicDone
		{
			get
			{
				return this._CigarClinicDone;
			}
			set
			{
				if ((this._CigarClinicDone != value))
				{
					this.OnCigarClinicDoneChanging(value);
					this.SendPropertyChanging();
					this._CigarClinicDone = value;
					this.SendPropertyChanged("CigarClinicDone");
					this.OnCigarClinicDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CotininTest", DbType="Bit")]
		public System.Nullable<bool> CotininTest
		{
			get
			{
				return this._CotininTest;
			}
			set
			{
				if ((this._CotininTest != value))
				{
					this.OnCotininTestChanging(value);
					this.SendPropertyChanging();
					this._CotininTest = value;
					this.SendPropertyChanged("CotininTest");
					this.OnCotininTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CotininTestD", DbType="NVarChar(MAX)")]
		public string CotininTestD
		{
			get
			{
				return this._CotininTestD;
			}
			set
			{
				if ((this._CotininTestD != value))
				{
					this.OnCotininTestDChanging(value);
					this.SendPropertyChanging();
					this._CotininTestD = value;
					this.SendPropertyChanged("CotininTestD");
					this.OnCotininTestDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClonoscopyDate", DbType="NChar(10)")]
		public string ClonoscopyDate
		{
			get
			{
				return this._ClonoscopyDate;
			}
			set
			{
				if ((this._ClonoscopyDate != value))
				{
					this.OnClonoscopyDateChanging(value);
					this.SendPropertyChanging();
					this._ClonoscopyDate = value;
					this.SendPropertyChanged("ClonoscopyDate");
					this.OnClonoscopyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClonoscopyTime", DbType="NChar(5)")]
		public string ClonoscopyTime
		{
			get
			{
				return this._ClonoscopyTime;
			}
			set
			{
				if ((this._ClonoscopyTime != value))
				{
					this.OnClonoscopyTimeChanging(value);
					this.SendPropertyChanging();
					this._ClonoscopyTime = value;
					this.SendPropertyChanged("ClonoscopyTime");
					this.OnClonoscopyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClonoscopyInterpreter", DbType="Int")]
		public System.Nullable<int> ClonoscopyInterpreter
		{
			get
			{
				return this._ClonoscopyInterpreter;
			}
			set
			{
				if ((this._ClonoscopyInterpreter != value))
				{
					this.OnClonoscopyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._ClonoscopyInterpreter = value;
					this.SendPropertyChanged("ClonoscopyInterpreter");
					this.OnClonoscopyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClonoscopyDone", DbType="Int")]
		public System.Nullable<int> ClonoscopyDone
		{
			get
			{
				return this._ClonoscopyDone;
			}
			set
			{
				if ((this._ClonoscopyDone != value))
				{
					this.OnClonoscopyDoneChanging(value);
					this.SendPropertyChanging();
					this._ClonoscopyDone = value;
					this.SendPropertyChanged("ClonoscopyDone");
					this.OnClonoscopyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClonoscopyResult", DbType="Bit")]
		public System.Nullable<bool> ClonoscopyResult
		{
			get
			{
				return this._ClonoscopyResult;
			}
			set
			{
				if ((this._ClonoscopyResult != value))
				{
					this.OnClonoscopyResultChanging(value);
					this.SendPropertyChanging();
					this._ClonoscopyResult = value;
					this.SendPropertyChanged("ClonoscopyResult");
					this.OnClonoscopyResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClonoscopyResultD", DbType="NVarChar(MAX)")]
		public string ClonoscopyResultD
		{
			get
			{
				return this._ClonoscopyResultD;
			}
			set
			{
				if ((this._ClonoscopyResultD != value))
				{
					this.OnClonoscopyResultDChanging(value);
					this.SendPropertyChanging();
					this._ClonoscopyResultD = value;
					this.SendPropertyChanged("ClonoscopyResultD");
					this.OnClonoscopyResultDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_OtherTest", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.OtherTests.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.OtherTests.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _Sex;
		
		private string _FatherName;
		
		private System.Nullable<long> _BirthCertificateNo;
		
		private System.Nullable<short> _BirthCertificateCityID;
		
		private string _BirthDate;
		
		private System.Nullable<short> _BirthCityID;
		
		private string _EducationalLicence;
		
		private string _MilitaryServiceState;
		
		private System.Nullable<byte> _NaftJobExperience;
		
		private string _Address;
		
		private string _PostalCode;
		
		private string _PhoneNumber;
		
		private string _MobileNumber;
		
		private System.Nullable<int> _CompanyID;
		
		private bool _Deleted;
		
		private System.Nullable<bool> _Smoking;
		
		private System.Nullable<short> _DailySmokeCount;
		
		private System.Nullable<byte> _SmokingYears;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private System.Nullable<int> _ValidCenterID;
		
		private System.Nullable<System.Guid> _GUID;
		
		private string _MedicalID;
		
		private EntitySet<Document> _Documents;
		
		private EntitySet<FamilyIllnessHistory> _FamilyIllnessHistories;
		
		private EntitySet<JobHistory> _JobHistories;
		
		private EntitySet<QuestionResultM> _QuestionResultMs;
		
		private EntitySet<Surveillance> _Surveillances;
		
		private EntityRef<City> _City;
		
		private EntityRef<City> _City1;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Tbl_ValidCenter> _Tbl_ValidCenter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonalNoChanging(System.Nullable<int> value);
    partial void OnPersonalNoChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthCertificateNoChanging(System.Nullable<long> value);
    partial void OnBirthCertificateNoChanged();
    partial void OnBirthCertificateCityIDChanging(System.Nullable<short> value);
    partial void OnBirthCertificateCityIDChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthCityIDChanging(System.Nullable<short> value);
    partial void OnBirthCityIDChanged();
    partial void OnEducationalLicenceChanging(string value);
    partial void OnEducationalLicenceChanged();
    partial void OnMilitaryServiceStateChanging(string value);
    partial void OnMilitaryServiceStateChanged();
    partial void OnNaftJobExperienceChanging(System.Nullable<byte> value);
    partial void OnNaftJobExperienceChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnSmokingChanging(System.Nullable<bool> value);
    partial void OnSmokingChanged();
    partial void OnDailySmokeCountChanging(System.Nullable<short> value);
    partial void OnDailySmokeCountChanged();
    partial void OnSmokingYearsChanging(System.Nullable<byte> value);
    partial void OnSmokingYearsChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnValidCenterIDChanging(System.Nullable<int> value);
    partial void OnValidCenterIDChanged();
    partial void OnGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnGUIDChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    #endregion
		
		public Person()
		{
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._FamilyIllnessHistories = new EntitySet<FamilyIllnessHistory>(new Action<FamilyIllnessHistory>(this.attach_FamilyIllnessHistories), new Action<FamilyIllnessHistory>(this.detach_FamilyIllnessHistories));
			this._JobHistories = new EntitySet<JobHistory>(new Action<JobHistory>(this.attach_JobHistories), new Action<JobHistory>(this.detach_JobHistories));
			this._QuestionResultMs = new EntitySet<QuestionResultM>(new Action<QuestionResultM>(this.attach_QuestionResultMs), new Action<QuestionResultM>(this.detach_QuestionResultMs));
			this._Surveillances = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances), new Action<Surveillance>(this.detach_Surveillances));
			this._City = default(EntityRef<City>);
			this._City1 = default(EntityRef<City>);
			this._Company = default(EntityRef<Company>);
			this._Tbl_ValidCenter = default(EntityRef<Tbl_ValidCenter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this.OnPersonalNoChanging(value);
					this.SendPropertyChanging();
					this._PersonalNo = value;
					this.SendPropertyChanged("PersonalNo");
					this.OnPersonalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateNo", DbType="BigInt")]
		public System.Nullable<long> BirthCertificateNo
		{
			get
			{
				return this._BirthCertificateNo;
			}
			set
			{
				if ((this._BirthCertificateNo != value))
				{
					this.OnBirthCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateNo = value;
					this.SendPropertyChanged("BirthCertificateNo");
					this.OnBirthCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateCityID", DbType="SmallInt")]
		public System.Nullable<short> BirthCertificateCityID
		{
			get
			{
				return this._BirthCertificateCityID;
			}
			set
			{
				if ((this._BirthCertificateCityID != value))
				{
					if (this._City1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBirthCertificateCityIDChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateCityID = value;
					this.SendPropertyChanged("BirthCertificateCityID");
					this.OnBirthCertificateCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCityID", DbType="SmallInt")]
		public System.Nullable<short> BirthCityID
		{
			get
			{
				return this._BirthCityID;
			}
			set
			{
				if ((this._BirthCityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBirthCityIDChanging(value);
					this.SendPropertyChanging();
					this._BirthCityID = value;
					this.SendPropertyChanged("BirthCityID");
					this.OnBirthCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalLicence", DbType="NVarChar(50)")]
		public string EducationalLicence
		{
			get
			{
				return this._EducationalLicence;
			}
			set
			{
				if ((this._EducationalLicence != value))
				{
					this.OnEducationalLicenceChanging(value);
					this.SendPropertyChanging();
					this._EducationalLicence = value;
					this.SendPropertyChanged("EducationalLicence");
					this.OnEducationalLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryServiceState", DbType="NVarChar(50)")]
		public string MilitaryServiceState
		{
			get
			{
				return this._MilitaryServiceState;
			}
			set
			{
				if ((this._MilitaryServiceState != value))
				{
					this.OnMilitaryServiceStateChanging(value);
					this.SendPropertyChanging();
					this._MilitaryServiceState = value;
					this.SendPropertyChanged("MilitaryServiceState");
					this.OnMilitaryServiceStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaftJobExperience", DbType="TinyInt")]
		public System.Nullable<byte> NaftJobExperience
		{
			get
			{
				return this._NaftJobExperience;
			}
			set
			{
				if ((this._NaftJobExperience != value))
				{
					this.OnNaftJobExperienceChanging(value);
					this.SendPropertyChanging();
					this._NaftJobExperience = value;
					this.SendPropertyChanged("NaftJobExperience");
					this.OnNaftJobExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(25)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smoking", DbType="Bit")]
		public System.Nullable<bool> Smoking
		{
			get
			{
				return this._Smoking;
			}
			set
			{
				if ((this._Smoking != value))
				{
					this.OnSmokingChanging(value);
					this.SendPropertyChanging();
					this._Smoking = value;
					this.SendPropertyChanged("Smoking");
					this.OnSmokingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySmokeCount", DbType="SmallInt")]
		public System.Nullable<short> DailySmokeCount
		{
			get
			{
				return this._DailySmokeCount;
			}
			set
			{
				if ((this._DailySmokeCount != value))
				{
					this.OnDailySmokeCountChanging(value);
					this.SendPropertyChanging();
					this._DailySmokeCount = value;
					this.SendPropertyChanged("DailySmokeCount");
					this.OnDailySmokeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokingYears", DbType="TinyInt")]
		public System.Nullable<byte> SmokingYears
		{
			get
			{
				return this._SmokingYears;
			}
			set
			{
				if ((this._SmokingYears != value))
				{
					this.OnSmokingYearsChanging(value);
					this.SendPropertyChanging();
					this._SmokingYears = value;
					this.SendPropertyChanged("SmokingYears");
					this.OnSmokingYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidCenterID", DbType="Int")]
		public System.Nullable<int> ValidCenterID
		{
			get
			{
				return this._ValidCenterID;
			}
			set
			{
				if ((this._ValidCenterID != value))
				{
					if (this._Tbl_ValidCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValidCenterIDChanging(value);
					this.SendPropertyChanging();
					this._ValidCenterID = value;
					this.SendPropertyChanged("ValidCenterID");
					this.OnValidCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Document", Storage="_Documents", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_FamilyIllnessHistory", Storage="_FamilyIllnessHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<FamilyIllnessHistory> FamilyIllnessHistories
		{
			get
			{
				return this._FamilyIllnessHistories;
			}
			set
			{
				this._FamilyIllnessHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_JobHistory", Storage="_JobHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<JobHistory> JobHistories
		{
			get
			{
				return this._JobHistories;
			}
			set
			{
				this._JobHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_QuestionResultM", Storage="_QuestionResultMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<QuestionResultM> QuestionResultMs
		{
			get
			{
				return this._QuestionResultMs;
			}
			set
			{
				this._QuestionResultMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Surveillance", Storage="_Surveillances", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Surveillance> Surveillances
		{
			get
			{
				return this._Surveillances;
			}
			set
			{
				this._Surveillances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Person", Storage="_City", ThisKey="BirthCityID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._BirthCityID = value.ID;
					}
					else
					{
						this._BirthCityID = default(Nullable<short>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Person1", Storage="_City1", ThisKey="BirthCertificateCityID", OtherKey="ID", IsForeignKey=true)]
		public City City1
		{
			get
			{
				return this._City1.Entity;
			}
			set
			{
				City previousValue = this._City1.Entity;
				if (((previousValue != value) 
							|| (this._City1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City1.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._City1.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._BirthCertificateCityID = value.ID;
					}
					else
					{
						this._BirthCertificateCityID = default(Nullable<short>);
					}
					this.SendPropertyChanged("City1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Person", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ValidCenter_Person", Storage="_Tbl_ValidCenter", ThisKey="ValidCenterID", OtherKey="IDValidCenter", IsForeignKey=true)]
		public Tbl_ValidCenter Tbl_ValidCenter
		{
			get
			{
				return this._Tbl_ValidCenter.Entity;
			}
			set
			{
				Tbl_ValidCenter previousValue = this._Tbl_ValidCenter.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_ValidCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_ValidCenter.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Tbl_ValidCenter.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._ValidCenterID = value.IDValidCenter;
					}
					else
					{
						this._ValidCenterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tbl_ValidCenter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_FamilyIllnessHistories(FamilyIllnessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_FamilyIllnessHistories(FamilyIllnessHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_QuestionResultMs(QuestionResultM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_QuestionResultMs(QuestionResultM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PsychologyTest")]
	public partial class PsychologyTest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _DASS42Date;
		
		private string _DASS42Time;
		
		private System.Nullable<byte> _StressScore;
		
		private System.Nullable<int> _StressResult;
		
		private System.Nullable<byte> _AnxietyScore;
		
		private System.Nullable<int> _AnxietyResult;
		
		private System.Nullable<byte> _DepressionScore;
		
		private System.Nullable<int> _DepressionResult;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnDASS42DateChanging(string value);
    partial void OnDASS42DateChanged();
    partial void OnDASS42TimeChanging(string value);
    partial void OnDASS42TimeChanged();
    partial void OnStressScoreChanging(System.Nullable<byte> value);
    partial void OnStressScoreChanged();
    partial void OnStressResultChanging(System.Nullable<int> value);
    partial void OnStressResultChanged();
    partial void OnAnxietyScoreChanging(System.Nullable<byte> value);
    partial void OnAnxietyScoreChanged();
    partial void OnAnxietyResultChanging(System.Nullable<int> value);
    partial void OnAnxietyResultChanged();
    partial void OnDepressionScoreChanging(System.Nullable<byte> value);
    partial void OnDepressionScoreChanged();
    partial void OnDepressionResultChanging(System.Nullable<int> value);
    partial void OnDepressionResultChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public PsychologyTest()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DASS42Date", DbType="NChar(10)")]
		public string DASS42Date
		{
			get
			{
				return this._DASS42Date;
			}
			set
			{
				if ((this._DASS42Date != value))
				{
					this.OnDASS42DateChanging(value);
					this.SendPropertyChanging();
					this._DASS42Date = value;
					this.SendPropertyChanged("DASS42Date");
					this.OnDASS42DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DASS42Time", DbType="NChar(5)")]
		public string DASS42Time
		{
			get
			{
				return this._DASS42Time;
			}
			set
			{
				if ((this._DASS42Time != value))
				{
					this.OnDASS42TimeChanging(value);
					this.SendPropertyChanging();
					this._DASS42Time = value;
					this.SendPropertyChanged("DASS42Time");
					this.OnDASS42TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StressScore", DbType="TinyInt")]
		public System.Nullable<byte> StressScore
		{
			get
			{
				return this._StressScore;
			}
			set
			{
				if ((this._StressScore != value))
				{
					this.OnStressScoreChanging(value);
					this.SendPropertyChanging();
					this._StressScore = value;
					this.SendPropertyChanged("StressScore");
					this.OnStressScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StressResult", DbType="Int")]
		public System.Nullable<int> StressResult
		{
			get
			{
				return this._StressResult;
			}
			set
			{
				if ((this._StressResult != value))
				{
					this.OnStressResultChanging(value);
					this.SendPropertyChanging();
					this._StressResult = value;
					this.SendPropertyChanged("StressResult");
					this.OnStressResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnxietyScore", DbType="TinyInt")]
		public System.Nullable<byte> AnxietyScore
		{
			get
			{
				return this._AnxietyScore;
			}
			set
			{
				if ((this._AnxietyScore != value))
				{
					this.OnAnxietyScoreChanging(value);
					this.SendPropertyChanging();
					this._AnxietyScore = value;
					this.SendPropertyChanged("AnxietyScore");
					this.OnAnxietyScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnxietyResult", DbType="Int")]
		public System.Nullable<int> AnxietyResult
		{
			get
			{
				return this._AnxietyResult;
			}
			set
			{
				if ((this._AnxietyResult != value))
				{
					this.OnAnxietyResultChanging(value);
					this.SendPropertyChanging();
					this._AnxietyResult = value;
					this.SendPropertyChanged("AnxietyResult");
					this.OnAnxietyResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepressionScore", DbType="TinyInt")]
		public System.Nullable<byte> DepressionScore
		{
			get
			{
				return this._DepressionScore;
			}
			set
			{
				if ((this._DepressionScore != value))
				{
					this.OnDepressionScoreChanging(value);
					this.SendPropertyChanging();
					this._DepressionScore = value;
					this.SendPropertyChanged("DepressionScore");
					this.OnDepressionScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepressionResult", DbType="Int")]
		public System.Nullable<int> DepressionResult
		{
			get
			{
				return this._DepressionResult;
			}
			set
			{
				if ((this._DepressionResult != value))
				{
					this.OnDepressionResultChanging(value);
					this.SendPropertyChanging();
					this._DepressionResult = value;
					this.SendPropertyChanged("DepressionResult");
					this.OnDepressionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_PsychologyTest", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.PsychologyTests.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.PsychologyTests.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _KeyWords;
		
		private EntitySet<QuestionResultD> _QuestionResultDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnKeyWordsChanging(string value);
    partial void OnKeyWordsChanged();
    #endregion
		
		public Question()
		{
			this._QuestionResultDs = new EntitySet<QuestionResultD>(new Action<QuestionResultD>(this.attach_QuestionResultDs), new Action<QuestionResultD>(this.detach_QuestionResultDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="NVarChar(500)")]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this.OnKeyWordsChanging(value);
					this.SendPropertyChanging();
					this._KeyWords = value;
					this.SendPropertyChanged("KeyWords");
					this.OnKeyWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_QuestionResultD", Storage="_QuestionResultDs", ThisKey="ID", OtherKey="QuestionID")]
		public EntitySet<QuestionResultD> QuestionResultDs
		{
			get
			{
				return this._QuestionResultDs;
			}
			set
			{
				this._QuestionResultDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionResultDs(QuestionResultD entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_QuestionResultDs(QuestionResultD entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionResultD")]
	public partial class QuestionResultD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _QuestionResultMID;
		
		private System.Nullable<int> _QuestionID;
		
		private System.Nullable<bool> _Yes;
		
		private string _Description;
		
		private System.Nullable<short> _PacketYear;
		
		private System.Nullable<short> _YearCount;
		
		private System.Nullable<short> _SigarretCount;
		
		private EntityRef<Question> _Question;
		
		private EntityRef<QuestionResultM> _QuestionResultM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnQuestionResultMIDChanging(System.Guid value);
    partial void OnQuestionResultMIDChanged();
    partial void OnQuestionIDChanging(System.Nullable<int> value);
    partial void OnQuestionIDChanged();
    partial void OnYesChanging(System.Nullable<bool> value);
    partial void OnYesChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPacketYearChanging(System.Nullable<short> value);
    partial void OnPacketYearChanged();
    partial void OnYearCountChanging(System.Nullable<short> value);
    partial void OnYearCountChanged();
    partial void OnSigarretCountChanging(System.Nullable<short> value);
    partial void OnSigarretCountChanged();
    #endregion
		
		public QuestionResultD()
		{
			this._Question = default(EntityRef<Question>);
			this._QuestionResultM = default(EntityRef<QuestionResultM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionResultMID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QuestionResultMID
		{
			get
			{
				return this._QuestionResultMID;
			}
			set
			{
				if ((this._QuestionResultMID != value))
				{
					if (this._QuestionResultM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionResultMIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionResultMID = value;
					this.SendPropertyChanged("QuestionResultMID");
					this.OnQuestionResultMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int")]
		public System.Nullable<int> QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yes", DbType="Bit")]
		public System.Nullable<bool> Yes
		{
			get
			{
				return this._Yes;
			}
			set
			{
				if ((this._Yes != value))
				{
					this.OnYesChanging(value);
					this.SendPropertyChanging();
					this._Yes = value;
					this.SendPropertyChanged("Yes");
					this.OnYesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacketYear", DbType="SmallInt")]
		public System.Nullable<short> PacketYear
		{
			get
			{
				return this._PacketYear;
			}
			set
			{
				if ((this._PacketYear != value))
				{
					this.OnPacketYearChanging(value);
					this.SendPropertyChanging();
					this._PacketYear = value;
					this.SendPropertyChanged("PacketYear");
					this.OnPacketYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearCount", DbType="SmallInt")]
		public System.Nullable<short> YearCount
		{
			get
			{
				return this._YearCount;
			}
			set
			{
				if ((this._YearCount != value))
				{
					this.OnYearCountChanging(value);
					this.SendPropertyChanging();
					this._YearCount = value;
					this.SendPropertyChanged("YearCount");
					this.OnYearCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SigarretCount", DbType="SmallInt")]
		public System.Nullable<short> SigarretCount
		{
			get
			{
				return this._SigarretCount;
			}
			set
			{
				if ((this._SigarretCount != value))
				{
					this.OnSigarretCountChanging(value);
					this.SendPropertyChanging();
					this._SigarretCount = value;
					this.SendPropertyChanged("SigarretCount");
					this.OnSigarretCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_QuestionResultD", Storage="_Question", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.QuestionResultDs.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.QuestionResultDs.Add(this);
						this._QuestionID = value.ID;
					}
					else
					{
						this._QuestionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionResultM_QuestionResultD", Storage="_QuestionResultM", ThisKey="QuestionResultMID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuestionResultM QuestionResultM
		{
			get
			{
				return this._QuestionResultM.Entity;
			}
			set
			{
				QuestionResultM previousValue = this._QuestionResultM.Entity;
				if (((previousValue != value) 
							|| (this._QuestionResultM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionResultM.Entity = null;
						previousValue.QuestionResultDs.Remove(this);
					}
					this._QuestionResultM.Entity = value;
					if ((value != null))
					{
						value.QuestionResultDs.Add(this);
						this._QuestionResultMID = value.ID;
					}
					else
					{
						this._QuestionResultMID = default(System.Guid);
					}
					this.SendPropertyChanged("QuestionResultM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionResultM")]
	public partial class QuestionResultM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private bool _Deleted;
		
		private string _Date;
		
		private string _Time;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private EntitySet<QuestionResultD> _QuestionResultDs;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    #endregion
		
		public QuestionResultM()
		{
			this._QuestionResultDs = new EntitySet<QuestionResultD>(new Action<QuestionResultD>(this.attach_QuestionResultDs), new Action<QuestionResultD>(this.detach_QuestionResultDs));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(5)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionResultM_QuestionResultD", Storage="_QuestionResultDs", ThisKey="ID", OtherKey="QuestionResultMID")]
		public EntitySet<QuestionResultD> QuestionResultDs
		{
			get
			{
				return this._QuestionResultDs;
			}
			set
			{
				this._QuestionResultDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_QuestionResultM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.QuestionResultMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.QuestionResultMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionResultDs(QuestionResultD entity)
		{
			this.SendPropertyChanging();
			entity.QuestionResultM = this;
		}
		
		private void detach_QuestionResultDs(QuestionResultD entity)
		{
			this.SendPropertyChanging();
			entity.QuestionResultM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Radiography")]
	public partial class Radiography : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocumentID;
		
		private string _MRIDate;
		
		private string _MRITime;
		
		private System.Nullable<int> _MRIInterpreter;
		
		private System.Nullable<int> _MRIDone;
		
		private System.Nullable<bool> _Skull;
		
		private string _SkullD;
		
		private System.Nullable<bool> _Spine;
		
		private string _SpineD;
		
		private System.Nullable<bool> _Shoulder;
		
		private string _ShoulderD;
		
		private System.Nullable<bool> _Knee;
		
		private string _KneeD;
		
		private string _RadiographyDate;
		
		private string _RadiographyTime;
		
		private System.Nullable<int> _RadiographyInterpreter;
		
		private System.Nullable<int> _RadiographyDone;
		
		private System.Nullable<bool> _CXRLat;
		
		private string _CXRLatD;
		
		private System.Nullable<bool> _CXRPA;
		
		private string _CXRPAD;
		
		private System.Nullable<bool> _SinusParanazal;
		
		private string _SinusParanazalD;
		
		private System.Nullable<bool> _IVP;
		
		private string _IVPD;
		
		private System.Nullable<bool> _SpineNeck;
		
		private string _SpineNeckD;
		
		private System.Nullable<bool> _SpineBack;
		
		private string _SpineBackD;
		
		private System.Nullable<bool> _SpineKamari;
		
		private string _SpineKamariD;
		
		private System.Nullable<bool> _RadiographySkull;
		
		private string _RadiographySkullD;
		
		private System.Nullable<bool> _TopOrgan;
		
		private string _TopOrganD;
		
		private System.Nullable<bool> _BottomOrgan;
		
		private string _BottomOrganD;
		
		private System.Nullable<bool> _SimplyBelly;
		
		private string _SimpleBellyD;
		
		private System.Nullable<bool> _BariumEnma;
		
		private string _BariumEnmaD;
		
		private System.Nullable<bool> _BariumMil;
		
		private string _BariumMilD;
		
		private string _SonographyDate;
		
		private string _SonographyTime;
		
		private System.Nullable<int> _SonographyInterpreter;
		
		private System.Nullable<int> _SonographyDone;
		
		private System.Nullable<bool> _ShekamLagan;
		
		private string _ShekamLaganD;
		
		private System.Nullable<bool> _KabedTahhalKiseSafra;
		
		private string _KabedTahhalKiseSafraD;
		
		private System.Nullable<bool> _ProstatBeyzehha;
		
		private string _ProstatBeyzehhaD;
		
		private System.Nullable<bool> _RahemTokhmdan;
		
		private string _RahemTokhmdanD;
		
		private System.Nullable<bool> _Breasts;
		
		private string _BreastsD;
		
		private System.Nullable<bool> _KoliyeMasane;
		
		private string _KoliyeMasaneD;
		
		private string _CTScanDate;
		
		private string _CTScanTime;
		
		private System.Nullable<int> _CTScanInterpreter;
		
		private System.Nullable<int> _CTScanDone;
		
		private System.Nullable<bool> _Tiroeed;
		
		private string _TiroeedD;
		
		private System.Nullable<bool> _Brain;
		
		private string _BrainD;
		
		private System.Nullable<bool> _GhafaseSadri;
		
		private string _GhafaseSadriD;
		
		private System.Nullable<bool> _CTScanAbdomen;
		
		private string _CTScanAbdomenD;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private bool _Deleted;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocumentIDChanging(System.Guid value);
    partial void OnDocumentIDChanged();
    partial void OnMRIDateChanging(string value);
    partial void OnMRIDateChanged();
    partial void OnMRITimeChanging(string value);
    partial void OnMRITimeChanged();
    partial void OnMRIInterpreterChanging(System.Nullable<int> value);
    partial void OnMRIInterpreterChanged();
    partial void OnMRIDoneChanging(System.Nullable<int> value);
    partial void OnMRIDoneChanged();
    partial void OnSkullChanging(System.Nullable<bool> value);
    partial void OnSkullChanged();
    partial void OnSkullDChanging(string value);
    partial void OnSkullDChanged();
    partial void OnSpineChanging(System.Nullable<bool> value);
    partial void OnSpineChanged();
    partial void OnSpineDChanging(string value);
    partial void OnSpineDChanged();
    partial void OnShoulderChanging(System.Nullable<bool> value);
    partial void OnShoulderChanged();
    partial void OnShoulderDChanging(string value);
    partial void OnShoulderDChanged();
    partial void OnKneeChanging(System.Nullable<bool> value);
    partial void OnKneeChanged();
    partial void OnKneeDChanging(string value);
    partial void OnKneeDChanged();
    partial void OnRadiographyDateChanging(string value);
    partial void OnRadiographyDateChanged();
    partial void OnRadiographyTimeChanging(string value);
    partial void OnRadiographyTimeChanged();
    partial void OnRadiographyInterpreterChanging(System.Nullable<int> value);
    partial void OnRadiographyInterpreterChanged();
    partial void OnRadiographyDoneChanging(System.Nullable<int> value);
    partial void OnRadiographyDoneChanged();
    partial void OnCXRLatChanging(System.Nullable<bool> value);
    partial void OnCXRLatChanged();
    partial void OnCXRLatDChanging(string value);
    partial void OnCXRLatDChanged();
    partial void OnCXRPAChanging(System.Nullable<bool> value);
    partial void OnCXRPAChanged();
    partial void OnCXRPADChanging(string value);
    partial void OnCXRPADChanged();
    partial void OnSinusParanazalChanging(System.Nullable<bool> value);
    partial void OnSinusParanazalChanged();
    partial void OnSinusParanazalDChanging(string value);
    partial void OnSinusParanazalDChanged();
    partial void OnIVPChanging(System.Nullable<bool> value);
    partial void OnIVPChanged();
    partial void OnIVPDChanging(string value);
    partial void OnIVPDChanged();
    partial void OnSpineNeckChanging(System.Nullable<bool> value);
    partial void OnSpineNeckChanged();
    partial void OnSpineNeckDChanging(string value);
    partial void OnSpineNeckDChanged();
    partial void OnSpineBackChanging(System.Nullable<bool> value);
    partial void OnSpineBackChanged();
    partial void OnSpineBackDChanging(string value);
    partial void OnSpineBackDChanged();
    partial void OnSpineKamariChanging(System.Nullable<bool> value);
    partial void OnSpineKamariChanged();
    partial void OnSpineKamariDChanging(string value);
    partial void OnSpineKamariDChanged();
    partial void OnRadiographySkullChanging(System.Nullable<bool> value);
    partial void OnRadiographySkullChanged();
    partial void OnRadiographySkullDChanging(string value);
    partial void OnRadiographySkullDChanged();
    partial void OnTopOrganChanging(System.Nullable<bool> value);
    partial void OnTopOrganChanged();
    partial void OnTopOrganDChanging(string value);
    partial void OnTopOrganDChanged();
    partial void OnBottomOrganChanging(System.Nullable<bool> value);
    partial void OnBottomOrganChanged();
    partial void OnBottomOrganDChanging(string value);
    partial void OnBottomOrganDChanged();
    partial void OnSimplyBellyChanging(System.Nullable<bool> value);
    partial void OnSimplyBellyChanged();
    partial void OnSimpleBellyDChanging(string value);
    partial void OnSimpleBellyDChanged();
    partial void OnBariumEnmaChanging(System.Nullable<bool> value);
    partial void OnBariumEnmaChanged();
    partial void OnBariumEnmaDChanging(string value);
    partial void OnBariumEnmaDChanged();
    partial void OnBariumMilChanging(System.Nullable<bool> value);
    partial void OnBariumMilChanged();
    partial void OnBariumMilDChanging(string value);
    partial void OnBariumMilDChanged();
    partial void OnSonographyDateChanging(string value);
    partial void OnSonographyDateChanged();
    partial void OnSonographyTimeChanging(string value);
    partial void OnSonographyTimeChanged();
    partial void OnSonographyInterpreterChanging(System.Nullable<int> value);
    partial void OnSonographyInterpreterChanged();
    partial void OnSonographyDoneChanging(System.Nullable<int> value);
    partial void OnSonographyDoneChanged();
    partial void OnShekamLaganChanging(System.Nullable<bool> value);
    partial void OnShekamLaganChanged();
    partial void OnShekamLaganDChanging(string value);
    partial void OnShekamLaganDChanged();
    partial void OnKabedTahhalKiseSafraChanging(System.Nullable<bool> value);
    partial void OnKabedTahhalKiseSafraChanged();
    partial void OnKabedTahhalKiseSafraDChanging(string value);
    partial void OnKabedTahhalKiseSafraDChanged();
    partial void OnProstatBeyzehhaChanging(System.Nullable<bool> value);
    partial void OnProstatBeyzehhaChanged();
    partial void OnProstatBeyzehhaDChanging(string value);
    partial void OnProstatBeyzehhaDChanged();
    partial void OnRahemTokhmdanChanging(System.Nullable<bool> value);
    partial void OnRahemTokhmdanChanged();
    partial void OnRahemTokhmdanDChanging(string value);
    partial void OnRahemTokhmdanDChanged();
    partial void OnBreastsChanging(System.Nullable<bool> value);
    partial void OnBreastsChanged();
    partial void OnBreastsDChanging(string value);
    partial void OnBreastsDChanged();
    partial void OnKoliyeMasaneChanging(System.Nullable<bool> value);
    partial void OnKoliyeMasaneChanged();
    partial void OnKoliyeMasaneDChanging(string value);
    partial void OnKoliyeMasaneDChanged();
    partial void OnCTScanDateChanging(string value);
    partial void OnCTScanDateChanged();
    partial void OnCTScanTimeChanging(string value);
    partial void OnCTScanTimeChanged();
    partial void OnCTScanInterpreterChanging(System.Nullable<int> value);
    partial void OnCTScanInterpreterChanged();
    partial void OnCTScanDoneChanging(System.Nullable<int> value);
    partial void OnCTScanDoneChanged();
    partial void OnTiroeedChanging(System.Nullable<bool> value);
    partial void OnTiroeedChanged();
    partial void OnTiroeedDChanging(string value);
    partial void OnTiroeedDChanged();
    partial void OnBrainChanging(System.Nullable<bool> value);
    partial void OnBrainChanged();
    partial void OnBrainDChanging(string value);
    partial void OnBrainDChanged();
    partial void OnGhafaseSadriChanging(System.Nullable<bool> value);
    partial void OnGhafaseSadriChanged();
    partial void OnGhafaseSadriDChanging(string value);
    partial void OnGhafaseSadriDChanged();
    partial void OnCTScanAbdomenChanging(System.Nullable<bool> value);
    partial void OnCTScanAbdomenChanged();
    partial void OnCTScanAbdomenDChanging(string value);
    partial void OnCTScanAbdomenDChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Radiography()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRIDate", DbType="NChar(10)")]
		public string MRIDate
		{
			get
			{
				return this._MRIDate;
			}
			set
			{
				if ((this._MRIDate != value))
				{
					this.OnMRIDateChanging(value);
					this.SendPropertyChanging();
					this._MRIDate = value;
					this.SendPropertyChanged("MRIDate");
					this.OnMRIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRITime", DbType="NChar(5)")]
		public string MRITime
		{
			get
			{
				return this._MRITime;
			}
			set
			{
				if ((this._MRITime != value))
				{
					this.OnMRITimeChanging(value);
					this.SendPropertyChanging();
					this._MRITime = value;
					this.SendPropertyChanged("MRITime");
					this.OnMRITimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRIInterpreter", DbType="Int")]
		public System.Nullable<int> MRIInterpreter
		{
			get
			{
				return this._MRIInterpreter;
			}
			set
			{
				if ((this._MRIInterpreter != value))
				{
					this.OnMRIInterpreterChanging(value);
					this.SendPropertyChanging();
					this._MRIInterpreter = value;
					this.SendPropertyChanged("MRIInterpreter");
					this.OnMRIInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRIDone", DbType="Int")]
		public System.Nullable<int> MRIDone
		{
			get
			{
				return this._MRIDone;
			}
			set
			{
				if ((this._MRIDone != value))
				{
					this.OnMRIDoneChanging(value);
					this.SendPropertyChanging();
					this._MRIDone = value;
					this.SendPropertyChanged("MRIDone");
					this.OnMRIDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skull", DbType="Bit")]
		public System.Nullable<bool> Skull
		{
			get
			{
				return this._Skull;
			}
			set
			{
				if ((this._Skull != value))
				{
					this.OnSkullChanging(value);
					this.SendPropertyChanging();
					this._Skull = value;
					this.SendPropertyChanged("Skull");
					this.OnSkullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkullD", DbType="NVarChar(MAX)")]
		public string SkullD
		{
			get
			{
				return this._SkullD;
			}
			set
			{
				if ((this._SkullD != value))
				{
					this.OnSkullDChanging(value);
					this.SendPropertyChanging();
					this._SkullD = value;
					this.SendPropertyChanged("SkullD");
					this.OnSkullDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spine", DbType="Bit")]
		public System.Nullable<bool> Spine
		{
			get
			{
				return this._Spine;
			}
			set
			{
				if ((this._Spine != value))
				{
					this.OnSpineChanging(value);
					this.SendPropertyChanging();
					this._Spine = value;
					this.SendPropertyChanged("Spine");
					this.OnSpineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineD", DbType="NVarChar(MAX)")]
		public string SpineD
		{
			get
			{
				return this._SpineD;
			}
			set
			{
				if ((this._SpineD != value))
				{
					this.OnSpineDChanging(value);
					this.SendPropertyChanging();
					this._SpineD = value;
					this.SendPropertyChanged("SpineD");
					this.OnSpineDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shoulder", DbType="Bit")]
		public System.Nullable<bool> Shoulder
		{
			get
			{
				return this._Shoulder;
			}
			set
			{
				if ((this._Shoulder != value))
				{
					this.OnShoulderChanging(value);
					this.SendPropertyChanging();
					this._Shoulder = value;
					this.SendPropertyChanged("Shoulder");
					this.OnShoulderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoulderD", DbType="NVarChar(MAX)")]
		public string ShoulderD
		{
			get
			{
				return this._ShoulderD;
			}
			set
			{
				if ((this._ShoulderD != value))
				{
					this.OnShoulderDChanging(value);
					this.SendPropertyChanging();
					this._ShoulderD = value;
					this.SendPropertyChanged("ShoulderD");
					this.OnShoulderDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Knee", DbType="Bit")]
		public System.Nullable<bool> Knee
		{
			get
			{
				return this._Knee;
			}
			set
			{
				if ((this._Knee != value))
				{
					this.OnKneeChanging(value);
					this.SendPropertyChanging();
					this._Knee = value;
					this.SendPropertyChanged("Knee");
					this.OnKneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KneeD", DbType="NVarChar(MAX)")]
		public string KneeD
		{
			get
			{
				return this._KneeD;
			}
			set
			{
				if ((this._KneeD != value))
				{
					this.OnKneeDChanging(value);
					this.SendPropertyChanging();
					this._KneeD = value;
					this.SendPropertyChanged("KneeD");
					this.OnKneeDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadiographyDate", DbType="NChar(10)")]
		public string RadiographyDate
		{
			get
			{
				return this._RadiographyDate;
			}
			set
			{
				if ((this._RadiographyDate != value))
				{
					this.OnRadiographyDateChanging(value);
					this.SendPropertyChanging();
					this._RadiographyDate = value;
					this.SendPropertyChanged("RadiographyDate");
					this.OnRadiographyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadiographyTime", DbType="NChar(5)")]
		public string RadiographyTime
		{
			get
			{
				return this._RadiographyTime;
			}
			set
			{
				if ((this._RadiographyTime != value))
				{
					this.OnRadiographyTimeChanging(value);
					this.SendPropertyChanging();
					this._RadiographyTime = value;
					this.SendPropertyChanged("RadiographyTime");
					this.OnRadiographyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadiographyInterpreter", DbType="Int")]
		public System.Nullable<int> RadiographyInterpreter
		{
			get
			{
				return this._RadiographyInterpreter;
			}
			set
			{
				if ((this._RadiographyInterpreter != value))
				{
					this.OnRadiographyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._RadiographyInterpreter = value;
					this.SendPropertyChanged("RadiographyInterpreter");
					this.OnRadiographyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadiographyDone", DbType="Int")]
		public System.Nullable<int> RadiographyDone
		{
			get
			{
				return this._RadiographyDone;
			}
			set
			{
				if ((this._RadiographyDone != value))
				{
					this.OnRadiographyDoneChanging(value);
					this.SendPropertyChanging();
					this._RadiographyDone = value;
					this.SendPropertyChanged("RadiographyDone");
					this.OnRadiographyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXRLat", DbType="Bit")]
		public System.Nullable<bool> CXRLat
		{
			get
			{
				return this._CXRLat;
			}
			set
			{
				if ((this._CXRLat != value))
				{
					this.OnCXRLatChanging(value);
					this.SendPropertyChanging();
					this._CXRLat = value;
					this.SendPropertyChanged("CXRLat");
					this.OnCXRLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXRLatD", DbType="NVarChar(MAX)")]
		public string CXRLatD
		{
			get
			{
				return this._CXRLatD;
			}
			set
			{
				if ((this._CXRLatD != value))
				{
					this.OnCXRLatDChanging(value);
					this.SendPropertyChanging();
					this._CXRLatD = value;
					this.SendPropertyChanged("CXRLatD");
					this.OnCXRLatDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXRPA", DbType="Bit")]
		public System.Nullable<bool> CXRPA
		{
			get
			{
				return this._CXRPA;
			}
			set
			{
				if ((this._CXRPA != value))
				{
					this.OnCXRPAChanging(value);
					this.SendPropertyChanging();
					this._CXRPA = value;
					this.SendPropertyChanged("CXRPA");
					this.OnCXRPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXRPAD", DbType="NVarChar(MAX)")]
		public string CXRPAD
		{
			get
			{
				return this._CXRPAD;
			}
			set
			{
				if ((this._CXRPAD != value))
				{
					this.OnCXRPADChanging(value);
					this.SendPropertyChanging();
					this._CXRPAD = value;
					this.SendPropertyChanged("CXRPAD");
					this.OnCXRPADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SinusParanazal", DbType="Bit")]
		public System.Nullable<bool> SinusParanazal
		{
			get
			{
				return this._SinusParanazal;
			}
			set
			{
				if ((this._SinusParanazal != value))
				{
					this.OnSinusParanazalChanging(value);
					this.SendPropertyChanging();
					this._SinusParanazal = value;
					this.SendPropertyChanged("SinusParanazal");
					this.OnSinusParanazalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SinusParanazalD", DbType="NVarChar(MAX)")]
		public string SinusParanazalD
		{
			get
			{
				return this._SinusParanazalD;
			}
			set
			{
				if ((this._SinusParanazalD != value))
				{
					this.OnSinusParanazalDChanging(value);
					this.SendPropertyChanging();
					this._SinusParanazalD = value;
					this.SendPropertyChanged("SinusParanazalD");
					this.OnSinusParanazalDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVP", DbType="Bit")]
		public System.Nullable<bool> IVP
		{
			get
			{
				return this._IVP;
			}
			set
			{
				if ((this._IVP != value))
				{
					this.OnIVPChanging(value);
					this.SendPropertyChanging();
					this._IVP = value;
					this.SendPropertyChanged("IVP");
					this.OnIVPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVPD", DbType="NVarChar(MAX)")]
		public string IVPD
		{
			get
			{
				return this._IVPD;
			}
			set
			{
				if ((this._IVPD != value))
				{
					this.OnIVPDChanging(value);
					this.SendPropertyChanging();
					this._IVPD = value;
					this.SendPropertyChanged("IVPD");
					this.OnIVPDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineNeck", DbType="Bit")]
		public System.Nullable<bool> SpineNeck
		{
			get
			{
				return this._SpineNeck;
			}
			set
			{
				if ((this._SpineNeck != value))
				{
					this.OnSpineNeckChanging(value);
					this.SendPropertyChanging();
					this._SpineNeck = value;
					this.SendPropertyChanged("SpineNeck");
					this.OnSpineNeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineNeckD", DbType="NVarChar(MAX)")]
		public string SpineNeckD
		{
			get
			{
				return this._SpineNeckD;
			}
			set
			{
				if ((this._SpineNeckD != value))
				{
					this.OnSpineNeckDChanging(value);
					this.SendPropertyChanging();
					this._SpineNeckD = value;
					this.SendPropertyChanged("SpineNeckD");
					this.OnSpineNeckDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineBack", DbType="Bit")]
		public System.Nullable<bool> SpineBack
		{
			get
			{
				return this._SpineBack;
			}
			set
			{
				if ((this._SpineBack != value))
				{
					this.OnSpineBackChanging(value);
					this.SendPropertyChanging();
					this._SpineBack = value;
					this.SendPropertyChanged("SpineBack");
					this.OnSpineBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineBackD", DbType="NVarChar(MAX)")]
		public string SpineBackD
		{
			get
			{
				return this._SpineBackD;
			}
			set
			{
				if ((this._SpineBackD != value))
				{
					this.OnSpineBackDChanging(value);
					this.SendPropertyChanging();
					this._SpineBackD = value;
					this.SendPropertyChanged("SpineBackD");
					this.OnSpineBackDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineKamari", DbType="Bit")]
		public System.Nullable<bool> SpineKamari
		{
			get
			{
				return this._SpineKamari;
			}
			set
			{
				if ((this._SpineKamari != value))
				{
					this.OnSpineKamariChanging(value);
					this.SendPropertyChanging();
					this._SpineKamari = value;
					this.SendPropertyChanged("SpineKamari");
					this.OnSpineKamariChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpineKamariD", DbType="NVarChar(MAX)")]
		public string SpineKamariD
		{
			get
			{
				return this._SpineKamariD;
			}
			set
			{
				if ((this._SpineKamariD != value))
				{
					this.OnSpineKamariDChanging(value);
					this.SendPropertyChanging();
					this._SpineKamariD = value;
					this.SendPropertyChanged("SpineKamariD");
					this.OnSpineKamariDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadiographySkull", DbType="Bit")]
		public System.Nullable<bool> RadiographySkull
		{
			get
			{
				return this._RadiographySkull;
			}
			set
			{
				if ((this._RadiographySkull != value))
				{
					this.OnRadiographySkullChanging(value);
					this.SendPropertyChanging();
					this._RadiographySkull = value;
					this.SendPropertyChanged("RadiographySkull");
					this.OnRadiographySkullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadiographySkullD", DbType="NVarChar(MAX)")]
		public string RadiographySkullD
		{
			get
			{
				return this._RadiographySkullD;
			}
			set
			{
				if ((this._RadiographySkullD != value))
				{
					this.OnRadiographySkullDChanging(value);
					this.SendPropertyChanging();
					this._RadiographySkullD = value;
					this.SendPropertyChanged("RadiographySkullD");
					this.OnRadiographySkullDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopOrgan", DbType="Bit")]
		public System.Nullable<bool> TopOrgan
		{
			get
			{
				return this._TopOrgan;
			}
			set
			{
				if ((this._TopOrgan != value))
				{
					this.OnTopOrganChanging(value);
					this.SendPropertyChanging();
					this._TopOrgan = value;
					this.SendPropertyChanged("TopOrgan");
					this.OnTopOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopOrganD", DbType="NVarChar(MAX)")]
		public string TopOrganD
		{
			get
			{
				return this._TopOrganD;
			}
			set
			{
				if ((this._TopOrganD != value))
				{
					this.OnTopOrganDChanging(value);
					this.SendPropertyChanging();
					this._TopOrganD = value;
					this.SendPropertyChanged("TopOrganD");
					this.OnTopOrganDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottomOrgan", DbType="Bit")]
		public System.Nullable<bool> BottomOrgan
		{
			get
			{
				return this._BottomOrgan;
			}
			set
			{
				if ((this._BottomOrgan != value))
				{
					this.OnBottomOrganChanging(value);
					this.SendPropertyChanging();
					this._BottomOrgan = value;
					this.SendPropertyChanged("BottomOrgan");
					this.OnBottomOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottomOrganD", DbType="NVarChar(MAX)")]
		public string BottomOrganD
		{
			get
			{
				return this._BottomOrganD;
			}
			set
			{
				if ((this._BottomOrganD != value))
				{
					this.OnBottomOrganDChanging(value);
					this.SendPropertyChanging();
					this._BottomOrganD = value;
					this.SendPropertyChanged("BottomOrganD");
					this.OnBottomOrganDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplyBelly", DbType="Bit")]
		public System.Nullable<bool> SimplyBelly
		{
			get
			{
				return this._SimplyBelly;
			}
			set
			{
				if ((this._SimplyBelly != value))
				{
					this.OnSimplyBellyChanging(value);
					this.SendPropertyChanging();
					this._SimplyBelly = value;
					this.SendPropertyChanged("SimplyBelly");
					this.OnSimplyBellyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimpleBellyD", DbType="NVarChar(MAX)")]
		public string SimpleBellyD
		{
			get
			{
				return this._SimpleBellyD;
			}
			set
			{
				if ((this._SimpleBellyD != value))
				{
					this.OnSimpleBellyDChanging(value);
					this.SendPropertyChanging();
					this._SimpleBellyD = value;
					this.SendPropertyChanged("SimpleBellyD");
					this.OnSimpleBellyDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BariumEnma", DbType="Bit")]
		public System.Nullable<bool> BariumEnma
		{
			get
			{
				return this._BariumEnma;
			}
			set
			{
				if ((this._BariumEnma != value))
				{
					this.OnBariumEnmaChanging(value);
					this.SendPropertyChanging();
					this._BariumEnma = value;
					this.SendPropertyChanged("BariumEnma");
					this.OnBariumEnmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BariumEnmaD", DbType="NVarChar(MAX)")]
		public string BariumEnmaD
		{
			get
			{
				return this._BariumEnmaD;
			}
			set
			{
				if ((this._BariumEnmaD != value))
				{
					this.OnBariumEnmaDChanging(value);
					this.SendPropertyChanging();
					this._BariumEnmaD = value;
					this.SendPropertyChanged("BariumEnmaD");
					this.OnBariumEnmaDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BariumMil", DbType="Bit")]
		public System.Nullable<bool> BariumMil
		{
			get
			{
				return this._BariumMil;
			}
			set
			{
				if ((this._BariumMil != value))
				{
					this.OnBariumMilChanging(value);
					this.SendPropertyChanging();
					this._BariumMil = value;
					this.SendPropertyChanged("BariumMil");
					this.OnBariumMilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BariumMilD", DbType="NVarChar(MAX)")]
		public string BariumMilD
		{
			get
			{
				return this._BariumMilD;
			}
			set
			{
				if ((this._BariumMilD != value))
				{
					this.OnBariumMilDChanging(value);
					this.SendPropertyChanging();
					this._BariumMilD = value;
					this.SendPropertyChanged("BariumMilD");
					this.OnBariumMilDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SonographyDate", DbType="NChar(10)")]
		public string SonographyDate
		{
			get
			{
				return this._SonographyDate;
			}
			set
			{
				if ((this._SonographyDate != value))
				{
					this.OnSonographyDateChanging(value);
					this.SendPropertyChanging();
					this._SonographyDate = value;
					this.SendPropertyChanged("SonographyDate");
					this.OnSonographyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SonographyTime", DbType="NChar(5)")]
		public string SonographyTime
		{
			get
			{
				return this._SonographyTime;
			}
			set
			{
				if ((this._SonographyTime != value))
				{
					this.OnSonographyTimeChanging(value);
					this.SendPropertyChanging();
					this._SonographyTime = value;
					this.SendPropertyChanged("SonographyTime");
					this.OnSonographyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SonographyInterpreter", DbType="Int")]
		public System.Nullable<int> SonographyInterpreter
		{
			get
			{
				return this._SonographyInterpreter;
			}
			set
			{
				if ((this._SonographyInterpreter != value))
				{
					this.OnSonographyInterpreterChanging(value);
					this.SendPropertyChanging();
					this._SonographyInterpreter = value;
					this.SendPropertyChanged("SonographyInterpreter");
					this.OnSonographyInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SonographyDone", DbType="Int")]
		public System.Nullable<int> SonographyDone
		{
			get
			{
				return this._SonographyDone;
			}
			set
			{
				if ((this._SonographyDone != value))
				{
					this.OnSonographyDoneChanging(value);
					this.SendPropertyChanging();
					this._SonographyDone = value;
					this.SendPropertyChanged("SonographyDone");
					this.OnSonographyDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShekamLagan", DbType="Bit")]
		public System.Nullable<bool> ShekamLagan
		{
			get
			{
				return this._ShekamLagan;
			}
			set
			{
				if ((this._ShekamLagan != value))
				{
					this.OnShekamLaganChanging(value);
					this.SendPropertyChanging();
					this._ShekamLagan = value;
					this.SendPropertyChanged("ShekamLagan");
					this.OnShekamLaganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShekamLaganD", DbType="NVarChar(MAX)")]
		public string ShekamLaganD
		{
			get
			{
				return this._ShekamLaganD;
			}
			set
			{
				if ((this._ShekamLaganD != value))
				{
					this.OnShekamLaganDChanging(value);
					this.SendPropertyChanging();
					this._ShekamLaganD = value;
					this.SendPropertyChanged("ShekamLaganD");
					this.OnShekamLaganDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KabedTahhalKiseSafra", DbType="Bit")]
		public System.Nullable<bool> KabedTahhalKiseSafra
		{
			get
			{
				return this._KabedTahhalKiseSafra;
			}
			set
			{
				if ((this._KabedTahhalKiseSafra != value))
				{
					this.OnKabedTahhalKiseSafraChanging(value);
					this.SendPropertyChanging();
					this._KabedTahhalKiseSafra = value;
					this.SendPropertyChanged("KabedTahhalKiseSafra");
					this.OnKabedTahhalKiseSafraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KabedTahhalKiseSafraD", DbType="NVarChar(MAX)")]
		public string KabedTahhalKiseSafraD
		{
			get
			{
				return this._KabedTahhalKiseSafraD;
			}
			set
			{
				if ((this._KabedTahhalKiseSafraD != value))
				{
					this.OnKabedTahhalKiseSafraDChanging(value);
					this.SendPropertyChanging();
					this._KabedTahhalKiseSafraD = value;
					this.SendPropertyChanged("KabedTahhalKiseSafraD");
					this.OnKabedTahhalKiseSafraDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProstatBeyzehha", DbType="Bit")]
		public System.Nullable<bool> ProstatBeyzehha
		{
			get
			{
				return this._ProstatBeyzehha;
			}
			set
			{
				if ((this._ProstatBeyzehha != value))
				{
					this.OnProstatBeyzehhaChanging(value);
					this.SendPropertyChanging();
					this._ProstatBeyzehha = value;
					this.SendPropertyChanged("ProstatBeyzehha");
					this.OnProstatBeyzehhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProstatBeyzehhaD", DbType="NVarChar(MAX)")]
		public string ProstatBeyzehhaD
		{
			get
			{
				return this._ProstatBeyzehhaD;
			}
			set
			{
				if ((this._ProstatBeyzehhaD != value))
				{
					this.OnProstatBeyzehhaDChanging(value);
					this.SendPropertyChanging();
					this._ProstatBeyzehhaD = value;
					this.SendPropertyChanged("ProstatBeyzehhaD");
					this.OnProstatBeyzehhaDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RahemTokhmdan", DbType="Bit")]
		public System.Nullable<bool> RahemTokhmdan
		{
			get
			{
				return this._RahemTokhmdan;
			}
			set
			{
				if ((this._RahemTokhmdan != value))
				{
					this.OnRahemTokhmdanChanging(value);
					this.SendPropertyChanging();
					this._RahemTokhmdan = value;
					this.SendPropertyChanged("RahemTokhmdan");
					this.OnRahemTokhmdanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RahemTokhmdanD", DbType="NVarChar(MAX)")]
		public string RahemTokhmdanD
		{
			get
			{
				return this._RahemTokhmdanD;
			}
			set
			{
				if ((this._RahemTokhmdanD != value))
				{
					this.OnRahemTokhmdanDChanging(value);
					this.SendPropertyChanging();
					this._RahemTokhmdanD = value;
					this.SendPropertyChanged("RahemTokhmdanD");
					this.OnRahemTokhmdanDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breasts", DbType="Bit")]
		public System.Nullable<bool> Breasts
		{
			get
			{
				return this._Breasts;
			}
			set
			{
				if ((this._Breasts != value))
				{
					this.OnBreastsChanging(value);
					this.SendPropertyChanging();
					this._Breasts = value;
					this.SendPropertyChanged("Breasts");
					this.OnBreastsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreastsD", DbType="NVarChar(MAX)")]
		public string BreastsD
		{
			get
			{
				return this._BreastsD;
			}
			set
			{
				if ((this._BreastsD != value))
				{
					this.OnBreastsDChanging(value);
					this.SendPropertyChanging();
					this._BreastsD = value;
					this.SendPropertyChanged("BreastsD");
					this.OnBreastsDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KoliyeMasane", DbType="Bit")]
		public System.Nullable<bool> KoliyeMasane
		{
			get
			{
				return this._KoliyeMasane;
			}
			set
			{
				if ((this._KoliyeMasane != value))
				{
					this.OnKoliyeMasaneChanging(value);
					this.SendPropertyChanging();
					this._KoliyeMasane = value;
					this.SendPropertyChanged("KoliyeMasane");
					this.OnKoliyeMasaneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KoliyeMasaneD", DbType="NVarChar(MAX)")]
		public string KoliyeMasaneD
		{
			get
			{
				return this._KoliyeMasaneD;
			}
			set
			{
				if ((this._KoliyeMasaneD != value))
				{
					this.OnKoliyeMasaneDChanging(value);
					this.SendPropertyChanging();
					this._KoliyeMasaneD = value;
					this.SendPropertyChanged("KoliyeMasaneD");
					this.OnKoliyeMasaneDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTScanDate", DbType="NChar(10)")]
		public string CTScanDate
		{
			get
			{
				return this._CTScanDate;
			}
			set
			{
				if ((this._CTScanDate != value))
				{
					this.OnCTScanDateChanging(value);
					this.SendPropertyChanging();
					this._CTScanDate = value;
					this.SendPropertyChanged("CTScanDate");
					this.OnCTScanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTScanTime", DbType="NChar(5)")]
		public string CTScanTime
		{
			get
			{
				return this._CTScanTime;
			}
			set
			{
				if ((this._CTScanTime != value))
				{
					this.OnCTScanTimeChanging(value);
					this.SendPropertyChanging();
					this._CTScanTime = value;
					this.SendPropertyChanged("CTScanTime");
					this.OnCTScanTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTScanInterpreter", DbType="Int")]
		public System.Nullable<int> CTScanInterpreter
		{
			get
			{
				return this._CTScanInterpreter;
			}
			set
			{
				if ((this._CTScanInterpreter != value))
				{
					this.OnCTScanInterpreterChanging(value);
					this.SendPropertyChanging();
					this._CTScanInterpreter = value;
					this.SendPropertyChanged("CTScanInterpreter");
					this.OnCTScanInterpreterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTScanDone", DbType="Int")]
		public System.Nullable<int> CTScanDone
		{
			get
			{
				return this._CTScanDone;
			}
			set
			{
				if ((this._CTScanDone != value))
				{
					this.OnCTScanDoneChanging(value);
					this.SendPropertyChanging();
					this._CTScanDone = value;
					this.SendPropertyChanged("CTScanDone");
					this.OnCTScanDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiroeed", DbType="Bit")]
		public System.Nullable<bool> Tiroeed
		{
			get
			{
				return this._Tiroeed;
			}
			set
			{
				if ((this._Tiroeed != value))
				{
					this.OnTiroeedChanging(value);
					this.SendPropertyChanging();
					this._Tiroeed = value;
					this.SendPropertyChanged("Tiroeed");
					this.OnTiroeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TiroeedD", DbType="NVarChar(MAX)")]
		public string TiroeedD
		{
			get
			{
				return this._TiroeedD;
			}
			set
			{
				if ((this._TiroeedD != value))
				{
					this.OnTiroeedDChanging(value);
					this.SendPropertyChanging();
					this._TiroeedD = value;
					this.SendPropertyChanged("TiroeedD");
					this.OnTiroeedDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brain", DbType="Bit")]
		public System.Nullable<bool> Brain
		{
			get
			{
				return this._Brain;
			}
			set
			{
				if ((this._Brain != value))
				{
					this.OnBrainChanging(value);
					this.SendPropertyChanging();
					this._Brain = value;
					this.SendPropertyChanged("Brain");
					this.OnBrainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrainD", DbType="NVarChar(MAX)")]
		public string BrainD
		{
			get
			{
				return this._BrainD;
			}
			set
			{
				if ((this._BrainD != value))
				{
					this.OnBrainDChanging(value);
					this.SendPropertyChanging();
					this._BrainD = value;
					this.SendPropertyChanged("BrainD");
					this.OnBrainDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhafaseSadri", DbType="Bit")]
		public System.Nullable<bool> GhafaseSadri
		{
			get
			{
				return this._GhafaseSadri;
			}
			set
			{
				if ((this._GhafaseSadri != value))
				{
					this.OnGhafaseSadriChanging(value);
					this.SendPropertyChanging();
					this._GhafaseSadri = value;
					this.SendPropertyChanged("GhafaseSadri");
					this.OnGhafaseSadriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhafaseSadriD", DbType="NVarChar(MAX)")]
		public string GhafaseSadriD
		{
			get
			{
				return this._GhafaseSadriD;
			}
			set
			{
				if ((this._GhafaseSadriD != value))
				{
					this.OnGhafaseSadriDChanging(value);
					this.SendPropertyChanging();
					this._GhafaseSadriD = value;
					this.SendPropertyChanged("GhafaseSadriD");
					this.OnGhafaseSadriDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTScanAbdomen", DbType="Bit")]
		public System.Nullable<bool> CTScanAbdomen
		{
			get
			{
				return this._CTScanAbdomen;
			}
			set
			{
				if ((this._CTScanAbdomen != value))
				{
					this.OnCTScanAbdomenChanging(value);
					this.SendPropertyChanging();
					this._CTScanAbdomen = value;
					this.SendPropertyChanged("CTScanAbdomen");
					this.OnCTScanAbdomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTScanAbdomenD", DbType="NVarChar(MAX)")]
		public string CTScanAbdomenD
		{
			get
			{
				return this._CTScanAbdomenD;
			}
			set
			{
				if ((this._CTScanAbdomenD != value))
				{
					this.OnCTScanAbdomenDChanging(value);
					this.SendPropertyChanging();
					this._CTScanAbdomenD = value;
					this.SendPropertyChanged("CTScanAbdomenD");
					this.OnCTScanAbdomenDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Radiography", Storage="_Document", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Radiographies.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Radiographies.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestType")]
	public partial class RequestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private string _Type;
		
		private EntitySet<Document> _Documents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public RequestType()
		{
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestType_Document", Storage="_Documents", ThisKey="ID", OtherKey="RequestTypeID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.RequestType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sheet1")]
	public partial class Sheet1
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _LastN;
		
		private string _PersonNo;
		
		private string _Sex;
		
		private string _HireType;
		
		private string _Rasteh;
		
		private string _Unit;
		
		private string _SubUnit;
		
		public Sheet1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastN", DbType="NVarChar(100)")]
		public string LastN
		{
			get
			{
				return this._LastN;
			}
			set
			{
				if ((this._LastN != value))
				{
					this._LastN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNo", DbType="NVarChar(255)")]
		public string PersonNo
		{
			get
			{
				return this._PersonNo;
			}
			set
			{
				if ((this._PersonNo != value))
				{
					this._PersonNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(255)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireType", DbType="NVarChar(255)")]
		public string HireType
		{
			get
			{
				return this._HireType;
			}
			set
			{
				if ((this._HireType != value))
				{
					this._HireType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rasteh", DbType="NVarChar(100)")]
		public string Rasteh
		{
			get
			{
				return this._Rasteh;
			}
			set
			{
				if ((this._Rasteh != value))
				{
					this._Rasteh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(100)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnit", DbType="NVarChar(100)")]
		public string SubUnit
		{
			get
			{
				return this._SubUnit;
			}
			set
			{
				if ((this._SubUnit != value))
				{
					this._SubUnit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SicknessDetail")]
	public partial class SicknessDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _DocummentID;
		
		private string _Date;
		
		private string _Description;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDocummentIDChanging(System.Guid value);
    partial void OnDocummentIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    #endregion
		
		public SicknessDetail()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocummentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocummentID
		{
			get
			{
				return this._DocummentID;
			}
			set
			{
				if ((this._DocummentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocummentIDChanging(value);
					this.SendPropertyChanging();
					this._DocummentID = value;
					this.SendPropertyChanged("DocummentID");
					this.OnDocummentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_SicknessDetail", Storage="_Document", ThisKey="DocummentID", OtherKey="ID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.SicknessDetails.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.SicknessDetails.Add(this);
						this._DocummentID = value.ID;
					}
					else
					{
						this._DocummentID = default(System.Guid);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surveillance")]
	public partial class Surveillance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private System.Nullable<int> _IllnessID;
		
		private string _ImmidanceLevel;
		
		private System.Nullable<byte> _IlnessLevelID;
		
		private string _FirstDiagnoseDate;
		
		private string _CureDate;
		
		private System.Nullable<int> _DoctorID;
		
		private string _ActivitiesDone;
		
		private string _Description;
		
		private string _ActivitiesResult;
		
		private System.Nullable<int> _CreationUser;
		
		private string _CreationDate;
		
		private System.Nullable<int> _ModificationUser;
		
		private string _ModificationDate;
		
		private System.Nullable<bool> _Deleted;
		
		private string _NextReferDate;
		
		private bool _FromJob;
		
		private bool _Active;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<SurveillanceIllness> _SurveillanceIllness;
		
		private EntityRef<SurviellanceIllnessLevel> _SurviellanceIllnessLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnIllnessIDChanging(System.Nullable<int> value);
    partial void OnIllnessIDChanged();
    partial void OnImmidanceLevelChanging(string value);
    partial void OnImmidanceLevelChanged();
    partial void OnIlnessLevelIDChanging(System.Nullable<byte> value);
    partial void OnIlnessLevelIDChanged();
    partial void OnFirstDiagnoseDateChanging(string value);
    partial void OnFirstDiagnoseDateChanged();
    partial void OnCureDateChanging(string value);
    partial void OnCureDateChanged();
    partial void OnDoctorIDChanging(System.Nullable<int> value);
    partial void OnDoctorIDChanged();
    partial void OnActivitiesDoneChanging(string value);
    partial void OnActivitiesDoneChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActivitiesResultChanging(string value);
    partial void OnActivitiesResultChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnModificationUserChanging(System.Nullable<int> value);
    partial void OnModificationUserChanged();
    partial void OnModificationDateChanging(string value);
    partial void OnModificationDateChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnNextReferDateChanging(string value);
    partial void OnNextReferDateChanged();
    partial void OnFromJobChanging(bool value);
    partial void OnFromJobChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Surveillance()
		{
			this._Person = default(EntityRef<Person>);
			this._SurveillanceIllness = default(EntityRef<SurveillanceIllness>);
			this._SurviellanceIllnessLevel = default(EntityRef<SurviellanceIllnessLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IllnessID", DbType="Int")]
		public System.Nullable<int> IllnessID
		{
			get
			{
				return this._IllnessID;
			}
			set
			{
				if ((this._IllnessID != value))
				{
					if (this._SurveillanceIllness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIllnessIDChanging(value);
					this.SendPropertyChanging();
					this._IllnessID = value;
					this.SendPropertyChanged("IllnessID");
					this.OnIllnessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImmidanceLevel", DbType="NVarChar(50)")]
		public string ImmidanceLevel
		{
			get
			{
				return this._ImmidanceLevel;
			}
			set
			{
				if ((this._ImmidanceLevel != value))
				{
					this.OnImmidanceLevelChanging(value);
					this.SendPropertyChanging();
					this._ImmidanceLevel = value;
					this.SendPropertyChanged("ImmidanceLevel");
					this.OnImmidanceLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IlnessLevelID", DbType="TinyInt")]
		public System.Nullable<byte> IlnessLevelID
		{
			get
			{
				return this._IlnessLevelID;
			}
			set
			{
				if ((this._IlnessLevelID != value))
				{
					if (this._SurviellanceIllnessLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIlnessLevelIDChanging(value);
					this.SendPropertyChanging();
					this._IlnessLevelID = value;
					this.SendPropertyChanged("IlnessLevelID");
					this.OnIlnessLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDiagnoseDate", DbType="NChar(10)")]
		public string FirstDiagnoseDate
		{
			get
			{
				return this._FirstDiagnoseDate;
			}
			set
			{
				if ((this._FirstDiagnoseDate != value))
				{
					this.OnFirstDiagnoseDateChanging(value);
					this.SendPropertyChanging();
					this._FirstDiagnoseDate = value;
					this.SendPropertyChanged("FirstDiagnoseDate");
					this.OnFirstDiagnoseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CureDate", DbType="NChar(10)")]
		public string CureDate
		{
			get
			{
				return this._CureDate;
			}
			set
			{
				if ((this._CureDate != value))
				{
					this.OnCureDateChanging(value);
					this.SendPropertyChanging();
					this._CureDate = value;
					this.SendPropertyChanged("CureDate");
					this.OnCureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="Int")]
		public System.Nullable<int> DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesDone", DbType="NVarChar(MAX)")]
		public string ActivitiesDone
		{
			get
			{
				return this._ActivitiesDone;
			}
			set
			{
				if ((this._ActivitiesDone != value))
				{
					this.OnActivitiesDoneChanging(value);
					this.SendPropertyChanging();
					this._ActivitiesDone = value;
					this.SendPropertyChanged("ActivitiesDone");
					this.OnActivitiesDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivitiesResult", DbType="NVarChar(MAX)")]
		public string ActivitiesResult
		{
			get
			{
				return this._ActivitiesResult;
			}
			set
			{
				if ((this._ActivitiesResult != value))
				{
					this.OnActivitiesResultChanging(value);
					this.SendPropertyChanging();
					this._ActivitiesResult = value;
					this.SendPropertyChanged("ActivitiesResult");
					this.OnActivitiesResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationUser", DbType="Int")]
		public System.Nullable<int> ModificationUser
		{
			get
			{
				return this._ModificationUser;
			}
			set
			{
				if ((this._ModificationUser != value))
				{
					this.OnModificationUserChanging(value);
					this.SendPropertyChanging();
					this._ModificationUser = value;
					this.SendPropertyChanged("ModificationUser");
					this.OnModificationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="NChar(10)")]
		public string ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextReferDate", DbType="NChar(10)")]
		public string NextReferDate
		{
			get
			{
				return this._NextReferDate;
			}
			set
			{
				if ((this._NextReferDate != value))
				{
					this.OnNextReferDateChanging(value);
					this.SendPropertyChanging();
					this._NextReferDate = value;
					this.SendPropertyChanged("NextReferDate");
					this.OnNextReferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromJob", DbType="Bit NOT NULL")]
		public bool FromJob
		{
			get
			{
				return this._FromJob;
			}
			set
			{
				if ((this._FromJob != value))
				{
					this.OnFromJobChanging(value);
					this.SendPropertyChanging();
					this._FromJob = value;
					this.SendPropertyChanged("FromJob");
					this.OnFromJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Surveillance", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Surveillances.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Surveillances.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SurveillanceIllness_Surveillance", Storage="_SurveillanceIllness", ThisKey="IllnessID", OtherKey="ID", IsForeignKey=true)]
		public SurveillanceIllness SurveillanceIllness
		{
			get
			{
				return this._SurveillanceIllness.Entity;
			}
			set
			{
				SurveillanceIllness previousValue = this._SurveillanceIllness.Entity;
				if (((previousValue != value) 
							|| (this._SurveillanceIllness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SurveillanceIllness.Entity = null;
						previousValue.Surveillances.Remove(this);
					}
					this._SurveillanceIllness.Entity = value;
					if ((value != null))
					{
						value.Surveillances.Add(this);
						this._IllnessID = value.ID;
					}
					else
					{
						this._IllnessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SurveillanceIllness");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SurviellanceIllnessLevel_Surveillance", Storage="_SurviellanceIllnessLevel", ThisKey="IlnessLevelID", OtherKey="ID", IsForeignKey=true)]
		public SurviellanceIllnessLevel SurviellanceIllnessLevel
		{
			get
			{
				return this._SurviellanceIllnessLevel.Entity;
			}
			set
			{
				SurviellanceIllnessLevel previousValue = this._SurviellanceIllnessLevel.Entity;
				if (((previousValue != value) 
							|| (this._SurviellanceIllnessLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SurviellanceIllnessLevel.Entity = null;
						previousValue.Surveillances.Remove(this);
					}
					this._SurviellanceIllnessLevel.Entity = value;
					if ((value != null))
					{
						value.Surveillances.Add(this);
						this._IlnessLevelID = value.ID;
					}
					else
					{
						this._IlnessLevelID = default(Nullable<byte>);
					}
					this.SendPropertyChanged("SurviellanceIllnessLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SurveillanceIllness")]
	public partial class SurveillanceIllness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _BehbanID;
		
		private EntitySet<Surveillance> _Surveillances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBehbanIDChanging(System.Nullable<int> value);
    partial void OnBehbanIDChanged();
    #endregion
		
		public SurveillanceIllness()
		{
			this._Surveillances = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances), new Action<Surveillance>(this.detach_Surveillances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BehbanID", DbType="Int")]
		public System.Nullable<int> BehbanID
		{
			get
			{
				return this._BehbanID;
			}
			set
			{
				if ((this._BehbanID != value))
				{
					this.OnBehbanIDChanging(value);
					this.SendPropertyChanging();
					this._BehbanID = value;
					this.SendPropertyChanged("BehbanID");
					this.OnBehbanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SurveillanceIllness_Surveillance", Storage="_Surveillances", ThisKey="ID", OtherKey="IllnessID")]
		public EntitySet<Surveillance> Surveillances
		{
			get
			{
				return this._Surveillances;
			}
			set
			{
				this._Surveillances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.SurveillanceIllness = this;
		}
		
		private void detach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.SurveillanceIllness = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SurviellanceIllnessLevel")]
	public partial class SurviellanceIllnessLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<Surveillance> _Surveillances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SurviellanceIllnessLevel()
		{
			this._Surveillances = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances), new Action<Surveillance>(this.detach_Surveillances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SurviellanceIllnessLevel_Surveillance", Storage="_Surveillances", ThisKey="ID", OtherKey="IlnessLevelID")]
		public EntitySet<Surveillance> Surveillances
		{
			get
			{
				return this._Surveillances;
			}
			set
			{
				this._Surveillances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.SurviellanceIllnessLevel = this;
		}
		
		private void detach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.SurviellanceIllnessLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_ValidCenter")]
	public partial class Tbl_ValidCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDValidCenter;
		
		private int _IDValidCenterZone;
		
		private byte _IDValidCenterType;
		
		private string _Name;
		
		private byte _Deleted;
		
		private EntitySet<Person> _Persons;
		
		private EntityRef<Tbl_ValidCenterZone> _Tbl_ValidCenterZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDValidCenterChanging(int value);
    partial void OnIDValidCenterChanged();
    partial void OnIDValidCenterZoneChanging(int value);
    partial void OnIDValidCenterZoneChanged();
    partial void OnIDValidCenterTypeChanging(byte value);
    partial void OnIDValidCenterTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(byte value);
    partial void OnDeletedChanged();
    #endregion
		
		public Tbl_ValidCenter()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Tbl_ValidCenterZone = default(EntityRef<Tbl_ValidCenterZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this.OnIDValidCenterChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenter = value;
					this.SendPropertyChanged("IDValidCenter");
					this.OnIDValidCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="Int NOT NULL")]
		public int IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					if (this._Tbl_ValidCenterZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDValidCenterZoneChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenterZone = value;
					this.SendPropertyChanged("IDValidCenterZone");
					this.OnIDValidCenterZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterType", DbType="TinyInt NOT NULL")]
		public byte IDValidCenterType
		{
			get
			{
				return this._IDValidCenterType;
			}
			set
			{
				if ((this._IDValidCenterType != value))
				{
					this.OnIDValidCenterTypeChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenterType = value;
					this.SendPropertyChanged("IDValidCenterType");
					this.OnIDValidCenterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="TinyInt NOT NULL")]
		public byte Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ValidCenter_Person", Storage="_Persons", ThisKey="IDValidCenter", OtherKey="ValidCenterID")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ValidCenterZone_Tbl_ValidCenter", Storage="_Tbl_ValidCenterZone", ThisKey="IDValidCenterZone", OtherKey="IDValidCenterZone", IsForeignKey=true)]
		public Tbl_ValidCenterZone Tbl_ValidCenterZone
		{
			get
			{
				return this._Tbl_ValidCenterZone.Entity;
			}
			set
			{
				Tbl_ValidCenterZone previousValue = this._Tbl_ValidCenterZone.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_ValidCenterZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_ValidCenterZone.Entity = null;
						previousValue.Tbl_ValidCenters.Remove(this);
					}
					this._Tbl_ValidCenterZone.Entity = value;
					if ((value != null))
					{
						value.Tbl_ValidCenters.Add(this);
						this._IDValidCenterZone = value.IDValidCenterZone;
					}
					else
					{
						this._IDValidCenterZone = default(int);
					}
					this.SendPropertyChanged("Tbl_ValidCenterZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_ValidCenter = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_ValidCenter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_ValidCenterZone")]
	public partial class Tbl_ValidCenterZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDValidCenterZone;
		
		private string _Name;
		
		private bool _Deleted;
		
		private EntitySet<Tbl_ValidCenter> _Tbl_ValidCenters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDValidCenterZoneChanging(int value);
    partial void OnIDValidCenterZoneChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Tbl_ValidCenterZone()
		{
			this._Tbl_ValidCenters = new EntitySet<Tbl_ValidCenter>(new Action<Tbl_ValidCenter>(this.attach_Tbl_ValidCenters), new Action<Tbl_ValidCenter>(this.detach_Tbl_ValidCenters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this.OnIDValidCenterZoneChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenterZone = value;
					this.SendPropertyChanged("IDValidCenterZone");
					this.OnIDValidCenterZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_ValidCenterZone_Tbl_ValidCenter", Storage="_Tbl_ValidCenters", ThisKey="IDValidCenterZone", OtherKey="IDValidCenterZone")]
		public EntitySet<Tbl_ValidCenter> Tbl_ValidCenters
		{
			get
			{
				return this._Tbl_ValidCenters;
			}
			set
			{
				this._Tbl_ValidCenters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_ValidCenters(Tbl_ValidCenter entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_ValidCenterZone = this;
		}
		
		private void detach_Tbl_ValidCenters(Tbl_ValidCenter entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_ValidCenterZone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResult96_1")]
	public partial class TestResult96_1
	{
		
		private int _PersonnelNo;
		
		private int _SerialNumber;
		
		private string _MedicalID;
		
		private string _AdmitDate;
		
		private string _Name;
		
		private string _Abbr;
		
		private string _Value;
		
		private string _Normal;
		
		private System.Nullable<bool> _Confirm;
		
		public TestResult96_1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="Int NOT NULL")]
		public int PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="Char(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbr", DbType="NVarChar(25)")]
		public string Abbr
		{
			get
			{
				return this._Abbr;
			}
			set
			{
				if ((this._Abbr != value))
				{
					this._Abbr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(300)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="NVarChar(300)")]
		public string Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this._Normal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
		public System.Nullable<bool> Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResult96_2")]
	public partial class TestResult96_2
	{
		
		private int _PersonnelNo;
		
		private int _SerialNumber;
		
		private string _MedicalID;
		
		private string _AdmitDate;
		
		private string _Name;
		
		private string _Abbr;
		
		private string _Value;
		
		private string _Normal;
		
		private System.Nullable<bool> _Confirm;
		
		public TestResult96_2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="Int NOT NULL")]
		public int PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="Char(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbr", DbType="NVarChar(25)")]
		public string Abbr
		{
			get
			{
				return this._Abbr;
			}
			set
			{
				if ((this._Abbr != value))
				{
					this._Abbr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(300)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="NVarChar(300)")]
		public string Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this._Normal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
		public System.Nullable<bool> Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResult96_3")]
	public partial class TestResult96_3
	{
		
		private int _PersonnelNo;
		
		private int _SerialNumber;
		
		private string _MedicalID;
		
		private string _AdmitDate;
		
		private string _Name;
		
		private string _Abbr;
		
		private string _Value;
		
		private string _Normal;
		
		private System.Nullable<bool> _Confirm;
		
		public TestResult96_3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="Int NOT NULL")]
		public int PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="Char(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbr", DbType="NVarChar(25)")]
		public string Abbr
		{
			get
			{
				return this._Abbr;
			}
			set
			{
				if ((this._Abbr != value))
				{
					this._Abbr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(300)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="NVarChar(300)")]
		public string Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this._Normal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
		public System.Nullable<bool> Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _CompanyID;
		
		private string _UserName;
		
		private string _Password;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
