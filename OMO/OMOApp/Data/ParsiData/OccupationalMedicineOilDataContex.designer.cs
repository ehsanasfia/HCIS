#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OMOApp.Data.ParsiData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OccupationalMedicineOil")]
	public partial class OccupationalMedicineOilDataContexDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertReferenceFile(ReferenceFile instance);
    partial void UpdateReferenceFile(ReferenceFile instance);
    partial void DeleteReferenceFile(ReferenceFile instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertIntroduction(Introduction instance);
    partial void UpdateIntroduction(Introduction instance);
    partial void DeleteIntroduction(Introduction instance);
    partial void InsertJobHistory(JobHistory instance);
    partial void UpdateJobHistory(JobHistory instance);
    partial void DeleteJobHistory(JobHistory instance);
    partial void InsertMedicalCenter(MedicalCenter instance);
    partial void UpdateMedicalCenter(MedicalCenter instance);
    partial void DeleteMedicalCenter(MedicalCenter instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertQA(QA instance);
    partial void UpdateQA(QA instance);
    partial void DeleteQA(QA instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    #endregion
		
		public OccupationalMedicineOilDataContexDataContext() : 
				base(global::OMOApp.Properties.Settings.Default.OccupationalMedicineOilConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public OccupationalMedicineOilDataContexDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OccupationalMedicineOilDataContexDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OccupationalMedicineOilDataContexDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OccupationalMedicineOilDataContexDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<ReferenceFile> ReferenceFiles
		{
			get
			{
				return this.GetTable<ReferenceFile>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<Introduction> Introductions
		{
			get
			{
				return this.GetTable<Introduction>();
			}
		}
		
		public System.Data.Linq.Table<JobHistory> JobHistories
		{
			get
			{
				return this.GetTable<JobHistory>();
			}
		}
		
		public System.Data.Linq.Table<MedicalCenter> MedicalCenters
		{
			get
			{
				return this.GetTable<MedicalCenter>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<QA> QAs
		{
			get
			{
				return this.GetTable<QA>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CompanyName;
		
		private string _Responsible;
		
		private string _ResponsibleMobail;
		
		private string _Adreess;
		
		private string _Tel;
		
		private string _PostalCode;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationTime;
		
		private string _LastModificationDate;
		
		private EntitySet<Introduction> _Introductions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnResponsibleChanging(string value);
    partial void OnResponsibleChanged();
    partial void OnResponsibleMobailChanging(string value);
    partial void OnResponsibleMobailChanged();
    partial void OnAdreessChanging(string value);
    partial void OnAdreessChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    #endregion
		
		public Company()
		{
			this._Introductions = new EntitySet<Introduction>(new Action<Introduction>(this.attach_Introductions), new Action<Introduction>(this.detach_Introductions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(50)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this.OnResponsibleChanging(value);
					this.SendPropertyChanging();
					this._Responsible = value;
					this.SendPropertyChanged("Responsible");
					this.OnResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleMobail", DbType="NVarChar(50)")]
		public string ResponsibleMobail
		{
			get
			{
				return this._ResponsibleMobail;
			}
			set
			{
				if ((this._ResponsibleMobail != value))
				{
					this.OnResponsibleMobailChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleMobail = value;
					this.SendPropertyChanged("ResponsibleMobail");
					this.OnResponsibleMobailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adreess", DbType="NVarChar(200)")]
		public string Adreess
		{
			get
			{
				return this._Adreess;
			}
			set
			{
				if ((this._Adreess != value))
				{
					this.OnAdreessChanging(value);
					this.SendPropertyChanging();
					this._Adreess = value;
					this.SendPropertyChanged("Adreess");
					this.OnAdreessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(25)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Introduction", Storage="_Introductions", ThisKey="ID", OtherKey="IDCompany")]
		public EntitySet<Introduction> Introductions
		{
			get
			{
				return this._Introductions;
			}
			set
			{
				this._Introductions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Introductions(Introduction entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Introductions(Introduction entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReferenceFile")]
	public partial class ReferenceFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _IDIntroduction;
		
		private System.Nullable<int> _IDDefinition;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _AdmitDate;
		
		private string _ResultID;
		
		private string _ResultConditions;
		
		private string _ResultDate;
		
		private string _Conditiontext;
		
		private string _Advise;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntitySet<QA> _QAs;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Introduction> _Introduction;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDIntroductionChanging(System.Nullable<int> value);
    partial void OnIDIntroductionChanged();
    partial void OnIDDefinitionChanging(System.Nullable<int> value);
    partial void OnIDDefinitionChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnResultIDChanging(string value);
    partial void OnResultIDChanged();
    partial void OnResultConditionsChanging(string value);
    partial void OnResultConditionsChanged();
    partial void OnResultDateChanging(string value);
    partial void OnResultDateChanged();
    partial void OnConditiontextChanging(string value);
    partial void OnConditiontextChanged();
    partial void OnAdviseChanging(string value);
    partial void OnAdviseChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public ReferenceFile()
		{
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._Definition = default(EntityRef<Definition>);
			this._Introduction = default(EntityRef<Introduction>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntroduction", DbType="Int")]
		public System.Nullable<int> IDIntroduction
		{
			get
			{
				return this._IDIntroduction;
			}
			set
			{
				if ((this._IDIntroduction != value))
				{
					if (this._Introduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDIntroductionChanging(value);
					this.SendPropertyChanging();
					this._IDIntroduction = value;
					this.SendPropertyChanged("IDIntroduction");
					this.OnIDIntroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDefinition", DbType="Int")]
		public System.Nullable<int> IDDefinition
		{
			get
			{
				return this._IDDefinition;
			}
			set
			{
				if ((this._IDDefinition != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDefinitionChanging(value);
					this.SendPropertyChanging();
					this._IDDefinition = value;
					this.SendPropertyChanged("IDDefinition");
					this.OnIDDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", DbType="NVarChar(10)")]
		public string ResultID
		{
			get
			{
				return this._ResultID;
			}
			set
			{
				if ((this._ResultID != value))
				{
					this.OnResultIDChanging(value);
					this.SendPropertyChanging();
					this._ResultID = value;
					this.SendPropertyChanged("ResultID");
					this.OnResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultConditions", DbType="NVarChar(500)")]
		public string ResultConditions
		{
			get
			{
				return this._ResultConditions;
			}
			set
			{
				if ((this._ResultConditions != value))
				{
					this.OnResultConditionsChanging(value);
					this.SendPropertyChanging();
					this._ResultConditions = value;
					this.SendPropertyChanged("ResultConditions");
					this.OnResultConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="NChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conditiontext", DbType="NVarChar(500)")]
		public string Conditiontext
		{
			get
			{
				return this._Conditiontext;
			}
			set
			{
				if ((this._Conditiontext != value))
				{
					this.OnConditiontextChanging(value);
					this.SendPropertyChanging();
					this._Conditiontext = value;
					this.SendPropertyChanged("Conditiontext");
					this.OnConditiontextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advise", DbType="NVarChar(500)")]
		public string Advise
		{
			get
			{
				return this._Advise;
			}
			set
			{
				if ((this._Advise != value))
				{
					this.OnAdviseChanging(value);
					this.SendPropertyChanging();
					this._Advise = value;
					this.SendPropertyChanged("Advise");
					this.OnAdviseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReferenceFile_QA", Storage="_QAs", ThisKey="ID", OtherKey="ReferenceFileID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_ReferenceFile", Storage="_Definition", ThisKey="IDDefinition", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.ReferenceFiles.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.ReferenceFiles.Add(this);
						this._IDDefinition = value.ID;
					}
					else
					{
						this._IDDefinition = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Introduction_ReferenceFile", Storage="_Introduction", ThisKey="IDIntroduction", OtherKey="ID", IsForeignKey=true)]
		public Introduction Introduction
		{
			get
			{
				return this._Introduction.Entity;
			}
			set
			{
				Introduction previousValue = this._Introduction.Entity;
				if (((previousValue != value) 
							|| (this._Introduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Introduction.Entity = null;
						previousValue.ReferenceFiles.Remove(this);
					}
					this._Introduction.Entity = value;
					if ((value != null))
					{
						value.ReferenceFiles.Add(this);
						this._IDIntroduction = value.ID;
					}
					else
					{
						this._IDIntroduction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Introduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ReferenceFile", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.ReferenceFiles.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.ReferenceFiles.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.ReferenceFile = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.ReferenceFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<ReferenceFile> _ReferenceFiles;
		
		private EntitySet<Definition> _Definitions;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public Definition()
		{
			this._ReferenceFiles = new EntitySet<ReferenceFile>(new Action<ReferenceFile>(this.attach_ReferenceFiles), new Action<ReferenceFile>(this.detach_ReferenceFiles));
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_ReferenceFile", Storage="_ReferenceFiles", ThisKey="ID", OtherKey="IDDefinition")]
		public EntitySet<ReferenceFile> ReferenceFiles
		{
			get
			{
				return this._ReferenceFiles;
			}
			set
			{
				this._ReferenceFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReferenceFiles(ReferenceFile entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_ReferenceFiles(ReferenceFile entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Introduction")]
	public partial class Introduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Number;
		
		private System.Nullable<int> _IDMedicalCenter;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _LastModificationUserFullName;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _DateDo;
		
		private System.Nullable<System.Guid> _IDCompany;
		
		private EntitySet<ReferenceFile> _ReferenceFiles;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<MedicalCenter> _MedicalCenter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnIDMedicalCenterChanging(System.Nullable<int> value);
    partial void OnIDMedicalCenterChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModificationUserFullNameChanging(string value);
    partial void OnLastModificationUserFullNameChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnDateDoChanging(string value);
    partial void OnDateDoChanged();
    partial void OnIDCompanyChanging(System.Nullable<System.Guid> value);
    partial void OnIDCompanyChanged();
    #endregion
		
		public Introduction()
		{
			this._ReferenceFiles = new EntitySet<ReferenceFile>(new Action<ReferenceFile>(this.attach_ReferenceFiles), new Action<ReferenceFile>(this.detach_ReferenceFiles));
			this._Company = default(EntityRef<Company>);
			this._MedicalCenter = default(EntityRef<MedicalCenter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMedicalCenter", DbType="Int")]
		public System.Nullable<int> IDMedicalCenter
		{
			get
			{
				return this._IDMedicalCenter;
			}
			set
			{
				if ((this._IDMedicalCenter != value))
				{
					if (this._MedicalCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMedicalCenterChanging(value);
					this.SendPropertyChanging();
					this._IDMedicalCenter = value;
					this.SendPropertyChanged("IDMedicalCenter");
					this.OnIDMedicalCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationUserFullName", DbType="NVarChar(50)")]
		public string LastModificationUserFullName
		{
			get
			{
				return this._LastModificationUserFullName;
			}
			set
			{
				if ((this._LastModificationUserFullName != value))
				{
					this.OnLastModificationUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastModificationUserFullName = value;
					this.SendPropertyChanged("LastModificationUserFullName");
					this.OnLastModificationUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDo", DbType="NVarChar(10)")]
		public string DateDo
		{
			get
			{
				return this._DateDo;
			}
			set
			{
				if ((this._DateDo != value))
				{
					this.OnDateDoChanging(value);
					this.SendPropertyChanging();
					this._DateDo = value;
					this.SendPropertyChanged("DateDo");
					this.OnDateDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Introduction_ReferenceFile", Storage="_ReferenceFiles", ThisKey="ID", OtherKey="IDIntroduction")]
		public EntitySet<ReferenceFile> ReferenceFiles
		{
			get
			{
				return this._ReferenceFiles;
			}
			set
			{
				this._ReferenceFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Introduction", Storage="_Company", ThisKey="IDCompany", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Introductions.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Introductions.Add(this);
						this._IDCompany = value.ID;
					}
					else
					{
						this._IDCompany = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedicalCenter_Introduction", Storage="_MedicalCenter", ThisKey="IDMedicalCenter", OtherKey="ID", IsForeignKey=true)]
		public MedicalCenter MedicalCenter
		{
			get
			{
				return this._MedicalCenter.Entity;
			}
			set
			{
				MedicalCenter previousValue = this._MedicalCenter.Entity;
				if (((previousValue != value) 
							|| (this._MedicalCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedicalCenter.Entity = null;
						previousValue.Introductions.Remove(this);
					}
					this._MedicalCenter.Entity = value;
					if ((value != null))
					{
						value.Introductions.Add(this);
						this._IDMedicalCenter = value.ID;
					}
					else
					{
						this._IDMedicalCenter = default(Nullable<int>);
					}
					this.SendPropertyChanged("MedicalCenter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReferenceFiles(ReferenceFile entity)
		{
			this.SendPropertyChanging();
			entity.Introduction = this;
		}
		
		private void detach_ReferenceFiles(ReferenceFile entity)
		{
			this.SendPropertyChanging();
			entity.Introduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobHistory")]
	public partial class JobHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Post;
		
		private string _AssignedTask;
		
		private System.Nullable<short> _FromDate;
		
		private System.Nullable<short> _ToDate;
		
		private string _Shift;
		
		private string _Address;
		
		private string _JobChangeReason;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnAssignedTaskChanging(string value);
    partial void OnAssignedTaskChanged();
    partial void OnFromDateChanging(System.Nullable<short> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<short> value);
    partial void OnToDateChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnJobChangeReasonChanging(string value);
    partial void OnJobChangeReasonChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public JobHistory()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(50)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTask", DbType="NVarChar(50)")]
		public string AssignedTask
		{
			get
			{
				return this._AssignedTask;
			}
			set
			{
				if ((this._AssignedTask != value))
				{
					this.OnAssignedTaskChanging(value);
					this.SendPropertyChanging();
					this._AssignedTask = value;
					this.SendPropertyChanged("AssignedTask");
					this.OnAssignedTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallInt")]
		public System.Nullable<short> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="SmallInt")]
		public System.Nullable<short> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(50)")]
		public string Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobChangeReason", DbType="NVarChar(50)")]
		public string JobChangeReason
		{
			get
			{
				return this._JobChangeReason;
			}
			set
			{
				if ((this._JobChangeReason != value))
				{
					this.OnJobChangeReasonChanging(value);
					this.SendPropertyChanging();
					this._JobChangeReason = value;
					this.SendPropertyChanged("JobChangeReason");
					this.OnJobChangeReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(5)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_JobHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.JobHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.JobHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicalCenter")]
	public partial class MedicalCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Introduction> _Introductions;
		
		private EntityRef<MedicalCenter> _MedicalCenter2;
		
		private EntityRef<MedicalCenter> _MedicalCenter1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MedicalCenter()
		{
			this._Introductions = new EntitySet<Introduction>(new Action<Introduction>(this.attach_Introductions), new Action<Introduction>(this.detach_Introductions));
			this._MedicalCenter2 = default(EntityRef<MedicalCenter>);
			this._MedicalCenter1 = default(EntityRef<MedicalCenter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._MedicalCenter1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedicalCenter_Introduction", Storage="_Introductions", ThisKey="ID", OtherKey="IDMedicalCenter")]
		public EntitySet<Introduction> Introductions
		{
			get
			{
				return this._Introductions;
			}
			set
			{
				this._Introductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedicalCenter_MedicalCenter", Storage="_MedicalCenter2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public MedicalCenter MedicalCenter2
		{
			get
			{
				return this._MedicalCenter2.Entity;
			}
			set
			{
				MedicalCenter previousValue = this._MedicalCenter2.Entity;
				if (((previousValue != value) 
							|| (this._MedicalCenter2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedicalCenter2.Entity = null;
						previousValue.MedicalCenter1 = null;
					}
					this._MedicalCenter2.Entity = value;
					if ((value != null))
					{
						value.MedicalCenter1 = this;
					}
					this.SendPropertyChanged("MedicalCenter2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MedicalCenter_MedicalCenter", Storage="_MedicalCenter1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public MedicalCenter MedicalCenter1
		{
			get
			{
				return this._MedicalCenter1.Entity;
			}
			set
			{
				MedicalCenter previousValue = this._MedicalCenter1.Entity;
				if (((previousValue != value) 
							|| (this._MedicalCenter1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MedicalCenter1.Entity = null;
						previousValue.MedicalCenter2 = null;
					}
					this._MedicalCenter1.Entity = value;
					if ((value != null))
					{
						value.MedicalCenter2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("MedicalCenter1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Introductions(Introduction entity)
		{
			this.SendPropertyChanging();
			entity.MedicalCenter = this;
		}
		
		private void detach_Introductions(Introduction entity)
		{
			this.SendPropertyChanging();
			entity.MedicalCenter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _FatherName;
		
		private System.Nullable<long> _BirthCertificateNo;
		
		private System.Nullable<short> _BirthCertificateCityID;
		
		private string _BirthDate;
		
		private System.Nullable<short> _BirthCityID;
		
		private string _EducationLicence;
		
		private string _MilitaryServiceState;
		
		private System.Nullable<byte> _NaftJobExperience;
		
		private string _Address;
		
		private string _PostalCode;
		
		private string _PhoneNumber;
		
		private string _MobileNumber;
		
		private bool _Deleted;
		
		private System.Data.Linq.Binary _Photo;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntitySet<ReferenceFile> _ReferenceFiles;
		
		private EntitySet<JobHistory> _JobHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonalNoChanging(System.Nullable<int> value);
    partial void OnPersonalNoChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthCertificateNoChanging(System.Nullable<long> value);
    partial void OnBirthCertificateNoChanged();
    partial void OnBirthCertificateCityIDChanging(System.Nullable<short> value);
    partial void OnBirthCertificateCityIDChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthCityIDChanging(System.Nullable<short> value);
    partial void OnBirthCityIDChanged();
    partial void OnEducationLicenceChanging(string value);
    partial void OnEducationLicenceChanged();
    partial void OnMilitaryServiceStateChanging(string value);
    partial void OnMilitaryServiceStateChanged();
    partial void OnNaftJobExperienceChanging(System.Nullable<byte> value);
    partial void OnNaftJobExperienceChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Person()
		{
			this._ReferenceFiles = new EntitySet<ReferenceFile>(new Action<ReferenceFile>(this.attach_ReferenceFiles), new Action<ReferenceFile>(this.detach_ReferenceFiles));
			this._JobHistories = new EntitySet<JobHistory>(new Action<JobHistory>(this.attach_JobHistories), new Action<JobHistory>(this.detach_JobHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this.OnPersonalNoChanging(value);
					this.SendPropertyChanging();
					this._PersonalNo = value;
					this.SendPropertyChanged("PersonalNo");
					this.OnPersonalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateNo", DbType="BigInt")]
		public System.Nullable<long> BirthCertificateNo
		{
			get
			{
				return this._BirthCertificateNo;
			}
			set
			{
				if ((this._BirthCertificateNo != value))
				{
					this.OnBirthCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateNo = value;
					this.SendPropertyChanged("BirthCertificateNo");
					this.OnBirthCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateCityID", DbType="SmallInt")]
		public System.Nullable<short> BirthCertificateCityID
		{
			get
			{
				return this._BirthCertificateCityID;
			}
			set
			{
				if ((this._BirthCertificateCityID != value))
				{
					this.OnBirthCertificateCityIDChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateCityID = value;
					this.SendPropertyChanged("BirthCertificateCityID");
					this.OnBirthCertificateCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCityID", DbType="SmallInt")]
		public System.Nullable<short> BirthCityID
		{
			get
			{
				return this._BirthCityID;
			}
			set
			{
				if ((this._BirthCityID != value))
				{
					this.OnBirthCityIDChanging(value);
					this.SendPropertyChanging();
					this._BirthCityID = value;
					this.SendPropertyChanged("BirthCityID");
					this.OnBirthCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLicence", DbType="NVarChar(50)")]
		public string EducationLicence
		{
			get
			{
				return this._EducationLicence;
			}
			set
			{
				if ((this._EducationLicence != value))
				{
					this.OnEducationLicenceChanging(value);
					this.SendPropertyChanging();
					this._EducationLicence = value;
					this.SendPropertyChanged("EducationLicence");
					this.OnEducationLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryServiceState", DbType="NVarChar(50)")]
		public string MilitaryServiceState
		{
			get
			{
				return this._MilitaryServiceState;
			}
			set
			{
				if ((this._MilitaryServiceState != value))
				{
					this.OnMilitaryServiceStateChanging(value);
					this.SendPropertyChanging();
					this._MilitaryServiceState = value;
					this.SendPropertyChanged("MilitaryServiceState");
					this.OnMilitaryServiceStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaftJobExperience", DbType="TinyInt")]
		public System.Nullable<byte> NaftJobExperience
		{
			get
			{
				return this._NaftJobExperience;
			}
			set
			{
				if ((this._NaftJobExperience != value))
				{
					this.OnNaftJobExperienceChanging(value);
					this.SendPropertyChanging();
					this._NaftJobExperience = value;
					this.SendPropertyChanged("NaftJobExperience");
					this.OnNaftJobExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(25)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ReferenceFile", Storage="_ReferenceFiles", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<ReferenceFile> ReferenceFiles
		{
			get
			{
				return this._ReferenceFiles;
			}
			set
			{
				this._ReferenceFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_JobHistory", Storage="_JobHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<JobHistory> JobHistories
		{
			get
			{
				return this._JobHistories;
			}
			set
			{
				this._JobHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReferenceFiles(ReferenceFile entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_ReferenceFiles(ReferenceFile entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QA")]
	public partial class QA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ReferenceFileID;
		
		private System.Nullable<int> _QuestionID;
		
		private System.Nullable<bool> _ResultYes;
		
		private System.Nullable<double> _ResultNumber;
		
		private string _ResultText;
		
		private string _ResultDate;
		
		private string _Comment;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntityRef<ReferenceFile> _ReferenceFile;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnReferenceFileIDChanging(System.Nullable<System.Guid> value);
    partial void OnReferenceFileIDChanged();
    partial void OnQuestionIDChanging(System.Nullable<int> value);
    partial void OnQuestionIDChanged();
    partial void OnResultYesChanging(System.Nullable<bool> value);
    partial void OnResultYesChanged();
    partial void OnResultNumberChanging(System.Nullable<double> value);
    partial void OnResultNumberChanged();
    partial void OnResultTextChanging(string value);
    partial void OnResultTextChanged();
    partial void OnResultDateChanging(string value);
    partial void OnResultDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public QA()
		{
			this._ReferenceFile = default(EntityRef<ReferenceFile>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceFileID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReferenceFileID
		{
			get
			{
				return this._ReferenceFileID;
			}
			set
			{
				if ((this._ReferenceFileID != value))
				{
					if (this._ReferenceFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceFileIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceFileID = value;
					this.SendPropertyChanged("ReferenceFileID");
					this.OnReferenceFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int")]
		public System.Nullable<int> QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultYes", DbType="Bit")]
		public System.Nullable<bool> ResultYes
		{
			get
			{
				return this._ResultYes;
			}
			set
			{
				if ((this._ResultYes != value))
				{
					this.OnResultYesChanging(value);
					this.SendPropertyChanging();
					this._ResultYes = value;
					this.SendPropertyChanged("ResultYes");
					this.OnResultYesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultNumber", DbType="Float")]
		public System.Nullable<double> ResultNumber
		{
			get
			{
				return this._ResultNumber;
			}
			set
			{
				if ((this._ResultNumber != value))
				{
					this.OnResultNumberChanging(value);
					this.SendPropertyChanging();
					this._ResultNumber = value;
					this.SendPropertyChanged("ResultNumber");
					this.OnResultNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultText", DbType="NVarChar(500)")]
		public string ResultText
		{
			get
			{
				return this._ResultText;
			}
			set
			{
				if ((this._ResultText != value))
				{
					this.OnResultTextChanging(value);
					this.SendPropertyChanging();
					this._ResultText = value;
					this.SendPropertyChanged("ResultText");
					this.OnResultTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="NVarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReferenceFile_QA", Storage="_ReferenceFile", ThisKey="ReferenceFileID", OtherKey="ID", IsForeignKey=true)]
		public ReferenceFile ReferenceFile
		{
			get
			{
				return this._ReferenceFile.Entity;
			}
			set
			{
				ReferenceFile previousValue = this._ReferenceFile.Entity;
				if (((previousValue != value) 
							|| (this._ReferenceFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReferenceFile.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._ReferenceFile.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._ReferenceFileID = value.ID;
					}
					else
					{
						this._ReferenceFileID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ReferenceFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_QA", Storage="_Question", ThisKey="QuestionID", OtherKey="ID", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._QuestionID = value.ID;
					}
					else
					{
						this._QuestionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Question")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDParent;
		
		private string _Name;
		
		private System.Nullable<int> _Line;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<Question> _Questions;
		
		private EntityRef<Question> _Question1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDParentChanging(System.Nullable<int> value);
    partial void OnIDParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLineChanging(System.Nullable<int> value);
    partial void OnLineChanged();
    #endregion
		
		public Question()
		{
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			this._Question1 = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDParent", DbType="Int")]
		public System.Nullable<int> IDParent
		{
			get
			{
				return this._IDParent;
			}
			set
			{
				if ((this._IDParent != value))
				{
					if (this._Question1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDParentChanging(value);
					this.SendPropertyChanging();
					this._IDParent = value;
					this.SendPropertyChanged("IDParent");
					this.OnIDParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line", DbType="Int")]
		public System.Nullable<int> Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_QA", Storage="_QAs", ThisKey="ID", OtherKey="QuestionID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Question", Storage="_Questions", ThisKey="ID", OtherKey="IDParent")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Question", Storage="_Question1", ThisKey="IDParent", OtherKey="ID", IsForeignKey=true)]
		public Question Question1
		{
			get
			{
				return this._Question1.Entity;
			}
			set
			{
				Question previousValue = this._Question1.Entity;
				if (((previousValue != value) 
							|| (this._Question1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question1.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Question1.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._IDParent = value.ID;
					}
					else
					{
						this._IDParent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Question1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Question1 = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Question1 = null;
		}
	}
}
#pragma warning restore 1591
