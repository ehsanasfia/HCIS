#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OMOApp.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OMO")]
	public partial class OMOClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertLab_Visit(Lab_Visit instance);
    partial void UpdateLab_Visit(Lab_Visit instance);
    partial void DeleteLab_Visit(Lab_Visit instance);
    partial void InsertManageMent(ManageMent instance);
    partial void UpdateManageMent(ManageMent instance);
    partial void DeleteManageMent(ManageMent instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertQuestionnaire(Questionnaire instance);
    partial void UpdateQuestionnaire(Questionnaire instance);
    partial void DeleteQuestionnaire(Questionnaire instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertSubCompany(SubCompany instance);
    partial void UpdateSubCompany(SubCompany instance);
    partial void DeleteSubCompany(SubCompany instance);
    partial void InsertSurveillance(Surveillance instance);
    partial void UpdateSurveillance(Surveillance instance);
    partial void DeleteSurveillance(Surveillance instance);
    partial void InsertResultDetail(ResultDetail instance);
    partial void UpdateResultDetail(ResultDetail instance);
    partial void DeleteResultDetail(ResultDetail instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertPersonWorkHistory(PersonWorkHistory instance);
    partial void UpdatePersonWorkHistory(PersonWorkHistory instance);
    partial void DeletePersonWorkHistory(PersonWorkHistory instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertVitalSign(VitalSign instance);
    partial void UpdateVitalSign(VitalSign instance);
    partial void DeleteVitalSign(VitalSign instance);
    partial void InsertPattern(Pattern instance);
    partial void UpdatePattern(Pattern instance);
    partial void DeletePattern(Pattern instance);
    partial void InsertTariff(Tariff instance);
    partial void UpdateTariff(Tariff instance);
    partial void DeleteTariff(Tariff instance);
    partial void InsertInsurance(Insurance instance);
    partial void UpdateInsurance(Insurance instance);
    partial void DeleteInsurance(Insurance instance);
    partial void InsertRVU(RVU instance);
    partial void UpdateRVU(RVU instance);
    partial void DeleteRVU(RVU instance);
    partial void InsertLabTestQAPlus(LabTestQAPlus instance);
    partial void UpdateLabTestQAPlus(LabTestQAPlus instance);
    partial void DeleteLabTestQAPlus(LabTestQAPlus instance);
    partial void InsertQAPlus(QAPlus instance);
    partial void UpdateQAPlus(QAPlus instance);
    partial void DeleteQAPlus(QAPlus instance);
    partial void InsertToDoList(ToDoList instance);
    partial void UpdateToDoList(ToDoList instance);
    partial void DeleteToDoList(ToDoList instance);
    partial void InsertQuestionnaireGroup(QuestionnaireGroup instance);
    partial void UpdateQuestionnaireGroup(QuestionnaireGroup instance);
    partial void DeleteQuestionnaireGroup(QuestionnaireGroup instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertLabTestQA(LabTestQA instance);
    partial void UpdateLabTestQA(LabTestQA instance);
    partial void DeleteLabTestQA(LabTestQA instance);
    #endregion
		
		public OMOClassesDataContext() : 
				base(global::OMOApp.Properties.Settings.Default.OMOConnectionString6, mappingSource)
		{
			OnCreated();
		}
		
		public OMOClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OMOClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OMOClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OMOClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Lab_Visit> Lab_Visits
		{
			get
			{
				return this.GetTable<Lab_Visit>();
			}
		}
		
		public System.Data.Linq.Table<ManageMent> ManageMents
		{
			get
			{
				return this.GetTable<ManageMent>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Questionnaire> Questionnaires
		{
			get
			{
				return this.GetTable<Questionnaire>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<SubCompany> SubCompanies
		{
			get
			{
				return this.GetTable<SubCompany>();
			}
		}
		
		public System.Data.Linq.Table<Surveillance> Surveillances
		{
			get
			{
				return this.GetTable<Surveillance>();
			}
		}
		
		public System.Data.Linq.Table<View_SecurityUser> View_SecurityUsers
		{
			get
			{
				return this.GetTable<View_SecurityUser>();
			}
		}
		
		public System.Data.Linq.Table<View_Jamiat_Person_Company> View_Jamiat_Person_Companies
		{
			get
			{
				return this.GetTable<View_Jamiat_Person_Company>();
			}
		}
		
		public System.Data.Linq.Table<ResultDetail> ResultDetails
		{
			get
			{
				return this.GetTable<ResultDetail>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<PersonWorkHistory> PersonWorkHistories
		{
			get
			{
				return this.GetTable<PersonWorkHistory>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<VitalSign> VitalSigns
		{
			get
			{
				return this.GetTable<VitalSign>();
			}
		}
		
		public System.Data.Linq.Table<Pattern> Patterns
		{
			get
			{
				return this.GetTable<Pattern>();
			}
		}
		
		public System.Data.Linq.Table<Tariff> Tariffs
		{
			get
			{
				return this.GetTable<Tariff>();
			}
		}
		
		public System.Data.Linq.Table<Insurance> Insurances
		{
			get
			{
				return this.GetTable<Insurance>();
			}
		}
		
		public System.Data.Linq.Table<RVU> RVUs
		{
			get
			{
				return this.GetTable<RVU>();
			}
		}
		
		public System.Data.Linq.Table<ViewTariffComplete> ViewTariffCompletes
		{
			get
			{
				return this.GetTable<ViewTariffComplete>();
			}
		}
		
		public System.Data.Linq.Table<LabTestQAPlus> LabTestQAPlus
		{
			get
			{
				return this.GetTable<LabTestQAPlus>();
			}
		}
		
		public System.Data.Linq.Table<QAPlus> QAPlus
		{
			get
			{
				return this.GetTable<QAPlus>();
			}
		}
		
		public System.Data.Linq.Table<ToDoList> ToDoLists
		{
			get
			{
				return this.GetTable<ToDoList>();
			}
		}
		
		public System.Data.Linq.Table<Vw_Bill> Vw_Bills
		{
			get
			{
				return this.GetTable<Vw_Bill>();
			}
		}
		
		public System.Data.Linq.Table<Vw_UserToDo> Vw_UserToDos
		{
			get
			{
				return this.GetTable<Vw_UserToDo>();
			}
		}
		
		public System.Data.Linq.Table<Vw_Vezarat> Vw_Vezarats
		{
			get
			{
				return this.GetTable<Vw_Vezarat>();
			}
		}
		
		public System.Data.Linq.Table<QuestionnaireGroup> QuestionnaireGroups
		{
			get
			{
				return this.GetTable<QuestionnaireGroup>();
			}
		}
		
		public System.Data.Linq.Table<Vw_Surveillance> Vw_Surveillances
		{
			get
			{
				return this.GetTable<Vw_Surveillance>();
			}
		}
		
		public System.Data.Linq.Table<Vw_AllData> Vw_AllDatas
		{
			get
			{
				return this.GetTable<Vw_AllData>();
			}
		}
		
		public System.Data.Linq.Table<Vw_billCom> Vw_billComs
		{
			get
			{
				return this.GetTable<Vw_billCom>();
			}
		}
		
		public System.Data.Linq.Table<Vw_SurveillanceCompany> Vw_SurveillanceCompanies
		{
			get
			{
				return this.GetTable<Vw_SurveillanceCompany>();
			}
		}
		
		public System.Data.Linq.Table<Vw_SickPerson> Vw_SickPersons
		{
			get
			{
				return this.GetTable<Vw_SickPerson>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<Vw_ResultCompany> Vw_ResultCompanies
		{
			get
			{
				return this.GetTable<Vw_ResultCompany>();
			}
		}
		
		public System.Data.Linq.Table<LabTestQA> LabTestQAs
		{
			get
			{
				return this.GetTable<LabTestQA>();
			}
		}
		
		public System.Data.Linq.Table<Vw_visitDetail> Vw_visitDetails
		{
			get
			{
				return this.GetTable<Vw_visitDetail>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Func_QuestionnaireTree", IsComposable=true)]
		public string Func_QuestionnaireTree([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> iD)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spu_groupQuestionResultVisitAudio")]
		public ISingleResult<spu_groupQuestionResultVisitAudioResult> spu_groupQuestionResultVisitAudio([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VisitID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> visitID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupID, visitID);
			return ((ISingleResult<spu_groupQuestionResultVisitAudioResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spu_Survill_pivot")]
		public int spu_Survill_pivot()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spu_qa_pivot")]
		public int spu_qa_pivot()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_test")]
		public ISingleResult<Spu_testResult> Spu_test()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Spu_testResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMg;
		
		private int _IDCo;
		
		private string _Name;
		
		private System.Nullable<byte> _IDManagement;
		
		private System.Nullable<short> _IDCompany;
		
		private int _id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMgChanging(int value);
    partial void OnIDMgChanged();
    partial void OnIDCoChanging(int value);
    partial void OnIDCoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDManagementChanging(System.Nullable<byte> value);
    partial void OnIDManagementChanged();
    partial void OnIDCompanyChanging(System.Nullable<short> value);
    partial void OnIDCompanyChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMg", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMg
		{
			get
			{
				return this._IDMg;
			}
			set
			{
				if ((this._IDMg != value))
				{
					this.OnIDMgChanging(value);
					this.SendPropertyChanging();
					this._IDMg = value;
					this.SendPropertyChanged("IDMg");
					this.OnIDMgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCo
		{
			get
			{
				return this._IDCo;
			}
			set
			{
				if ((this._IDCo != value))
				{
					this.OnIDCoChanging(value);
					this.SendPropertyChanging();
					this._IDCo = value;
					this.SendPropertyChanged("IDCo");
					this.OnIDCoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="TinyInt")]
		public System.Nullable<byte> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this.OnIDManagementChanging(value);
					this.SendPropertyChanging();
					this._IDManagement = value;
					this.SendPropertyChanged("IDManagement");
					this.OnIDManagementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt")]
		public System.Nullable<short> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _IDint;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Name;
		
		private bool _Deleted;
		
		private bool _Disable;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDisableChanging(bool value);
    partial void OnDisableChanged();
    #endregion
		
		public Department()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disable", DbType="Bit NOT NULL")]
		public bool Disable
		{
			get
			{
				return this._Disable;
			}
			set
			{
				if ((this._Disable != value))
				{
					this.OnDisableChanging(value);
					this.SendPropertyChanging();
					this._Disable = value;
					this.SendPropertyChanged("Disable");
					this.OnDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Visit", Storage="_Visits", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lab_Visit")]
	public partial class Lab_Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _VisitID;
		
		private System.Nullable<System.Guid> _HCISGSMID;
		
		private System.Nullable<int> _SerialNumber;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVisitIDChanging(System.Nullable<System.Guid> value);
    partial void OnVisitIDChanged();
    partial void OnHCISGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnHCISGSMIDChanged();
    partial void OnSerialNumberChanging(System.Nullable<int> value);
    partial void OnSerialNumberChanged();
    #endregion
		
		public Lab_Visit()
		{
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCISGSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> HCISGSMID
		{
			get
			{
				return this._HCISGSMID;
			}
			set
			{
				if ((this._HCISGSMID != value))
				{
					this.OnHCISGSMIDChanging(value);
					this.SendPropertyChanging();
					this._HCISGSMID = value;
					this.SendPropertyChanged("HCISGSMID");
					this.OnHCISGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int")]
		public System.Nullable<int> SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Lab_Visit", Storage="_Visit", ThisKey="VisitID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.Lab_Visits.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.Lab_Visits.Add(this);
						this._VisitID = value.ID;
					}
					else
					{
						this._VisitID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManageMent")]
	public partial class ManageMent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMg;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMgChanging(int value);
    partial void OnIDMgChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ManageMent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMg", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMg
		{
			get
			{
				return this._IDMg;
			}
			set
			{
				if ((this._IDMg != value))
				{
					this.OnIDMgChanging(value);
					this.SendPropertyChanging();
					this._IDMg = value;
					this.SendPropertyChanged("IDMg");
					this.OnIDMgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MedicalID;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _FatherName;
		
		private System.Nullable<long> _BirthCertificateNo;
		
		private string _BirthCertificateCity;
		
		private string _BirthDate;
		
		private string _BirthCity;
		
		private string _EducationLicence;
		
		private System.Nullable<int> _MilitaryServiceState;
		
		private System.Nullable<byte> _NaftJobExperience;
		
		private string _IdentityNumber;
		
		private string _Address;
		
		private string _PostalCode;
		
		private string _PhoneNumber;
		
		private string _MobileNumber;
		
		private string _MaritalStatus;
		
		private bool _Deleted;
		
		private System.Data.Linq.Binary _Photo;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<System.Guid> _PersonIDJamiat;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDunit;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<PersonWorkHistory> _PersonWorkHistories;
		
		private EntitySet<Visit> _Visits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnPersonalNoChanging(System.Nullable<int> value);
    partial void OnPersonalNoChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthCertificateNoChanging(System.Nullable<long> value);
    partial void OnBirthCertificateNoChanged();
    partial void OnBirthCertificateCityChanging(string value);
    partial void OnBirthCertificateCityChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthCityChanging(string value);
    partial void OnBirthCityChanged();
    partial void OnEducationLicenceChanging(string value);
    partial void OnEducationLicenceChanged();
    partial void OnMilitaryServiceStateChanging(System.Nullable<int> value);
    partial void OnMilitaryServiceStateChanged();
    partial void OnNaftJobExperienceChanging(System.Nullable<byte> value);
    partial void OnNaftJobExperienceChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnPersonIDJamiatChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDJamiatChanged();
    partial void OnIDManagementChanging(System.Nullable<int> value);
    partial void OnIDManagementChanged();
    partial void OnIDCompanyChanging(System.Nullable<int> value);
    partial void OnIDCompanyChanged();
    partial void OnIDSubCompanyChanging(System.Nullable<int> value);
    partial void OnIDSubCompanyChanged();
    partial void OnIDunitChanging(System.Nullable<int> value);
    partial void OnIDunitChanged();
    #endregion
		
		public Person()
		{
			this._Staff = default(EntityRef<Staff>);
			this._PersonWorkHistories = new EntitySet<PersonWorkHistory>(new Action<PersonWorkHistory>(this.attach_PersonWorkHistories), new Action<PersonWorkHistory>(this.detach_PersonWorkHistories));
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this.OnPersonalNoChanging(value);
					this.SendPropertyChanging();
					this._PersonalNo = value;
					this.SendPropertyChanged("PersonalNo");
					this.OnPersonalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateNo", DbType="BigInt")]
		public System.Nullable<long> BirthCertificateNo
		{
			get
			{
				return this._BirthCertificateNo;
			}
			set
			{
				if ((this._BirthCertificateNo != value))
				{
					this.OnBirthCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateNo = value;
					this.SendPropertyChanged("BirthCertificateNo");
					this.OnBirthCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCertificateCity", DbType="NVarChar(30)")]
		public string BirthCertificateCity
		{
			get
			{
				return this._BirthCertificateCity;
			}
			set
			{
				if ((this._BirthCertificateCity != value))
				{
					this.OnBirthCertificateCityChanging(value);
					this.SendPropertyChanging();
					this._BirthCertificateCity = value;
					this.SendPropertyChanged("BirthCertificateCity");
					this.OnBirthCertificateCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthCity", DbType="NVarChar(30)")]
		public string BirthCity
		{
			get
			{
				return this._BirthCity;
			}
			set
			{
				if ((this._BirthCity != value))
				{
					this.OnBirthCityChanging(value);
					this.SendPropertyChanging();
					this._BirthCity = value;
					this.SendPropertyChanged("BirthCity");
					this.OnBirthCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLicence", DbType="NVarChar(50)")]
		public string EducationLicence
		{
			get
			{
				return this._EducationLicence;
			}
			set
			{
				if ((this._EducationLicence != value))
				{
					this.OnEducationLicenceChanging(value);
					this.SendPropertyChanging();
					this._EducationLicence = value;
					this.SendPropertyChanged("EducationLicence");
					this.OnEducationLicenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MilitaryServiceState", DbType="Int")]
		public System.Nullable<int> MilitaryServiceState
		{
			get
			{
				return this._MilitaryServiceState;
			}
			set
			{
				if ((this._MilitaryServiceState != value))
				{
					this.OnMilitaryServiceStateChanging(value);
					this.SendPropertyChanging();
					this._MilitaryServiceState = value;
					this.SendPropertyChanged("MilitaryServiceState");
					this.OnMilitaryServiceStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaftJobExperience", DbType="TinyInt")]
		public System.Nullable<byte> NaftJobExperience
		{
			get
			{
				return this._NaftJobExperience;
			}
			set
			{
				if ((this._NaftJobExperience != value))
				{
					this.OnNaftJobExperienceChanging(value);
					this.SendPropertyChanging();
					this._NaftJobExperience = value;
					this.SendPropertyChanged("NaftJobExperience");
					this.OnNaftJobExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(25)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(10)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonIDJamiat", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonIDJamiat
		{
			get
			{
				return this._PersonIDJamiat;
			}
			set
			{
				if ((this._PersonIDJamiat != value))
				{
					this.OnPersonIDJamiatChanging(value);
					this.SendPropertyChanging();
					this._PersonIDJamiat = value;
					this.SendPropertyChanged("PersonIDJamiat");
					this.OnPersonIDJamiatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this.OnIDManagementChanging(value);
					this.SendPropertyChanging();
					this._IDManagement = value;
					this.SendPropertyChanged("IDManagement");
					this.OnIDManagementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this.OnIDSubCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDSubCompany = value;
					this.SendPropertyChanged("IDSubCompany");
					this.OnIDSubCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDunit", DbType="Int")]
		public System.Nullable<int> IDunit
		{
			get
			{
				return this._IDunit;
			}
			set
			{
				if ((this._IDunit != value))
				{
					this.OnIDunitChanging(value);
					this.SendPropertyChanging();
					this._IDunit = value;
					this.SendPropertyChanged("IDunit");
					this.OnIDunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonWorkHistory", Storage="_PersonWorkHistories", ThisKey="ID", OtherKey="PesronID")]
		public EntitySet<PersonWorkHistory> PersonWorkHistories
		{
			get
			{
				return this._PersonWorkHistories;
			}
			set
			{
				this._PersonWorkHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Visit", Storage="_Visits", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonWorkHistories(PersonWorkHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonWorkHistories(PersonWorkHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questionnaire")]
	public partial class Questionnaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _IDGroup;
		
		private string _Name;
		
		private string _Editor;
		
		private string _Answers;
		
		private System.Nullable<int> _SortCol;
		
		private bool _YesNo;
		
		private System.Nullable<int> _TypeID;
		
		private EntitySet<QAPlus> _QAPlus;
		
		private EntitySet<LabTestQA> _LabTestQAs;
		
		private EntityRef<QuestionnaireGroup> _QuestionnaireGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDGroupChanging(System.Guid value);
    partial void OnIDGroupChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnAnswersChanging(string value);
    partial void OnAnswersChanged();
    partial void OnSortColChanging(System.Nullable<int> value);
    partial void OnSortColChanged();
    partial void OnYesNoChanging(bool value);
    partial void OnYesNoChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    #endregion
		
		public Questionnaire()
		{
			this._QAPlus = new EntitySet<QAPlus>(new Action<QAPlus>(this.attach_QAPlus), new Action<QAPlus>(this.detach_QAPlus));
			this._LabTestQAs = new EntitySet<LabTestQA>(new Action<LabTestQA>(this.attach_LabTestQAs), new Action<LabTestQA>(this.detach_LabTestQAs));
			this._QuestionnaireGroup = default(EntityRef<QuestionnaireGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGroup", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDGroup
		{
			get
			{
				return this._IDGroup;
			}
			set
			{
				if ((this._IDGroup != value))
				{
					if (this._QuestionnaireGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGroupChanging(value);
					this.SendPropertyChanging();
					this._IDGroup = value;
					this.SendPropertyChanged("IDGroup");
					this.OnIDGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(70)")]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answers", DbType="NVarChar(1500)")]
		public string Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				if ((this._Answers != value))
				{
					this.OnAnswersChanging(value);
					this.SendPropertyChanging();
					this._Answers = value;
					this.SendPropertyChanged("Answers");
					this.OnAnswersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this.OnSortColChanging(value);
					this.SendPropertyChanging();
					this._SortCol = value;
					this.SendPropertyChanged("SortCol");
					this.OnSortColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesNo", DbType="Bit NOT NULL")]
		public bool YesNo
		{
			get
			{
				return this._YesNo;
			}
			set
			{
				if ((this._YesNo != value))
				{
					this.OnYesNoChanging(value);
					this.SendPropertyChanging();
					this._YesNo = value;
					this.SendPropertyChanged("YesNo");
					this.OnYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QAPlus", Storage="_QAPlus", ThisKey="ID", OtherKey="QuestionnariID")]
		public EntitySet<QAPlus> QAPlus
		{
			get
			{
				return this._QAPlus;
			}
			set
			{
				this._QAPlus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_LabTestQA", Storage="_LabTestQAs", ThisKey="ID", OtherKey="QuestionnaireID")]
		public EntitySet<LabTestQA> LabTestQAs
		{
			get
			{
				return this._LabTestQAs;
			}
			set
			{
				this._LabTestQAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_Questionnaire", Storage="_QuestionnaireGroup", ThisKey="IDGroup", OtherKey="ID", IsForeignKey=true)]
		public QuestionnaireGroup QuestionnaireGroup
		{
			get
			{
				return this._QuestionnaireGroup.Entity;
			}
			set
			{
				QuestionnaireGroup previousValue = this._QuestionnaireGroup.Entity;
				if (((previousValue != value) 
							|| (this._QuestionnaireGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionnaireGroup.Entity = null;
						previousValue.Questionnaires.Remove(this);
					}
					this._QuestionnaireGroup.Entity = value;
					if ((value != null))
					{
						value.Questionnaires.Add(this);
						this._IDGroup = value.ID;
					}
					else
					{
						this._IDGroup = default(System.Guid);
					}
					this.SendPropertyChanged("QuestionnaireGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = this;
		}
		
		private void detach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = null;
		}
		
		private void attach_LabTestQAs(LabTestQA entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = this;
		}
		
		private void detach_LabTestQAs(LabTestQA entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _VisitID;
		
		private System.Nullable<int> _SpecialityID;
		
		private bool _Priority;
		
		private string _SuggestedDate;
		
		private string _SuggestedTime;
		
		private string _StartDateLicense;
		
		private string _EndDateLicense;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _Comment;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnVisitIDChanging(System.Nullable<System.Guid> value);
    partial void OnVisitIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnSuggestedDateChanging(string value);
    partial void OnSuggestedDateChanged();
    partial void OnSuggestedTimeChanging(string value);
    partial void OnSuggestedTimeChanged();
    partial void OnStartDateLicenseChanging(string value);
    partial void OnStartDateLicenseChanged();
    partial void OnEndDateLicenseChanging(string value);
    partial void OnEndDateLicenseChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Reference()
		{
			this._Speciality = default(EntityRef<Speciality>);
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedDate", DbType="NVarChar(10)")]
		public string SuggestedDate
		{
			get
			{
				return this._SuggestedDate;
			}
			set
			{
				if ((this._SuggestedDate != value))
				{
					this.OnSuggestedDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestedDate = value;
					this.SendPropertyChanged("SuggestedDate");
					this.OnSuggestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedTime", DbType="NVarChar(8)")]
		public string SuggestedTime
		{
			get
			{
				return this._SuggestedTime;
			}
			set
			{
				if ((this._SuggestedTime != value))
				{
					this.OnSuggestedTimeChanging(value);
					this.SendPropertyChanging();
					this._SuggestedTime = value;
					this.SendPropertyChanged("SuggestedTime");
					this.OnSuggestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateLicense", DbType="NVarChar(10)")]
		public string StartDateLicense
		{
			get
			{
				return this._StartDateLicense;
			}
			set
			{
				if ((this._StartDateLicense != value))
				{
					this.OnStartDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._StartDateLicense = value;
					this.SendPropertyChanged("StartDateLicense");
					this.OnStartDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateLicense", DbType="NVarChar(10)")]
		public string EndDateLicense
		{
			get
			{
				return this._EndDateLicense;
			}
			set
			{
				if ((this._EndDateLicense != value))
				{
					this.OnEndDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._EndDateLicense = value;
					this.SendPropertyChanged("EndDateLicense");
					this.OnEndDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Reference", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Reference", Storage="_Visit", ThisKey="VisitID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._VisitID = value.ID;
					}
					else
					{
						this._VisitID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Speciality1;
		
		private System.Nullable<int> _HeadUserID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdProfessionType;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Staff> _Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    partial void OnHeadUserIDChanging(System.Nullable<int> value);
    partial void OnHeadUserIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdProfessionTypeChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdProfessionTypeChanged();
    #endregion
		
		public Speciality()
		{
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadUserID", DbType="Int")]
		public System.Nullable<int> HeadUserID
		{
			get
			{
				return this._HeadUserID;
			}
			set
			{
				if ((this._HeadUserID != value))
				{
					this.OnHeadUserIDChanging(value);
					this.SendPropertyChanging();
					this._HeadUserID = value;
					this.SendPropertyChanged("HeadUserID");
					this.OnHeadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdProfessionType", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdProfessionType
		{
			get
			{
				return this._SATAIdProfessionType;
			}
			set
			{
				if ((this._SATAIdProfessionType != value))
				{
					this.OnSATAIdProfessionTypeChanging(value);
					this.SendPropertyChanging();
					this._SATAIdProfessionType = value;
					this.SendPropertyChanged("SATAIdProfessionType");
					this.OnSATAIdProfessionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Reference", Storage="_References", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private string _RoomNumber;
		
		private System.Nullable<int> _StaffRoleID;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _UserTypeID;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private string _OrganizationLevel;
		
		private bool _Hide;
		
		private bool _ShowInMonitor;
		
		private System.Nullable<int> _ExternalID;
		
		private bool _Offical;
		
		private System.Nullable<int> _PositionID;
		
		private System.Data.Linq.Binary _SignPicture;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<Visit> _Visits1;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnStaffRoleIDChanging(System.Nullable<int> value);
    partial void OnStaffRoleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnUserTypeIDChanging(System.Nullable<int> value);
    partial void OnUserTypeIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    partial void OnOrganizationLevelChanging(string value);
    partial void OnOrganizationLevelChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    partial void OnShowInMonitorChanging(bool value);
    partial void OnShowInMonitorChanged();
    partial void OnExternalIDChanging(System.Nullable<int> value);
    partial void OnExternalIDChanged();
    partial void OnOfficalChanging(bool value);
    partial void OnOfficalChanged();
    partial void OnPositionIDChanging(System.Nullable<int> value);
    partial void OnPositionIDChanged();
    partial void OnSignPictureChanging(System.Data.Linq.Binary value);
    partial void OnSignPictureChanged();
    #endregion
		
		public Staff()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._Visits1 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits1), new Action<Visit>(this.detach_Visits1));
			this._Person = default(EntityRef<Person>);
			this._Speciality = default(EntityRef<Speciality>);
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(200)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffRoleID", DbType="Int")]
		public System.Nullable<int> StaffRoleID
		{
			get
			{
				return this._StaffRoleID;
			}
			set
			{
				if ((this._StaffRoleID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffRoleIDChanging(value);
					this.SendPropertyChanging();
					this._StaffRoleID = value;
					this.SendPropertyChanged("StaffRoleID");
					this.OnStaffRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(100)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int")]
		public System.Nullable<int> UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationLevel", DbType="NVarChar(100)")]
		public string OrganizationLevel
		{
			get
			{
				return this._OrganizationLevel;
			}
			set
			{
				if ((this._OrganizationLevel != value))
				{
					this.OnOrganizationLevelChanging(value);
					this.SendPropertyChanging();
					this._OrganizationLevel = value;
					this.SendPropertyChanged("OrganizationLevel");
					this.OnOrganizationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInMonitor", DbType="Bit NOT NULL")]
		public bool ShowInMonitor
		{
			get
			{
				return this._ShowInMonitor;
			}
			set
			{
				if ((this._ShowInMonitor != value))
				{
					this.OnShowInMonitorChanging(value);
					this.SendPropertyChanging();
					this._ShowInMonitor = value;
					this.SendPropertyChanged("ShowInMonitor");
					this.OnShowInMonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="Int")]
		public System.Nullable<int> ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offical", DbType="Bit NOT NULL")]
		public bool Offical
		{
			get
			{
				return this._Offical;
			}
			set
			{
				if ((this._Offical != value))
				{
					this.OnOfficalChanging(value);
					this.SendPropertyChanging();
					this._Offical = value;
					this.SendPropertyChanged("Offical");
					this.OnOfficalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int")]
		public System.Nullable<int> PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignPicture", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SignPicture
		{
			get
			{
				return this._SignPicture;
			}
			set
			{
				if ((this._SignPicture != value))
				{
					this.OnSignPictureChanging(value);
					this.SendPropertyChanging();
					this._SignPicture = value;
					this.SendPropertyChanged("SignPicture");
					this.OnSignPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Visit", Storage="_Visits", ThisKey="ID", OtherKey="ResultDocStaffID")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Visit1", Storage="_Visits1", ThisKey="ID", OtherKey="SpecialistDocStaffID")]
		public EntitySet<Visit> Visits1
		{
			get
			{
				return this._Visits1;
			}
			set
			{
				this._Visits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Staff", Storage="_Definition", ThisKey="StaffRoleID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._StaffRoleID = value.ID;
					}
					else
					{
						this._StaffRoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubCompany")]
	public partial class SubCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMg;
		
		private int _IDCo;
		
		private int _IDOrgan;
		
		private string _Name;
		
		private System.Nullable<byte> _IDManagement;
		
		private System.Nullable<short> _IDCompany;
		
		private System.Nullable<short> _IDSubCompany;
		
		private short _id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMgChanging(int value);
    partial void OnIDMgChanged();
    partial void OnIDCoChanging(int value);
    partial void OnIDCoChanged();
    partial void OnIDOrganChanging(int value);
    partial void OnIDOrganChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDManagementChanging(System.Nullable<byte> value);
    partial void OnIDManagementChanged();
    partial void OnIDCompanyChanging(System.Nullable<short> value);
    partial void OnIDCompanyChanged();
    partial void OnIDSubCompanyChanging(System.Nullable<short> value);
    partial void OnIDSubCompanyChanged();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    #endregion
		
		public SubCompany()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMg", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMg
		{
			get
			{
				return this._IDMg;
			}
			set
			{
				if ((this._IDMg != value))
				{
					this.OnIDMgChanging(value);
					this.SendPropertyChanging();
					this._IDMg = value;
					this.SendPropertyChanged("IDMg");
					this.OnIDMgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCo
		{
			get
			{
				return this._IDCo;
			}
			set
			{
				if ((this._IDCo != value))
				{
					this.OnIDCoChanging(value);
					this.SendPropertyChanging();
					this._IDCo = value;
					this.SendPropertyChanged("IDCo");
					this.OnIDCoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrgan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDOrgan
		{
			get
			{
				return this._IDOrgan;
			}
			set
			{
				if ((this._IDOrgan != value))
				{
					this.OnIDOrganChanging(value);
					this.SendPropertyChanging();
					this._IDOrgan = value;
					this.SendPropertyChanged("IDOrgan");
					this.OnIDOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="TinyInt")]
		public System.Nullable<byte> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this.OnIDManagementChanging(value);
					this.SendPropertyChanging();
					this._IDManagement = value;
					this.SendPropertyChanged("IDManagement");
					this.OnIDManagementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt")]
		public System.Nullable<short> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="SmallInt")]
		public System.Nullable<short> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this.OnIDSubCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDSubCompany = value;
					this.SendPropertyChanged("IDSubCompany");
					this.OnIDSubCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="SmallInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surveillance")]
	public partial class Surveillance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _VisitID;
		
		private System.Nullable<int> _SicknessID;
		
		private System.Nullable<int> _SicknessTypeID;
		
		private System.Nullable<int> _SicknessSeverityID;
		
		private System.Nullable<bool> _Active;
		
		private string _FirstDiagnosisDate;
		
		private string _RecoveryDate;
		
		private string _NextVisitDate;
		
		private string _Comment;
		
		private string _ActionsTaken;
		
		private string _ActionResult;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _Deleted;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<Definition> _Definition2;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnVisitIDChanging(System.Guid value);
    partial void OnVisitIDChanged();
    partial void OnSicknessIDChanging(System.Nullable<int> value);
    partial void OnSicknessIDChanged();
    partial void OnSicknessTypeIDChanging(System.Nullable<int> value);
    partial void OnSicknessTypeIDChanged();
    partial void OnSicknessSeverityIDChanging(System.Nullable<int> value);
    partial void OnSicknessSeverityIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnFirstDiagnosisDateChanging(string value);
    partial void OnFirstDiagnosisDateChanged();
    partial void OnRecoveryDateChanging(string value);
    partial void OnRecoveryDateChanged();
    partial void OnNextVisitDateChanging(string value);
    partial void OnNextVisitDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnActionsTakenChanging(string value);
    partial void OnActionsTakenChanged();
    partial void OnActionResultChanging(string value);
    partial void OnActionResultChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Surveillance()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._Definition2 = default(EntityRef<Definition>);
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessID", DbType="Int")]
		public System.Nullable<int> SicknessID
		{
			get
			{
				return this._SicknessID;
			}
			set
			{
				if ((this._SicknessID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSicknessIDChanging(value);
					this.SendPropertyChanging();
					this._SicknessID = value;
					this.SendPropertyChanged("SicknessID");
					this.OnSicknessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessTypeID", DbType="Int")]
		public System.Nullable<int> SicknessTypeID
		{
			get
			{
				return this._SicknessTypeID;
			}
			set
			{
				if ((this._SicknessTypeID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSicknessTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SicknessTypeID = value;
					this.SendPropertyChanged("SicknessTypeID");
					this.OnSicknessTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessSeverityID", DbType="Int")]
		public System.Nullable<int> SicknessSeverityID
		{
			get
			{
				return this._SicknessSeverityID;
			}
			set
			{
				if ((this._SicknessSeverityID != value))
				{
					if (this._Definition2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSicknessSeverityIDChanging(value);
					this.SendPropertyChanging();
					this._SicknessSeverityID = value;
					this.SendPropertyChanged("SicknessSeverityID");
					this.OnSicknessSeverityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDiagnosisDate", DbType="NVarChar(10)")]
		public string FirstDiagnosisDate
		{
			get
			{
				return this._FirstDiagnosisDate;
			}
			set
			{
				if ((this._FirstDiagnosisDate != value))
				{
					this.OnFirstDiagnosisDateChanging(value);
					this.SendPropertyChanging();
					this._FirstDiagnosisDate = value;
					this.SendPropertyChanged("FirstDiagnosisDate");
					this.OnFirstDiagnosisDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoveryDate", DbType="NVarChar(10)")]
		public string RecoveryDate
		{
			get
			{
				return this._RecoveryDate;
			}
			set
			{
				if ((this._RecoveryDate != value))
				{
					this.OnRecoveryDateChanging(value);
					this.SendPropertyChanging();
					this._RecoveryDate = value;
					this.SendPropertyChanged("RecoveryDate");
					this.OnRecoveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDate", DbType="NVarChar(10)")]
		public string NextVisitDate
		{
			get
			{
				return this._NextVisitDate;
			}
			set
			{
				if ((this._NextVisitDate != value))
				{
					this.OnNextVisitDateChanging(value);
					this.SendPropertyChanging();
					this._NextVisitDate = value;
					this.SendPropertyChanged("NextVisitDate");
					this.OnNextVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionsTaken", DbType="NVarChar(300)")]
		public string ActionsTaken
		{
			get
			{
				return this._ActionsTaken;
			}
			set
			{
				if ((this._ActionsTaken != value))
				{
					this.OnActionsTakenChanging(value);
					this.SendPropertyChanging();
					this._ActionsTaken = value;
					this.SendPropertyChanged("ActionsTaken");
					this.OnActionsTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionResult", DbType="NVarChar(300)")]
		public string ActionResult
		{
			get
			{
				return this._ActionResult;
			}
			set
			{
				if ((this._ActionResult != value))
				{
					this.OnActionResultChanging(value);
					this.SendPropertyChanging();
					this._ActionResult = value;
					this.SendPropertyChanged("ActionResult");
					this.OnActionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Surveillance", Storage="_Definition", ThisKey="SicknessID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Surveillances.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Surveillances.Add(this);
						this._SicknessID = value.ID;
					}
					else
					{
						this._SicknessID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Surveillance1", Storage="_Definition1", ThisKey="SicknessTypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Surveillances1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Surveillances1.Add(this);
						this._SicknessTypeID = value.ID;
					}
					else
					{
						this._SicknessTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Surveillance2", Storage="_Definition2", ThisKey="SicknessSeverityID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition2
		{
			get
			{
				return this._Definition2.Entity;
			}
			set
			{
				Definition previousValue = this._Definition2.Entity;
				if (((previousValue != value) 
							|| (this._Definition2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition2.Entity = null;
						previousValue.Surveillances2.Remove(this);
					}
					this._Definition2.Entity = value;
					if ((value != null))
					{
						value.Surveillances2.Add(this);
						this._SicknessSeverityID = value.ID;
					}
					else
					{
						this._SicknessSeverityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Surveillance", Storage="_Visit", ThisKey="VisitID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.Surveillances.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.Surveillances.Add(this);
						this._VisitID = value.ID;
					}
					else
					{
						this._VisitID = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SecurityUsers")]
	public partial class View_SecurityUser
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FullName;
		
		private bool _Disabled;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _Descriptions;
		
		private System.Nullable<bool> _Sex;
		
		private System.Nullable<int> _ApplicationID;
		
		private string _ApplicationName;
		
		public View_SecurityUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(101)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit NOT NULL")]
		public bool Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this._Disabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(MAX)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this._Descriptions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Jamiat_Person_Company")]
	public partial class View_Jamiat_Person_Company
	{
		
		private System.Guid _IDPerson;
		
		private int _PersonnelNo;
		
		private string _NationalCode;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private int _IDManagement;
		
		private int _IDCompany;
		
		private int _IDSubCompany;
		
		private string _ManagementName;
		
		private string _CompanyName;
		
		private string _SubCompanyName;
		
		private int _RelationOrderNo;
		
		private int _IDUnit;
		
		public View_Jamiat_Person_Company()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="Int NOT NULL")]
		public int PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(50)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int NOT NULL")]
		public int IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int NOT NULL")]
		public int IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int NOT NULL")]
		public int IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManagementName
		{
			get
			{
				return this._ManagementName;
			}
			set
			{
				if ((this._ManagementName != value))
				{
					this._ManagementName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubCompanyName
		{
			get
			{
				return this._SubCompanyName;
			}
			set
			{
				if ((this._SubCompanyName != value))
				{
					this._SubCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationOrderNo", DbType="Int NOT NULL")]
		public int RelationOrderNo
		{
			get
			{
				return this._RelationOrderNo;
			}
			set
			{
				if ((this._RelationOrderNo != value))
				{
					this._RelationOrderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUnit", DbType="Int NOT NULL")]
		public int IDUnit
		{
			get
			{
				return this._IDUnit;
			}
			set
			{
				if ((this._IDUnit != value))
				{
					this._IDUnit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultDetail")]
	public partial class ResultDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _ItemID;
		
		private System.Nullable<int> _FinalOpinionTypeID;
		
		private string _Comment;
		
		private bool _IsConsumer;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private System.Nullable<System.Guid> _VisitID;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnFinalOpinionTypeIDChanging(System.Nullable<int> value);
    partial void OnFinalOpinionTypeIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnIsConsumerChanging(bool value);
    partial void OnIsConsumerChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnVisitIDChanging(System.Nullable<System.Guid> value);
    partial void OnVisitIDChanged();
    #endregion
		
		public ResultDetail()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalOpinionTypeID", DbType="Int")]
		public System.Nullable<int> FinalOpinionTypeID
		{
			get
			{
				return this._FinalOpinionTypeID;
			}
			set
			{
				if ((this._FinalOpinionTypeID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinalOpinionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._FinalOpinionTypeID = value;
					this.SendPropertyChanged("FinalOpinionTypeID");
					this.OnFinalOpinionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(250)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConsumer", DbType="Bit NOT NULL")]
		public bool IsConsumer
		{
			get
			{
				return this._IsConsumer;
			}
			set
			{
				if ((this._IsConsumer != value))
				{
					this.OnIsConsumerChanging(value);
					this.SendPropertyChanging();
					this._IsConsumer = value;
					this.SendPropertyChanged("IsConsumer");
					this.OnIsConsumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_ResultDetail", Storage="_Definition", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.ResultDetails.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.ResultDetails.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_ResultDetail1", Storage="_Definition1", ThisKey="FinalOpinionTypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.ResultDetails1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.ResultDetails1.Add(this);
						this._FinalOpinionTypeID = value.ID;
					}
					else
					{
						this._FinalOpinionTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_ResultDetail", Storage="_Visit", ThisKey="VisitID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.ResultDetails.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.ResultDetails.Add(this);
						this._VisitID = value.ID;
					}
					else
					{
						this._VisitID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMg;
		
		private int _IDco;
		
		private int _IDOrgan;
		
		private int _IDUnit;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMgChanging(int value);
    partial void OnIDMgChanged();
    partial void OnIDcoChanging(int value);
    partial void OnIDcoChanged();
    partial void OnIDOrganChanging(int value);
    partial void OnIDOrganChanged();
    partial void OnIDUnitChanging(int value);
    partial void OnIDUnitChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMg", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMg
		{
			get
			{
				return this._IDMg;
			}
			set
			{
				if ((this._IDMg != value))
				{
					this.OnIDMgChanging(value);
					this.SendPropertyChanging();
					this._IDMg = value;
					this.SendPropertyChanged("IDMg");
					this.OnIDMgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDco", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDco
		{
			get
			{
				return this._IDco;
			}
			set
			{
				if ((this._IDco != value))
				{
					this.OnIDcoChanging(value);
					this.SendPropertyChanging();
					this._IDco = value;
					this.SendPropertyChanged("IDco");
					this.OnIDcoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrgan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDOrgan
		{
			get
			{
				return this._IDOrgan;
			}
			set
			{
				if ((this._IDOrgan != value))
				{
					this.OnIDOrganChanging(value);
					this.SendPropertyChanging();
					this._IDOrgan = value;
					this.SendPropertyChanged("IDOrgan");
					this.OnIDOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUnit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDUnit
		{
			get
			{
				return this._IDUnit;
			}
			set
			{
				if ((this._IDUnit != value))
				{
					this.OnIDUnitChanging(value);
					this.SendPropertyChanging();
					this._IDUnit = value;
					this.SendPropertyChanged("IDUnit");
					this.OnIDUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonWorkHistory")]
	public partial class PersonWorkHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PesronID;
		
		private System.Nullable<System.Guid> _VisitID;
		
		private bool _SetAsCurrent;
		
		private string _JobTitle;
		
		private string _JobOrder;
		
		private string _Shift;
		
		private string _ChangeReason;
		
		private string _FromDate;
		
		private string _ToDate;
		
		private string _Comment;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private System.Nullable<int> _AssignedTaskID;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPesronIDChanging(System.Nullable<System.Guid> value);
    partial void OnPesronIDChanged();
    partial void OnVisitIDChanging(System.Nullable<System.Guid> value);
    partial void OnVisitIDChanged();
    partial void OnSetAsCurrentChanging(bool value);
    partial void OnSetAsCurrentChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnJobOrderChanging(string value);
    partial void OnJobOrderChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnChangeReasonChanging(string value);
    partial void OnChangeReasonChanged();
    partial void OnFromDateChanging(string value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(string value);
    partial void OnToDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnAssignedTaskIDChanging(System.Nullable<int> value);
    partial void OnAssignedTaskIDChanged();
    #endregion
		
		public PersonWorkHistory()
		{
			this._Person = default(EntityRef<Person>);
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PesronID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PesronID
		{
			get
			{
				return this._PesronID;
			}
			set
			{
				if ((this._PesronID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPesronIDChanging(value);
					this.SendPropertyChanging();
					this._PesronID = value;
					this.SendPropertyChanged("PesronID");
					this.OnPesronIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetAsCurrent", DbType="Bit NOT NULL")]
		public bool SetAsCurrent
		{
			get
			{
				return this._SetAsCurrent;
			}
			set
			{
				if ((this._SetAsCurrent != value))
				{
					this.OnSetAsCurrentChanging(value);
					this.SendPropertyChanging();
					this._SetAsCurrent = value;
					this.SendPropertyChanged("SetAsCurrent");
					this.OnSetAsCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(50)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobOrder", DbType="NVarChar(50)")]
		public string JobOrder
		{
			get
			{
				return this._JobOrder;
			}
			set
			{
				if ((this._JobOrder != value))
				{
					this.OnJobOrderChanging(value);
					this.SendPropertyChanging();
					this._JobOrder = value;
					this.SendPropertyChanged("JobOrder");
					this.OnJobOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(50)")]
		public string Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeReason", DbType="NVarChar(500)")]
		public string ChangeReason
		{
			get
			{
				return this._ChangeReason;
			}
			set
			{
				if ((this._ChangeReason != value))
				{
					this.OnChangeReasonChanging(value);
					this.SendPropertyChanging();
					this._ChangeReason = value;
					this.SendPropertyChanged("ChangeReason");
					this.OnChangeReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="NChar(10)")]
		public string FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="NChar(10)")]
		public string ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTaskID", DbType="Int")]
		public System.Nullable<int> AssignedTaskID
		{
			get
			{
				return this._AssignedTaskID;
			}
			set
			{
				if ((this._AssignedTaskID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedTaskIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedTaskID = value;
					this.SendPropertyChanged("AssignedTaskID");
					this.OnAssignedTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonWorkHistory", Storage="_Person", ThisKey="PesronID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonWorkHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonWorkHistories.Add(this);
						this._PesronID = value.ID;
					}
					else
					{
						this._PesronID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PersonWorkHistory", Storage="_Definition", ThisKey="AssignedTaskID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.PersonWorkHistories.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.PersonWorkHistories.Add(this);
						this._AssignedTaskID = value.ID;
					}
					else
					{
						this._AssignedTaskID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Surveillance> _Surveillances;
		
		private EntitySet<Surveillance> _Surveillances1;
		
		private EntitySet<Surveillance> _Surveillances2;
		
		private EntitySet<ResultDetail> _ResultDetails;
		
		private EntitySet<ResultDetail> _ResultDetails1;
		
		private EntitySet<PersonWorkHistory> _PersonWorkHistories;
		
		private EntitySet<Definition> _Definitions;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<Visit> _Visits1;
		
		private EntitySet<Visit> _Visits2;
		
		private EntitySet<Visit> _Visits3;
		
		private EntitySet<Visit> _Visits4;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public Definition()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Surveillances = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances), new Action<Surveillance>(this.detach_Surveillances));
			this._Surveillances1 = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances1), new Action<Surveillance>(this.detach_Surveillances1));
			this._Surveillances2 = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances2), new Action<Surveillance>(this.detach_Surveillances2));
			this._ResultDetails = new EntitySet<ResultDetail>(new Action<ResultDetail>(this.attach_ResultDetails), new Action<ResultDetail>(this.detach_ResultDetails));
			this._ResultDetails1 = new EntitySet<ResultDetail>(new Action<ResultDetail>(this.attach_ResultDetails1), new Action<ResultDetail>(this.detach_ResultDetails1));
			this._PersonWorkHistories = new EntitySet<PersonWorkHistory>(new Action<PersonWorkHistory>(this.attach_PersonWorkHistories), new Action<PersonWorkHistory>(this.detach_PersonWorkHistories));
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._Visits1 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits1), new Action<Visit>(this.detach_Visits1));
			this._Visits2 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits2), new Action<Visit>(this.detach_Visits2));
			this._Visits3 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits3), new Action<Visit>(this.detach_Visits3));
			this._Visits4 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits4), new Action<Visit>(this.detach_Visits4));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="StaffRoleID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Surveillance", Storage="_Surveillances", ThisKey="ID", OtherKey="SicknessID")]
		public EntitySet<Surveillance> Surveillances
		{
			get
			{
				return this._Surveillances;
			}
			set
			{
				this._Surveillances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Surveillance1", Storage="_Surveillances1", ThisKey="ID", OtherKey="SicknessTypeID")]
		public EntitySet<Surveillance> Surveillances1
		{
			get
			{
				return this._Surveillances1;
			}
			set
			{
				this._Surveillances1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Surveillance2", Storage="_Surveillances2", ThisKey="ID", OtherKey="SicknessSeverityID")]
		public EntitySet<Surveillance> Surveillances2
		{
			get
			{
				return this._Surveillances2;
			}
			set
			{
				this._Surveillances2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_ResultDetail", Storage="_ResultDetails", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ResultDetail> ResultDetails
		{
			get
			{
				return this._ResultDetails;
			}
			set
			{
				this._ResultDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_ResultDetail1", Storage="_ResultDetails1", ThisKey="ID", OtherKey="FinalOpinionTypeID")]
		public EntitySet<ResultDetail> ResultDetails1
		{
			get
			{
				return this._ResultDetails1;
			}
			set
			{
				this._ResultDetails1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PersonWorkHistory", Storage="_PersonWorkHistories", ThisKey="ID", OtherKey="AssignedTaskID")]
		public EntitySet<PersonWorkHistory> PersonWorkHistories
		{
			get
			{
				return this._PersonWorkHistories;
			}
			set
			{
				this._PersonWorkHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit", Storage="_Visits", ThisKey="ID", OtherKey="VisitType")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit1", Storage="_Visits1", ThisKey="ID", OtherKey="LimitationID")]
		public EntitySet<Visit> Visits1
		{
			get
			{
				return this._Visits1;
			}
			set
			{
				this._Visits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit2", Storage="_Visits2", ThisKey="ID", OtherKey="ResultOpinionID")]
		public EntitySet<Visit> Visits2
		{
			get
			{
				return this._Visits2;
			}
			set
			{
				this._Visits2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit3", Storage="_Visits3", ThisKey="ID", OtherKey="PersonalTypeID")]
		public EntitySet<Visit> Visits3
		{
			get
			{
				return this._Visits3;
			}
			set
			{
				this._Visits3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit4", Storage="_Visits4", ThisKey="ID", OtherKey="IntroductionStrID")]
		public EntitySet<Visit> Visits4
		{
			get
			{
				return this._Visits4;
			}
			set
			{
				this._Visits4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Surveillances1(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Surveillances1(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Surveillances2(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Definition2 = this;
		}
		
		private void detach_Surveillances2(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Definition2 = null;
		}
		
		private void attach_ResultDetails(ResultDetail entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_ResultDetails(ResultDetail entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_ResultDetails1(ResultDetail entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_ResultDetails1(ResultDetail entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_PersonWorkHistories(PersonWorkHistory entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_PersonWorkHistories(PersonWorkHistory entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Visits2(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition2 = this;
		}
		
		private void detach_Visits2(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition2 = null;
		}
		
		private void attach_Visits3(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition3 = this;
		}
		
		private void detach_Visits3(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition3 = null;
		}
		
		private void attach_Visits4(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition4 = this;
		}
		
		private void detach_Visits4(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Definition4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VitalSigns")]
	public partial class VitalSign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Temperatures;
		
		private string _Breathing;
		
		private string _NervousSymptoms;
		
		private string _PupilReflexes;
		
		private string _SystolicBloodPressure;
		
		private string _DiastolicBloodPressure;
		
		private string _Pulse;
		
		private string _SPO2;
		
		private string _Glucometry;
		
		private System.Nullable<int> _TriageLevelChange;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<double> _RoundTheAbdomen;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTemperaturesChanging(string value);
    partial void OnTemperaturesChanged();
    partial void OnBreathingChanging(string value);
    partial void OnBreathingChanged();
    partial void OnNervousSymptomsChanging(string value);
    partial void OnNervousSymptomsChanged();
    partial void OnPupilReflexesChanging(string value);
    partial void OnPupilReflexesChanged();
    partial void OnSystolicBloodPressureChanging(string value);
    partial void OnSystolicBloodPressureChanged();
    partial void OnDiastolicBloodPressureChanging(string value);
    partial void OnDiastolicBloodPressureChanged();
    partial void OnPulseChanging(string value);
    partial void OnPulseChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnGlucometryChanging(string value);
    partial void OnGlucometryChanged();
    partial void OnTriageLevelChangeChanging(System.Nullable<int> value);
    partial void OnTriageLevelChangeChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnRoundTheAbdomenChanging(System.Nullable<double> value);
    partial void OnRoundTheAbdomenChanged();
    #endregion
		
		public VitalSign()
		{
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperatures", DbType="NVarChar(50)")]
		public string Temperatures
		{
			get
			{
				return this._Temperatures;
			}
			set
			{
				if ((this._Temperatures != value))
				{
					this.OnTemperaturesChanging(value);
					this.SendPropertyChanging();
					this._Temperatures = value;
					this.SendPropertyChanged("Temperatures");
					this.OnTemperaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breathing", DbType="NVarChar(50)")]
		public string Breathing
		{
			get
			{
				return this._Breathing;
			}
			set
			{
				if ((this._Breathing != value))
				{
					this.OnBreathingChanging(value);
					this.SendPropertyChanging();
					this._Breathing = value;
					this.SendPropertyChanged("Breathing");
					this.OnBreathingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSymptoms", DbType="NVarChar(50)")]
		public string NervousSymptoms
		{
			get
			{
				return this._NervousSymptoms;
			}
			set
			{
				if ((this._NervousSymptoms != value))
				{
					this.OnNervousSymptomsChanging(value);
					this.SendPropertyChanging();
					this._NervousSymptoms = value;
					this.SendPropertyChanged("NervousSymptoms");
					this.OnNervousSymptomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilReflexes", DbType="NVarChar(50)")]
		public string PupilReflexes
		{
			get
			{
				return this._PupilReflexes;
			}
			set
			{
				if ((this._PupilReflexes != value))
				{
					this.OnPupilReflexesChanging(value);
					this.SendPropertyChanging();
					this._PupilReflexes = value;
					this.SendPropertyChanged("PupilReflexes");
					this.OnPupilReflexesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystolicBloodPressure", DbType="NVarChar(50)")]
		public string SystolicBloodPressure
		{
			get
			{
				return this._SystolicBloodPressure;
			}
			set
			{
				if ((this._SystolicBloodPressure != value))
				{
					this.OnSystolicBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._SystolicBloodPressure = value;
					this.SendPropertyChanged("SystolicBloodPressure");
					this.OnSystolicBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiastolicBloodPressure", DbType="NVarChar(50)")]
		public string DiastolicBloodPressure
		{
			get
			{
				return this._DiastolicBloodPressure;
			}
			set
			{
				if ((this._DiastolicBloodPressure != value))
				{
					this.OnDiastolicBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._DiastolicBloodPressure = value;
					this.SendPropertyChanged("DiastolicBloodPressure");
					this.OnDiastolicBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pulse", DbType="NVarChar(50)")]
		public string Pulse
		{
			get
			{
				return this._Pulse;
			}
			set
			{
				if ((this._Pulse != value))
				{
					this.OnPulseChanging(value);
					this.SendPropertyChanging();
					this._Pulse = value;
					this.SendPropertyChanged("Pulse");
					this.OnPulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(50)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glucometry", DbType="NVarChar(50)")]
		public string Glucometry
		{
			get
			{
				return this._Glucometry;
			}
			set
			{
				if ((this._Glucometry != value))
				{
					this.OnGlucometryChanging(value);
					this.SendPropertyChanging();
					this._Glucometry = value;
					this.SendPropertyChanged("Glucometry");
					this.OnGlucometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageLevelChange", DbType="Int")]
		public System.Nullable<int> TriageLevelChange
		{
			get
			{
				return this._TriageLevelChange;
			}
			set
			{
				if ((this._TriageLevelChange != value))
				{
					this.OnTriageLevelChangeChanging(value);
					this.SendPropertyChanging();
					this._TriageLevelChange = value;
					this.SendPropertyChanged("TriageLevelChange");
					this.OnTriageLevelChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundTheAbdomen", DbType="Float")]
		public System.Nullable<double> RoundTheAbdomen
		{
			get
			{
				return this._RoundTheAbdomen;
			}
			set
			{
				if ((this._RoundTheAbdomen != value))
				{
					this.OnRoundTheAbdomenChanging(value);
					this.SendPropertyChanging();
					this._RoundTheAbdomen = value;
					this.SendPropertyChanged("RoundTheAbdomen");
					this.OnRoundTheAbdomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_VitalSign", Storage="_Visit", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.VitalSign = null;
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.VitalSign = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pattern")]
	public partial class Pattern : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PatternName;
		
		private System.Guid _ServiceID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternNameChanging(string value);
    partial void OnPatternNameChanged();
    partial void OnServiceIDChanging(System.Guid value);
    partial void OnServiceIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public Pattern()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternName", DbType="NVarChar(70)")]
		public string PatternName
		{
			get
			{
				return this._PatternName;
			}
			set
			{
				if ((this._PatternName != value))
				{
					this.OnPatternNameChanging(value);
					this.SendPropertyChanging();
					this._PatternName = value;
					this.SendPropertyChanged("PatternName");
					this.OnPatternNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="VarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="VarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariff")]
	public partial class Tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<decimal> _FreePrice;
		
		private System.Nullable<decimal> _GovernmentalPrice;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private bool _Lock;
		
		private EntityRef<Insurance> _Insurance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPatientShareChanging(System.Nullable<decimal> value);
    partial void OnPatientShareChanged();
    partial void OnOrganizationShareChanging(System.Nullable<decimal> value);
    partial void OnOrganizationShareChanged();
    partial void OnFreePriceChanging(System.Nullable<decimal> value);
    partial void OnFreePriceChanged();
    partial void OnGovernmentalPriceChanging(System.Nullable<decimal> value);
    partial void OnGovernmentalPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    #endregion
		
		public Tariff()
		{
			this._Insurance = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this.OnOrganizationShareChanging(value);
					this.SendPropertyChanging();
					this._OrganizationShare = value;
					this.SendPropertyChanged("OrganizationShare");
					this.OnOrganizationShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreePrice", DbType="Money")]
		public System.Nullable<decimal> FreePrice
		{
			get
			{
				return this._FreePrice;
			}
			set
			{
				if ((this._FreePrice != value))
				{
					this.OnFreePriceChanging(value);
					this.SendPropertyChanging();
					this._FreePrice = value;
					this.SendPropertyChanged("FreePrice");
					this.OnFreePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentalPrice", DbType="Money")]
		public System.Nullable<decimal> GovernmentalPrice
		{
			get
			{
				return this._GovernmentalPrice;
			}
			set
			{
				if ((this._GovernmentalPrice != value))
				{
					this.OnGovernmentalPriceChanging(value);
					this.SendPropertyChanging();
					this._GovernmentalPrice = value;
					this.SendPropertyChanged("GovernmentalPrice");
					this.OnGovernmentalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurance")]
	public partial class Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Name;
		
		private System.Nullable<bool> _HasContract;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<int> _ParentID;
		
		private string _CompanyType;
		
		private bool _CheckingExpDate;
		
		private bool _AllowChoose;
		
		private bool _CheckBookletPageNumber;
		
		private bool _CheckbookletCode;
		
		private bool _Complementray;
		
		private bool _NeedAdvancePayment;
		
		private bool _OMO;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<Insurance> _Insurances;
		
		private EntityRef<Insurance> _Insurance1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasContractChanging(System.Nullable<bool> value);
    partial void OnHasContractChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    partial void OnCheckingExpDateChanging(bool value);
    partial void OnCheckingExpDateChanged();
    partial void OnAllowChooseChanging(bool value);
    partial void OnAllowChooseChanged();
    partial void OnCheckBookletPageNumberChanging(bool value);
    partial void OnCheckBookletPageNumberChanged();
    partial void OnCheckbookletCodeChanging(bool value);
    partial void OnCheckbookletCodeChanged();
    partial void OnComplementrayChanging(bool value);
    partial void OnComplementrayChanged();
    partial void OnNeedAdvancePaymentChanging(bool value);
    partial void OnNeedAdvancePaymentChanged();
    partial void OnOMOChanging(bool value);
    partial void OnOMOChanged();
    #endregion
		
		public Insurance()
		{
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._Insurances = new EntitySet<Insurance>(new Action<Insurance>(this.attach_Insurances), new Action<Insurance>(this.detach_Insurances));
			this._Insurance1 = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContract", DbType="Bit")]
		public System.Nullable<bool> HasContract
		{
			get
			{
				return this._HasContract;
			}
			set
			{
				if ((this._HasContract != value))
				{
					this.OnHasContractChanging(value);
					this.SendPropertyChanging();
					this._HasContract = value;
					this.SendPropertyChanged("HasContract");
					this.OnHasContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Insurance1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingExpDate", DbType="Bit NOT NULL")]
		public bool CheckingExpDate
		{
			get
			{
				return this._CheckingExpDate;
			}
			set
			{
				if ((this._CheckingExpDate != value))
				{
					this.OnCheckingExpDateChanging(value);
					this.SendPropertyChanging();
					this._CheckingExpDate = value;
					this.SendPropertyChanged("CheckingExpDate");
					this.OnCheckingExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowChoose", DbType="Bit NOT NULL")]
		public bool AllowChoose
		{
			get
			{
				return this._AllowChoose;
			}
			set
			{
				if ((this._AllowChoose != value))
				{
					this.OnAllowChooseChanging(value);
					this.SendPropertyChanging();
					this._AllowChoose = value;
					this.SendPropertyChanged("AllowChoose");
					this.OnAllowChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBookletPageNumber", DbType="Bit NOT NULL")]
		public bool CheckBookletPageNumber
		{
			get
			{
				return this._CheckBookletPageNumber;
			}
			set
			{
				if ((this._CheckBookletPageNumber != value))
				{
					this.OnCheckBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckBookletPageNumber = value;
					this.SendPropertyChanged("CheckBookletPageNumber");
					this.OnCheckBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckbookletCode", DbType="Bit NOT NULL")]
		public bool CheckbookletCode
		{
			get
			{
				return this._CheckbookletCode;
			}
			set
			{
				if ((this._CheckbookletCode != value))
				{
					this.OnCheckbookletCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckbookletCode = value;
					this.SendPropertyChanged("CheckbookletCode");
					this.OnCheckbookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complementray", DbType="Bit NOT NULL")]
		public bool Complementray
		{
			get
			{
				return this._Complementray;
			}
			set
			{
				if ((this._Complementray != value))
				{
					this.OnComplementrayChanging(value);
					this.SendPropertyChanging();
					this._Complementray = value;
					this.SendPropertyChanged("Complementray");
					this.OnComplementrayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedAdvancePayment", DbType="Bit NOT NULL")]
		public bool NeedAdvancePayment
		{
			get
			{
				return this._NeedAdvancePayment;
			}
			set
			{
				if ((this._NeedAdvancePayment != value))
				{
					this.OnNeedAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._NeedAdvancePayment = value;
					this.SendPropertyChanged("NeedAdvancePayment");
					this.OnNeedAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMO", DbType="Bit NOT NULL")]
		public bool OMO
		{
			get
			{
				return this._OMO;
			}
			set
			{
				if ((this._OMO != value))
				{
					this.OnOMOChanging(value);
					this.SendPropertyChanging();
					this._OMO = value;
					this.SendPropertyChanged("OMO");
					this.OnOMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Insurance", Storage="_Insurances", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Insurance> Insurances
		{
			get
			{
				return this._Insurances;
			}
			set
			{
				this._Insurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Insurance", Storage="_Insurance1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance1
		{
			get
			{
				return this._Insurance1.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance1.Entity;
				if (((previousValue != value) 
							|| (this._Insurance1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance1.Entity = null;
						previousValue.Insurances.Remove(this);
					}
					this._Insurance1.Entity = value;
					if ((value != null))
					{
						value.Insurances.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_Insurances(Insurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance1 = this;
		}
		
		private void detach_Insurances(Insurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVU")]
	public partial class RVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Dastgah;
		
		private string _Sarfasl_Khedmati;
		
		private string _Gorooh_Khedmati;
		
		private string _Khosoosiat_Code;
		
		private System.Nullable<double> _Code_Melli;
		
		private System.Nullable<double> _Code_Namayande;
		
		private System.Nullable<double> _Sayer_Codaye_Tajmi_Shode;
		
		private string _Sharhe_Codaye_Tajmi_Shode;
		
		private System.Nullable<double> _Arzesh_Nesbi;
		
		private System.Nullable<double> _Joze_Herfeyi_26;
		
		private System.Nullable<double> _Joze_Fanni_27;
		
		private System.Nullable<double> _Arzesh_Paye_Bihooshi;
		
		private string _NationalID;
		
		private string _Comment;
		
		private System.Nullable<double> _RelativeValue;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<double> _Version;
		
		private bool _Deleted;
		
		private string _TerminologyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDastgahChanging(string value);
    partial void OnDastgahChanged();
    partial void OnSarfasl_KhedmatiChanging(string value);
    partial void OnSarfasl_KhedmatiChanged();
    partial void OnGorooh_KhedmatiChanging(string value);
    partial void OnGorooh_KhedmatiChanged();
    partial void OnKhosoosiat_CodeChanging(string value);
    partial void OnKhosoosiat_CodeChanged();
    partial void OnCode_MelliChanging(System.Nullable<double> value);
    partial void OnCode_MelliChanged();
    partial void OnCode_NamayandeChanging(System.Nullable<double> value);
    partial void OnCode_NamayandeChanged();
    partial void OnSayer_Codaye_Tajmi_ShodeChanging(System.Nullable<double> value);
    partial void OnSayer_Codaye_Tajmi_ShodeChanged();
    partial void OnSharhe_Codaye_Tajmi_ShodeChanging(string value);
    partial void OnSharhe_Codaye_Tajmi_ShodeChanged();
    partial void OnArzesh_NesbiChanging(System.Nullable<double> value);
    partial void OnArzesh_NesbiChanged();
    partial void OnJoze_Herfeyi_26Changing(System.Nullable<double> value);
    partial void OnJoze_Herfeyi_26Changed();
    partial void OnJoze_Fanni_27Changing(System.Nullable<double> value);
    partial void OnJoze_Fanni_27Changed();
    partial void OnArzesh_Paye_BihooshiChanging(System.Nullable<double> value);
    partial void OnArzesh_Paye_BihooshiChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRelativeValueChanging(System.Nullable<double> value);
    partial void OnRelativeValueChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnVersionChanging(System.Nullable<double> value);
    partial void OnVersionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnTerminologyIdChanging(string value);
    partial void OnTerminologyIdChanged();
    #endregion
		
		public RVU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dastgah", DbType="NVarChar(255)")]
		public string Dastgah
		{
			get
			{
				return this._Dastgah;
			}
			set
			{
				if ((this._Dastgah != value))
				{
					this.OnDastgahChanging(value);
					this.SendPropertyChanging();
					this._Dastgah = value;
					this.SendPropertyChanged("Dastgah");
					this.OnDastgahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sarfasl_Khedmati", DbType="NVarChar(255)")]
		public string Sarfasl_Khedmati
		{
			get
			{
				return this._Sarfasl_Khedmati;
			}
			set
			{
				if ((this._Sarfasl_Khedmati != value))
				{
					this.OnSarfasl_KhedmatiChanging(value);
					this.SendPropertyChanging();
					this._Sarfasl_Khedmati = value;
					this.SendPropertyChanged("Sarfasl_Khedmati");
					this.OnSarfasl_KhedmatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gorooh_Khedmati", DbType="NVarChar(255)")]
		public string Gorooh_Khedmati
		{
			get
			{
				return this._Gorooh_Khedmati;
			}
			set
			{
				if ((this._Gorooh_Khedmati != value))
				{
					this.OnGorooh_KhedmatiChanging(value);
					this.SendPropertyChanging();
					this._Gorooh_Khedmati = value;
					this.SendPropertyChanged("Gorooh_Khedmati");
					this.OnGorooh_KhedmatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khosoosiat_Code", DbType="NVarChar(255)")]
		public string Khosoosiat_Code
		{
			get
			{
				return this._Khosoosiat_Code;
			}
			set
			{
				if ((this._Khosoosiat_Code != value))
				{
					this.OnKhosoosiat_CodeChanging(value);
					this.SendPropertyChanging();
					this._Khosoosiat_Code = value;
					this.SendPropertyChanged("Khosoosiat_Code");
					this.OnKhosoosiat_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_Melli", DbType="Float")]
		public System.Nullable<double> Code_Melli
		{
			get
			{
				return this._Code_Melli;
			}
			set
			{
				if ((this._Code_Melli != value))
				{
					this.OnCode_MelliChanging(value);
					this.SendPropertyChanging();
					this._Code_Melli = value;
					this.SendPropertyChanged("Code_Melli");
					this.OnCode_MelliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_Namayande", DbType="Float")]
		public System.Nullable<double> Code_Namayande
		{
			get
			{
				return this._Code_Namayande;
			}
			set
			{
				if ((this._Code_Namayande != value))
				{
					this.OnCode_NamayandeChanging(value);
					this.SendPropertyChanging();
					this._Code_Namayande = value;
					this.SendPropertyChanged("Code_Namayande");
					this.OnCode_NamayandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sayer_Codaye_Tajmi_Shode", DbType="Float")]
		public System.Nullable<double> Sayer_Codaye_Tajmi_Shode
		{
			get
			{
				return this._Sayer_Codaye_Tajmi_Shode;
			}
			set
			{
				if ((this._Sayer_Codaye_Tajmi_Shode != value))
				{
					this.OnSayer_Codaye_Tajmi_ShodeChanging(value);
					this.SendPropertyChanging();
					this._Sayer_Codaye_Tajmi_Shode = value;
					this.SendPropertyChanged("Sayer_Codaye_Tajmi_Shode");
					this.OnSayer_Codaye_Tajmi_ShodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sharhe_Codaye_Tajmi_Shode", DbType="NVarChar(MAX)")]
		public string Sharhe_Codaye_Tajmi_Shode
		{
			get
			{
				return this._Sharhe_Codaye_Tajmi_Shode;
			}
			set
			{
				if ((this._Sharhe_Codaye_Tajmi_Shode != value))
				{
					this.OnSharhe_Codaye_Tajmi_ShodeChanging(value);
					this.SendPropertyChanging();
					this._Sharhe_Codaye_Tajmi_Shode = value;
					this.SendPropertyChanged("Sharhe_Codaye_Tajmi_Shode");
					this.OnSharhe_Codaye_Tajmi_ShodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arzesh_Nesbi", DbType="Float")]
		public System.Nullable<double> Arzesh_Nesbi
		{
			get
			{
				return this._Arzesh_Nesbi;
			}
			set
			{
				if ((this._Arzesh_Nesbi != value))
				{
					this.OnArzesh_NesbiChanging(value);
					this.SendPropertyChanging();
					this._Arzesh_Nesbi = value;
					this.SendPropertyChanged("Arzesh_Nesbi");
					this.OnArzesh_NesbiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfeyi_26", DbType="Float")]
		public System.Nullable<double> Joze_Herfeyi_26
		{
			get
			{
				return this._Joze_Herfeyi_26;
			}
			set
			{
				if ((this._Joze_Herfeyi_26 != value))
				{
					this.OnJoze_Herfeyi_26Changing(value);
					this.SendPropertyChanging();
					this._Joze_Herfeyi_26 = value;
					this.SendPropertyChanged("Joze_Herfeyi_26");
					this.OnJoze_Herfeyi_26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni_27", DbType="Float")]
		public System.Nullable<double> Joze_Fanni_27
		{
			get
			{
				return this._Joze_Fanni_27;
			}
			set
			{
				if ((this._Joze_Fanni_27 != value))
				{
					this.OnJoze_Fanni_27Changing(value);
					this.SendPropertyChanging();
					this._Joze_Fanni_27 = value;
					this.SendPropertyChanged("Joze_Fanni_27");
					this.OnJoze_Fanni_27Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arzesh_Paye_Bihooshi", DbType="Float")]
		public System.Nullable<double> Arzesh_Paye_Bihooshi
		{
			get
			{
				return this._Arzesh_Paye_Bihooshi;
			}
			set
			{
				if ((this._Arzesh_Paye_Bihooshi != value))
				{
					this.OnArzesh_Paye_BihooshiChanging(value);
					this.SendPropertyChanging();
					this._Arzesh_Paye_Bihooshi = value;
					this.SendPropertyChanged("Arzesh_Paye_Bihooshi");
					this.OnArzesh_Paye_BihooshiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(15)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeValue", DbType="Float")]
		public System.Nullable<double> RelativeValue
		{
			get
			{
				return this._RelativeValue;
			}
			set
			{
				if ((this._RelativeValue != value))
				{
					this.OnRelativeValueChanging(value);
					this.SendPropertyChanging();
					this._RelativeValue = value;
					this.SendPropertyChanged("RelativeValue");
					this.OnRelativeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(5)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(5)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Float")]
		public System.Nullable<double> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminologyId", DbType="NVarChar(255)")]
		public string TerminologyId
		{
			get
			{
				return this._TerminologyId;
			}
			set
			{
				if ((this._TerminologyId != value))
				{
					this.OnTerminologyIdChanging(value);
					this.SendPropertyChanging();
					this._TerminologyId = value;
					this.SendPropertyChanged("TerminologyId");
					this.OnTerminologyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewTariffComplete")]
	public partial class ViewTariffComplete
	{
		
		private System.Guid _ServiceID;
		
		private string _ServiceName;
		
		private System.Nullable<System.Guid> _ServiceParentID;
		
		private string _SalamatBookletCode;
		
		private int _InsuranceID;
		
		private string _InsuranceName;
		
		private System.Nullable<System.Guid> _RVUID;
		
		private System.Nullable<double> _Joze_Herfeyi_26;
		
		private System.Nullable<double> _Joze_Fanni_27;
		
		private string _Date;
		
		private System.Nullable<System.Guid> _TariffID;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<bool> _Lock;
		
		private string _Khosoosiat_Code;
		
		public ViewTariffComplete()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(1000)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceParentID
		{
			get
			{
				return this._ServiceParentID;
			}
			set
			{
				if ((this._ServiceParentID != value))
				{
					this._ServiceParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this._SalamatBookletCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int NOT NULL")]
		public int InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					this._InsuranceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RVUID
		{
			get
			{
				return this._RVUID;
			}
			set
			{
				if ((this._RVUID != value))
				{
					this._RVUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfeyi_26", DbType="Float")]
		public System.Nullable<double> Joze_Herfeyi_26
		{
			get
			{
				return this._Joze_Herfeyi_26;
			}
			set
			{
				if ((this._Joze_Herfeyi_26 != value))
				{
					this._Joze_Herfeyi_26 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni_27", DbType="Float")]
		public System.Nullable<double> Joze_Fanni_27
		{
			get
			{
				return this._Joze_Fanni_27;
			}
			set
			{
				if ((this._Joze_Fanni_27 != value))
				{
					this._Joze_Fanni_27 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this._TariffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this._OrganizationShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit")]
		public System.Nullable<bool> Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this._Lock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khosoosiat_Code", DbType="NVarChar(255)")]
		public string Khosoosiat_Code
		{
			get
			{
				return this._Khosoosiat_Code;
			}
			set
			{
				if ((this._Khosoosiat_Code != value))
				{
					this._Khosoosiat_Code = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabTestQAPlus")]
	public partial class LabTestQAPlus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QAPlusID;
		
		private string _NormalRange;
		
		private string _MeasurementUnit;
		
		private string _GroupName;
		
		private EntityRef<QAPlus> _QAPlus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQAPlusIDChanging(int value);
    partial void OnQAPlusIDChanged();
    partial void OnNormalRangeChanging(string value);
    partial void OnNormalRangeChanged();
    partial void OnMeasurementUnitChanging(string value);
    partial void OnMeasurementUnitChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public LabTestQAPlus()
		{
			this._QAPlus = default(EntityRef<QAPlus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAPlusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QAPlusID
		{
			get
			{
				return this._QAPlusID;
			}
			set
			{
				if ((this._QAPlusID != value))
				{
					if (this._QAPlus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQAPlusIDChanging(value);
					this.SendPropertyChanging();
					this._QAPlusID = value;
					this.SendPropertyChanged("QAPlusID");
					this.OnQAPlusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this.OnNormalRangeChanging(value);
					this.SendPropertyChanging();
					this._NormalRange = value;
					this.SendPropertyChanged("NormalRange");
					this.OnNormalRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnit", DbType="NVarChar(50)")]
		public string MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit;
			}
			set
			{
				if ((this._MeasurementUnit != value))
				{
					this.OnMeasurementUnitChanging(value);
					this.SendPropertyChanging();
					this._MeasurementUnit = value;
					this.SendPropertyChanged("MeasurementUnit");
					this.OnMeasurementUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QAPlus_LabTestQAPlus", Storage="_QAPlus", ThisKey="QAPlusID", OtherKey="ID", IsForeignKey=true)]
		public QAPlus QAPlus
		{
			get
			{
				return this._QAPlus.Entity;
			}
			set
			{
				QAPlus previousValue = this._QAPlus.Entity;
				if (((previousValue != value) 
							|| (this._QAPlus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QAPlus.Entity = null;
						previousValue.LabTestQAPlus = null;
					}
					this._QAPlus.Entity = value;
					if ((value != null))
					{
						value.LabTestQAPlus = this;
						this._QAPlusID = value.ID;
					}
					else
					{
						this._QAPlusID = default(int);
					}
					this.SendPropertyChanged("QAPlus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QAPlus")]
	public partial class QAPlus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _VisitID;
		
		private System.Nullable<System.Guid> _QuestionnariID;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private System.Nullable<int> _PereventID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreationUser;
		
		private System.Nullable<System.Guid> _HasTariffParent;
		
		private EntityRef<LabTestQAPlus> _LabTestQAPlus;
		
		private EntityRef<Questionnaire> _Questionnaire;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVisitIDChanging(System.Guid value);
    partial void OnVisitIDChanged();
    partial void OnQuestionnariIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnariIDChanged();
    partial void OnResultNChanging(System.Nullable<int> value);
    partial void OnResultNChanged();
    partial void OnResultCHKChanging(System.Nullable<bool> value);
    partial void OnResultCHKChanged();
    partial void OnMResultChanging(string value);
    partial void OnMResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPereventIDChanging(System.Nullable<int> value);
    partial void OnPereventIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnHasTariffParentChanging(System.Nullable<System.Guid> value);
    partial void OnHasTariffParentChanged();
    #endregion
		
		public QAPlus()
		{
			this._LabTestQAPlus = default(EntityRef<LabTestQAPlus>);
			this._Questionnaire = default(EntityRef<Questionnaire>);
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnariID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnariID
		{
			get
			{
				return this._QuestionnariID;
			}
			set
			{
				if ((this._QuestionnariID != value))
				{
					if (this._Questionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnariIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnariID = value;
					this.SendPropertyChanged("QuestionnariID");
					this.OnQuestionnariIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this.OnResultNChanging(value);
					this.SendPropertyChanging();
					this._ResultN = value;
					this.SendPropertyChanged("ResultN");
					this.OnResultNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this.OnResultCHKChanging(value);
					this.SendPropertyChanging();
					this._ResultCHK = value;
					this.SendPropertyChanged("ResultCHK");
					this.OnResultCHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this.OnMResultChanging(value);
					this.SendPropertyChanging();
					this._MResult = value;
					this.SendPropertyChanged("MResult");
					this.OnMResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PereventID", DbType="Int")]
		public System.Nullable<int> PereventID
		{
			get
			{
				return this._PereventID;
			}
			set
			{
				if ((this._PereventID != value))
				{
					this.OnPereventIDChanging(value);
					this.SendPropertyChanging();
					this._PereventID = value;
					this.SendPropertyChanged("PereventID");
					this.OnPereventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTariffParent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> HasTariffParent
		{
			get
			{
				return this._HasTariffParent;
			}
			set
			{
				if ((this._HasTariffParent != value))
				{
					this.OnHasTariffParentChanging(value);
					this.SendPropertyChanging();
					this._HasTariffParent = value;
					this.SendPropertyChanged("HasTariffParent");
					this.OnHasTariffParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QAPlus_LabTestQAPlus", Storage="_LabTestQAPlus", ThisKey="ID", OtherKey="QAPlusID", IsUnique=true, IsForeignKey=false)]
		public LabTestQAPlus LabTestQAPlus
		{
			get
			{
				return this._LabTestQAPlus.Entity;
			}
			set
			{
				LabTestQAPlus previousValue = this._LabTestQAPlus.Entity;
				if (((previousValue != value) 
							|| (this._LabTestQAPlus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabTestQAPlus.Entity = null;
						previousValue.QAPlus = null;
					}
					this._LabTestQAPlus.Entity = value;
					if ((value != null))
					{
						value.QAPlus = this;
					}
					this.SendPropertyChanged("LabTestQAPlus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QAPlus", Storage="_Questionnaire", ThisKey="QuestionnariID", OtherKey="ID", IsForeignKey=true)]
		public Questionnaire Questionnaire
		{
			get
			{
				return this._Questionnaire.Entity;
			}
			set
			{
				Questionnaire previousValue = this._Questionnaire.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire.Entity = null;
						previousValue.QAPlus.Remove(this);
					}
					this._Questionnaire.Entity = value;
					if ((value != null))
					{
						value.QAPlus.Add(this);
						this._QuestionnariID = value.ID;
					}
					else
					{
						this._QuestionnariID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Questionnaire");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_QAPlus", Storage="_Visit", ThisKey="VisitID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.QAPlus.Remove(this);
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.QAPlus.Add(this);
						this._VisitID = value.ID;
					}
					else
					{
						this._VisitID = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ToDoList")]
	public partial class ToDoList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private bool _MedicalHistory;
		
		private string _MedicalHistoryDate;
		
		private string _MedicalHistoryTime;
		
		private System.Nullable<int> _MedicalHistoryUserID;
		
		private bool _Checkup;
		
		private string _CheckUpDate;
		
		private string _CheckUpTime;
		
		private System.Nullable<int> _CheckUpUserID;
		
		private bool _Result;
		
		private string _ResultDate;
		
		private string _ResultTime;
		
		private System.Nullable<int> _ResultUserID;
		
		private bool _Surveillance;
		
		private string _SurveillanceDate;
		
		private string _SurveillanceTime;
		
		private System.Nullable<int> _SurveillanceUserID;
		
		private bool _Nursing;
		
		private string _NursingDate;
		
		private string _NursingTime;
		
		private System.Nullable<int> _NursingUserID;
		
		private bool _Optometry;
		
		private string _OptometryDate;
		
		private string _OptometryTime;
		
		private System.Nullable<int> _OptometryUserID;
		
		private bool _Audio;
		
		private string _AudioDate;
		
		private string _AudioTime;
		
		private System.Nullable<int> _AudioUserID;
		
		private bool _Psychology;
		
		private string _PsychologyDate;
		
		private string _PsychologyTime;
		
		private System.Nullable<int> _PsychologyUserID;
		
		private bool _Spirometry;
		
		private string _SpirometryDate;
		
		private string _SpirometryTime;
		
		private System.Nullable<int> _SpirometryUserID;
		
		private bool _HarmfulFactor;
		
		private string _HarmfulFactorDate;
		
		private string _HarmfulFactorTime;
		
		private System.Nullable<int> _HarmfulFactorUserID;
		
		private bool _OtherTest;
		
		private string _OtherTestDate;
		
		private string _OtherTestTime;
		
		private System.Nullable<int> _OtherTestUserID;
		
		private EntityRef<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMedicalHistoryChanging(bool value);
    partial void OnMedicalHistoryChanged();
    partial void OnMedicalHistoryDateChanging(string value);
    partial void OnMedicalHistoryDateChanged();
    partial void OnMedicalHistoryTimeChanging(string value);
    partial void OnMedicalHistoryTimeChanged();
    partial void OnMedicalHistoryUserIDChanging(System.Nullable<int> value);
    partial void OnMedicalHistoryUserIDChanged();
    partial void OnCheckupChanging(bool value);
    partial void OnCheckupChanged();
    partial void OnCheckUpDateChanging(string value);
    partial void OnCheckUpDateChanged();
    partial void OnCheckUpTimeChanging(string value);
    partial void OnCheckUpTimeChanged();
    partial void OnCheckUpUserIDChanging(System.Nullable<int> value);
    partial void OnCheckUpUserIDChanged();
    partial void OnResultChanging(bool value);
    partial void OnResultChanged();
    partial void OnResultDateChanging(string value);
    partial void OnResultDateChanged();
    partial void OnResultTimeChanging(string value);
    partial void OnResultTimeChanged();
    partial void OnResultUserIDChanging(System.Nullable<int> value);
    partial void OnResultUserIDChanged();
    partial void OnSurveillanceChanging(bool value);
    partial void OnSurveillanceChanged();
    partial void OnSurveillanceDateChanging(string value);
    partial void OnSurveillanceDateChanged();
    partial void OnSurveillanceTimeChanging(string value);
    partial void OnSurveillanceTimeChanged();
    partial void OnSurveillanceUserIDChanging(System.Nullable<int> value);
    partial void OnSurveillanceUserIDChanged();
    partial void OnNursingChanging(bool value);
    partial void OnNursingChanged();
    partial void OnNursingDateChanging(string value);
    partial void OnNursingDateChanged();
    partial void OnNursingTimeChanging(string value);
    partial void OnNursingTimeChanged();
    partial void OnNursingUserIDChanging(System.Nullable<int> value);
    partial void OnNursingUserIDChanged();
    partial void OnOptometryChanging(bool value);
    partial void OnOptometryChanged();
    partial void OnOptometryDateChanging(string value);
    partial void OnOptometryDateChanged();
    partial void OnOptometryTimeChanging(string value);
    partial void OnOptometryTimeChanged();
    partial void OnOptometryUserIDChanging(System.Nullable<int> value);
    partial void OnOptometryUserIDChanged();
    partial void OnAudioChanging(bool value);
    partial void OnAudioChanged();
    partial void OnAudioDateChanging(string value);
    partial void OnAudioDateChanged();
    partial void OnAudioTimeChanging(string value);
    partial void OnAudioTimeChanged();
    partial void OnAudioUserIDChanging(System.Nullable<int> value);
    partial void OnAudioUserIDChanged();
    partial void OnPsychologyChanging(bool value);
    partial void OnPsychologyChanged();
    partial void OnPsychologyDateChanging(string value);
    partial void OnPsychologyDateChanged();
    partial void OnPsychologyTimeChanging(string value);
    partial void OnPsychologyTimeChanged();
    partial void OnPsychologyUserIDChanging(System.Nullable<int> value);
    partial void OnPsychologyUserIDChanged();
    partial void OnSpirometryChanging(bool value);
    partial void OnSpirometryChanged();
    partial void OnSpirometryDateChanging(string value);
    partial void OnSpirometryDateChanged();
    partial void OnSpirometryTimeChanging(string value);
    partial void OnSpirometryTimeChanged();
    partial void OnSpirometryUserIDChanging(System.Nullable<int> value);
    partial void OnSpirometryUserIDChanged();
    partial void OnHarmfulFactorChanging(bool value);
    partial void OnHarmfulFactorChanged();
    partial void OnHarmfulFactorDateChanging(string value);
    partial void OnHarmfulFactorDateChanged();
    partial void OnHarmfulFactorTimeChanging(string value);
    partial void OnHarmfulFactorTimeChanged();
    partial void OnHarmfulFactorUserIDChanging(System.Nullable<int> value);
    partial void OnHarmfulFactorUserIDChanged();
    partial void OnOtherTestChanging(bool value);
    partial void OnOtherTestChanged();
    partial void OnOtherTestDateChanging(string value);
    partial void OnOtherTestDateChanged();
    partial void OnOtherTestTimeChanging(string value);
    partial void OnOtherTestTimeChanged();
    partial void OnOtherTestUserIDChanging(System.Nullable<int> value);
    partial void OnOtherTestUserIDChanged();
    #endregion
		
		public ToDoList()
		{
			this._Visit = default(EntityRef<Visit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Visit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistory", DbType="Bit NOT NULL")]
		public bool MedicalHistory
		{
			get
			{
				return this._MedicalHistory;
			}
			set
			{
				if ((this._MedicalHistory != value))
				{
					this.OnMedicalHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistory = value;
					this.SendPropertyChanged("MedicalHistory");
					this.OnMedicalHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistoryDate", DbType="VarChar(10)")]
		public string MedicalHistoryDate
		{
			get
			{
				return this._MedicalHistoryDate;
			}
			set
			{
				if ((this._MedicalHistoryDate != value))
				{
					this.OnMedicalHistoryDateChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistoryDate = value;
					this.SendPropertyChanged("MedicalHistoryDate");
					this.OnMedicalHistoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistoryTime", DbType="VarChar(5)")]
		public string MedicalHistoryTime
		{
			get
			{
				return this._MedicalHistoryTime;
			}
			set
			{
				if ((this._MedicalHistoryTime != value))
				{
					this.OnMedicalHistoryTimeChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistoryTime = value;
					this.SendPropertyChanged("MedicalHistoryTime");
					this.OnMedicalHistoryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistoryUserID", DbType="Int")]
		public System.Nullable<int> MedicalHistoryUserID
		{
			get
			{
				return this._MedicalHistoryUserID;
			}
			set
			{
				if ((this._MedicalHistoryUserID != value))
				{
					this.OnMedicalHistoryUserIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistoryUserID = value;
					this.SendPropertyChanged("MedicalHistoryUserID");
					this.OnMedicalHistoryUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checkup", DbType="Bit NOT NULL")]
		public bool Checkup
		{
			get
			{
				return this._Checkup;
			}
			set
			{
				if ((this._Checkup != value))
				{
					this.OnCheckupChanging(value);
					this.SendPropertyChanging();
					this._Checkup = value;
					this.SendPropertyChanged("Checkup");
					this.OnCheckupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUpDate", DbType="VarChar(10)")]
		public string CheckUpDate
		{
			get
			{
				return this._CheckUpDate;
			}
			set
			{
				if ((this._CheckUpDate != value))
				{
					this.OnCheckUpDateChanging(value);
					this.SendPropertyChanging();
					this._CheckUpDate = value;
					this.SendPropertyChanged("CheckUpDate");
					this.OnCheckUpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUpTime", DbType="VarChar(5)")]
		public string CheckUpTime
		{
			get
			{
				return this._CheckUpTime;
			}
			set
			{
				if ((this._CheckUpTime != value))
				{
					this.OnCheckUpTimeChanging(value);
					this.SendPropertyChanging();
					this._CheckUpTime = value;
					this.SendPropertyChanged("CheckUpTime");
					this.OnCheckUpTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUpUserID", DbType="Int")]
		public System.Nullable<int> CheckUpUserID
		{
			get
			{
				return this._CheckUpUserID;
			}
			set
			{
				if ((this._CheckUpUserID != value))
				{
					this.OnCheckUpUserIDChanging(value);
					this.SendPropertyChanging();
					this._CheckUpUserID = value;
					this.SendPropertyChanged("CheckUpUserID");
					this.OnCheckUpUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit NOT NULL")]
		public bool Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="VarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultTime", DbType="VarChar(5)")]
		public string ResultTime
		{
			get
			{
				return this._ResultTime;
			}
			set
			{
				if ((this._ResultTime != value))
				{
					this.OnResultTimeChanging(value);
					this.SendPropertyChanging();
					this._ResultTime = value;
					this.SendPropertyChanged("ResultTime");
					this.OnResultTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultUserID", DbType="Int")]
		public System.Nullable<int> ResultUserID
		{
			get
			{
				return this._ResultUserID;
			}
			set
			{
				if ((this._ResultUserID != value))
				{
					this.OnResultUserIDChanging(value);
					this.SendPropertyChanging();
					this._ResultUserID = value;
					this.SendPropertyChanged("ResultUserID");
					this.OnResultUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surveillance", DbType="Bit NOT NULL")]
		public bool Surveillance
		{
			get
			{
				return this._Surveillance;
			}
			set
			{
				if ((this._Surveillance != value))
				{
					this.OnSurveillanceChanging(value);
					this.SendPropertyChanging();
					this._Surveillance = value;
					this.SendPropertyChanged("Surveillance");
					this.OnSurveillanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceDate", DbType="VarChar(10)")]
		public string SurveillanceDate
		{
			get
			{
				return this._SurveillanceDate;
			}
			set
			{
				if ((this._SurveillanceDate != value))
				{
					this.OnSurveillanceDateChanging(value);
					this.SendPropertyChanging();
					this._SurveillanceDate = value;
					this.SendPropertyChanged("SurveillanceDate");
					this.OnSurveillanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceTime", DbType="VarChar(5)")]
		public string SurveillanceTime
		{
			get
			{
				return this._SurveillanceTime;
			}
			set
			{
				if ((this._SurveillanceTime != value))
				{
					this.OnSurveillanceTimeChanging(value);
					this.SendPropertyChanging();
					this._SurveillanceTime = value;
					this.SendPropertyChanged("SurveillanceTime");
					this.OnSurveillanceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceUserID", DbType="Int")]
		public System.Nullable<int> SurveillanceUserID
		{
			get
			{
				return this._SurveillanceUserID;
			}
			set
			{
				if ((this._SurveillanceUserID != value))
				{
					this.OnSurveillanceUserIDChanging(value);
					this.SendPropertyChanging();
					this._SurveillanceUserID = value;
					this.SendPropertyChanged("SurveillanceUserID");
					this.OnSurveillanceUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nursing", DbType="Bit NOT NULL")]
		public bool Nursing
		{
			get
			{
				return this._Nursing;
			}
			set
			{
				if ((this._Nursing != value))
				{
					this.OnNursingChanging(value);
					this.SendPropertyChanging();
					this._Nursing = value;
					this.SendPropertyChanged("Nursing");
					this.OnNursingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingDate", DbType="VarChar(10)")]
		public string NursingDate
		{
			get
			{
				return this._NursingDate;
			}
			set
			{
				if ((this._NursingDate != value))
				{
					this.OnNursingDateChanging(value);
					this.SendPropertyChanging();
					this._NursingDate = value;
					this.SendPropertyChanged("NursingDate");
					this.OnNursingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingTime", DbType="VarChar(5)")]
		public string NursingTime
		{
			get
			{
				return this._NursingTime;
			}
			set
			{
				if ((this._NursingTime != value))
				{
					this.OnNursingTimeChanging(value);
					this.SendPropertyChanging();
					this._NursingTime = value;
					this.SendPropertyChanged("NursingTime");
					this.OnNursingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingUserID", DbType="Int")]
		public System.Nullable<int> NursingUserID
		{
			get
			{
				return this._NursingUserID;
			}
			set
			{
				if ((this._NursingUserID != value))
				{
					this.OnNursingUserIDChanging(value);
					this.SendPropertyChanging();
					this._NursingUserID = value;
					this.SendPropertyChanged("NursingUserID");
					this.OnNursingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Optometry", DbType="Bit NOT NULL")]
		public bool Optometry
		{
			get
			{
				return this._Optometry;
			}
			set
			{
				if ((this._Optometry != value))
				{
					this.OnOptometryChanging(value);
					this.SendPropertyChanging();
					this._Optometry = value;
					this.SendPropertyChanged("Optometry");
					this.OnOptometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryDate", DbType="VarChar(10)")]
		public string OptometryDate
		{
			get
			{
				return this._OptometryDate;
			}
			set
			{
				if ((this._OptometryDate != value))
				{
					this.OnOptometryDateChanging(value);
					this.SendPropertyChanging();
					this._OptometryDate = value;
					this.SendPropertyChanged("OptometryDate");
					this.OnOptometryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryTime", DbType="VarChar(5)")]
		public string OptometryTime
		{
			get
			{
				return this._OptometryTime;
			}
			set
			{
				if ((this._OptometryTime != value))
				{
					this.OnOptometryTimeChanging(value);
					this.SendPropertyChanging();
					this._OptometryTime = value;
					this.SendPropertyChanged("OptometryTime");
					this.OnOptometryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryUserID", DbType="Int")]
		public System.Nullable<int> OptometryUserID
		{
			get
			{
				return this._OptometryUserID;
			}
			set
			{
				if ((this._OptometryUserID != value))
				{
					this.OnOptometryUserIDChanging(value);
					this.SendPropertyChanging();
					this._OptometryUserID = value;
					this.SendPropertyChanged("OptometryUserID");
					this.OnOptometryUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audio", DbType="Bit NOT NULL")]
		public bool Audio
		{
			get
			{
				return this._Audio;
			}
			set
			{
				if ((this._Audio != value))
				{
					this.OnAudioChanging(value);
					this.SendPropertyChanging();
					this._Audio = value;
					this.SendPropertyChanged("Audio");
					this.OnAudioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioDate", DbType="VarChar(10)")]
		public string AudioDate
		{
			get
			{
				return this._AudioDate;
			}
			set
			{
				if ((this._AudioDate != value))
				{
					this.OnAudioDateChanging(value);
					this.SendPropertyChanging();
					this._AudioDate = value;
					this.SendPropertyChanged("AudioDate");
					this.OnAudioDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioTime", DbType="VarChar(5)")]
		public string AudioTime
		{
			get
			{
				return this._AudioTime;
			}
			set
			{
				if ((this._AudioTime != value))
				{
					this.OnAudioTimeChanging(value);
					this.SendPropertyChanging();
					this._AudioTime = value;
					this.SendPropertyChanged("AudioTime");
					this.OnAudioTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioUserID", DbType="Int")]
		public System.Nullable<int> AudioUserID
		{
			get
			{
				return this._AudioUserID;
			}
			set
			{
				if ((this._AudioUserID != value))
				{
					this.OnAudioUserIDChanging(value);
					this.SendPropertyChanging();
					this._AudioUserID = value;
					this.SendPropertyChanged("AudioUserID");
					this.OnAudioUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychology", DbType="Bit NOT NULL")]
		public bool Psychology
		{
			get
			{
				return this._Psychology;
			}
			set
			{
				if ((this._Psychology != value))
				{
					this.OnPsychologyChanging(value);
					this.SendPropertyChanging();
					this._Psychology = value;
					this.SendPropertyChanged("Psychology");
					this.OnPsychologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologyDate", DbType="VarChar(10)")]
		public string PsychologyDate
		{
			get
			{
				return this._PsychologyDate;
			}
			set
			{
				if ((this._PsychologyDate != value))
				{
					this.OnPsychologyDateChanging(value);
					this.SendPropertyChanging();
					this._PsychologyDate = value;
					this.SendPropertyChanged("PsychologyDate");
					this.OnPsychologyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologyTime", DbType="VarChar(5)")]
		public string PsychologyTime
		{
			get
			{
				return this._PsychologyTime;
			}
			set
			{
				if ((this._PsychologyTime != value))
				{
					this.OnPsychologyTimeChanging(value);
					this.SendPropertyChanging();
					this._PsychologyTime = value;
					this.SendPropertyChanged("PsychologyTime");
					this.OnPsychologyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologyUserID", DbType="Int")]
		public System.Nullable<int> PsychologyUserID
		{
			get
			{
				return this._PsychologyUserID;
			}
			set
			{
				if ((this._PsychologyUserID != value))
				{
					this.OnPsychologyUserIDChanging(value);
					this.SendPropertyChanging();
					this._PsychologyUserID = value;
					this.SendPropertyChanged("PsychologyUserID");
					this.OnPsychologyUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spirometry", DbType="Bit NOT NULL")]
		public bool Spirometry
		{
			get
			{
				return this._Spirometry;
			}
			set
			{
				if ((this._Spirometry != value))
				{
					this.OnSpirometryChanging(value);
					this.SendPropertyChanging();
					this._Spirometry = value;
					this.SendPropertyChanged("Spirometry");
					this.OnSpirometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpirometryDate", DbType="VarChar(10)")]
		public string SpirometryDate
		{
			get
			{
				return this._SpirometryDate;
			}
			set
			{
				if ((this._SpirometryDate != value))
				{
					this.OnSpirometryDateChanging(value);
					this.SendPropertyChanging();
					this._SpirometryDate = value;
					this.SendPropertyChanged("SpirometryDate");
					this.OnSpirometryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpirometryTime", DbType="VarChar(5)")]
		public string SpirometryTime
		{
			get
			{
				return this._SpirometryTime;
			}
			set
			{
				if ((this._SpirometryTime != value))
				{
					this.OnSpirometryTimeChanging(value);
					this.SendPropertyChanging();
					this._SpirometryTime = value;
					this.SendPropertyChanged("SpirometryTime");
					this.OnSpirometryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpirometryUserID", DbType="Int")]
		public System.Nullable<int> SpirometryUserID
		{
			get
			{
				return this._SpirometryUserID;
			}
			set
			{
				if ((this._SpirometryUserID != value))
				{
					this.OnSpirometryUserIDChanging(value);
					this.SendPropertyChanging();
					this._SpirometryUserID = value;
					this.SendPropertyChanged("SpirometryUserID");
					this.OnSpirometryUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactor", DbType="Bit NOT NULL")]
		public bool HarmfulFactor
		{
			get
			{
				return this._HarmfulFactor;
			}
			set
			{
				if ((this._HarmfulFactor != value))
				{
					this.OnHarmfulFactorChanging(value);
					this.SendPropertyChanging();
					this._HarmfulFactor = value;
					this.SendPropertyChanged("HarmfulFactor");
					this.OnHarmfulFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactorDate", DbType="VarChar(10)")]
		public string HarmfulFactorDate
		{
			get
			{
				return this._HarmfulFactorDate;
			}
			set
			{
				if ((this._HarmfulFactorDate != value))
				{
					this.OnHarmfulFactorDateChanging(value);
					this.SendPropertyChanging();
					this._HarmfulFactorDate = value;
					this.SendPropertyChanged("HarmfulFactorDate");
					this.OnHarmfulFactorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactorTime", DbType="VarChar(5)")]
		public string HarmfulFactorTime
		{
			get
			{
				return this._HarmfulFactorTime;
			}
			set
			{
				if ((this._HarmfulFactorTime != value))
				{
					this.OnHarmfulFactorTimeChanging(value);
					this.SendPropertyChanging();
					this._HarmfulFactorTime = value;
					this.SendPropertyChanged("HarmfulFactorTime");
					this.OnHarmfulFactorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactorUserID", DbType="Int")]
		public System.Nullable<int> HarmfulFactorUserID
		{
			get
			{
				return this._HarmfulFactorUserID;
			}
			set
			{
				if ((this._HarmfulFactorUserID != value))
				{
					this.OnHarmfulFactorUserIDChanging(value);
					this.SendPropertyChanging();
					this._HarmfulFactorUserID = value;
					this.SendPropertyChanged("HarmfulFactorUserID");
					this.OnHarmfulFactorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTest", DbType="Bit NOT NULL")]
		public bool OtherTest
		{
			get
			{
				return this._OtherTest;
			}
			set
			{
				if ((this._OtherTest != value))
				{
					this.OnOtherTestChanging(value);
					this.SendPropertyChanging();
					this._OtherTest = value;
					this.SendPropertyChanged("OtherTest");
					this.OnOtherTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTestDate", DbType="VarChar(10)")]
		public string OtherTestDate
		{
			get
			{
				return this._OtherTestDate;
			}
			set
			{
				if ((this._OtherTestDate != value))
				{
					this.OnOtherTestDateChanging(value);
					this.SendPropertyChanging();
					this._OtherTestDate = value;
					this.SendPropertyChanged("OtherTestDate");
					this.OnOtherTestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTestTime", DbType="VarChar(5)")]
		public string OtherTestTime
		{
			get
			{
				return this._OtherTestTime;
			}
			set
			{
				if ((this._OtherTestTime != value))
				{
					this.OnOtherTestTimeChanging(value);
					this.SendPropertyChanging();
					this._OtherTestTime = value;
					this.SendPropertyChanged("OtherTestTime");
					this.OnOtherTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTestUserID", DbType="Int")]
		public System.Nullable<int> OtherTestUserID
		{
			get
			{
				return this._OtherTestUserID;
			}
			set
			{
				if ((this._OtherTestUserID != value))
				{
					this.OnOtherTestUserIDChanging(value);
					this.SendPropertyChanging();
					this._OtherTestUserID = value;
					this.SendPropertyChanged("OtherTestUserID");
					this.OnOtherTestUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_ToDoList", Storage="_Visit", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.ToDoList = null;
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.ToDoList = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_Bill")]
	public partial class Vw_Bill
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Guid _VisitID;
		
		private string _ServicceName;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private System.Nullable<bool> _Sex;
		
		public Vw_Bill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this._VisitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicceName", DbType="NVarChar(1000)")]
		public string ServicceName
		{
			get
			{
				return this._ServicceName;
			}
			set
			{
				if ((this._ServicceName != value))
				{
					this._ServicceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_UserToDo")]
	public partial class Vw_UserToDo
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MedicalID;
		
		private string _NationalCode;
		
		private string _AdmitDate;
		
		private string _OtherTestUser;
		
		private string _OtherTestDate;
		
		private string _OtherTestTime;
		
		private string _HamfullUse;
		
		private string _HarmfulFactorDate;
		
		private string _HarmfulFactorTime;
		
		private string _SpiroUser;
		
		private string _SpirometryDate;
		
		private string _SpirometryTime;
		
		private string _PsychoUser;
		
		private string _PsychologyDate;
		
		private string _PsychologyTime;
		
		private string _AudioUser;
		
		private string _AudioDate;
		
		private string _AudioTime;
		
		private string _OptoUser;
		
		private string _OptometryDate;
		
		private string _OptometryTime;
		
		private string _NursingUser;
		
		private string _NursingDate;
		
		private string _NursingTime;
		
		private string _SurveillanceUser;
		
		private string _SurveillanceDate;
		
		private string _SurveillanceTime;
		
		private string _ResultLastName;
		
		private string _ResultDate;
		
		private string _ResultTime;
		
		private string _CheckUpUser;
		
		private string _CheckUpDate;
		
		private string _CheckUpTime;
		
		private string _MedicalUser;
		
		private string _MedicalHistoryDate;
		
		private string _MedicalHistoryTime;
		
		public Vw_UserToDo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTestUser", DbType="NVarChar(101)")]
		public string OtherTestUser
		{
			get
			{
				return this._OtherTestUser;
			}
			set
			{
				if ((this._OtherTestUser != value))
				{
					this._OtherTestUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTestDate", DbType="VarChar(10)")]
		public string OtherTestDate
		{
			get
			{
				return this._OtherTestDate;
			}
			set
			{
				if ((this._OtherTestDate != value))
				{
					this._OtherTestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTestTime", DbType="VarChar(5)")]
		public string OtherTestTime
		{
			get
			{
				return this._OtherTestTime;
			}
			set
			{
				if ((this._OtherTestTime != value))
				{
					this._OtherTestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HamfullUse", DbType="NVarChar(101)")]
		public string HamfullUse
		{
			get
			{
				return this._HamfullUse;
			}
			set
			{
				if ((this._HamfullUse != value))
				{
					this._HamfullUse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactorDate", DbType="VarChar(10)")]
		public string HarmfulFactorDate
		{
			get
			{
				return this._HarmfulFactorDate;
			}
			set
			{
				if ((this._HarmfulFactorDate != value))
				{
					this._HarmfulFactorDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactorTime", DbType="VarChar(5)")]
		public string HarmfulFactorTime
		{
			get
			{
				return this._HarmfulFactorTime;
			}
			set
			{
				if ((this._HarmfulFactorTime != value))
				{
					this._HarmfulFactorTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpiroUser", DbType="NVarChar(101)")]
		public string SpiroUser
		{
			get
			{
				return this._SpiroUser;
			}
			set
			{
				if ((this._SpiroUser != value))
				{
					this._SpiroUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpirometryDate", DbType="VarChar(10)")]
		public string SpirometryDate
		{
			get
			{
				return this._SpirometryDate;
			}
			set
			{
				if ((this._SpirometryDate != value))
				{
					this._SpirometryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpirometryTime", DbType="VarChar(5)")]
		public string SpirometryTime
		{
			get
			{
				return this._SpirometryTime;
			}
			set
			{
				if ((this._SpirometryTime != value))
				{
					this._SpirometryTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychoUser", DbType="NVarChar(101)")]
		public string PsychoUser
		{
			get
			{
				return this._PsychoUser;
			}
			set
			{
				if ((this._PsychoUser != value))
				{
					this._PsychoUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologyDate", DbType="VarChar(10)")]
		public string PsychologyDate
		{
			get
			{
				return this._PsychologyDate;
			}
			set
			{
				if ((this._PsychologyDate != value))
				{
					this._PsychologyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologyTime", DbType="VarChar(5)")]
		public string PsychologyTime
		{
			get
			{
				return this._PsychologyTime;
			}
			set
			{
				if ((this._PsychologyTime != value))
				{
					this._PsychologyTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioUser", DbType="NVarChar(101)")]
		public string AudioUser
		{
			get
			{
				return this._AudioUser;
			}
			set
			{
				if ((this._AudioUser != value))
				{
					this._AudioUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioDate", DbType="VarChar(10)")]
		public string AudioDate
		{
			get
			{
				return this._AudioDate;
			}
			set
			{
				if ((this._AudioDate != value))
				{
					this._AudioDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioTime", DbType="VarChar(5)")]
		public string AudioTime
		{
			get
			{
				return this._AudioTime;
			}
			set
			{
				if ((this._AudioTime != value))
				{
					this._AudioTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptoUser", DbType="NVarChar(101)")]
		public string OptoUser
		{
			get
			{
				return this._OptoUser;
			}
			set
			{
				if ((this._OptoUser != value))
				{
					this._OptoUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryDate", DbType="VarChar(10)")]
		public string OptometryDate
		{
			get
			{
				return this._OptometryDate;
			}
			set
			{
				if ((this._OptometryDate != value))
				{
					this._OptometryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptometryTime", DbType="VarChar(5)")]
		public string OptometryTime
		{
			get
			{
				return this._OptometryTime;
			}
			set
			{
				if ((this._OptometryTime != value))
				{
					this._OptometryTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingUser", DbType="NVarChar(101)")]
		public string NursingUser
		{
			get
			{
				return this._NursingUser;
			}
			set
			{
				if ((this._NursingUser != value))
				{
					this._NursingUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingDate", DbType="VarChar(10)")]
		public string NursingDate
		{
			get
			{
				return this._NursingDate;
			}
			set
			{
				if ((this._NursingDate != value))
				{
					this._NursingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NursingTime", DbType="VarChar(5)")]
		public string NursingTime
		{
			get
			{
				return this._NursingTime;
			}
			set
			{
				if ((this._NursingTime != value))
				{
					this._NursingTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceUser", DbType="NVarChar(101)")]
		public string SurveillanceUser
		{
			get
			{
				return this._SurveillanceUser;
			}
			set
			{
				if ((this._SurveillanceUser != value))
				{
					this._SurveillanceUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceDate", DbType="VarChar(10)")]
		public string SurveillanceDate
		{
			get
			{
				return this._SurveillanceDate;
			}
			set
			{
				if ((this._SurveillanceDate != value))
				{
					this._SurveillanceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceTime", DbType="VarChar(5)")]
		public string SurveillanceTime
		{
			get
			{
				return this._SurveillanceTime;
			}
			set
			{
				if ((this._SurveillanceTime != value))
				{
					this._SurveillanceTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultLastName", DbType="NVarChar(101)")]
		public string ResultLastName
		{
			get
			{
				return this._ResultLastName;
			}
			set
			{
				if ((this._ResultLastName != value))
				{
					this._ResultLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="VarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultTime", DbType="VarChar(5)")]
		public string ResultTime
		{
			get
			{
				return this._ResultTime;
			}
			set
			{
				if ((this._ResultTime != value))
				{
					this._ResultTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUpUser", DbType="NVarChar(101)")]
		public string CheckUpUser
		{
			get
			{
				return this._CheckUpUser;
			}
			set
			{
				if ((this._CheckUpUser != value))
				{
					this._CheckUpUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUpDate", DbType="VarChar(10)")]
		public string CheckUpDate
		{
			get
			{
				return this._CheckUpDate;
			}
			set
			{
				if ((this._CheckUpDate != value))
				{
					this._CheckUpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUpTime", DbType="VarChar(5)")]
		public string CheckUpTime
		{
			get
			{
				return this._CheckUpTime;
			}
			set
			{
				if ((this._CheckUpTime != value))
				{
					this._CheckUpTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalUser", DbType="NVarChar(101)")]
		public string MedicalUser
		{
			get
			{
				return this._MedicalUser;
			}
			set
			{
				if ((this._MedicalUser != value))
				{
					this._MedicalUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistoryDate", DbType="VarChar(10)")]
		public string MedicalHistoryDate
		{
			get
			{
				return this._MedicalHistoryDate;
			}
			set
			{
				if ((this._MedicalHistoryDate != value))
				{
					this._MedicalHistoryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistoryTime", DbType="VarChar(5)")]
		public string MedicalHistoryTime
		{
			get
			{
				return this._MedicalHistoryTime;
			}
			set
			{
				if ((this._MedicalHistoryTime != value))
				{
					this._MedicalHistoryTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_Vezarat")]
	public partial class Vw_Vezarat
	{
		
		private int _tabeiyat;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private int _Sex;
		
		private string _BirthYear;
		
		private int _Dokhaniyat;
		
		private System.Nullable<int> _Cancer;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private string _SystolicBloodPressure;
		
		private string _DiastolicBloodPressure;
		
		private int _x;
		
		private System.Nullable<int> _Fesharekhon;
		
		private string _FBS;
		
		private System.Nullable<int> _Diabet;
		
		private System.Nullable<int> _Dislipidimy;
		
		private string _TG;
		
		private string _Tchol;
		
		private System.Nullable<int> _MasmoiatBaSorb;
		
		private System.Nullable<int> _Sel;
		
		private System.Nullable<int> _Silikoz;
		
		private System.Nullable<int> _Azebstor;
		
		private System.Nullable<int> _DeramatitTamasi;
		
		private System.Nullable<int> _KamardardShoghli;
		
		private string _AdmitDate;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _Spiro;
		
		private System.Nullable<int> _Shenavaei;
		
		public Vw_Vezarat()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tabeiyat", DbType="Int NOT NULL")]
		public int tabeiyat
		{
			get
			{
				return this._tabeiyat;
			}
			set
			{
				if ((this._tabeiyat != value))
				{
					this._tabeiyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="NVarChar(4)")]
		public string BirthYear
		{
			get
			{
				return this._BirthYear;
			}
			set
			{
				if ((this._BirthYear != value))
				{
					this._BirthYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dokhaniyat", DbType="Int NOT NULL")]
		public int Dokhaniyat
		{
			get
			{
				return this._Dokhaniyat;
			}
			set
			{
				if ((this._Dokhaniyat != value))
				{
					this._Dokhaniyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancer", DbType="Int")]
		public System.Nullable<int> Cancer
		{
			get
			{
				return this._Cancer;
			}
			set
			{
				if ((this._Cancer != value))
				{
					this._Cancer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this._Height = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this._Weight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystolicBloodPressure", DbType="NVarChar(50)")]
		public string SystolicBloodPressure
		{
			get
			{
				return this._SystolicBloodPressure;
			}
			set
			{
				if ((this._SystolicBloodPressure != value))
				{
					this._SystolicBloodPressure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiastolicBloodPressure", DbType="NVarChar(50)")]
		public string DiastolicBloodPressure
		{
			get
			{
				return this._DiastolicBloodPressure;
			}
			set
			{
				if ((this._DiastolicBloodPressure != value))
				{
					this._DiastolicBloodPressure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Int NOT NULL")]
		public int x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this._x = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fesharekhon", DbType="Int")]
		public System.Nullable<int> Fesharekhon
		{
			get
			{
				return this._Fesharekhon;
			}
			set
			{
				if ((this._Fesharekhon != value))
				{
					this._Fesharekhon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBS", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FBS
		{
			get
			{
				return this._FBS;
			}
			set
			{
				if ((this._FBS != value))
				{
					this._FBS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diabet", DbType="Int")]
		public System.Nullable<int> Diabet
		{
			get
			{
				return this._Diabet;
			}
			set
			{
				if ((this._Diabet != value))
				{
					this._Diabet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dislipidimy", DbType="Int")]
		public System.Nullable<int> Dislipidimy
		{
			get
			{
				return this._Dislipidimy;
			}
			set
			{
				if ((this._Dislipidimy != value))
				{
					this._Dislipidimy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TG", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TG
		{
			get
			{
				return this._TG;
			}
			set
			{
				if ((this._TG != value))
				{
					this._TG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tchol", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Tchol
		{
			get
			{
				return this._Tchol;
			}
			set
			{
				if ((this._Tchol != value))
				{
					this._Tchol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasmoiatBaSorb", DbType="Int")]
		public System.Nullable<int> MasmoiatBaSorb
		{
			get
			{
				return this._MasmoiatBaSorb;
			}
			set
			{
				if ((this._MasmoiatBaSorb != value))
				{
					this._MasmoiatBaSorb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sel", DbType="Int")]
		public System.Nullable<int> Sel
		{
			get
			{
				return this._Sel;
			}
			set
			{
				if ((this._Sel != value))
				{
					this._Sel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silikoz", DbType="Int")]
		public System.Nullable<int> Silikoz
		{
			get
			{
				return this._Silikoz;
			}
			set
			{
				if ((this._Silikoz != value))
				{
					this._Silikoz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Azebstor", DbType="Int")]
		public System.Nullable<int> Azebstor
		{
			get
			{
				return this._Azebstor;
			}
			set
			{
				if ((this._Azebstor != value))
				{
					this._Azebstor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeramatitTamasi", DbType="Int")]
		public System.Nullable<int> DeramatitTamasi
		{
			get
			{
				return this._DeramatitTamasi;
			}
			set
			{
				if ((this._DeramatitTamasi != value))
				{
					this._DeramatitTamasi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KamardardShoghli", DbType="Int")]
		public System.Nullable<int> KamardardShoghli
		{
			get
			{
				return this._KamardardShoghli;
			}
			set
			{
				if ((this._KamardardShoghli != value))
				{
					this._KamardardShoghli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spiro", DbType="Int")]
		public System.Nullable<int> Spiro
		{
			get
			{
				return this._Spiro;
			}
			set
			{
				if ((this._Spiro != value))
				{
					this._Spiro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shenavaei", DbType="Int")]
		public System.Nullable<int> Shenavaei
		{
			get
			{
				return this._Shenavaei;
			}
			set
			{
				if ((this._Shenavaei != value))
				{
					this._Shenavaei = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionnaireGroup")]
	public partial class QuestionnaireGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _IDParent;
		
		private string _Name;
		
		private int _IDint;
		
		private string _SalamatBookletCode;
		
		private bool _HasTaiff;
		
		private EntitySet<Questionnaire> _Questionnaires;
		
		private EntitySet<QuestionnaireGroup> _QuestionnaireGroups;
		
		private EntityRef<QuestionnaireGroup> _QuestionnaireGroup1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDParentChanging(System.Nullable<System.Guid> value);
    partial void OnIDParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnHasTaiffChanging(bool value);
    partial void OnHasTaiffChanged();
    #endregion
		
		public QuestionnaireGroup()
		{
			this._Questionnaires = new EntitySet<Questionnaire>(new Action<Questionnaire>(this.attach_Questionnaires), new Action<Questionnaire>(this.detach_Questionnaires));
			this._QuestionnaireGroups = new EntitySet<QuestionnaireGroup>(new Action<QuestionnaireGroup>(this.attach_QuestionnaireGroups), new Action<QuestionnaireGroup>(this.detach_QuestionnaireGroups));
			this._QuestionnaireGroup1 = default(EntityRef<QuestionnaireGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDParent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDParent
		{
			get
			{
				return this._IDParent;
			}
			set
			{
				if ((this._IDParent != value))
				{
					if (this._QuestionnaireGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDParentChanging(value);
					this.SendPropertyChanging();
					this._IDParent = value;
					this.SendPropertyChanged("IDParent");
					this.OnIDParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTaiff", DbType="Bit NOT NULL")]
		public bool HasTaiff
		{
			get
			{
				return this._HasTaiff;
			}
			set
			{
				if ((this._HasTaiff != value))
				{
					this.OnHasTaiffChanging(value);
					this.SendPropertyChanging();
					this._HasTaiff = value;
					this.SendPropertyChanged("HasTaiff");
					this.OnHasTaiffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_Questionnaire", Storage="_Questionnaires", ThisKey="ID", OtherKey="IDGroup")]
		public EntitySet<Questionnaire> Questionnaires
		{
			get
			{
				return this._Questionnaires;
			}
			set
			{
				this._Questionnaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_QuestionnaireGroup", Storage="_QuestionnaireGroups", ThisKey="ID", OtherKey="IDParent")]
		public EntitySet<QuestionnaireGroup> QuestionnaireGroups
		{
			get
			{
				return this._QuestionnaireGroups;
			}
			set
			{
				this._QuestionnaireGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_QuestionnaireGroup", Storage="_QuestionnaireGroup1", ThisKey="IDParent", OtherKey="ID", IsForeignKey=true)]
		public QuestionnaireGroup QuestionnaireGroup1
		{
			get
			{
				return this._QuestionnaireGroup1.Entity;
			}
			set
			{
				QuestionnaireGroup previousValue = this._QuestionnaireGroup1.Entity;
				if (((previousValue != value) 
							|| (this._QuestionnaireGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionnaireGroup1.Entity = null;
						previousValue.QuestionnaireGroups.Remove(this);
					}
					this._QuestionnaireGroup1.Entity = value;
					if ((value != null))
					{
						value.QuestionnaireGroups.Add(this);
						this._IDParent = value.ID;
					}
					else
					{
						this._IDParent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("QuestionnaireGroup1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup = this;
		}
		
		private void detach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup = null;
		}
		
		private void attach_QuestionnaireGroups(QuestionnaireGroup entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup1 = this;
		}
		
		private void detach_QuestionnaireGroups(QuestionnaireGroup entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_Surveillance")]
	public partial class Vw_Surveillance
	{
		
		private string _SurveillanceName;
		
		private System.Nullable<bool> _Active;
		
		private System.Guid _VisitID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		public Vw_Surveillance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveillanceName", DbType="NVarChar(500)")]
		public string SurveillanceName
		{
			get
			{
				return this._SurveillanceName;
			}
			set
			{
				if ((this._SurveillanceName != value))
				{
					this._SurveillanceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this._VisitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_AllData")]
	public partial class Vw_AllData
	{
		
		private string _AdmitDate;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDunit;
		
		private string _NationalCode;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private System.Nullable<bool> _Sex;
		
		private string _ManagmentName;
		
		private string _ComName;
		
		private string _SubComName;
		
		private string _UnitName;
		
		private string _Name;
		
		private System.Nullable<int> _ResultCHK;
		
		private string _Description;
		
		private System.Nullable<bool> _Active;
		
		private string _MainResult;
		
		public Vw_AllData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDunit", DbType="Int")]
		public System.Nullable<int> IDunit
		{
			get
			{
				return this._IDunit;
			}
			set
			{
				if ((this._IDunit != value))
				{
					this._IDunit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagmentName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManagmentName
		{
			get
			{
				return this._ManagmentName;
			}
			set
			{
				if ((this._ManagmentName != value))
				{
					this._ManagmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ComName
		{
			get
			{
				return this._ComName;
			}
			set
			{
				if ((this._ComName != value))
				{
					this._ComName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubComName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubComName
		{
			get
			{
				return this._SubComName;
			}
			set
			{
				if ((this._SubComName != value))
				{
					this._SubComName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Int")]
		public System.Nullable<int> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this._ResultCHK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainResult", DbType="NVarChar(500)")]
		public string MainResult
		{
			get
			{
				return this._MainResult;
			}
			set
			{
				if ((this._MainResult != value))
				{
					this._MainResult = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_billCom")]
	public partial class Vw_billCom
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Guid _VisitID;
		
		private string _ServicceName;
		
		private System.Nullable<decimal> _Expr1;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _ManagmenName;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDunit;
		
		private string _CompanyName;
		
		private string _SubCompanyName;
		
		private string _UnitName;
		
		private string _AdmitDate;
		
		public Vw_billCom()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this._VisitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicceName", DbType="NVarChar(1000)")]
		public string ServicceName
		{
			get
			{
				return this._ServicceName;
			}
			set
			{
				if ((this._ServicceName != value))
				{
					this._ServicceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Money")]
		public System.Nullable<decimal> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagmenName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManagmenName
		{
			get
			{
				return this._ManagmenName;
			}
			set
			{
				if ((this._ManagmenName != value))
				{
					this._ManagmenName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDunit", DbType="Int")]
		public System.Nullable<int> IDunit
		{
			get
			{
				return this._IDunit;
			}
			set
			{
				if ((this._IDunit != value))
				{
					this._IDunit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubCompanyName
		{
			get
			{
				return this._SubCompanyName;
			}
			set
			{
				if ((this._SubCompanyName != value))
				{
					this._SubCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_SurveillanceCompany")]
	public partial class Vw_SurveillanceCompany
	{
		
		private System.Guid _ID;
		
		private System.Guid _VisitID;
		
		private System.Nullable<int> _SicknessID;
		
		private System.Nullable<int> _SicknessTypeID;
		
		private System.Nullable<int> _SicknessSeverityID;
		
		private System.Nullable<bool> _Active;
		
		private string _FirstDiagnosisDate;
		
		private string _RecoveryDate;
		
		private string _NextVisitDate;
		
		private string _Comment;
		
		private string _ActionsTaken;
		
		private string _ActionResult;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _Deleted;
		
		private string _SickName;
		
		private string _CompanyName;
		
		private string _SubCompanyName;
		
		private string _UnitName;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDunit;
		
		private string _ManageMentName;
		
		public Vw_SurveillanceCompany()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this._VisitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessID", DbType="Int")]
		public System.Nullable<int> SicknessID
		{
			get
			{
				return this._SicknessID;
			}
			set
			{
				if ((this._SicknessID != value))
				{
					this._SicknessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessTypeID", DbType="Int")]
		public System.Nullable<int> SicknessTypeID
		{
			get
			{
				return this._SicknessTypeID;
			}
			set
			{
				if ((this._SicknessTypeID != value))
				{
					this._SicknessTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessSeverityID", DbType="Int")]
		public System.Nullable<int> SicknessSeverityID
		{
			get
			{
				return this._SicknessSeverityID;
			}
			set
			{
				if ((this._SicknessSeverityID != value))
				{
					this._SicknessSeverityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDiagnosisDate", DbType="NVarChar(10)")]
		public string FirstDiagnosisDate
		{
			get
			{
				return this._FirstDiagnosisDate;
			}
			set
			{
				if ((this._FirstDiagnosisDate != value))
				{
					this._FirstDiagnosisDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoveryDate", DbType="NVarChar(10)")]
		public string RecoveryDate
		{
			get
			{
				return this._RecoveryDate;
			}
			set
			{
				if ((this._RecoveryDate != value))
				{
					this._RecoveryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDate", DbType="NVarChar(10)")]
		public string NextVisitDate
		{
			get
			{
				return this._NextVisitDate;
			}
			set
			{
				if ((this._NextVisitDate != value))
				{
					this._NextVisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionsTaken", DbType="NVarChar(300)")]
		public string ActionsTaken
		{
			get
			{
				return this._ActionsTaken;
			}
			set
			{
				if ((this._ActionsTaken != value))
				{
					this._ActionsTaken = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionResult", DbType="NVarChar(300)")]
		public string ActionResult
		{
			get
			{
				return this._ActionResult;
			}
			set
			{
				if ((this._ActionResult != value))
				{
					this._ActionResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this._CreatorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this._Deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickName", DbType="NVarChar(500)")]
		public string SickName
		{
			get
			{
				return this._SickName;
			}
			set
			{
				if ((this._SickName != value))
				{
					this._SickName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompanyName", DbType="NVarChar(255)")]
		public string SubCompanyName
		{
			get
			{
				return this._SubCompanyName;
			}
			set
			{
				if ((this._SubCompanyName != value))
				{
					this._SubCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(255)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDunit", DbType="Int")]
		public System.Nullable<int> IDunit
		{
			get
			{
				return this._IDunit;
			}
			set
			{
				if ((this._IDunit != value))
				{
					this._IDunit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageMentName", DbType="NVarChar(255)")]
		public string ManageMentName
		{
			get
			{
				return this._ManageMentName;
			}
			set
			{
				if ((this._ManageMentName != value))
				{
					this._ManageMentName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_SickPerson")]
	public partial class Vw_SickPerson
	{
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _MobileNumber;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _SicknessID;
		
		private string _SickName;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDunit;
		
		private string _CreationDate;
		
		private string _CompanyName;
		
		private string _SubCompanyName;
		
		private string _UnitName;
		
		private string _ManageMentName;
		
		public Vw_SickPerson()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this._MobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessID", DbType="Int")]
		public System.Nullable<int> SicknessID
		{
			get
			{
				return this._SicknessID;
			}
			set
			{
				if ((this._SicknessID != value))
				{
					this._SicknessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickName", DbType="NVarChar(500)")]
		public string SickName
		{
			get
			{
				return this._SickName;
			}
			set
			{
				if ((this._SickName != value))
				{
					this._SickName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDunit", DbType="Int")]
		public System.Nullable<int> IDunit
		{
			get
			{
				return this._IDunit;
			}
			set
			{
				if ((this._IDunit != value))
				{
					this._IDunit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompanyName", DbType="NVarChar(255)")]
		public string SubCompanyName
		{
			get
			{
				return this._SubCompanyName;
			}
			set
			{
				if ((this._SubCompanyName != value))
				{
					this._SubCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(255)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageMentName", DbType="NVarChar(255)")]
		public string ManageMentName
		{
			get
			{
				return this._ManageMentName;
			}
			set
			{
				if ((this._ManageMentName != value))
				{
					this._ManageMentName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private long _IDint;
		
		private System.Guid _PersonID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _IntroductionCode;
		
		private System.Nullable<int> _IntroductionCompanyID;
		
		private string _IntroductionDate;
		
		private System.Nullable<int> _VisitType;
		
		private bool _Admitted;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _AdmittedUserID;
		
		private string _Comment;
		
		private bool _Result;
		
		private string _ResultDate;
		
		private string _ResultTime;
		
		private System.Nullable<System.Guid> _ResultDocStaffID;
		
		private System.Nullable<int> _ResultDocUser;
		
		private string _ResultDocFullName;
		
		private System.Nullable<System.Guid> _SpecialistDocStaffID;
		
		private string _SpecialistDocFullName;
		
		private System.Nullable<int> _ResultOpinionID;
		
		private System.Nullable<int> _LimitationID;
		
		private string _LimitationEndDate;
		
		private string _NextVisitDate;
		
		private string _CauseOfNonEligibility;
		
		private string _OtherDescription;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _Deleted;
		
		private bool _AcceptDoctor;
		
		private bool _AcceptSpecialist;
		
		private System.Nullable<int> _IDManagment;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDUnit;
		
		private System.Nullable<int> _IntroductionIDManagment;
		
		private System.Nullable<int> _IntroductionIDSubCompany;
		
		private System.Nullable<int> _IntroductionIDUnit;
		
		private string _CurrentJob;
		
		private string _SuggestedJob;
		
		private System.Nullable<int> _PersonalTypeID;
		
		private System.Nullable<int> _IntroductionStrID;
		
		private EntitySet<Lab_Visit> _Lab_Visits;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Surveillance> _Surveillances;
		
		private EntitySet<ResultDetail> _ResultDetails;
		
		private EntityRef<VitalSign> _VitalSign;
		
		private EntitySet<QAPlus> _QAPlus;
		
		private EntityRef<ToDoList> _ToDoList;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<Definition> _Definition2;
		
		private EntityRef<Definition> _Definition3;
		
		private EntityRef<Definition> _Definition4;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDintChanging(long value);
    partial void OnIDintChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnIntroductionCodeChanging(string value);
    partial void OnIntroductionCodeChanged();
    partial void OnIntroductionCompanyIDChanging(System.Nullable<int> value);
    partial void OnIntroductionCompanyIDChanged();
    partial void OnIntroductionDateChanging(string value);
    partial void OnIntroductionDateChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnAdmittedUserIDChanging(System.Nullable<int> value);
    partial void OnAdmittedUserIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnResultChanging(bool value);
    partial void OnResultChanged();
    partial void OnResultDateChanging(string value);
    partial void OnResultDateChanged();
    partial void OnResultTimeChanging(string value);
    partial void OnResultTimeChanged();
    partial void OnResultDocStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnResultDocStaffIDChanged();
    partial void OnResultDocUserChanging(System.Nullable<int> value);
    partial void OnResultDocUserChanged();
    partial void OnResultDocFullNameChanging(string value);
    partial void OnResultDocFullNameChanged();
    partial void OnSpecialistDocStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnSpecialistDocStaffIDChanged();
    partial void OnSpecialistDocFullNameChanging(string value);
    partial void OnSpecialistDocFullNameChanged();
    partial void OnResultOpinionIDChanging(System.Nullable<int> value);
    partial void OnResultOpinionIDChanged();
    partial void OnLimitationIDChanging(System.Nullable<int> value);
    partial void OnLimitationIDChanged();
    partial void OnLimitationEndDateChanging(string value);
    partial void OnLimitationEndDateChanged();
    partial void OnNextVisitDateChanging(string value);
    partial void OnNextVisitDateChanged();
    partial void OnCauseOfNonEligibilityChanging(string value);
    partial void OnCauseOfNonEligibilityChanged();
    partial void OnOtherDescriptionChanging(string value);
    partial void OnOtherDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnAcceptDoctorChanging(bool value);
    partial void OnAcceptDoctorChanged();
    partial void OnAcceptSpecialistChanging(bool value);
    partial void OnAcceptSpecialistChanged();
    partial void OnIDManagmentChanging(System.Nullable<int> value);
    partial void OnIDManagmentChanged();
    partial void OnIDCompanyChanging(System.Nullable<int> value);
    partial void OnIDCompanyChanged();
    partial void OnIDSubCompanyChanging(System.Nullable<int> value);
    partial void OnIDSubCompanyChanged();
    partial void OnIDUnitChanging(System.Nullable<int> value);
    partial void OnIDUnitChanged();
    partial void OnIntroductionIDManagmentChanging(System.Nullable<int> value);
    partial void OnIntroductionIDManagmentChanged();
    partial void OnIntroductionIDSubCompanyChanging(System.Nullable<int> value);
    partial void OnIntroductionIDSubCompanyChanged();
    partial void OnIntroductionIDUnitChanging(System.Nullable<int> value);
    partial void OnIntroductionIDUnitChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnSuggestedJobChanging(string value);
    partial void OnSuggestedJobChanged();
    partial void OnPersonalTypeIDChanging(System.Nullable<int> value);
    partial void OnPersonalTypeIDChanged();
    partial void OnIntroductionStrIDChanging(System.Nullable<int> value);
    partial void OnIntroductionStrIDChanged();
    #endregion
		
		public Visit()
		{
			this._Lab_Visits = new EntitySet<Lab_Visit>(new Action<Lab_Visit>(this.attach_Lab_Visits), new Action<Lab_Visit>(this.detach_Lab_Visits));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Surveillances = new EntitySet<Surveillance>(new Action<Surveillance>(this.attach_Surveillances), new Action<Surveillance>(this.detach_Surveillances));
			this._ResultDetails = new EntitySet<ResultDetail>(new Action<ResultDetail>(this.attach_ResultDetails), new Action<ResultDetail>(this.detach_ResultDetails));
			this._VitalSign = default(EntityRef<VitalSign>);
			this._QAPlus = new EntitySet<QAPlus>(new Action<QAPlus>(this.attach_QAPlus), new Action<QAPlus>(this.detach_QAPlus));
			this._ToDoList = default(EntityRef<ToDoList>);
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._Definition2 = default(EntityRef<Definition>);
			this._Definition3 = default(EntityRef<Definition>);
			this._Definition4 = default(EntityRef<Definition>);
			this._Department = default(EntityRef<Department>);
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionCode", DbType="NVarChar(50)")]
		public string IntroductionCode
		{
			get
			{
				return this._IntroductionCode;
			}
			set
			{
				if ((this._IntroductionCode != value))
				{
					this.OnIntroductionCodeChanging(value);
					this.SendPropertyChanging();
					this._IntroductionCode = value;
					this.SendPropertyChanged("IntroductionCode");
					this.OnIntroductionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionCompanyID", DbType="Int")]
		public System.Nullable<int> IntroductionCompanyID
		{
			get
			{
				return this._IntroductionCompanyID;
			}
			set
			{
				if ((this._IntroductionCompanyID != value))
				{
					this.OnIntroductionCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._IntroductionCompanyID = value;
					this.SendPropertyChanged("IntroductionCompanyID");
					this.OnIntroductionCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionDate", DbType="NVarChar(10)")]
		public string IntroductionDate
		{
			get
			{
				return this._IntroductionDate;
			}
			set
			{
				if ((this._IntroductionDate != value))
				{
					this.OnIntroductionDateChanging(value);
					this.SendPropertyChanging();
					this._IntroductionDate = value;
					this.SendPropertyChanged("IntroductionDate");
					this.OnIntroductionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmittedUserID", DbType="Int")]
		public System.Nullable<int> AdmittedUserID
		{
			get
			{
				return this._AdmittedUserID;
			}
			set
			{
				if ((this._AdmittedUserID != value))
				{
					this.OnAdmittedUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdmittedUserID = value;
					this.SendPropertyChanged("AdmittedUserID");
					this.OnAdmittedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit NOT NULL")]
		public bool Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="NVarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultTime", DbType="NVarChar(8)")]
		public string ResultTime
		{
			get
			{
				return this._ResultTime;
			}
			set
			{
				if ((this._ResultTime != value))
				{
					this.OnResultTimeChanging(value);
					this.SendPropertyChanging();
					this._ResultTime = value;
					this.SendPropertyChanged("ResultTime");
					this.OnResultTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDocStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResultDocStaffID
		{
			get
			{
				return this._ResultDocStaffID;
			}
			set
			{
				if ((this._ResultDocStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultDocStaffIDChanging(value);
					this.SendPropertyChanging();
					this._ResultDocStaffID = value;
					this.SendPropertyChanged("ResultDocStaffID");
					this.OnResultDocStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDocUser", DbType="Int")]
		public System.Nullable<int> ResultDocUser
		{
			get
			{
				return this._ResultDocUser;
			}
			set
			{
				if ((this._ResultDocUser != value))
				{
					this.OnResultDocUserChanging(value);
					this.SendPropertyChanging();
					this._ResultDocUser = value;
					this.SendPropertyChanged("ResultDocUser");
					this.OnResultDocUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDocFullName", DbType="NVarChar(60)")]
		public string ResultDocFullName
		{
			get
			{
				return this._ResultDocFullName;
			}
			set
			{
				if ((this._ResultDocFullName != value))
				{
					this.OnResultDocFullNameChanging(value);
					this.SendPropertyChanging();
					this._ResultDocFullName = value;
					this.SendPropertyChanged("ResultDocFullName");
					this.OnResultDocFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialistDocStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SpecialistDocStaffID
		{
			get
			{
				return this._SpecialistDocStaffID;
			}
			set
			{
				if ((this._SpecialistDocStaffID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialistDocStaffIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialistDocStaffID = value;
					this.SendPropertyChanged("SpecialistDocStaffID");
					this.OnSpecialistDocStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialistDocFullName", DbType="NVarChar(60)")]
		public string SpecialistDocFullName
		{
			get
			{
				return this._SpecialistDocFullName;
			}
			set
			{
				if ((this._SpecialistDocFullName != value))
				{
					this.OnSpecialistDocFullNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialistDocFullName = value;
					this.SendPropertyChanged("SpecialistDocFullName");
					this.OnSpecialistDocFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultOpinionID", DbType="Int")]
		public System.Nullable<int> ResultOpinionID
		{
			get
			{
				return this._ResultOpinionID;
			}
			set
			{
				if ((this._ResultOpinionID != value))
				{
					if (this._Definition2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultOpinionIDChanging(value);
					this.SendPropertyChanging();
					this._ResultOpinionID = value;
					this.SendPropertyChanged("ResultOpinionID");
					this.OnResultOpinionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitationID", DbType="Int")]
		public System.Nullable<int> LimitationID
		{
			get
			{
				return this._LimitationID;
			}
			set
			{
				if ((this._LimitationID != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimitationIDChanging(value);
					this.SendPropertyChanging();
					this._LimitationID = value;
					this.SendPropertyChanged("LimitationID");
					this.OnLimitationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitationEndDate", DbType="NVarChar(10)")]
		public string LimitationEndDate
		{
			get
			{
				return this._LimitationEndDate;
			}
			set
			{
				if ((this._LimitationEndDate != value))
				{
					this.OnLimitationEndDateChanging(value);
					this.SendPropertyChanging();
					this._LimitationEndDate = value;
					this.SendPropertyChanged("LimitationEndDate");
					this.OnLimitationEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDate", DbType="NVarChar(10)")]
		public string NextVisitDate
		{
			get
			{
				return this._NextVisitDate;
			}
			set
			{
				if ((this._NextVisitDate != value))
				{
					this.OnNextVisitDateChanging(value);
					this.SendPropertyChanging();
					this._NextVisitDate = value;
					this.SendPropertyChanged("NextVisitDate");
					this.OnNextVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfNonEligibility", DbType="NVarChar(250)")]
		public string CauseOfNonEligibility
		{
			get
			{
				return this._CauseOfNonEligibility;
			}
			set
			{
				if ((this._CauseOfNonEligibility != value))
				{
					this.OnCauseOfNonEligibilityChanging(value);
					this.SendPropertyChanging();
					this._CauseOfNonEligibility = value;
					this.SendPropertyChanged("CauseOfNonEligibility");
					this.OnCauseOfNonEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDescription", DbType="NVarChar(250)")]
		public string OtherDescription
		{
			get
			{
				return this._OtherDescription;
			}
			set
			{
				if ((this._OtherDescription != value))
				{
					this.OnOtherDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OtherDescription = value;
					this.SendPropertyChanged("OtherDescription");
					this.OnOtherDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDoctor", DbType="Bit NOT NULL")]
		public bool AcceptDoctor
		{
			get
			{
				return this._AcceptDoctor;
			}
			set
			{
				if ((this._AcceptDoctor != value))
				{
					this.OnAcceptDoctorChanging(value);
					this.SendPropertyChanging();
					this._AcceptDoctor = value;
					this.SendPropertyChanged("AcceptDoctor");
					this.OnAcceptDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptSpecialist", DbType="Bit NOT NULL")]
		public bool AcceptSpecialist
		{
			get
			{
				return this._AcceptSpecialist;
			}
			set
			{
				if ((this._AcceptSpecialist != value))
				{
					this.OnAcceptSpecialistChanging(value);
					this.SendPropertyChanging();
					this._AcceptSpecialist = value;
					this.SendPropertyChanged("AcceptSpecialist");
					this.OnAcceptSpecialistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagment", DbType="Int")]
		public System.Nullable<int> IDManagment
		{
			get
			{
				return this._IDManagment;
			}
			set
			{
				if ((this._IDManagment != value))
				{
					this.OnIDManagmentChanging(value);
					this.SendPropertyChanging();
					this._IDManagment = value;
					this.SendPropertyChanged("IDManagment");
					this.OnIDManagmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this.OnIDCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDCompany = value;
					this.SendPropertyChanged("IDCompany");
					this.OnIDCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this.OnIDSubCompanyChanging(value);
					this.SendPropertyChanging();
					this._IDSubCompany = value;
					this.SendPropertyChanged("IDSubCompany");
					this.OnIDSubCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUnit", DbType="Int")]
		public System.Nullable<int> IDUnit
		{
			get
			{
				return this._IDUnit;
			}
			set
			{
				if ((this._IDUnit != value))
				{
					this.OnIDUnitChanging(value);
					this.SendPropertyChanging();
					this._IDUnit = value;
					this.SendPropertyChanged("IDUnit");
					this.OnIDUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionIDManagment", DbType="Int")]
		public System.Nullable<int> IntroductionIDManagment
		{
			get
			{
				return this._IntroductionIDManagment;
			}
			set
			{
				if ((this._IntroductionIDManagment != value))
				{
					this.OnIntroductionIDManagmentChanging(value);
					this.SendPropertyChanging();
					this._IntroductionIDManagment = value;
					this.SendPropertyChanged("IntroductionIDManagment");
					this.OnIntroductionIDManagmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionIDSubCompany", DbType="Int")]
		public System.Nullable<int> IntroductionIDSubCompany
		{
			get
			{
				return this._IntroductionIDSubCompany;
			}
			set
			{
				if ((this._IntroductionIDSubCompany != value))
				{
					this.OnIntroductionIDSubCompanyChanging(value);
					this.SendPropertyChanging();
					this._IntroductionIDSubCompany = value;
					this.SendPropertyChanged("IntroductionIDSubCompany");
					this.OnIntroductionIDSubCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionIDUnit", DbType="Int")]
		public System.Nullable<int> IntroductionIDUnit
		{
			get
			{
				return this._IntroductionIDUnit;
			}
			set
			{
				if ((this._IntroductionIDUnit != value))
				{
					this.OnIntroductionIDUnitChanging(value);
					this.SendPropertyChanging();
					this._IntroductionIDUnit = value;
					this.SendPropertyChanged("IntroductionIDUnit");
					this.OnIntroductionIDUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(50)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedJob", DbType="NVarChar(50)")]
		public string SuggestedJob
		{
			get
			{
				return this._SuggestedJob;
			}
			set
			{
				if ((this._SuggestedJob != value))
				{
					this.OnSuggestedJobChanging(value);
					this.SendPropertyChanging();
					this._SuggestedJob = value;
					this.SendPropertyChanged("SuggestedJob");
					this.OnSuggestedJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalTypeID", DbType="Int")]
		public System.Nullable<int> PersonalTypeID
		{
			get
			{
				return this._PersonalTypeID;
			}
			set
			{
				if ((this._PersonalTypeID != value))
				{
					if (this._Definition3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonalTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PersonalTypeID = value;
					this.SendPropertyChanged("PersonalTypeID");
					this.OnPersonalTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionStrID", DbType="Int")]
		public System.Nullable<int> IntroductionStrID
		{
			get
			{
				return this._IntroductionStrID;
			}
			set
			{
				if ((this._IntroductionStrID != value))
				{
					if (this._Definition4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntroductionStrIDChanging(value);
					this.SendPropertyChanging();
					this._IntroductionStrID = value;
					this.SendPropertyChanged("IntroductionStrID");
					this.OnIntroductionStrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Lab_Visit", Storage="_Lab_Visits", ThisKey="ID", OtherKey="VisitID")]
		public EntitySet<Lab_Visit> Lab_Visits
		{
			get
			{
				return this._Lab_Visits;
			}
			set
			{
				this._Lab_Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Reference", Storage="_References", ThisKey="ID", OtherKey="VisitID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_Surveillance", Storage="_Surveillances", ThisKey="ID", OtherKey="VisitID")]
		public EntitySet<Surveillance> Surveillances
		{
			get
			{
				return this._Surveillances;
			}
			set
			{
				this._Surveillances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_ResultDetail", Storage="_ResultDetails", ThisKey="ID", OtherKey="VisitID")]
		public EntitySet<ResultDetail> ResultDetails
		{
			get
			{
				return this._ResultDetails;
			}
			set
			{
				this._ResultDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_VitalSign", Storage="_VitalSign", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public VitalSign VitalSign
		{
			get
			{
				return this._VitalSign.Entity;
			}
			set
			{
				VitalSign previousValue = this._VitalSign.Entity;
				if (((previousValue != value) 
							|| (this._VitalSign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VitalSign.Entity = null;
						previousValue.Visit = null;
					}
					this._VitalSign.Entity = value;
					if ((value != null))
					{
						value.Visit = this;
					}
					this.SendPropertyChanged("VitalSign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_QAPlus", Storage="_QAPlus", ThisKey="ID", OtherKey="VisitID")]
		public EntitySet<QAPlus> QAPlus
		{
			get
			{
				return this._QAPlus;
			}
			set
			{
				this._QAPlus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visit_ToDoList", Storage="_ToDoList", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ToDoList ToDoList
		{
			get
			{
				return this._ToDoList.Entity;
			}
			set
			{
				ToDoList previousValue = this._ToDoList.Entity;
				if (((previousValue != value) 
							|| (this._ToDoList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ToDoList.Entity = null;
						previousValue.Visit = null;
					}
					this._ToDoList.Entity = value;
					if ((value != null))
					{
						value.Visit = this;
					}
					this.SendPropertyChanged("ToDoList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit", Storage="_Definition", ThisKey="VisitType", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._VisitType = value.ID;
					}
					else
					{
						this._VisitType = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit1", Storage="_Definition1", ThisKey="LimitationID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Visits1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Visits1.Add(this);
						this._LimitationID = value.ID;
					}
					else
					{
						this._LimitationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit2", Storage="_Definition2", ThisKey="ResultOpinionID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition2
		{
			get
			{
				return this._Definition2.Entity;
			}
			set
			{
				Definition previousValue = this._Definition2.Entity;
				if (((previousValue != value) 
							|| (this._Definition2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition2.Entity = null;
						previousValue.Visits2.Remove(this);
					}
					this._Definition2.Entity = value;
					if ((value != null))
					{
						value.Visits2.Add(this);
						this._ResultOpinionID = value.ID;
					}
					else
					{
						this._ResultOpinionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit3", Storage="_Definition3", ThisKey="PersonalTypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition3
		{
			get
			{
				return this._Definition3.Entity;
			}
			set
			{
				Definition previousValue = this._Definition3.Entity;
				if (((previousValue != value) 
							|| (this._Definition3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition3.Entity = null;
						previousValue.Visits3.Remove(this);
					}
					this._Definition3.Entity = value;
					if ((value != null))
					{
						value.Visits3.Add(this);
						this._PersonalTypeID = value.ID;
					}
					else
					{
						this._PersonalTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Visit4", Storage="_Definition4", ThisKey="IntroductionStrID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition4
		{
			get
			{
				return this._Definition4.Entity;
			}
			set
			{
				Definition previousValue = this._Definition4.Entity;
				if (((previousValue != value) 
							|| (this._Definition4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition4.Entity = null;
						previousValue.Visits4.Remove(this);
					}
					this._Definition4.Entity = value;
					if ((value != null))
					{
						value.Visits4.Add(this);
						this._IntroductionStrID = value.ID;
					}
					else
					{
						this._IntroductionStrID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Visit", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Visit", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Visit", Storage="_Staff", ThisKey="ResultDocStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._ResultDocStaffID = value.ID;
					}
					else
					{
						this._ResultDocStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Visit1", Storage="_Staff1", ThisKey="SpecialistDocStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.Visits1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.Visits1.Add(this);
						this._SpecialistDocStaffID = value.ID;
					}
					else
					{
						this._SpecialistDocStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lab_Visits(Lab_Visit entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_Lab_Visits(Lab_Visit entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_Surveillances(Surveillance entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_ResultDetails(ResultDetail entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_ResultDetails(ResultDetail entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
		
		private void attach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.Visit = this;
		}
		
		private void detach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.Visit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_ResultCompany")]
	public partial class Vw_ResultCompany
	{
		
		private int _IDres;
		
		private string _ResultName;
		
		private string _CompanyName;
		
		private string _SubCompanyName;
		
		private string _CreationDate;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private string _PhoneNumber;
		
		private string _MobileNumber;
		
		private System.Nullable<int> _IDManagement;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDunit;
		
		private string _ManagmentName;
		
		public Vw_ResultCompany()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDres", DbType="Int NOT NULL")]
		public int IDres
		{
			get
			{
				return this._IDres;
			}
			set
			{
				if ((this._IDres != value))
				{
					this._IDres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultName", DbType="NVarChar(500)")]
		public string ResultName
		{
			get
			{
				return this._ResultName;
			}
			set
			{
				if ((this._ResultName != value))
				{
					this._ResultName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompanyName", DbType="NVarChar(255)")]
		public string SubCompanyName
		{
			get
			{
				return this._SubCompanyName;
			}
			set
			{
				if ((this._SubCompanyName != value))
				{
					this._SubCompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this._MobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="Int")]
		public System.Nullable<int> IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDunit", DbType="Int")]
		public System.Nullable<int> IDunit
		{
			get
			{
				return this._IDunit;
			}
			set
			{
				if ((this._IDunit != value))
				{
					this._IDunit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagmentName", DbType="NVarChar(255)")]
		public string ManagmentName
		{
			get
			{
				return this._ManagmentName;
			}
			set
			{
				if ((this._ManagmentName != value))
				{
					this._ManagmentName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabTestQA")]
	public partial class LabTestQA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _QuestionnaireID;
		
		private System.Nullable<System.Guid> _LabTestID;
		
		private System.Nullable<int> _LabTestIntID;
		
		private System.Nullable<int> _IDHos;
		
		private EntityRef<Questionnaire> _Questionnaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestionnaireIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnaireIDChanged();
    partial void OnLabTestIDChanging(System.Nullable<System.Guid> value);
    partial void OnLabTestIDChanged();
    partial void OnLabTestIntIDChanging(System.Nullable<int> value);
    partial void OnLabTestIntIDChanged();
    partial void OnIDHosChanging(System.Nullable<int> value);
    partial void OnIDHosChanged();
    #endregion
		
		public LabTestQA()
		{
			this._Questionnaire = default(EntityRef<Questionnaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnaireID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnaireID
		{
			get
			{
				return this._QuestionnaireID;
			}
			set
			{
				if ((this._QuestionnaireID != value))
				{
					if (this._Questionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnaireIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnaireID = value;
					this.SendPropertyChanged("QuestionnaireID");
					this.OnQuestionnaireIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabTestID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LabTestID
		{
			get
			{
				return this._LabTestID;
			}
			set
			{
				if ((this._LabTestID != value))
				{
					this.OnLabTestIDChanging(value);
					this.SendPropertyChanging();
					this._LabTestID = value;
					this.SendPropertyChanged("LabTestID");
					this.OnLabTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabTestIntID", DbType="Int")]
		public System.Nullable<int> LabTestIntID
		{
			get
			{
				return this._LabTestIntID;
			}
			set
			{
				if ((this._LabTestIntID != value))
				{
					this.OnLabTestIntIDChanging(value);
					this.SendPropertyChanging();
					this._LabTestIntID = value;
					this.SendPropertyChanged("LabTestIntID");
					this.OnLabTestIntIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHos", DbType="Int")]
		public System.Nullable<int> IDHos
		{
			get
			{
				return this._IDHos;
			}
			set
			{
				if ((this._IDHos != value))
				{
					this.OnIDHosChanging(value);
					this.SendPropertyChanging();
					this._IDHos = value;
					this.SendPropertyChanged("IDHos");
					this.OnIDHosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_LabTestQA", Storage="_Questionnaire", ThisKey="QuestionnaireID", OtherKey="ID", IsForeignKey=true)]
		public Questionnaire Questionnaire
		{
			get
			{
				return this._Questionnaire.Entity;
			}
			set
			{
				Questionnaire previousValue = this._Questionnaire.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire.Entity = null;
						previousValue.LabTestQAs.Remove(this);
					}
					this._Questionnaire.Entity = value;
					if ((value != null))
					{
						value.LabTestQAs.Add(this);
						this._QuestionnaireID = value.ID;
					}
					else
					{
						this._QuestionnaireID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Questionnaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_visitDetail")]
	public partial class Vw_visitDetail
	{
		
		private System.Guid _ID;
		
		private long _IDint;
		
		private System.Guid _PersonID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _IntroductionCode;
		
		private System.Nullable<int> _IntroductionCompanyID;
		
		private string _IntroductionDate;
		
		private System.Nullable<int> _VisitType;
		
		private bool _Admitted;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _AdmittedUserID;
		
		private string _Comment;
		
		private bool _Result;
		
		private string _ResultDate;
		
		private string _ResultTime;
		
		private System.Nullable<System.Guid> _ResultDocStaffID;
		
		private System.Nullable<int> _ResultDocUser;
		
		private string _ResultDocFullName;
		
		private System.Nullable<System.Guid> _SpecialistDocStaffID;
		
		private string _SpecialistDocFullName;
		
		private System.Nullable<int> _ResultOpinionID;
		
		private System.Nullable<int> _LimitationID;
		
		private string _LimitationEndDate;
		
		private string _NextVisitDate;
		
		private string _CauseOfNonEligibility;
		
		private string _OtherDescription;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _Deleted;
		
		private bool _AcceptDoctor;
		
		private bool _AcceptSpecialist;
		
		private System.Nullable<int> _IDManagment;
		
		private System.Nullable<int> _IDCompany;
		
		private System.Nullable<int> _IDSubCompany;
		
		private System.Nullable<int> _IDUnit;
		
		private System.Nullable<int> _IntroductionIDManagment;
		
		private System.Nullable<int> _IntroductionIDSubCompany;
		
		private System.Nullable<int> _IntroductionIDUnit;
		
		private string _CurrentJob;
		
		private string _SuggestedJob;
		
		private System.Nullable<int> _PersonalTypeID;
		
		private System.Nullable<int> _IntroductionStrID;
		
		private string _ManageName;
		
		private string _ComName;
		
		private string _SubComName;
		
		private string _UniName;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _PhoneNumber;
		
		private string _MobileNumber;
		
		private bool _MedicalHistory;
		
		private bool _Checkup;
		
		private bool _ToDoResult;
		
		private bool _Surveillance;
		
		private bool _Nursing;
		
		private bool _Optometry;
		
		private bool _Audio;
		
		private bool _Psychology;
		
		private bool _Spirometry;
		
		private bool _HarmfulFactor;
		
		private bool _OtherTest;
		
		private string _DefName;
		
		private System.Data.Linq.Binary _Photo;
		
		public Vw_visitDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", DbType="BigInt NOT NULL")]
		public long IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this._IDint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionCode", DbType="NVarChar(50)")]
		public string IntroductionCode
		{
			get
			{
				return this._IntroductionCode;
			}
			set
			{
				if ((this._IntroductionCode != value))
				{
					this._IntroductionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionCompanyID", DbType="Int")]
		public System.Nullable<int> IntroductionCompanyID
		{
			get
			{
				return this._IntroductionCompanyID;
			}
			set
			{
				if ((this._IntroductionCompanyID != value))
				{
					this._IntroductionCompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionDate", DbType="NVarChar(10)")]
		public string IntroductionDate
		{
			get
			{
				return this._IntroductionDate;
			}
			set
			{
				if ((this._IntroductionDate != value))
				{
					this._IntroductionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					this._VisitType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this._Admitted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmittedUserID", DbType="Int")]
		public System.Nullable<int> AdmittedUserID
		{
			get
			{
				return this._AdmittedUserID;
			}
			set
			{
				if ((this._AdmittedUserID != value))
				{
					this._AdmittedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit NOT NULL")]
		public bool Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="NVarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultTime", DbType="NVarChar(8)")]
		public string ResultTime
		{
			get
			{
				return this._ResultTime;
			}
			set
			{
				if ((this._ResultTime != value))
				{
					this._ResultTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDocStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ResultDocStaffID
		{
			get
			{
				return this._ResultDocStaffID;
			}
			set
			{
				if ((this._ResultDocStaffID != value))
				{
					this._ResultDocStaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDocUser", DbType="Int")]
		public System.Nullable<int> ResultDocUser
		{
			get
			{
				return this._ResultDocUser;
			}
			set
			{
				if ((this._ResultDocUser != value))
				{
					this._ResultDocUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDocFullName", DbType="NVarChar(60)")]
		public string ResultDocFullName
		{
			get
			{
				return this._ResultDocFullName;
			}
			set
			{
				if ((this._ResultDocFullName != value))
				{
					this._ResultDocFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialistDocStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SpecialistDocStaffID
		{
			get
			{
				return this._SpecialistDocStaffID;
			}
			set
			{
				if ((this._SpecialistDocStaffID != value))
				{
					this._SpecialistDocStaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialistDocFullName", DbType="NVarChar(60)")]
		public string SpecialistDocFullName
		{
			get
			{
				return this._SpecialistDocFullName;
			}
			set
			{
				if ((this._SpecialistDocFullName != value))
				{
					this._SpecialistDocFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultOpinionID", DbType="Int")]
		public System.Nullable<int> ResultOpinionID
		{
			get
			{
				return this._ResultOpinionID;
			}
			set
			{
				if ((this._ResultOpinionID != value))
				{
					this._ResultOpinionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitationID", DbType="Int")]
		public System.Nullable<int> LimitationID
		{
			get
			{
				return this._LimitationID;
			}
			set
			{
				if ((this._LimitationID != value))
				{
					this._LimitationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitationEndDate", DbType="NVarChar(10)")]
		public string LimitationEndDate
		{
			get
			{
				return this._LimitationEndDate;
			}
			set
			{
				if ((this._LimitationEndDate != value))
				{
					this._LimitationEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDate", DbType="NVarChar(10)")]
		public string NextVisitDate
		{
			get
			{
				return this._NextVisitDate;
			}
			set
			{
				if ((this._NextVisitDate != value))
				{
					this._NextVisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfNonEligibility", DbType="NVarChar(250)")]
		public string CauseOfNonEligibility
		{
			get
			{
				return this._CauseOfNonEligibility;
			}
			set
			{
				if ((this._CauseOfNonEligibility != value))
				{
					this._CauseOfNonEligibility = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDescription", DbType="NVarChar(250)")]
		public string OtherDescription
		{
			get
			{
				return this._OtherDescription;
			}
			set
			{
				if ((this._OtherDescription != value))
				{
					this._OtherDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this._CreatorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this._Deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDoctor", DbType="Bit NOT NULL")]
		public bool AcceptDoctor
		{
			get
			{
				return this._AcceptDoctor;
			}
			set
			{
				if ((this._AcceptDoctor != value))
				{
					this._AcceptDoctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptSpecialist", DbType="Bit NOT NULL")]
		public bool AcceptSpecialist
		{
			get
			{
				return this._AcceptSpecialist;
			}
			set
			{
				if ((this._AcceptSpecialist != value))
				{
					this._AcceptSpecialist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagment", DbType="Int")]
		public System.Nullable<int> IDManagment
		{
			get
			{
				return this._IDManagment;
			}
			set
			{
				if ((this._IDManagment != value))
				{
					this._IDManagment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="Int")]
		public System.Nullable<int> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="Int")]
		public System.Nullable<int> IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUnit", DbType="Int")]
		public System.Nullable<int> IDUnit
		{
			get
			{
				return this._IDUnit;
			}
			set
			{
				if ((this._IDUnit != value))
				{
					this._IDUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionIDManagment", DbType="Int")]
		public System.Nullable<int> IntroductionIDManagment
		{
			get
			{
				return this._IntroductionIDManagment;
			}
			set
			{
				if ((this._IntroductionIDManagment != value))
				{
					this._IntroductionIDManagment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionIDSubCompany", DbType="Int")]
		public System.Nullable<int> IntroductionIDSubCompany
		{
			get
			{
				return this._IntroductionIDSubCompany;
			}
			set
			{
				if ((this._IntroductionIDSubCompany != value))
				{
					this._IntroductionIDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionIDUnit", DbType="Int")]
		public System.Nullable<int> IntroductionIDUnit
		{
			get
			{
				return this._IntroductionIDUnit;
			}
			set
			{
				if ((this._IntroductionIDUnit != value))
				{
					this._IntroductionIDUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(50)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this._CurrentJob = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedJob", DbType="NVarChar(50)")]
		public string SuggestedJob
		{
			get
			{
				return this._SuggestedJob;
			}
			set
			{
				if ((this._SuggestedJob != value))
				{
					this._SuggestedJob = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalTypeID", DbType="Int")]
		public System.Nullable<int> PersonalTypeID
		{
			get
			{
				return this._PersonalTypeID;
			}
			set
			{
				if ((this._PersonalTypeID != value))
				{
					this._PersonalTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionStrID", DbType="Int")]
		public System.Nullable<int> IntroductionStrID
		{
			get
			{
				return this._IntroductionStrID;
			}
			set
			{
				if ((this._IntroductionStrID != value))
				{
					this._IntroductionStrID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManageName
		{
			get
			{
				return this._ManageName;
			}
			set
			{
				if ((this._ManageName != value))
				{
					this._ManageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ComName
		{
			get
			{
				return this._ComName;
			}
			set
			{
				if ((this._ComName != value))
				{
					this._ComName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubComName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubComName
		{
			get
			{
				return this._SubComName;
			}
			set
			{
				if ((this._SubComName != value))
				{
					this._SubComName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UniName
		{
			get
			{
				return this._UniName;
			}
			set
			{
				if ((this._UniName != value))
				{
					this._UniName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this._MobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistory", DbType="Bit NOT NULL")]
		public bool MedicalHistory
		{
			get
			{
				return this._MedicalHistory;
			}
			set
			{
				if ((this._MedicalHistory != value))
				{
					this._MedicalHistory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checkup", DbType="Bit NOT NULL")]
		public bool Checkup
		{
			get
			{
				return this._Checkup;
			}
			set
			{
				if ((this._Checkup != value))
				{
					this._Checkup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDoResult", DbType="Bit NOT NULL")]
		public bool ToDoResult
		{
			get
			{
				return this._ToDoResult;
			}
			set
			{
				if ((this._ToDoResult != value))
				{
					this._ToDoResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surveillance", DbType="Bit NOT NULL")]
		public bool Surveillance
		{
			get
			{
				return this._Surveillance;
			}
			set
			{
				if ((this._Surveillance != value))
				{
					this._Surveillance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nursing", DbType="Bit NOT NULL")]
		public bool Nursing
		{
			get
			{
				return this._Nursing;
			}
			set
			{
				if ((this._Nursing != value))
				{
					this._Nursing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Optometry", DbType="Bit NOT NULL")]
		public bool Optometry
		{
			get
			{
				return this._Optometry;
			}
			set
			{
				if ((this._Optometry != value))
				{
					this._Optometry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audio", DbType="Bit NOT NULL")]
		public bool Audio
		{
			get
			{
				return this._Audio;
			}
			set
			{
				if ((this._Audio != value))
				{
					this._Audio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychology", DbType="Bit NOT NULL")]
		public bool Psychology
		{
			get
			{
				return this._Psychology;
			}
			set
			{
				if ((this._Psychology != value))
				{
					this._Psychology = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spirometry", DbType="Bit NOT NULL")]
		public bool Spirometry
		{
			get
			{
				return this._Spirometry;
			}
			set
			{
				if ((this._Spirometry != value))
				{
					this._Spirometry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarmfulFactor", DbType="Bit NOT NULL")]
		public bool HarmfulFactor
		{
			get
			{
				return this._HarmfulFactor;
			}
			set
			{
				if ((this._HarmfulFactor != value))
				{
					this._HarmfulFactor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTest", DbType="Bit NOT NULL")]
		public bool OtherTest
		{
			get
			{
				return this._OtherTest;
			}
			set
			{
				if ((this._OtherTest != value))
				{
					this._OtherTest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefName", DbType="NVarChar(500)")]
		public string DefName
		{
			get
			{
				return this._DefName;
			}
			set
			{
				if ((this._DefName != value))
				{
					this._DefName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
	}
	
	public partial class spu_groupQuestionResultVisitAudioResult
	{
		
		private System.Guid _VisitID;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<int> _Quest;
		
		private System.Guid _IDGroup;
		
		private string _ParentName;
		
		private int _IDint;
		
		private string _Expr1;
		
		public spu_groupQuestionResultVisitAudioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this._VisitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quest", DbType="Int")]
		public System.Nullable<int> Quest
		{
			get
			{
				return this._Quest;
			}
			set
			{
				if ((this._Quest != value))
				{
					this._Quest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGroup", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDGroup
		{
			get
			{
				return this._IDGroup;
			}
			set
			{
				if ((this._IDGroup != value))
				{
					this._IDGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(1000)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", DbType="Int NOT NULL")]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this._IDint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(1000)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
	}
	
	public partial class Spu_testResult
	{
		
		private System.Guid _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _AdmitDate;
		
		private string _اسپیرومتری;
		
		private string _اسکلتی_و_عضلانی__sign_;
		
		private string _اسکلتی_و_عضلانی__symptom_;
		
		private string _اعصاب_و_روان__sign_;
		
		private string _اعصاب_و_روان__symptom_;
		
		private string _پوست_و_مو_و_ناخن__sign_;
		
		private string _پوست_و_مو_و_ناخن__symptom_;
		
		private string _چشم__sign_;
		
		private string _چشم__symptom_;
		
		private string _دید_با_عینک;
		
		private string _دید_بدون_عینک;
		
		private string _دید_رنگی;
		
		private string _دید_نزدیک;
		
		private string _ریه__sign_;
		
		private string _ریه__symptom_;
		
		private string _سایر_موارد;
		
		private string _سر_و_گردن__sign_;
		
		private string _سر_و_گردن__symptom_;
		
		private string _سوالات_سوابق_شخصی;
		
		private string _سیستم_عصبی__sign_;
		
		private string _سیستم_عصبی__symptom_;
		
		private string _شکم_و_لگن__sign_;
		
		private string _شکم_و_لگن__symptom_;
		
		private string _عمومی__sign_;
		
		private string _عمومی__symptom_;
		
		private string _فرکانس_استخوان;
		
		private string _فرکانس_هوا;
		
		private string _قلب_و_عروق__sign_;
		
		private string _قلب_و_عروق__symptom_;
		
		private string _گوش_و_حلق_و_بینی_و_دهان__sign_;
		
		private string _گوش_و_حلق_و_بینی_و_دهان__symptom_;
		
		private string _نتایج;
		
		private string _کلیه_مجاری_ادراری_و_تناسلی__sign_;
		
		private string _کلیه_مجاری_ادراری_و_تناسلی__symptom_;
		
		public Spu_testResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(70)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(70)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_اسپیرومتری", DbType="NVarChar(500)")]
		public string اسپیرومتری
		{
			get
			{
				return this._اسپیرومتری;
			}
			set
			{
				if ((this._اسپیرومتری != value))
				{
					this._اسپیرومتری = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسکلتی و عضلانی (sign)]", Storage="_اسکلتی_و_عضلانی__sign_", DbType="NVarChar(500)")]
		public string اسکلتی_و_عضلانی__sign_
		{
			get
			{
				return this._اسکلتی_و_عضلانی__sign_;
			}
			set
			{
				if ((this._اسکلتی_و_عضلانی__sign_ != value))
				{
					this._اسکلتی_و_عضلانی__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسکلتی و عضلانی (symptom)]", Storage="_اسکلتی_و_عضلانی__symptom_", DbType="NVarChar(500)")]
		public string اسکلتی_و_عضلانی__symptom_
		{
			get
			{
				return this._اسکلتی_و_عضلانی__symptom_;
			}
			set
			{
				if ((this._اسکلتی_و_عضلانی__symptom_ != value))
				{
					this._اسکلتی_و_عضلانی__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اعصاب و روان (sign)]", Storage="_اعصاب_و_روان__sign_", DbType="NVarChar(500)")]
		public string اعصاب_و_روان__sign_
		{
			get
			{
				return this._اعصاب_و_روان__sign_;
			}
			set
			{
				if ((this._اعصاب_و_روان__sign_ != value))
				{
					this._اعصاب_و_روان__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اعصاب و روان (symptom)]", Storage="_اعصاب_و_روان__symptom_", DbType="NVarChar(500)")]
		public string اعصاب_و_روان__symptom_
		{
			get
			{
				return this._اعصاب_و_روان__symptom_;
			}
			set
			{
				if ((this._اعصاب_و_روان__symptom_ != value))
				{
					this._اعصاب_و_روان__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[پوست و مو و ناخن (sign)]", Storage="_پوست_و_مو_و_ناخن__sign_", DbType="NVarChar(500)")]
		public string پوست_و_مو_و_ناخن__sign_
		{
			get
			{
				return this._پوست_و_مو_و_ناخن__sign_;
			}
			set
			{
				if ((this._پوست_و_مو_و_ناخن__sign_ != value))
				{
					this._پوست_و_مو_و_ناخن__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[پوست و مو و ناخن (symptom)]", Storage="_پوست_و_مو_و_ناخن__symptom_", DbType="NVarChar(500)")]
		public string پوست_و_مو_و_ناخن__symptom_
		{
			get
			{
				return this._پوست_و_مو_و_ناخن__symptom_;
			}
			set
			{
				if ((this._پوست_و_مو_و_ناخن__symptom_ != value))
				{
					this._پوست_و_مو_و_ناخن__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[چشم (sign)]", Storage="_چشم__sign_", DbType="NVarChar(500)")]
		public string چشم__sign_
		{
			get
			{
				return this._چشم__sign_;
			}
			set
			{
				if ((this._چشم__sign_ != value))
				{
					this._چشم__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[چشم (symptom)]", Storage="_چشم__symptom_", DbType="NVarChar(500)")]
		public string چشم__symptom_
		{
			get
			{
				return this._چشم__symptom_;
			}
			set
			{
				if ((this._چشم__symptom_ != value))
				{
					this._چشم__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[دید با عینک]", Storage="_دید_با_عینک", DbType="NVarChar(500)")]
		public string دید_با_عینک
		{
			get
			{
				return this._دید_با_عینک;
			}
			set
			{
				if ((this._دید_با_عینک != value))
				{
					this._دید_با_عینک = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[دید بدون عینک]", Storage="_دید_بدون_عینک", DbType="NVarChar(500)")]
		public string دید_بدون_عینک
		{
			get
			{
				return this._دید_بدون_عینک;
			}
			set
			{
				if ((this._دید_بدون_عینک != value))
				{
					this._دید_بدون_عینک = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[دید رنگی]", Storage="_دید_رنگی", DbType="NVarChar(500)")]
		public string دید_رنگی
		{
			get
			{
				return this._دید_رنگی;
			}
			set
			{
				if ((this._دید_رنگی != value))
				{
					this._دید_رنگی = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[دید نزدیک]", Storage="_دید_نزدیک", DbType="NVarChar(500)")]
		public string دید_نزدیک
		{
			get
			{
				return this._دید_نزدیک;
			}
			set
			{
				if ((this._دید_نزدیک != value))
				{
					this._دید_نزدیک = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ریه (sign)]", Storage="_ریه__sign_", DbType="NVarChar(500)")]
		public string ریه__sign_
		{
			get
			{
				return this._ریه__sign_;
			}
			set
			{
				if ((this._ریه__sign_ != value))
				{
					this._ریه__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ریه (symptom)]", Storage="_ریه__symptom_", DbType="NVarChar(500)")]
		public string ریه__symptom_
		{
			get
			{
				return this._ریه__symptom_;
			}
			set
			{
				if ((this._ریه__symptom_ != value))
				{
					this._ریه__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سایر موارد]", Storage="_سایر_موارد", DbType="NVarChar(500)")]
		public string سایر_موارد
		{
			get
			{
				return this._سایر_موارد;
			}
			set
			{
				if ((this._سایر_موارد != value))
				{
					this._سایر_موارد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سر و گردن (sign)]", Storage="_سر_و_گردن__sign_", DbType="NVarChar(500)")]
		public string سر_و_گردن__sign_
		{
			get
			{
				return this._سر_و_گردن__sign_;
			}
			set
			{
				if ((this._سر_و_گردن__sign_ != value))
				{
					this._سر_و_گردن__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سر و گردن (symptom)]", Storage="_سر_و_گردن__symptom_", DbType="NVarChar(500)")]
		public string سر_و_گردن__symptom_
		{
			get
			{
				return this._سر_و_گردن__symptom_;
			}
			set
			{
				if ((this._سر_و_گردن__symptom_ != value))
				{
					this._سر_و_گردن__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سوالات سوابق شخصی]", Storage="_سوالات_سوابق_شخصی", DbType="NVarChar(500)")]
		public string سوالات_سوابق_شخصی
		{
			get
			{
				return this._سوالات_سوابق_شخصی;
			}
			set
			{
				if ((this._سوالات_سوابق_شخصی != value))
				{
					this._سوالات_سوابق_شخصی = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سیستم عصبی (sign)]", Storage="_سیستم_عصبی__sign_", DbType="NVarChar(500)")]
		public string سیستم_عصبی__sign_
		{
			get
			{
				return this._سیستم_عصبی__sign_;
			}
			set
			{
				if ((this._سیستم_عصبی__sign_ != value))
				{
					this._سیستم_عصبی__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سیستم عصبی (symptom)]", Storage="_سیستم_عصبی__symptom_", DbType="NVarChar(500)")]
		public string سیستم_عصبی__symptom_
		{
			get
			{
				return this._سیستم_عصبی__symptom_;
			}
			set
			{
				if ((this._سیستم_عصبی__symptom_ != value))
				{
					this._سیستم_عصبی__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[شکم و لگن (sign)]", Storage="_شکم_و_لگن__sign_", DbType="NVarChar(500)")]
		public string شکم_و_لگن__sign_
		{
			get
			{
				return this._شکم_و_لگن__sign_;
			}
			set
			{
				if ((this._شکم_و_لگن__sign_ != value))
				{
					this._شکم_و_لگن__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[شکم و لگن (symptom)]", Storage="_شکم_و_لگن__symptom_", DbType="NVarChar(500)")]
		public string شکم_و_لگن__symptom_
		{
			get
			{
				return this._شکم_و_لگن__symptom_;
			}
			set
			{
				if ((this._شکم_و_لگن__symptom_ != value))
				{
					this._شکم_و_لگن__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عمومی (sign)]", Storage="_عمومی__sign_", DbType="NVarChar(500)")]
		public string عمومی__sign_
		{
			get
			{
				return this._عمومی__sign_;
			}
			set
			{
				if ((this._عمومی__sign_ != value))
				{
					this._عمومی__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عمومی (symptom)]", Storage="_عمومی__symptom_", DbType="NVarChar(500)")]
		public string عمومی__symptom_
		{
			get
			{
				return this._عمومی__symptom_;
			}
			set
			{
				if ((this._عمومی__symptom_ != value))
				{
					this._عمومی__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فرکانس استخوان]", Storage="_فرکانس_استخوان", DbType="NVarChar(500)")]
		public string فرکانس_استخوان
		{
			get
			{
				return this._فرکانس_استخوان;
			}
			set
			{
				if ((this._فرکانس_استخوان != value))
				{
					this._فرکانس_استخوان = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فرکانس هوا]", Storage="_فرکانس_هوا", DbType="NVarChar(500)")]
		public string فرکانس_هوا
		{
			get
			{
				return this._فرکانس_هوا;
			}
			set
			{
				if ((this._فرکانس_هوا != value))
				{
					this._فرکانس_هوا = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[قلب و عروق (sign)]", Storage="_قلب_و_عروق__sign_", DbType="NVarChar(500)")]
		public string قلب_و_عروق__sign_
		{
			get
			{
				return this._قلب_و_عروق__sign_;
			}
			set
			{
				if ((this._قلب_و_عروق__sign_ != value))
				{
					this._قلب_و_عروق__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[قلب و عروق (symptom)]", Storage="_قلب_و_عروق__symptom_", DbType="NVarChar(500)")]
		public string قلب_و_عروق__symptom_
		{
			get
			{
				return this._قلب_و_عروق__symptom_;
			}
			set
			{
				if ((this._قلب_و_عروق__symptom_ != value))
				{
					this._قلب_و_عروق__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[گوش و حلق و بینی و دهان (sign)]", Storage="_گوش_و_حلق_و_بینی_و_دهان__sign_", DbType="NVarChar(500)")]
		public string گوش_و_حلق_و_بینی_و_دهان__sign_
		{
			get
			{
				return this._گوش_و_حلق_و_بینی_و_دهان__sign_;
			}
			set
			{
				if ((this._گوش_و_حلق_و_بینی_و_دهان__sign_ != value))
				{
					this._گوش_و_حلق_و_بینی_و_دهان__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[گوش و حلق و بینی و دهان (symptom)]", Storage="_گوش_و_حلق_و_بینی_و_دهان__symptom_", DbType="NVarChar(500)")]
		public string گوش_و_حلق_و_بینی_و_دهان__symptom_
		{
			get
			{
				return this._گوش_و_حلق_و_بینی_و_دهان__symptom_;
			}
			set
			{
				if ((this._گوش_و_حلق_و_بینی_و_دهان__symptom_ != value))
				{
					this._گوش_و_حلق_و_بینی_و_دهان__symptom_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_نتایج", DbType="NVarChar(500)")]
		public string نتایج
		{
			get
			{
				return this._نتایج;
			}
			set
			{
				if ((this._نتایج != value))
				{
					this._نتایج = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[کلیه مجاری ادراری و تناسلی (sign)]", Storage="_کلیه_مجاری_ادراری_و_تناسلی__sign_", DbType="NVarChar(500)")]
		public string کلیه_مجاری_ادراری_و_تناسلی__sign_
		{
			get
			{
				return this._کلیه_مجاری_ادراری_و_تناسلی__sign_;
			}
			set
			{
				if ((this._کلیه_مجاری_ادراری_و_تناسلی__sign_ != value))
				{
					this._کلیه_مجاری_ادراری_و_تناسلی__sign_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[کلیه مجاری ادراری و تناسلی (symptom)]", Storage="_کلیه_مجاری_ادراری_و_تناسلی__symptom_", DbType="NVarChar(500)")]
		public string کلیه_مجاری_ادراری_و_تناسلی__symptom_
		{
			get
			{
				return this._کلیه_مجاری_ادراری_و_تناسلی__symptom_;
			}
			set
			{
				if ((this._کلیه_مجاری_ادراری_و_تناسلی__symptom_ != value))
				{
					this._کلیه_مجاری_ادراری_و_تناسلی__symptom_ = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
