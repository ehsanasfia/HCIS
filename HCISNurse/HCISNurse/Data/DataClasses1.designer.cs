#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCISNurse.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCIS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPatternD(PatternD instance);
    partial void UpdatePatternD(PatternD instance);
    partial void DeletePatternD(PatternD instance);
    partial void InsertPatternM(PatternM instance);
    partial void UpdatePatternM(PatternM instance);
    partial void DeletePatternM(PatternM instance);
    partial void InsertDrugAllergy(DrugAllergy instance);
    partial void UpdateDrugAllergy(DrugAllergy instance);
    partial void DeleteDrugAllergy(DrugAllergy instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertDrugHistory(DrugHistory instance);
    partial void UpdateDrugHistory(DrugHistory instance);
    partial void DeleteDrugHistory(DrugHistory instance);
    partial void InsertQA(QA instance);
    partial void UpdateQA(QA instance);
    partial void DeleteQA(QA instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertServiceCategory(ServiceCategory instance);
    partial void UpdateServiceCategory(ServiceCategory instance);
    partial void DeleteServiceCategory(ServiceCategory instance);
    partial void InsertInsurance(Insurance instance);
    partial void UpdateInsurance(Insurance instance);
    partial void DeleteInsurance(Insurance instance);
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    partial void InsertTariff(Tariff instance);
    partial void UpdateTariff(Tariff instance);
    partial void DeleteTariff(Tariff instance);
    partial void InsertDoctorInsurance(DoctorInsurance instance);
    partial void UpdateDoctorInsurance(DoctorInsurance instance);
    partial void DeleteDoctorInsurance(DoctorInsurance instance);
    partial void InsertPharmacy(Pharmacy instance);
    partial void UpdatePharmacy(Pharmacy instance);
    partial void DeletePharmacy(Pharmacy instance);
    partial void InsertPharmacyDrug(PharmacyDrug instance);
    partial void UpdatePharmacyDrug(PharmacyDrug instance);
    partial void DeletePharmacyDrug(PharmacyDrug instance);
    partial void InsertMedicalRecord(MedicalRecord instance);
    partial void UpdateMedicalRecord(MedicalRecord instance);
    partial void DeleteMedicalRecord(MedicalRecord instance);
    partial void InsertSpecialDisease(SpecialDisease instance);
    partial void UpdateSpecialDisease(SpecialDisease instance);
    partial void DeleteSpecialDisease(SpecialDisease instance);
    partial void InsertPersonDisease(PersonDisease instance);
    partial void UpdatePersonDisease(PersonDisease instance);
    partial void DeletePersonDisease(PersonDisease instance);
    partial void InsertGivenServiceD(GivenServiceD instance);
    partial void UpdateGivenServiceD(GivenServiceD instance);
    partial void DeleteGivenServiceD(GivenServiceD instance);
    partial void InsertRequestD(RequestD instance);
    partial void UpdateRequestD(RequestD instance);
    partial void DeleteRequestD(RequestD instance);
    partial void InsertRequestM(RequestM instance);
    partial void UpdateRequestM(RequestM instance);
    partial void DeleteRequestM(RequestM instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertDrugAllergy1(DrugAllergy1 instance);
    partial void UpdateDrugAllergy1(DrugAllergy1 instance);
    partial void DeleteDrugAllergy1(DrugAllergy1 instance);
    partial void InsertDrugHistory1(DrugHistory1 instance);
    partial void UpdateDrugHistory1(DrugHistory1 instance);
    partial void DeleteDrugHistory1(DrugHistory1 instance);
    partial void InsertPersonDisease1(PersonDisease1 instance);
    partial void UpdatePersonDisease1(PersonDisease1 instance);
    partial void DeletePersonDisease1(PersonDisease1 instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertTriage(Triage instance);
    partial void UpdateTriage(Triage instance);
    partial void DeleteTriage(Triage instance);
    partial void InsertTriageCPR(TriageCPR instance);
    partial void UpdateTriageCPR(TriageCPR instance);
    partial void DeleteTriageCPR(TriageCPR instance);
    partial void InsertTriageCPRType(TriageCPRType instance);
    partial void UpdateTriageCPRType(TriageCPRType instance);
    partial void DeleteTriageCPRType(TriageCPRType instance);
    partial void InsertTriageDossierEM(TriageDossierEM instance);
    partial void UpdateTriageDossierEM(TriageDossierEM instance);
    partial void DeleteTriageDossierEM(TriageDossierEM instance);
    partial void InsertTriageEMGAccident(TriageEMGAccident instance);
    partial void UpdateTriageEMGAccident(TriageEMGAccident instance);
    partial void DeleteTriageEMGAccident(TriageEMGAccident instance);
    partial void InsertTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void UpdateTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void DeleteTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void InsertTriageEMGincident(TriageEMGincident instance);
    partial void UpdateTriageEMGincident(TriageEMGincident instance);
    partial void DeleteTriageEMGincident(TriageEMGincident instance);
    partial void InsertTriageEMGkhodkoshi(TriageEMGkhodkoshi instance);
    partial void UpdateTriageEMGkhodkoshi(TriageEMGkhodkoshi instance);
    partial void DeleteTriageEMGkhodkoshi(TriageEMGkhodkoshi instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertRecall(Recall instance);
    partial void UpdateRecall(Recall instance);
    partial void DeleteRecall(Recall instance);
    partial void InsertGivenServiceM(GivenServiceM instance);
    partial void UpdateGivenServiceM(GivenServiceM instance);
    partial void DeleteGivenServiceM(GivenServiceM instance);
    partial void InsertScreening(Screening instance);
    partial void UpdateScreening(Screening instance);
    partial void DeleteScreening(Screening instance);
    partial void InsertScreeningItem(ScreeningItem instance);
    partial void UpdateScreeningItem(ScreeningItem instance);
    partial void DeleteScreeningItem(ScreeningItem instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::HCISNurse.Properties.Settings.Default.HCISConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PatternD> PatternDs
		{
			get
			{
				return this.GetTable<PatternD>();
			}
		}
		
		public System.Data.Linq.Table<PatternM> PatternMs
		{
			get
			{
				return this.GetTable<PatternM>();
			}
		}
		
		public System.Data.Linq.Table<DrugAllergy> DrugAllergies
		{
			get
			{
				return this.GetTable<DrugAllergy>();
			}
		}
		
		public System.Data.Linq.Table<PcaseView> PcaseViews
		{
			get
			{
				return this.GetTable<PcaseView>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<DrugHistory> DrugHistories
		{
			get
			{
				return this.GetTable<DrugHistory>();
			}
		}
		
		public System.Data.Linq.Table<VwDrugHistoryUnion> VwDrugHistoryUnions
		{
			get
			{
				return this.GetTable<VwDrugHistoryUnion>();
			}
		}
		
		public System.Data.Linq.Table<QA> QAs
		{
			get
			{
				return this.GetTable<QA>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCategory> ServiceCategories
		{
			get
			{
				return this.GetTable<ServiceCategory>();
			}
		}
		
		public System.Data.Linq.Table<Insurance> Insurances
		{
			get
			{
				return this.GetTable<Insurance>();
			}
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
		
		public System.Data.Linq.Table<Tariff> Tariffs
		{
			get
			{
				return this.GetTable<Tariff>();
			}
		}
		
		public System.Data.Linq.Table<DoctorInsurance> DoctorInsurances
		{
			get
			{
				return this.GetTable<DoctorInsurance>();
			}
		}
		
		public System.Data.Linq.Table<Pharmacy> Pharmacies
		{
			get
			{
				return this.GetTable<Pharmacy>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this.GetTable<PharmacyDrug>();
			}
		}
		
		public System.Data.Linq.Table<VwPersonsCompany> VwPersonsCompanies
		{
			get
			{
				return this.GetTable<VwPersonsCompany>();
			}
		}
		
		public System.Data.Linq.Table<MedicalRecord> MedicalRecords
		{
			get
			{
				return this.GetTable<MedicalRecord>();
			}
		}
		
		public System.Data.Linq.Table<SpecialDisease> SpecialDiseases
		{
			get
			{
				return this.GetTable<SpecialDisease>();
			}
		}
		
		public System.Data.Linq.Table<PersonDisease> PersonDiseases
		{
			get
			{
				return this.GetTable<PersonDisease>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this.GetTable<GivenServiceD>();
			}
		}
		
		public System.Data.Linq.Table<RequestD> RequestDs
		{
			get
			{
				return this.GetTable<RequestD>();
			}
		}
		
		public System.Data.Linq.Table<RequestM> RequestMs
		{
			get
			{
				return this.GetTable<RequestM>();
			}
		}
		
		public System.Data.Linq.Table<ViewConsumer> ViewConsumers
		{
			get
			{
				return this.GetTable<ViewConsumer>();
			}
		}
		
		public System.Data.Linq.Table<FileExcel> FileExcels
		{
			get
			{
				return this.GetTable<FileExcel>();
			}
		}
		
		public System.Data.Linq.Table<Vw_NurceCountCategory> Vw_NurceCountCategories
		{
			get
			{
				return this.GetTable<Vw_NurceCountCategory>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<DrugAllergy1> DrugAllergy1s
		{
			get
			{
				return this.GetTable<DrugAllergy1>();
			}
		}
		
		public System.Data.Linq.Table<DrugHistory1> DrugHistory1s
		{
			get
			{
				return this.GetTable<DrugHistory1>();
			}
		}
		
		public System.Data.Linq.Table<PersonDisease1> PersonDisease1s
		{
			get
			{
				return this.GetTable<PersonDisease1>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Triage> Triages
		{
			get
			{
				return this.GetTable<Triage>();
			}
		}
		
		public System.Data.Linq.Table<TriageCPR> TriageCPRs
		{
			get
			{
				return this.GetTable<TriageCPR>();
			}
		}
		
		public System.Data.Linq.Table<TriageCPRType> TriageCPRTypes
		{
			get
			{
				return this.GetTable<TriageCPRType>();
			}
		}
		
		public System.Data.Linq.Table<TriageDossierEM> TriageDossierEMs
		{
			get
			{
				return this.GetTable<TriageDossierEM>();
			}
		}
		
		public System.Data.Linq.Table<TriageEMGAccident> TriageEMGAccidents
		{
			get
			{
				return this.GetTable<TriageEMGAccident>();
			}
		}
		
		public System.Data.Linq.Table<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this.GetTable<TriageEmergencyCPR>();
			}
		}
		
		public System.Data.Linq.Table<TriageEMGincident> TriageEMGincidents
		{
			get
			{
				return this.GetTable<TriageEMGincident>();
			}
		}
		
		public System.Data.Linq.Table<TriageEMGkhodkoshi> TriageEMGkhodkoshis
		{
			get
			{
				return this.GetTable<TriageEMGkhodkoshi>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossiers
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<Vw_FamilyDoctorRpt> Vw_FamilyDoctorRpts
		{
			get
			{
				return this.GetTable<Vw_FamilyDoctorRpt>();
			}
		}
		
		public System.Data.Linq.Table<Recall> Recalls
		{
			get
			{
				return this.GetTable<Recall>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this.GetTable<GivenServiceM>();
			}
		}
		
		public System.Data.Linq.Table<Screening> Screenings
		{
			get
			{
				return this.GetTable<Screening>();
			}
		}
		
		public System.Data.Linq.Table<ScreeningItem> ScreeningItems
		{
			get
			{
				return this.GetTable<ScreeningItem>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Vw_CareGSD> Vw_CareGSDs
		{
			get
			{
				return this.GetTable<Vw_CareGSD>();
			}
		}
		
		public System.Data.Linq.Table<Vw_CareGSM> Vw_CareGSMs
		{
			get
			{
				return this.GetTable<Vw_CareGSM>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExtendedSearch")]
		public ISingleResult<ExtendedSearchResult> ExtendedSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FatherName", DbType="NVarChar(50)")] string fatherName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identity", DbType="NVarChar(10)")] string identity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonalCode", DbType="NVarChar(10)")] string personalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode, firstName, lastName, fatherName, identity, personalCode);
			return ((ISingleResult<ExtendedSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_DiagnosticService_History")]
		public ISingleResult<Spu_DiagnosticService_HistoryResult> Spu_DiagnosticService_History([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NAtionalCode", DbType="NVarChar(10)")] string nAtionalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nAtionalCode);
			return ((ISingleResult<Spu_DiagnosticService_HistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_DrugHistory")]
		public ISingleResult<Spu_DrugHistoryResult> Spu_DrugHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Spu_DrugHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_FullLabHistory")]
		public ISingleResult<Spu_FullLabHistoryResult> Spu_FullLabHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Spu_FullLabHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_VisitsHistory")]
		public ISingleResult<Spu_VisitsHistoryResult> Spu_VisitsHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Spu_VisitsHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_DentistHistory")]
		public ISingleResult<Spu_DentistHistoryResult> Spu_DentistHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Spu_DentistHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_AllDBPerson")]
		public ISingleResult<Spu_AllDBPersonResult> Spu_AllDBPerson([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonnelNo", DbType="NVarChar(25)")] string personnelNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personnelNo, nationalCode);
			return ((ISingleResult<Spu_AllDBPersonResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternD")]
	public partial class PatternD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PatternMID;
		
		private System.Nullable<System.Guid> _ServiceDID;
		
		private double _Amount;
		
		private EntityRef<PatternM> _PatternM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternMIDChanging(System.Nullable<int> value);
    partial void OnPatternMIDChanged();
    partial void OnServiceDIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceDIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public PatternD()
		{
			this._PatternM = default(EntityRef<PatternM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternMID", DbType="Int")]
		public System.Nullable<int> PatternMID
		{
			get
			{
				return this._PatternMID;
			}
			set
			{
				if ((this._PatternMID != value))
				{
					if (this._PatternM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternMIDChanging(value);
					this.SendPropertyChanging();
					this._PatternMID = value;
					this.SendPropertyChanged("PatternMID");
					this.OnPatternMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceDID
		{
			get
			{
				return this._ServiceDID;
			}
			set
			{
				if ((this._ServiceDID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceDIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceDID = value;
					this.SendPropertyChanged("ServiceDID");
					this.OnServiceDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternM", ThisKey="PatternMID", OtherKey="ID", IsForeignKey=true)]
		public PatternM PatternM
		{
			get
			{
				return this._PatternM.Entity;
			}
			set
			{
				PatternM previousValue = this._PatternM.Entity;
				if (((previousValue != value) 
							|| (this._PatternM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatternM.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._PatternM.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._PatternMID = value.ID;
					}
					else
					{
						this._PatternMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatternM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_Service", ThisKey="ServiceDID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._ServiceDID = value.ID;
					}
					else
					{
						this._ServiceDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternM")]
	public partial class PatternM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PatternNumber;
		
		private string _PatternName;
		
		private System.Nullable<System.Guid> _ServiceMID;
		
		private string _Date;
		
		private string _Time;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternNumberChanging(int value);
    partial void OnPatternNumberChanged();
    partial void OnPatternNameChanging(string value);
    partial void OnPatternNameChanged();
    partial void OnServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceMIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public PatternM()
		{
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternNumber", DbType="Int NOT NULL")]
		public int PatternNumber
		{
			get
			{
				return this._PatternNumber;
			}
			set
			{
				if ((this._PatternNumber != value))
				{
					this.OnPatternNumberChanging(value);
					this.SendPropertyChanging();
					this._PatternNumber = value;
					this.SendPropertyChanged("PatternNumber");
					this.OnPatternNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternName", DbType="NVarChar(100)")]
		public string PatternName
		{
			get
			{
				return this._PatternName;
			}
			set
			{
				if ((this._PatternName != value))
				{
					this.OnPatternNameChanging(value);
					this.SendPropertyChanging();
					this._PatternName = value;
					this.SendPropertyChanged("PatternName");
					this.OnPatternNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceMID
		{
			get
			{
				return this._ServiceMID;
			}
			set
			{
				if ((this._ServiceMID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceMID = value;
					this.SendPropertyChanged("ServiceMID");
					this.OnServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="PatternMID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_Service", ThisKey="ServiceMID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternMs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternMs.Add(this);
						this._ServiceMID = value.ID;
					}
					else
					{
						this._ServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugAllergy")]
	public partial class DrugAllergy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public DrugAllergy()
		{
			this._Service = default(EntityRef<Service>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugAllergies.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugAllergies.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugAllergies.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugAllergies.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PcaseView")]
	public partial class PcaseView
	{
		
		private string _Pfirstname;
		
		private string _PlastName;
		
		private string _NationalCode;
		
		private string _Category;
		
		private string _Name;
		
		private string _Date;
		
		private string _Comment;
		
		private string _ChiefComplaint;
		
		private string _Ago;
		
		private System.Nullable<short> _Since;
		
		private string _DfirstName;
		
		private string _DlastName;
		
		private string _Speciality;
		
		private System.Guid _ServiceID;
		
		private int _CatID;
		
		private System.Guid _GsmID;
		
		private string _FName;
		
		private string _Result;
		
		private string _NormalRange;
		
		private double _Amount;
		
		private string _DiagResult;
		
		public PcaseView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pfirstname", DbType="NVarChar(100)")]
		public string Pfirstname
		{
			get
			{
				return this._Pfirstname;
			}
			set
			{
				if ((this._Pfirstname != value))
				{
					this._Pfirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlastName", DbType="NVarChar(100)")]
		public string PlastName
		{
			get
			{
				return this._PlastName;
			}
			set
			{
				if ((this._PlastName != value))
				{
					this._PlastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefComplaint", DbType="NVarChar(100)")]
		public string ChiefComplaint
		{
			get
			{
				return this._ChiefComplaint;
			}
			set
			{
				if ((this._ChiefComplaint != value))
				{
					this._ChiefComplaint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NVarChar(10)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this._Ago = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="SmallInt")]
		public System.Nullable<short> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this._Since = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DfirstName", DbType="NVarChar(100)")]
		public string DfirstName
		{
			get
			{
				return this._DfirstName;
			}
			set
			{
				if ((this._DfirstName != value))
				{
					this._DfirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlastName", DbType="NVarChar(100)")]
		public string DlastName
		{
			get
			{
				return this._DlastName;
			}
			set
			{
				if ((this._DlastName != value))
				{
					this._DlastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatID", DbType="Int NOT NULL")]
		public int CatID
		{
			get
			{
				return this._CatID;
			}
			set
			{
				if ((this._CatID != value))
				{
					this._CatID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GsmID
		{
			get
			{
				return this._GsmID;
			}
			set
			{
				if ((this._GsmID != value))
				{
					this._GsmID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(1000)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this._FName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(100)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this._NormalRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiagResult", DbType="NVarChar(MAX)")]
		public string DiagResult
		{
			get
			{
				return this._DiagResult;
			}
			set
			{
				if ((this._DiagResult != value))
				{
					this._DiagResult = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Speciality1;
		
		private System.Nullable<int> _HeadUserID;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    partial void OnHeadUserIDChanging(System.Nullable<int> value);
    partial void OnHeadUserIDChanged();
    #endregion
		
		public Speciality()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadUserID", DbType="Int")]
		public System.Nullable<int> HeadUserID
		{
			get
			{
				return this._HeadUserID;
			}
			set
			{
				if ((this._HeadUserID != value))
				{
					this.OnHeadUserIDChanging(value);
					this.SendPropertyChanging();
					this._HeadUserID = value;
					this.SendPropertyChanged("HeadUserID");
					this.OnHeadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Services", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private string _RoomNumber;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<DoctorInsurance> _DoctorInsurances;
		
		private EntitySet<Pharmacy> _Pharmacies;
		
		private EntitySet<PersonDisease> _PersonDiseases;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<PersonDisease1> _PersonDisease1s;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<TriageCPR> _TriageCPRs;
		
		private EntitySet<TriageCPR> _TriageCPRs1;
		
		private EntitySet<TriageCPR> _TriageCPRs2;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs2;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    #endregion
		
		public Staff()
		{
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._DoctorInsurances = new EntitySet<DoctorInsurance>(new Action<DoctorInsurance>(this.attach_DoctorInsurances), new Action<DoctorInsurance>(this.detach_DoctorInsurances));
			this._Pharmacies = new EntitySet<Pharmacy>(new Action<Pharmacy>(this.attach_Pharmacies), new Action<Pharmacy>(this.detach_Pharmacies));
			this._PersonDiseases = new EntitySet<PersonDisease>(new Action<PersonDisease>(this.attach_PersonDiseases), new Action<PersonDisease>(this.detach_PersonDiseases));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._PersonDisease1s = new EntitySet<PersonDisease1>(new Action<PersonDisease1>(this.attach_PersonDisease1s), new Action<PersonDisease1>(this.detach_PersonDisease1s));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._TriageCPRs = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs), new Action<TriageCPR>(this.detach_TriageCPRs));
			this._TriageCPRs1 = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs1), new Action<TriageCPR>(this.detach_TriageCPRs1));
			this._TriageCPRs2 = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs2), new Action<TriageCPR>(this.detach_TriageCPRs2));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._GivenServiceMs2 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs2), new Action<GivenServiceM>(this.detach_GivenServiceMs2));
			this._Speciality = default(EntityRef<Speciality>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(200)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_References", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorInsurance", Storage="_DoctorInsurances", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<DoctorInsurance> DoctorInsurances
		{
			get
			{
				return this._DoctorInsurances;
			}
			set
			{
				this._DoctorInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Pharmacy", Storage="_Pharmacies", ThisKey="ID", OtherKey="TechnicalID")]
		public EntitySet<Pharmacy> Pharmacies
		{
			get
			{
				return this._Pharmacies;
			}
			set
			{
				this._Pharmacies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PersonDisease", Storage="_PersonDiseases", ThisKey="ID", OtherKey="DoctorDiagnostic")]
		public EntitySet<PersonDisease> PersonDiseases
		{
			get
			{
				return this._PersonDiseases;
			}
			set
			{
				this._PersonDiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PersonDisease1", Storage="_PersonDisease1s", ThisKey="ID", OtherKey="DoctorDiagnostic")]
		public EntitySet<PersonDisease1> PersonDisease1s
		{
			get
			{
				return this._PersonDisease1s;
			}
			set
			{
				this._PersonDisease1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Payment", Storage="_Payments", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR", Storage="_TriageCPRs", ThisKey="ID", OtherKey="IDStaffpresent")]
		public EntitySet<TriageCPR> TriageCPRs
		{
			get
			{
				return this._TriageCPRs;
			}
			set
			{
				this._TriageCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR1", Storage="_TriageCPRs1", ThisKey="ID", OtherKey="IDStaffAnesthesia")]
		public EntitySet<TriageCPR> TriageCPRs1
		{
			get
			{
				return this._TriageCPRs1;
			}
			set
			{
				this._TriageCPRs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR2", Storage="_TriageCPRs2", ThisKey="ID", OtherKey="IDStaffpresent")]
		public EntitySet<TriageCPR> TriageCPRs2
		{
			get
			{
				return this._TriageCPRs2;
			}
			set
			{
				this._TriageCPRs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="StaffCure")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_GivenServiceMs2", ThisKey="ID", OtherKey="TechnicianID")]
		public EntitySet<GivenServiceM> GivenServiceMs2
		{
			get
			{
				return this._GivenServiceMs2;
			}
			set
			{
				this._GivenServiceMs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Pharmacies(Pharmacy entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Pharmacies(Pharmacy entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_PersonDisease1s(PersonDisease1 entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_PersonDisease1s(PersonDisease1 entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_TriageCPRs1(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_TriageCPRs1(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_TriageCPRs2(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_TriageCPRs2(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugHistory")]
	public partial class DrugHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<double> _Amount;
		
		private string _Dosage;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDosageChanging(string value);
    partial void OnDosageChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public DrugHistory()
		{
			this._Service = default(EntityRef<Service>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dosage", DbType="NVarChar(100)")]
		public string Dosage
		{
			get
			{
				return this._Dosage;
			}
			set
			{
				if ((this._Dosage != value))
				{
					this.OnDosageChanging(value);
					this.SendPropertyChanging();
					this._Dosage = value;
					this.SendPropertyChanged("Dosage");
					this.OnDosageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(100)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugHistories.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugHistories.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwDrugHistoryUnion")]
	public partial class VwDrugHistoryUnion
	{
		
		private string _NationalCode;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Name;
		
		private string _Doc;
		
		public VwDrugHistoryUnion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Doc
		{
			get
			{
				return this._Doc;
			}
			set
			{
				if ((this._Doc != value))
				{
					this._Doc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QA")]
	public partial class QA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDGivenServiceM;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _QuestionnariID;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGivenServiceMChanging(System.Nullable<System.Guid> value);
    partial void OnIDGivenServiceMChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnQuestionnariIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnariIDChanged();
    partial void OnResultNChanging(System.Nullable<int> value);
    partial void OnResultNChanged();
    partial void OnResultCHKChanging(System.Nullable<bool> value);
    partial void OnResultCHKChanged();
    partial void OnMResultChanging(string value);
    partial void OnMResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    #endregion
		
		public QA()
		{
			this._Service = default(EntityRef<Service>);
			this._Service1 = default(EntityRef<Service>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGivenServiceM", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGivenServiceM
		{
			get
			{
				return this._IDGivenServiceM;
			}
			set
			{
				if ((this._IDGivenServiceM != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGivenServiceMChanging(value);
					this.SendPropertyChanging();
					this._IDGivenServiceM = value;
					this.SendPropertyChanged("IDGivenServiceM");
					this.OnIDGivenServiceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnariID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnariID
		{
			get
			{
				return this._QuestionnariID;
			}
			set
			{
				if ((this._QuestionnariID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnariIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnariID = value;
					this.SendPropertyChanged("QuestionnariID");
					this.OnQuestionnariIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this.OnResultNChanging(value);
					this.SendPropertyChanging();
					this._ResultN = value;
					this.SendPropertyChanged("ResultN");
					this.OnResultNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this.OnResultCHKChanging(value);
					this.SendPropertyChanging();
					this._ResultCHK = value;
					this.SendPropertyChanged("ResultCHK");
					this.OnResultCHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this.OnMResultChanging(value);
					this.SendPropertyChanging();
					this._MResult = value;
					this.SendPropertyChanged("MResult");
					this.OnMResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_Service", ThisKey="QuestionnariID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._QuestionnariID = value.ID;
					}
					else
					{
						this._QuestionnariID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.QAs1.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.QAs1.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_GivenServiceM", ThisKey="IDGivenServiceM", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._IDGivenServiceM = value.ID;
					}
					else
					{
						this._IDGivenServiceM = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private bool _Priority;
		
		private System.Nullable<System.Guid> _DestinationWard;
		
		private string _SuggestedDate;
		
		private string _SuggestedTime;
		
		private string _StartDateLicense;
		
		private string _EndDateLicense;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private int _AdmitDateCount;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnDestinationWardChanging(System.Nullable<System.Guid> value);
    partial void OnDestinationWardChanged();
    partial void OnSuggestedDateChanging(string value);
    partial void OnSuggestedDateChanged();
    partial void OnSuggestedTimeChanging(string value);
    partial void OnSuggestedTimeChanged();
    partial void OnStartDateLicenseChanging(string value);
    partial void OnStartDateLicenseChanged();
    partial void OnEndDateLicenseChanging(string value);
    partial void OnEndDateLicenseChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnAdmitDateCountChanging(int value);
    partial void OnAdmitDateCountChanged();
    #endregion
		
		public Reference()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Staff = default(EntityRef<Staff>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationWard", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DestinationWard
		{
			get
			{
				return this._DestinationWard;
			}
			set
			{
				if ((this._DestinationWard != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationWardChanging(value);
					this.SendPropertyChanging();
					this._DestinationWard = value;
					this.SendPropertyChanged("DestinationWard");
					this.OnDestinationWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedDate", DbType="NVarChar(10)")]
		public string SuggestedDate
		{
			get
			{
				return this._SuggestedDate;
			}
			set
			{
				if ((this._SuggestedDate != value))
				{
					this.OnSuggestedDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestedDate = value;
					this.SendPropertyChanged("SuggestedDate");
					this.OnSuggestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedTime", DbType="NVarChar(8)")]
		public string SuggestedTime
		{
			get
			{
				return this._SuggestedTime;
			}
			set
			{
				if ((this._SuggestedTime != value))
				{
					this.OnSuggestedTimeChanging(value);
					this.SendPropertyChanging();
					this._SuggestedTime = value;
					this.SendPropertyChanged("SuggestedTime");
					this.OnSuggestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateLicense", DbType="NVarChar(10)")]
		public string StartDateLicense
		{
			get
			{
				return this._StartDateLicense;
			}
			set
			{
				if ((this._StartDateLicense != value))
				{
					this.OnStartDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._StartDateLicense = value;
					this.SendPropertyChanged("StartDateLicense");
					this.OnStartDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateLicense", DbType="NVarChar(10)")]
		public string EndDateLicense
		{
			get
			{
				return this._EndDateLicense;
			}
			set
			{
				if ((this._EndDateLicense != value))
				{
					this.OnEndDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._EndDateLicense = value;
					this.SendPropertyChanged("EndDateLicense");
					this.OnEndDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDateCount", DbType="Int NOT NULL")]
		public int AdmitDateCount
		{
			get
			{
				return this._AdmitDateCount;
			}
			set
			{
				if ((this._AdmitDateCount != value))
				{
					this.OnAdmitDateCountChanging(value);
					this.SendPropertyChanging();
					this._AdmitDateCount = value;
					this.SendPropertyChanged("AdmitDateCount");
					this.OnAdmitDateCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RefrenceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.References.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_Department", ThisKey="DestinationWard", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._DestinationWard = value.ID;
					}
					else
					{
						this._DestinationWard = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_Department1", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.References1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.References1.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCategory")]
	public partial class ServiceCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ServiceCategory()
		{
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_Services", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ServiceCategoryID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurance")]
	public partial class Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Name;
		
		private System.Nullable<bool> _HasContract;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<DoctorInsurance> _DoctorInsurances;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasContractChanging(System.Nullable<bool> value);
    partial void OnHasContractChanged();
    #endregion
		
		public Insurance()
		{
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._DoctorInsurances = new EntitySet<DoctorInsurance>(new Action<DoctorInsurance>(this.attach_DoctorInsurances), new Action<DoctorInsurance>(this.detach_DoctorInsurances));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContract", DbType="Bit")]
		public System.Nullable<bool> HasContract
		{
			get
			{
				return this._HasContract;
			}
			set
			{
				if ((this._HasContract != value))
				{
					this.OnHasContractChanging(value);
					this.SendPropertyChanging();
					this._HasContract = value;
					this.SendPropertyChanged("HasContract");
					this.OnHasContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_DoctorInsurance", Storage="_DoctorInsurances", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<DoctorInsurance> DoctorInsurances
		{
			get
			{
				return this._DoctorInsurances;
			}
			set
			{
				this._DoctorInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="XInsuranceID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PeriodicCalenderID;
		
		private System.Guid _StaffID;
		
		private int _ShiftID;
		
		private string _Date;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _GivenCapacity;
		
		private System.Nullable<int> _InaccessibleCapacity;
		
		private System.Nullable<int> _GivenInaccessible;
		
		private System.Nullable<int> _GivenDispatch;
		
		private System.Nullable<int> _DispatchCapacity;
		
		private string _BeginTime;
		
		private string _EndTime;
		
		private string _Comment;
		
		private System.Guid _DepartmentID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPeriodicCalenderIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalenderIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnGivenCapacityChanging(System.Nullable<int> value);
    partial void OnGivenCapacityChanged();
    partial void OnInaccessibleCapacityChanging(System.Nullable<int> value);
    partial void OnInaccessibleCapacityChanged();
    partial void OnGivenInaccessibleChanging(System.Nullable<int> value);
    partial void OnGivenInaccessibleChanged();
    partial void OnGivenDispatchChanging(System.Nullable<int> value);
    partial void OnGivenDispatchChanged();
    partial void OnDispatchCapacityChanging(System.Nullable<int> value);
    partial void OnDispatchCapacityChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public Agenda()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Staff = default(EntityRef<Staff>);
			this._Service = default(EntityRef<Service>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalenderID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalenderID
		{
			get
			{
				return this._PeriodicCalenderID;
			}
			set
			{
				if ((this._PeriodicCalenderID != value))
				{
					this.OnPeriodicCalenderIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalenderID = value;
					this.SendPropertyChanged("PeriodicCalenderID");
					this.OnPeriodicCalenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenCapacity", DbType="Int")]
		public System.Nullable<int> GivenCapacity
		{
			get
			{
				return this._GivenCapacity;
			}
			set
			{
				if ((this._GivenCapacity != value))
				{
					this.OnGivenCapacityChanging(value);
					this.SendPropertyChanging();
					this._GivenCapacity = value;
					this.SendPropertyChanged("GivenCapacity");
					this.OnGivenCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InaccessibleCapacity", DbType="Int")]
		public System.Nullable<int> InaccessibleCapacity
		{
			get
			{
				return this._InaccessibleCapacity;
			}
			set
			{
				if ((this._InaccessibleCapacity != value))
				{
					this.OnInaccessibleCapacityChanging(value);
					this.SendPropertyChanging();
					this._InaccessibleCapacity = value;
					this.SendPropertyChanged("InaccessibleCapacity");
					this.OnInaccessibleCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenInaccessible", DbType="Int")]
		public System.Nullable<int> GivenInaccessible
		{
			get
			{
				return this._GivenInaccessible;
			}
			set
			{
				if ((this._GivenInaccessible != value))
				{
					this.OnGivenInaccessibleChanging(value);
					this.SendPropertyChanging();
					this._GivenInaccessible = value;
					this.SendPropertyChanged("GivenInaccessible");
					this.OnGivenInaccessibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenDispatch", DbType="Int")]
		public System.Nullable<int> GivenDispatch
		{
			get
			{
				return this._GivenDispatch;
			}
			set
			{
				if ((this._GivenDispatch != value))
				{
					this.OnGivenDispatchChanging(value);
					this.SendPropertyChanging();
					this._GivenDispatch = value;
					this.SendPropertyChanged("GivenDispatch");
					this.OnGivenDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchCapacity", DbType="Int")]
		public System.Nullable<int> DispatchCapacity
		{
			get
			{
				return this._DispatchCapacity;
			}
			set
			{
				if ((this._DispatchCapacity != value))
				{
					this.OnDispatchCapacityChanging(value);
					this.SendPropertyChanging();
					this._DispatchCapacity = value;
					this.SendPropertyChanged("DispatchCapacity");
					this.OnDispatchCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="NChar(5)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="AgendaID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariff")]
	public partial class Tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<decimal> _FreePrice;
		
		private System.Nullable<decimal> _GovernmentalPrice;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private bool _Lock;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPatientShareChanging(System.Nullable<decimal> value);
    partial void OnPatientShareChanged();
    partial void OnOrganizationShareChanging(System.Nullable<decimal> value);
    partial void OnOrganizationShareChanged();
    partial void OnFreePriceChanging(System.Nullable<decimal> value);
    partial void OnFreePriceChanged();
    partial void OnGovernmentalPriceChanging(System.Nullable<decimal> value);
    partial void OnGovernmentalPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    #endregion
		
		public Tariff()
		{
			this._Insurance = default(EntityRef<Insurance>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this.OnOrganizationShareChanging(value);
					this.SendPropertyChanging();
					this._OrganizationShare = value;
					this.SendPropertyChanged("OrganizationShare");
					this.OnOrganizationShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreePrice", DbType="Money")]
		public System.Nullable<decimal> FreePrice
		{
			get
			{
				return this._FreePrice;
			}
			set
			{
				if ((this._FreePrice != value))
				{
					this.OnFreePriceChanging(value);
					this.SendPropertyChanging();
					this._FreePrice = value;
					this.SendPropertyChanged("FreePrice");
					this.OnFreePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentalPrice", DbType="Money")]
		public System.Nullable<decimal> GovernmentalPrice
		{
			get
			{
				return this._GovernmentalPrice;
			}
			set
			{
				if ((this._GovernmentalPrice != value))
				{
					this.OnGovernmentalPriceChanging(value);
					this.SendPropertyChanging();
					this._GovernmentalPrice = value;
					this.SendPropertyChanged("GovernmentalPrice");
					this.OnGovernmentalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorInsurance")]
	public partial class DoctorInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    #endregion
		
		public DoctorInsurance()
		{
			this._Insurance = default(EntityRef<Insurance>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_DoctorInsurance", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.DoctorInsurances.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.DoctorInsurances.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorInsurance", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.DoctorInsurances.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.DoctorInsurances.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pharmacy")]
	public partial class Pharmacy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _HIXCode;
		
		private string _PharmacyCode;
		
		private string _PostalCode;
		
		private string _Adreess;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.Guid> _TechnicalID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _TechnicalID1;
		
		private bool _InWard;
		
		private bool _PharmacyStore;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnPharmacyCodeChanging(string value);
    partial void OnPharmacyCodeChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnAdreessChanging(string value);
    partial void OnAdreessChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnTechnicalIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicalIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnTechnicalID1Changing(System.Nullable<int> value);
    partial void OnTechnicalID1Changed();
    partial void OnInWardChanging(bool value);
    partial void OnInWardChanged();
    partial void OnPharmacyStoreChanging(bool value);
    partial void OnPharmacyStoreChanged();
    #endregion
		
		public Pharmacy()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyCode", DbType="NVarChar(50)")]
		public string PharmacyCode
		{
			get
			{
				return this._PharmacyCode;
			}
			set
			{
				if ((this._PharmacyCode != value))
				{
					this.OnPharmacyCodeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyCode = value;
					this.SendPropertyChanged("PharmacyCode");
					this.OnPharmacyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adreess", DbType="NVarChar(200)")]
		public string Adreess
		{
			get
			{
				return this._Adreess;
			}
			set
			{
				if ((this._Adreess != value))
				{
					this.OnAdreessChanging(value);
					this.SendPropertyChanging();
					this._Adreess = value;
					this.SendPropertyChanged("Adreess");
					this.OnAdreessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicalID
		{
			get
			{
				return this._TechnicalID;
			}
			set
			{
				if ((this._TechnicalID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicalIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicalID = value;
					this.SendPropertyChanged("TechnicalID");
					this.OnTechnicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalID1", DbType="Int")]
		public System.Nullable<int> TechnicalID1
		{
			get
			{
				return this._TechnicalID1;
			}
			set
			{
				if ((this._TechnicalID1 != value))
				{
					this.OnTechnicalID1Changing(value);
					this.SendPropertyChanging();
					this._TechnicalID1 = value;
					this.SendPropertyChanged("TechnicalID1");
					this.OnTechnicalID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InWard", DbType="Bit NOT NULL")]
		public bool InWard
		{
			get
			{
				return this._InWard;
			}
			set
			{
				if ((this._InWard != value))
				{
					this.OnInWardChanging(value);
					this.SendPropertyChanging();
					this._InWard = value;
					this.SendPropertyChanged("InWard");
					this.OnInWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyStore", DbType="Bit NOT NULL")]
		public bool PharmacyStore
		{
			get
			{
				return this._PharmacyStore;
			}
			set
			{
				if ((this._PharmacyStore != value))
				{
					this.OnPharmacyStoreChanging(value);
					this.SendPropertyChanging();
					this._PharmacyStore = value;
					this.SendPropertyChanged("PharmacyStore");
					this.OnPharmacyStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Pharmacy", Storage="_Staff", ThisKey="TechnicalID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Pharmacies.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Pharmacies.Add(this);
						this._TechnicalID = value.ID;
					}
					else
					{
						this._TechnicalID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Pharmacy", Storage="_Department", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Pharmacy = null;
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Pharmacy = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PharmacyDrug")]
	public partial class PharmacyDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PharmacyID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private bool _NIS;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPharmacyIDChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnNISChanging(bool value);
    partial void OnNISChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public PharmacyDrug()
		{
			this._Service = default(EntityRef<Service>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyID
		{
			get
			{
				return this._PharmacyID;
			}
			set
			{
				if ((this._PharmacyID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPharmacyIDChanging(value);
					this.SendPropertyChanging();
					this._PharmacyID = value;
					this.SendPropertyChanged("PharmacyID");
					this.OnPharmacyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit NOT NULL")]
		public bool NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_Department", ThisKey="PharmacyID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._PharmacyID = value.ID;
					}
					else
					{
						this._PharmacyID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwPersonsCompany")]
	public partial class VwPersonsCompany
	{
		
		private string _MedicalID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _Name;
		
		private System.Guid _ID;
		
		private string _PersonalCode;
		
		private string _FatherName;
		
		private string _BirthPlace;
		
		private string _BirthDate;
		
		private string _IdentityPlace;
		
		private string _IdentityNumber;
		
		private string _Expr1;
		
		private string _InsuranceNo;
		
		private string _InsuranceName;
		
		private string _HomeAddress;
		
		private string _WorkCountry;
		
		public VwPersonsCompany()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this._IdentityPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this._IdentityNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(13)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCountry", DbType="NVarChar(20)")]
		public string WorkCountry
		{
			get
			{
				return this._WorkCountry;
			}
			set
			{
				if ((this._WorkCountry != value))
				{
					this._WorkCountry = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicalRecord")]
	public partial class MedicalRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private System.Nullable<bool> _I;
		
		private System.Nullable<bool> _C;
		
		private System.Nullable<bool> _B;
		
		private System.Nullable<bool> _Allergy;
		
		private System.Nullable<bool> _Surgery;
		
		private System.Nullable<bool> _Lung;
		
		private System.Nullable<bool> _Liver;
		
		private System.Nullable<bool> _Urine;
		
		private System.Nullable<bool> _Eye;
		
		private System.Nullable<bool> _Psychiatry;
		
		private System.Nullable<bool> _Ear;
		
		private System.Nullable<bool> _Oncology;
		
		private System.Nullable<bool> _Accident;
		
		private System.Nullable<bool> _Genetic;
		
		private System.Nullable<bool> _Musculoskeletal;
		
		private System.Nullable<bool> _Texture;
		
		private System.Nullable<bool> _Blood;
		
		private System.Nullable<bool> _Heart;
		
		private System.Nullable<bool> _Neurology;
		
		private System.Nullable<bool> _Skin;
		
		private System.Nullable<bool> _Mouth;
		
		private System.Nullable<bool> _Infectious;
		
		private System.Nullable<bool> _Nutrition;
		
		private System.Nullable<bool> _Women;
		
		private System.Nullable<bool> _glands;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnIChanging(System.Nullable<bool> value);
    partial void OnIChanged();
    partial void OnCChanging(System.Nullable<bool> value);
    partial void OnCChanged();
    partial void OnBChanging(System.Nullable<bool> value);
    partial void OnBChanged();
    partial void OnAllergyChanging(System.Nullable<bool> value);
    partial void OnAllergyChanged();
    partial void OnSurgeryChanging(System.Nullable<bool> value);
    partial void OnSurgeryChanged();
    partial void OnLungChanging(System.Nullable<bool> value);
    partial void OnLungChanged();
    partial void OnLiverChanging(System.Nullable<bool> value);
    partial void OnLiverChanged();
    partial void OnUrineChanging(System.Nullable<bool> value);
    partial void OnUrineChanged();
    partial void OnEyeChanging(System.Nullable<bool> value);
    partial void OnEyeChanged();
    partial void OnPsychiatryChanging(System.Nullable<bool> value);
    partial void OnPsychiatryChanged();
    partial void OnEarChanging(System.Nullable<bool> value);
    partial void OnEarChanged();
    partial void OnOncologyChanging(System.Nullable<bool> value);
    partial void OnOncologyChanged();
    partial void OnAccidentChanging(System.Nullable<bool> value);
    partial void OnAccidentChanged();
    partial void OnGeneticChanging(System.Nullable<bool> value);
    partial void OnGeneticChanged();
    partial void OnMusculoskeletalChanging(System.Nullable<bool> value);
    partial void OnMusculoskeletalChanged();
    partial void OnTextureChanging(System.Nullable<bool> value);
    partial void OnTextureChanged();
    partial void OnBloodChanging(System.Nullable<bool> value);
    partial void OnBloodChanged();
    partial void OnHeartChanging(System.Nullable<bool> value);
    partial void OnHeartChanged();
    partial void OnNeurologyChanging(System.Nullable<bool> value);
    partial void OnNeurologyChanged();
    partial void OnSkinChanging(System.Nullable<bool> value);
    partial void OnSkinChanged();
    partial void OnMouthChanging(System.Nullable<bool> value);
    partial void OnMouthChanged();
    partial void OnInfectiousChanging(System.Nullable<bool> value);
    partial void OnInfectiousChanged();
    partial void OnNutritionChanging(System.Nullable<bool> value);
    partial void OnNutritionChanged();
    partial void OnWomenChanging(System.Nullable<bool> value);
    partial void OnWomenChanged();
    partial void OnglandsChanging(System.Nullable<bool> value);
    partial void OnglandsChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public MedicalRecord()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I", DbType="Bit")]
		public System.Nullable<bool> I
		{
			get
			{
				return this._I;
			}
			set
			{
				if ((this._I != value))
				{
					this.OnIChanging(value);
					this.SendPropertyChanging();
					this._I = value;
					this.SendPropertyChanged("I");
					this.OnIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="Bit")]
		public System.Nullable<bool> C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="Bit")]
		public System.Nullable<bool> B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allergy", DbType="Bit")]
		public System.Nullable<bool> Allergy
		{
			get
			{
				return this._Allergy;
			}
			set
			{
				if ((this._Allergy != value))
				{
					this.OnAllergyChanging(value);
					this.SendPropertyChanging();
					this._Allergy = value;
					this.SendPropertyChanged("Allergy");
					this.OnAllergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surgery", DbType="Bit")]
		public System.Nullable<bool> Surgery
		{
			get
			{
				return this._Surgery;
			}
			set
			{
				if ((this._Surgery != value))
				{
					this.OnSurgeryChanging(value);
					this.SendPropertyChanging();
					this._Surgery = value;
					this.SendPropertyChanged("Surgery");
					this.OnSurgeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lung", DbType="Bit")]
		public System.Nullable<bool> Lung
		{
			get
			{
				return this._Lung;
			}
			set
			{
				if ((this._Lung != value))
				{
					this.OnLungChanging(value);
					this.SendPropertyChanging();
					this._Lung = value;
					this.SendPropertyChanged("Lung");
					this.OnLungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liver", DbType="Bit")]
		public System.Nullable<bool> Liver
		{
			get
			{
				return this._Liver;
			}
			set
			{
				if ((this._Liver != value))
				{
					this.OnLiverChanging(value);
					this.SendPropertyChanging();
					this._Liver = value;
					this.SendPropertyChanged("Liver");
					this.OnLiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urine", DbType="Bit")]
		public System.Nullable<bool> Urine
		{
			get
			{
				return this._Urine;
			}
			set
			{
				if ((this._Urine != value))
				{
					this.OnUrineChanging(value);
					this.SendPropertyChanging();
					this._Urine = value;
					this.SendPropertyChanged("Urine");
					this.OnUrineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Bit")]
		public System.Nullable<bool> Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this.OnEyeChanging(value);
					this.SendPropertyChanging();
					this._Eye = value;
					this.SendPropertyChanged("Eye");
					this.OnEyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychiatry", DbType="Bit")]
		public System.Nullable<bool> Psychiatry
		{
			get
			{
				return this._Psychiatry;
			}
			set
			{
				if ((this._Psychiatry != value))
				{
					this.OnPsychiatryChanging(value);
					this.SendPropertyChanging();
					this._Psychiatry = value;
					this.SendPropertyChanged("Psychiatry");
					this.OnPsychiatryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ear", DbType="Bit")]
		public System.Nullable<bool> Ear
		{
			get
			{
				return this._Ear;
			}
			set
			{
				if ((this._Ear != value))
				{
					this.OnEarChanging(value);
					this.SendPropertyChanging();
					this._Ear = value;
					this.SendPropertyChanged("Ear");
					this.OnEarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oncology", DbType="Bit")]
		public System.Nullable<bool> Oncology
		{
			get
			{
				return this._Oncology;
			}
			set
			{
				if ((this._Oncology != value))
				{
					this.OnOncologyChanging(value);
					this.SendPropertyChanging();
					this._Oncology = value;
					this.SendPropertyChanged("Oncology");
					this.OnOncologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accident", DbType="Bit")]
		public System.Nullable<bool> Accident
		{
			get
			{
				return this._Accident;
			}
			set
			{
				if ((this._Accident != value))
				{
					this.OnAccidentChanging(value);
					this.SendPropertyChanging();
					this._Accident = value;
					this.SendPropertyChanged("Accident");
					this.OnAccidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genetic", DbType="Bit")]
		public System.Nullable<bool> Genetic
		{
			get
			{
				return this._Genetic;
			}
			set
			{
				if ((this._Genetic != value))
				{
					this.OnGeneticChanging(value);
					this.SendPropertyChanging();
					this._Genetic = value;
					this.SendPropertyChanged("Genetic");
					this.OnGeneticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Musculoskeletal", DbType="Bit")]
		public System.Nullable<bool> Musculoskeletal
		{
			get
			{
				return this._Musculoskeletal;
			}
			set
			{
				if ((this._Musculoskeletal != value))
				{
					this.OnMusculoskeletalChanging(value);
					this.SendPropertyChanging();
					this._Musculoskeletal = value;
					this.SendPropertyChanged("Musculoskeletal");
					this.OnMusculoskeletalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texture", DbType="Bit")]
		public System.Nullable<bool> Texture
		{
			get
			{
				return this._Texture;
			}
			set
			{
				if ((this._Texture != value))
				{
					this.OnTextureChanging(value);
					this.SendPropertyChanging();
					this._Texture = value;
					this.SendPropertyChanged("Texture");
					this.OnTextureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="Bit")]
		public System.Nullable<bool> Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heart", DbType="Bit")]
		public System.Nullable<bool> Heart
		{
			get
			{
				return this._Heart;
			}
			set
			{
				if ((this._Heart != value))
				{
					this.OnHeartChanging(value);
					this.SendPropertyChanging();
					this._Heart = value;
					this.SendPropertyChanged("Heart");
					this.OnHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neurology", DbType="Bit")]
		public System.Nullable<bool> Neurology
		{
			get
			{
				return this._Neurology;
			}
			set
			{
				if ((this._Neurology != value))
				{
					this.OnNeurologyChanging(value);
					this.SendPropertyChanging();
					this._Neurology = value;
					this.SendPropertyChanged("Neurology");
					this.OnNeurologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skin", DbType="Bit")]
		public System.Nullable<bool> Skin
		{
			get
			{
				return this._Skin;
			}
			set
			{
				if ((this._Skin != value))
				{
					this.OnSkinChanging(value);
					this.SendPropertyChanging();
					this._Skin = value;
					this.SendPropertyChanged("Skin");
					this.OnSkinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mouth", DbType="Bit")]
		public System.Nullable<bool> Mouth
		{
			get
			{
				return this._Mouth;
			}
			set
			{
				if ((this._Mouth != value))
				{
					this.OnMouthChanging(value);
					this.SendPropertyChanging();
					this._Mouth = value;
					this.SendPropertyChanged("Mouth");
					this.OnMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Infectious", DbType="Bit")]
		public System.Nullable<bool> Infectious
		{
			get
			{
				return this._Infectious;
			}
			set
			{
				if ((this._Infectious != value))
				{
					this.OnInfectiousChanging(value);
					this.SendPropertyChanging();
					this._Infectious = value;
					this.SendPropertyChanged("Infectious");
					this.OnInfectiousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nutrition", DbType="Bit")]
		public System.Nullable<bool> Nutrition
		{
			get
			{
				return this._Nutrition;
			}
			set
			{
				if ((this._Nutrition != value))
				{
					this.OnNutritionChanging(value);
					this.SendPropertyChanging();
					this._Nutrition = value;
					this.SendPropertyChanged("Nutrition");
					this.OnNutritionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Women", DbType="Bit")]
		public System.Nullable<bool> Women
		{
			get
			{
				return this._Women;
			}
			set
			{
				if ((this._Women != value))
				{
					this.OnWomenChanging(value);
					this.SendPropertyChanging();
					this._Women = value;
					this.SendPropertyChanged("Women");
					this.OnWomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_glands", DbType="Bit")]
		public System.Nullable<bool> glands
		{
			get
			{
				return this._glands;
			}
			set
			{
				if ((this._glands != value))
				{
					this.OnglandsChanging(value);
					this.SendPropertyChanging();
					this._glands = value;
					this.SendPropertyChanged("glands");
					this.OnglandsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_MedicalRecord", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.MedicalRecords.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.MedicalRecords.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialDiseases")]
	public partial class SpecialDisease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Code;
		
		private EntitySet<PersonDisease> _PersonDiseases;
		
		private EntitySet<PersonDisease1> _PersonDisease1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    #endregion
		
		public SpecialDisease()
		{
			this._PersonDiseases = new EntitySet<PersonDisease>(new Action<PersonDisease>(this.attach_PersonDiseases), new Action<PersonDisease>(this.detach_PersonDiseases));
			this._PersonDisease1s = new EntitySet<PersonDisease1>(new Action<PersonDisease1>(this.attach_PersonDisease1s), new Action<PersonDisease1>(this.detach_PersonDisease1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialDisease_PersonDisease", Storage="_PersonDiseases", ThisKey="ID", OtherKey="Disease")]
		public EntitySet<PersonDisease> PersonDiseases
		{
			get
			{
				return this._PersonDiseases;
			}
			set
			{
				this._PersonDiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialDisease_PersonDisease1", Storage="_PersonDisease1s", ThisKey="ID", OtherKey="Disease")]
		public EntitySet<PersonDisease1> PersonDisease1s
		{
			get
			{
				return this._PersonDisease1s;
			}
			set
			{
				this._PersonDisease1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.SpecialDisease = this;
		}
		
		private void detach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.SpecialDisease = null;
		}
		
		private void attach_PersonDisease1s(PersonDisease1 entity)
		{
			this.SendPropertyChanging();
			entity.SpecialDisease = this;
		}
		
		private void detach_PersonDisease1s(PersonDisease1 entity)
		{
			this.SendPropertyChanging();
			entity.SpecialDisease = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonDisease")]
	public partial class PersonDisease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<int> _Disease;
		
		private string _DateOfDiscovery;
		
		private System.Nullable<System.Guid> _DoctorDiagnostic;
		
		private EntityRef<SpecialDisease> _SpecialDisease;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDiseaseChanging(System.Nullable<int> value);
    partial void OnDiseaseChanged();
    partial void OnDateOfDiscoveryChanging(string value);
    partial void OnDateOfDiscoveryChanged();
    partial void OnDoctorDiagnosticChanging(System.Nullable<System.Guid> value);
    partial void OnDoctorDiagnosticChanged();
    #endregion
		
		public PersonDisease()
		{
			this._SpecialDisease = default(EntityRef<SpecialDisease>);
			this._Staff = default(EntityRef<Staff>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disease", DbType="Int")]
		public System.Nullable<int> Disease
		{
			get
			{
				return this._Disease;
			}
			set
			{
				if ((this._Disease != value))
				{
					if (this._SpecialDisease.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiseaseChanging(value);
					this.SendPropertyChanging();
					this._Disease = value;
					this.SendPropertyChanged("Disease");
					this.OnDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfDiscovery", DbType="NVarChar(10)")]
		public string DateOfDiscovery
		{
			get
			{
				return this._DateOfDiscovery;
			}
			set
			{
				if ((this._DateOfDiscovery != value))
				{
					this.OnDateOfDiscoveryChanging(value);
					this.SendPropertyChanging();
					this._DateOfDiscovery = value;
					this.SendPropertyChanged("DateOfDiscovery");
					this.OnDateOfDiscoveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDiagnostic", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DoctorDiagnostic
		{
			get
			{
				return this._DoctorDiagnostic;
			}
			set
			{
				if ((this._DoctorDiagnostic != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoctorDiagnosticChanging(value);
					this.SendPropertyChanging();
					this._DoctorDiagnostic = value;
					this.SendPropertyChanged("DoctorDiagnostic");
					this.OnDoctorDiagnosticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialDisease_PersonDisease", Storage="_SpecialDisease", ThisKey="Disease", OtherKey="ID", IsForeignKey=true)]
		public SpecialDisease SpecialDisease
		{
			get
			{
				return this._SpecialDisease.Entity;
			}
			set
			{
				SpecialDisease previousValue = this._SpecialDisease.Entity;
				if (((previousValue != value) 
							|| (this._SpecialDisease.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialDisease.Entity = null;
						previousValue.PersonDiseases.Remove(this);
					}
					this._SpecialDisease.Entity = value;
					if ((value != null))
					{
						value.PersonDiseases.Add(this);
						this._Disease = value.ID;
					}
					else
					{
						this._Disease = default(Nullable<int>);
					}
					this.SendPropertyChanged("SpecialDisease");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PersonDisease", Storage="_Staff", ThisKey="DoctorDiagnostic", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.PersonDiseases.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.PersonDiseases.Add(this);
						this._DoctorDiagnostic = value.ID;
					}
					else
					{
						this._DoctorDiagnostic = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonDisease", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonDiseases.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonDiseases.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceD")]
	public partial class GivenServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private System.Nullable<System.Guid> _TariffID;
		
		private System.Nullable<int> _TadilAreaID;
		
		private decimal _TotalPrice;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private bool _Payed;
		
		private decimal _PaymentPrice;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private bool _Confirm;
		
		private bool _Reflected;
		
		private System.Nullable<int> _HIXCode;
		
		private string _Position;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _Date;
		
		private string _Time;
		
		private bool _NoTake;
		
		private bool _Normal;
		
		private System.Nullable<bool> _NIS;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnGivenAmountChanging(double value);
    partial void OnGivenAmountChanged();
    partial void OnTariffIDChanging(System.Nullable<System.Guid> value);
    partial void OnTariffIDChanged();
    partial void OnTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnTadilAreaIDChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnPatientShareChanging(decimal value);
    partial void OnPatientShareChanged();
    partial void OnInsuranceShareChanging(decimal value);
    partial void OnInsuranceShareChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnHIXCodeChanging(System.Nullable<int> value);
    partial void OnHIXCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnNoTakeChanging(bool value);
    partial void OnNoTakeChanged();
    partial void OnNormalChanging(bool value);
    partial void OnNormalChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    #endregion
		
		public GivenServiceD()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Service = default(EntityRef<Service>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this.OnGivenAmountChanging(value);
					this.SendPropertyChanging();
					this._GivenAmount = value;
					this.SendPropertyChanged("GivenAmount");
					this.OnGivenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilAreaID", DbType="Int")]
		public System.Nullable<int> TadilAreaID
		{
			get
			{
				return this._TadilAreaID;
			}
			set
			{
				if ((this._TadilAreaID != value))
				{
					this.OnTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._TadilAreaID = value;
					this.SendPropertyChanged("TadilAreaID");
					this.OnTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this.OnInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._InsuranceShare = value;
					this.SendPropertyChanged("InsuranceShare");
					this.OnInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="Int")]
		public System.Nullable<int> HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this.OnNoTakeChanging(value);
					this.SendPropertyChanging();
					this._NoTake = value;
					this.SendPropertyChanged("NoTake");
					this.OnNoTakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Bit NOT NULL")]
		public bool Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestD")]
	public partial class RequestD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ReqMID;
		
		private System.Nullable<System.Guid> _Drug;
		
		private System.Nullable<int> _Amount;
		
		private bool _DrugDelivery;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _WarhouseKeeper;
		
		private System.Nullable<int> _AgoAmountDelivery;
		
		private System.Nullable<int> _AmountDelivery;
		
		private bool _Indent;
		
		private string _WarhouseKeeperDate;
		
		private string _WarhouseKeeperTime;
		
		private System.Nullable<int> _WarhouseKeeperUSER;
		
		private bool _DRConfirm;
		
		private bool _Factor;
		
		private string _DRConfirmDate;
		
		private string _DRConfirmTime;
		
		private string _AmountDeliveryDate;
		
		private string _AmountDeliveryTime;
		
		private System.Nullable<int> _AmountDeliveryUser;
		
		private System.Nullable<System.Guid> _ParentRequest;
		
		private EntityRef<RequestM> _RequestM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnReqMIDChanging(System.Nullable<System.Guid> value);
    partial void OnReqMIDChanged();
    partial void OnDrugChanging(System.Nullable<System.Guid> value);
    partial void OnDrugChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnDrugDeliveryChanging(bool value);
    partial void OnDrugDeliveryChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnWarhouseKeeperChanging(bool value);
    partial void OnWarhouseKeeperChanged();
    partial void OnAgoAmountDeliveryChanging(System.Nullable<int> value);
    partial void OnAgoAmountDeliveryChanged();
    partial void OnAmountDeliveryChanging(System.Nullable<int> value);
    partial void OnAmountDeliveryChanged();
    partial void OnIndentChanging(bool value);
    partial void OnIndentChanged();
    partial void OnWarhouseKeeperDateChanging(string value);
    partial void OnWarhouseKeeperDateChanged();
    partial void OnWarhouseKeeperTimeChanging(string value);
    partial void OnWarhouseKeeperTimeChanged();
    partial void OnWarhouseKeeperUSERChanging(System.Nullable<int> value);
    partial void OnWarhouseKeeperUSERChanged();
    partial void OnDRConfirmChanging(bool value);
    partial void OnDRConfirmChanged();
    partial void OnFactorChanging(bool value);
    partial void OnFactorChanged();
    partial void OnDRConfirmDateChanging(string value);
    partial void OnDRConfirmDateChanged();
    partial void OnDRConfirmTimeChanging(string value);
    partial void OnDRConfirmTimeChanged();
    partial void OnAmountDeliveryDateChanging(string value);
    partial void OnAmountDeliveryDateChanged();
    partial void OnAmountDeliveryTimeChanging(string value);
    partial void OnAmountDeliveryTimeChanged();
    partial void OnAmountDeliveryUserChanging(System.Nullable<int> value);
    partial void OnAmountDeliveryUserChanged();
    partial void OnParentRequestChanging(System.Nullable<System.Guid> value);
    partial void OnParentRequestChanged();
    #endregion
		
		public RequestD()
		{
			this._RequestM = default(EntityRef<RequestM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReqMID
		{
			get
			{
				return this._ReqMID;
			}
			set
			{
				if ((this._ReqMID != value))
				{
					if (this._RequestM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReqMIDChanging(value);
					this.SendPropertyChanging();
					this._ReqMID = value;
					this.SendPropertyChanged("ReqMID");
					this.OnReqMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drug", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Drug
		{
			get
			{
				return this._Drug;
			}
			set
			{
				if ((this._Drug != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugChanging(value);
					this.SendPropertyChanging();
					this._Drug = value;
					this.SendPropertyChanged("Drug");
					this.OnDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugDelivery", DbType="Bit NOT NULL")]
		public bool DrugDelivery
		{
			get
			{
				return this._DrugDelivery;
			}
			set
			{
				if ((this._DrugDelivery != value))
				{
					this.OnDrugDeliveryChanging(value);
					this.SendPropertyChanging();
					this._DrugDelivery = value;
					this.SendPropertyChanged("DrugDelivery");
					this.OnDrugDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeper", DbType="Bit NOT NULL")]
		public bool WarhouseKeeper
		{
			get
			{
				return this._WarhouseKeeper;
			}
			set
			{
				if ((this._WarhouseKeeper != value))
				{
					this.OnWarhouseKeeperChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeper = value;
					this.SendPropertyChanged("WarhouseKeeper");
					this.OnWarhouseKeeperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgoAmountDelivery", DbType="Int")]
		public System.Nullable<int> AgoAmountDelivery
		{
			get
			{
				return this._AgoAmountDelivery;
			}
			set
			{
				if ((this._AgoAmountDelivery != value))
				{
					this.OnAgoAmountDeliveryChanging(value);
					this.SendPropertyChanging();
					this._AgoAmountDelivery = value;
					this.SendPropertyChanged("AgoAmountDelivery");
					this.OnAgoAmountDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDelivery", DbType="Int")]
		public System.Nullable<int> AmountDelivery
		{
			get
			{
				return this._AmountDelivery;
			}
			set
			{
				if ((this._AmountDelivery != value))
				{
					this.OnAmountDeliveryChanging(value);
					this.SendPropertyChanging();
					this._AmountDelivery = value;
					this.SendPropertyChanged("AmountDelivery");
					this.OnAmountDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent", DbType="Bit NOT NULL")]
		public bool Indent
		{
			get
			{
				return this._Indent;
			}
			set
			{
				if ((this._Indent != value))
				{
					this.OnIndentChanging(value);
					this.SendPropertyChanging();
					this._Indent = value;
					this.SendPropertyChanged("Indent");
					this.OnIndentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperDate", DbType="NVarChar(10)")]
		public string WarhouseKeeperDate
		{
			get
			{
				return this._WarhouseKeeperDate;
			}
			set
			{
				if ((this._WarhouseKeeperDate != value))
				{
					this.OnWarhouseKeeperDateChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperDate = value;
					this.SendPropertyChanged("WarhouseKeeperDate");
					this.OnWarhouseKeeperDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperTime", DbType="NVarChar(8)")]
		public string WarhouseKeeperTime
		{
			get
			{
				return this._WarhouseKeeperTime;
			}
			set
			{
				if ((this._WarhouseKeeperTime != value))
				{
					this.OnWarhouseKeeperTimeChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperTime = value;
					this.SendPropertyChanged("WarhouseKeeperTime");
					this.OnWarhouseKeeperTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperUSER", DbType="Int")]
		public System.Nullable<int> WarhouseKeeperUSER
		{
			get
			{
				return this._WarhouseKeeperUSER;
			}
			set
			{
				if ((this._WarhouseKeeperUSER != value))
				{
					this.OnWarhouseKeeperUSERChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperUSER = value;
					this.SendPropertyChanged("WarhouseKeeperUSER");
					this.OnWarhouseKeeperUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRConfirm", DbType="Bit NOT NULL")]
		public bool DRConfirm
		{
			get
			{
				return this._DRConfirm;
			}
			set
			{
				if ((this._DRConfirm != value))
				{
					this.OnDRConfirmChanging(value);
					this.SendPropertyChanging();
					this._DRConfirm = value;
					this.SendPropertyChanged("DRConfirm");
					this.OnDRConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Bit NOT NULL")]
		public bool Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRConfirmDate", DbType="NVarChar(10)")]
		public string DRConfirmDate
		{
			get
			{
				return this._DRConfirmDate;
			}
			set
			{
				if ((this._DRConfirmDate != value))
				{
					this.OnDRConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._DRConfirmDate = value;
					this.SendPropertyChanged("DRConfirmDate");
					this.OnDRConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRConfirmTime", DbType="NVarChar(8)")]
		public string DRConfirmTime
		{
			get
			{
				return this._DRConfirmTime;
			}
			set
			{
				if ((this._DRConfirmTime != value))
				{
					this.OnDRConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._DRConfirmTime = value;
					this.SendPropertyChanged("DRConfirmTime");
					this.OnDRConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryDate", DbType="NVarChar(10)")]
		public string AmountDeliveryDate
		{
			get
			{
				return this._AmountDeliveryDate;
			}
			set
			{
				if ((this._AmountDeliveryDate != value))
				{
					this.OnAmountDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryDate = value;
					this.SendPropertyChanged("AmountDeliveryDate");
					this.OnAmountDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryTime", DbType="NVarChar(8)")]
		public string AmountDeliveryTime
		{
			get
			{
				return this._AmountDeliveryTime;
			}
			set
			{
				if ((this._AmountDeliveryTime != value))
				{
					this.OnAmountDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryTime = value;
					this.SendPropertyChanged("AmountDeliveryTime");
					this.OnAmountDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryUser", DbType="Int")]
		public System.Nullable<int> AmountDeliveryUser
		{
			get
			{
				return this._AmountDeliveryUser;
			}
			set
			{
				if ((this._AmountDeliveryUser != value))
				{
					this.OnAmountDeliveryUserChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryUser = value;
					this.SendPropertyChanged("AmountDeliveryUser");
					this.OnAmountDeliveryUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRequest", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentRequest
		{
			get
			{
				return this._ParentRequest;
			}
			set
			{
				if ((this._ParentRequest != value))
				{
					this.OnParentRequestChanging(value);
					this.SendPropertyChanging();
					this._ParentRequest = value;
					this.SendPropertyChanged("ParentRequest");
					this.OnParentRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestM_RequestD", Storage="_RequestM", ThisKey="ReqMID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public RequestM RequestM
		{
			get
			{
				return this._RequestM.Entity;
			}
			set
			{
				RequestM previousValue = this._RequestM.Entity;
				if (((previousValue != value) 
							|| (this._RequestM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestM.Entity = null;
						previousValue.RequestDs.Remove(this);
					}
					this._RequestM.Entity = value;
					if ((value != null))
					{
						value.RequestDs.Add(this);
						this._ReqMID = value.ID;
					}
					else
					{
						this._ReqMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RequestM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_RequestD", Storage="_Service", ThisKey="Drug", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.RequestDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.RequestDs.Add(this);
						this._Drug = value.ID;
					}
					else
					{
						this._Drug = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestM")]
	public partial class RequestM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _FromUnit;
		
		private System.Nullable<System.Guid> _ToUnit;
		
		private string _Date;
		
		private string _Time;
		
		private string _Comment;
		
		private bool _Request;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _FromWard;
		
		private string _UserFullname;
		
		private EntitySet<RequestD> _RequestDs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFromUnitChanging(System.Nullable<System.Guid> value);
    partial void OnFromUnitChanged();
    partial void OnToUnitChanging(System.Nullable<System.Guid> value);
    partial void OnToUnitChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRequestChanging(bool value);
    partial void OnRequestChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnFromWardChanging(bool value);
    partial void OnFromWardChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public RequestM()
		{
			this._RequestDs = new EntitySet<RequestD>(new Action<RequestD>(this.attach_RequestDs), new Action<RequestD>(this.detach_RequestDs));
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUnit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FromUnit
		{
			get
			{
				return this._FromUnit;
			}
			set
			{
				if ((this._FromUnit != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUnitChanging(value);
					this.SendPropertyChanging();
					this._FromUnit = value;
					this.SendPropertyChanged("FromUnit");
					this.OnFromUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUnit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ToUnit
		{
			get
			{
				return this._ToUnit;
			}
			set
			{
				if ((this._ToUnit != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToUnitChanging(value);
					this.SendPropertyChanging();
					this._ToUnit = value;
					this.SendPropertyChanged("ToUnit");
					this.OnToUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="Bit NOT NULL")]
		public bool Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				if ((this._Request != value))
				{
					this.OnRequestChanging(value);
					this.SendPropertyChanging();
					this._Request = value;
					this.SendPropertyChanged("Request");
					this.OnRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromWard", DbType="Bit NOT NULL")]
		public bool FromWard
		{
			get
			{
				return this._FromWard;
			}
			set
			{
				if ((this._FromWard != value))
				{
					this.OnFromWardChanging(value);
					this.SendPropertyChanging();
					this._FromWard = value;
					this.SendPropertyChanged("FromWard");
					this.OnFromWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestM_RequestD", Storage="_RequestDs", ThisKey="ID", OtherKey="ReqMID")]
		public EntitySet<RequestD> RequestDs
		{
			get
			{
				return this._RequestDs;
			}
			set
			{
				this._RequestDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM", Storage="_Department", ThisKey="FromUnit", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.RequestMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.RequestMs.Add(this);
						this._FromUnit = value.ID;
					}
					else
					{
						this._FromUnit = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM1", Storage="_Department1", ThisKey="ToUnit", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.RequestMs1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.RequestMs1.Add(this);
						this._ToUnit = value.ID;
					}
					else
					{
						this._ToUnit = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.RequestM = this;
		}
		
		private void detach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.RequestM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewConsumer")]
	public partial class ViewConsumer
	{
		
		private string _FunctorName;
		
		private string _Name;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<long> _DossierID;
		
		private string _VisitDate;
		
		private string _DepartmentName;
		
		private string _MedicalCenter;
		
		private string _UserName;
		
		private string _FullName;
		
		private System.Nullable<double> _Amount;
		
		private string _PersonalNo;
		
		private string _InsuranceName;
		
		public ViewConsumer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorName", DbType="NVarChar(201)")]
		public string FunctorName
		{
			get
			{
				return this._FunctorName;
			}
			set
			{
				if ((this._FunctorName != value))
				{
					this._FunctorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="NVarChar(10)")]
		public string VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this._VisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100)")]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(100)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this._MedicalCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(101)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="NVarChar(10)")]
		public string PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileExcel")]
	public partial class FileExcel
	{
		
		private int _ID;
		
		private string _Doctor;
		
		private System.Nullable<double> _PersonalCode;
		
		private string _MedicalCode;
		
		private string _LastName;
		
		private string _Name;
		
		private string _BirthDate;
		
		private System.Nullable<double> _Sex;
		
		private string _Company;
		
		private string _Management;
		
		private string _Organization;
		
		private System.Nullable<double> _DossierNumber;
		
		private System.Nullable<double> _Phone;
		
		private System.Nullable<double> _Age;
		
		private string _MedicFamilyDossier;
		
		private string _ActiveHygieneDossier;
		
		private string _Description;
		
		private string _MedicalCenter;
		
		private string _DiabeteRiddleStatus;
		
		private System.Nullable<double> _HealthyDRDate;
		
		private string _SickDRDate;
		
		private string _ifgDRDate;
		
		private string _igtDRDate;
		
		private System.Nullable<double> _HealthyIDR;
		
		private System.Nullable<double> _ifgIDR;
		
		private System.Nullable<double> _igdIDR;
		
		private string _BloodFatDisorderRiddleStatus;
		
		private System.Nullable<double> _HealthyBFDRDate;
		
		private System.Nullable<double> _LdlBFDRDate;
		
		private System.Nullable<double> _HdlBFDRDate;
		
		private System.Nullable<double> _TgBFDRDate;
		
		private System.Nullable<double> _IncludedBFDR;
		
		private string _HighBloodPressRiddleStat;
		
		private System.Nullable<double> _HealthyHBPRDate;
		
		private string _SickHBPRDate;
		
		private System.Nullable<double> _PreHipertansiyonHBPRDate;
		
		private System.Nullable<double> _HealthyIncludeHiper;
		
		private System.Nullable<double> _PreHiperIncludeHiper;
		
		private string _OverweightRiddleStat;
		
		private System.Nullable<double> _NormalOWDate;
		
		private string _ThinOWDate;
		
		private System.Nullable<double> _OverweightOWDate;
		
		private string _FatOWDate;
		
		private System.Nullable<double> _BMIRiddleInclude;
		
		private string _DiabeteRiskFactAssessment;
		
		private System.Nullable<double> _HasNotDRFADate;
		
		private string _HasDFRADate;
		
		private System.Nullable<double> _DiabetRiskFactRiddleInclude;
		
		private System.Nullable<double> _HeartVascularRiskAssessmentDate;
		
		private string _ResultHeartRiskAssess;
		
		private string _Action;
		
		private string _PeriodicCheckupDate;
		
		private string _PeriodicCheckupType;
		
		private System.Nullable<double> _HealthyResChechup;
		
		private string _SmokeStatusResChechup;
		
		private string _SmokeTypeResCheckup;
		
		private string _StartDateSmokeResCheckup;
		
		private string _ResPhysicalActivityResCheckup;
		
		private string _BodyActivityRiskFactResCheckup;
		
		private string _PARQResCheckup;
		
		private string _InterventionBodyActTypeResCheckup;
		
		private System.Nullable<double> _FoodAssessmentResCheckup;
		
		private string _ResFoodActionResCheckup;
		
		private System.Nullable<double> _HeartVescularAssessmentResCheckup;
		
		private string _OsteoprosisResCheckup;
		
		private string _MentalAssessmentResCheckup;
		
		private string _AsthmaAllergyAssessResCheckup;
		
		private string _CancerResCheckup;
		
		private string _CancerStageResCheckup;
		
		private string _RefferMouthTeethResCheckup;
		
		private string _Other1;
		
		private string _Other2;
		
		private string _Other3;
		
		private string _Other4;
		
		private string _Other5;
		
		private string _Other6;
		
		private string _Other7;
		
		private string _Recall;
		
		private string _Following;
		
		private string _RecallFollowingDate1;
		
		private string _RecallFollowingDate2;
		
		private string _RecallFollowingDate3;
		
		private string _ResFollowing1;
		
		private string _ResFollowing2;
		
		private string _ResFollowing3;
		
		private string _CurrentVisitDate;
		
		private string _NextVisitDatePeriCheck;
		
		private string _NextVisitDateChronic;
		
		private string _FollowingLiable;
		
		private string _Empty1;
		
		private string _Empty2;
		
		private System.Nullable<System.Guid> _DepartmentHCIS;
		
		public FileExcel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(255)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="Float")]
		public System.Nullable<double> PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCode", DbType="NVarChar(255)")]
		public string MedicalCode
		{
			get
			{
				return this._MedicalCode;
			}
			set
			{
				if ((this._MedicalCode != value))
				{
					this._MedicalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(255)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Float")]
		public System.Nullable<double> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Management", DbType="NVarChar(255)")]
		public string Management
		{
			get
			{
				return this._Management;
			}
			set
			{
				if ((this._Management != value))
				{
					this._Management = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="NVarChar(255)")]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this._Organization = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNumber", DbType="Float")]
		public System.Nullable<double> DossierNumber
		{
			get
			{
				return this._DossierNumber;
			}
			set
			{
				if ((this._DossierNumber != value))
				{
					this._DossierNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Float")]
		public System.Nullable<double> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Float")]
		public System.Nullable<double> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicFamilyDossier", DbType="NVarChar(255)")]
		public string MedicFamilyDossier
		{
			get
			{
				return this._MedicFamilyDossier;
			}
			set
			{
				if ((this._MedicFamilyDossier != value))
				{
					this._MedicFamilyDossier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveHygieneDossier", DbType="NVarChar(255)")]
		public string ActiveHygieneDossier
		{
			get
			{
				return this._ActiveHygieneDossier;
			}
			set
			{
				if ((this._ActiveHygieneDossier != value))
				{
					this._ActiveHygieneDossier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(255)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this._MedicalCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabeteRiddleStatus", DbType="NVarChar(255)")]
		public string DiabeteRiddleStatus
		{
			get
			{
				return this._DiabeteRiddleStatus;
			}
			set
			{
				if ((this._DiabeteRiddleStatus != value))
				{
					this._DiabeteRiddleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyDRDate", DbType="Float")]
		public System.Nullable<double> HealthyDRDate
		{
			get
			{
				return this._HealthyDRDate;
			}
			set
			{
				if ((this._HealthyDRDate != value))
				{
					this._HealthyDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickDRDate", DbType="NVarChar(255)")]
		public string SickDRDate
		{
			get
			{
				return this._SickDRDate;
			}
			set
			{
				if ((this._SickDRDate != value))
				{
					this._SickDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifgDRDate", DbType="NVarChar(255)")]
		public string ifgDRDate
		{
			get
			{
				return this._ifgDRDate;
			}
			set
			{
				if ((this._ifgDRDate != value))
				{
					this._ifgDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_igtDRDate", DbType="NVarChar(255)")]
		public string igtDRDate
		{
			get
			{
				return this._igtDRDate;
			}
			set
			{
				if ((this._igtDRDate != value))
				{
					this._igtDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyIDR", DbType="Float")]
		public System.Nullable<double> HealthyIDR
		{
			get
			{
				return this._HealthyIDR;
			}
			set
			{
				if ((this._HealthyIDR != value))
				{
					this._HealthyIDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifgIDR", DbType="Float")]
		public System.Nullable<double> ifgIDR
		{
			get
			{
				return this._ifgIDR;
			}
			set
			{
				if ((this._ifgIDR != value))
				{
					this._ifgIDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_igdIDR", DbType="Float")]
		public System.Nullable<double> igdIDR
		{
			get
			{
				return this._igdIDR;
			}
			set
			{
				if ((this._igdIDR != value))
				{
					this._igdIDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodFatDisorderRiddleStatus", DbType="NVarChar(255)")]
		public string BloodFatDisorderRiddleStatus
		{
			get
			{
				return this._BloodFatDisorderRiddleStatus;
			}
			set
			{
				if ((this._BloodFatDisorderRiddleStatus != value))
				{
					this._BloodFatDisorderRiddleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyBFDRDate", DbType="Float")]
		public System.Nullable<double> HealthyBFDRDate
		{
			get
			{
				return this._HealthyBFDRDate;
			}
			set
			{
				if ((this._HealthyBFDRDate != value))
				{
					this._HealthyBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdlBFDRDate", DbType="Float")]
		public System.Nullable<double> LdlBFDRDate
		{
			get
			{
				return this._LdlBFDRDate;
			}
			set
			{
				if ((this._LdlBFDRDate != value))
				{
					this._LdlBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HdlBFDRDate", DbType="Float")]
		public System.Nullable<double> HdlBFDRDate
		{
			get
			{
				return this._HdlBFDRDate;
			}
			set
			{
				if ((this._HdlBFDRDate != value))
				{
					this._HdlBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TgBFDRDate", DbType="Float")]
		public System.Nullable<double> TgBFDRDate
		{
			get
			{
				return this._TgBFDRDate;
			}
			set
			{
				if ((this._TgBFDRDate != value))
				{
					this._TgBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludedBFDR", DbType="Float")]
		public System.Nullable<double> IncludedBFDR
		{
			get
			{
				return this._IncludedBFDR;
			}
			set
			{
				if ((this._IncludedBFDR != value))
				{
					this._IncludedBFDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighBloodPressRiddleStat", DbType="NVarChar(255)")]
		public string HighBloodPressRiddleStat
		{
			get
			{
				return this._HighBloodPressRiddleStat;
			}
			set
			{
				if ((this._HighBloodPressRiddleStat != value))
				{
					this._HighBloodPressRiddleStat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyHBPRDate", DbType="Float")]
		public System.Nullable<double> HealthyHBPRDate
		{
			get
			{
				return this._HealthyHBPRDate;
			}
			set
			{
				if ((this._HealthyHBPRDate != value))
				{
					this._HealthyHBPRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickHBPRDate", DbType="NVarChar(255)")]
		public string SickHBPRDate
		{
			get
			{
				return this._SickHBPRDate;
			}
			set
			{
				if ((this._SickHBPRDate != value))
				{
					this._SickHBPRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreHipertansiyonHBPRDate", DbType="Float")]
		public System.Nullable<double> PreHipertansiyonHBPRDate
		{
			get
			{
				return this._PreHipertansiyonHBPRDate;
			}
			set
			{
				if ((this._PreHipertansiyonHBPRDate != value))
				{
					this._PreHipertansiyonHBPRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyIncludeHiper", DbType="Float")]
		public System.Nullable<double> HealthyIncludeHiper
		{
			get
			{
				return this._HealthyIncludeHiper;
			}
			set
			{
				if ((this._HealthyIncludeHiper != value))
				{
					this._HealthyIncludeHiper = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreHiperIncludeHiper", DbType="Float")]
		public System.Nullable<double> PreHiperIncludeHiper
		{
			get
			{
				return this._PreHiperIncludeHiper;
			}
			set
			{
				if ((this._PreHiperIncludeHiper != value))
				{
					this._PreHiperIncludeHiper = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverweightRiddleStat", DbType="NVarChar(255)")]
		public string OverweightRiddleStat
		{
			get
			{
				return this._OverweightRiddleStat;
			}
			set
			{
				if ((this._OverweightRiddleStat != value))
				{
					this._OverweightRiddleStat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalOWDate", DbType="Float")]
		public System.Nullable<double> NormalOWDate
		{
			get
			{
				return this._NormalOWDate;
			}
			set
			{
				if ((this._NormalOWDate != value))
				{
					this._NormalOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThinOWDate", DbType="NVarChar(255)")]
		public string ThinOWDate
		{
			get
			{
				return this._ThinOWDate;
			}
			set
			{
				if ((this._ThinOWDate != value))
				{
					this._ThinOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverweightOWDate", DbType="Float")]
		public System.Nullable<double> OverweightOWDate
		{
			get
			{
				return this._OverweightOWDate;
			}
			set
			{
				if ((this._OverweightOWDate != value))
				{
					this._OverweightOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatOWDate", DbType="NVarChar(255)")]
		public string FatOWDate
		{
			get
			{
				return this._FatOWDate;
			}
			set
			{
				if ((this._FatOWDate != value))
				{
					this._FatOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMIRiddleInclude", DbType="Float")]
		public System.Nullable<double> BMIRiddleInclude
		{
			get
			{
				return this._BMIRiddleInclude;
			}
			set
			{
				if ((this._BMIRiddleInclude != value))
				{
					this._BMIRiddleInclude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabeteRiskFactAssessment", DbType="NVarChar(255)")]
		public string DiabeteRiskFactAssessment
		{
			get
			{
				return this._DiabeteRiskFactAssessment;
			}
			set
			{
				if ((this._DiabeteRiskFactAssessment != value))
				{
					this._DiabeteRiskFactAssessment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNotDRFADate", DbType="Float")]
		public System.Nullable<double> HasNotDRFADate
		{
			get
			{
				return this._HasNotDRFADate;
			}
			set
			{
				if ((this._HasNotDRFADate != value))
				{
					this._HasNotDRFADate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDFRADate", DbType="NVarChar(255)")]
		public string HasDFRADate
		{
			get
			{
				return this._HasDFRADate;
			}
			set
			{
				if ((this._HasDFRADate != value))
				{
					this._HasDFRADate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabetRiskFactRiddleInclude", DbType="Float")]
		public System.Nullable<double> DiabetRiskFactRiddleInclude
		{
			get
			{
				return this._DiabetRiskFactRiddleInclude;
			}
			set
			{
				if ((this._DiabetRiskFactRiddleInclude != value))
				{
					this._DiabetRiskFactRiddleInclude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartVascularRiskAssessmentDate", DbType="Float")]
		public System.Nullable<double> HeartVascularRiskAssessmentDate
		{
			get
			{
				return this._HeartVascularRiskAssessmentDate;
			}
			set
			{
				if ((this._HeartVascularRiskAssessmentDate != value))
				{
					this._HeartVascularRiskAssessmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultHeartRiskAssess", DbType="NVarChar(255)")]
		public string ResultHeartRiskAssess
		{
			get
			{
				return this._ResultHeartRiskAssess;
			}
			set
			{
				if ((this._ResultHeartRiskAssess != value))
				{
					this._ResultHeartRiskAssess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(255)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCheckupDate", DbType="NVarChar(255)")]
		public string PeriodicCheckupDate
		{
			get
			{
				return this._PeriodicCheckupDate;
			}
			set
			{
				if ((this._PeriodicCheckupDate != value))
				{
					this._PeriodicCheckupDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCheckupType", DbType="NVarChar(255)")]
		public string PeriodicCheckupType
		{
			get
			{
				return this._PeriodicCheckupType;
			}
			set
			{
				if ((this._PeriodicCheckupType != value))
				{
					this._PeriodicCheckupType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyResChechup", DbType="Float")]
		public System.Nullable<double> HealthyResChechup
		{
			get
			{
				return this._HealthyResChechup;
			}
			set
			{
				if ((this._HealthyResChechup != value))
				{
					this._HealthyResChechup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokeStatusResChechup", DbType="NVarChar(255)")]
		public string SmokeStatusResChechup
		{
			get
			{
				return this._SmokeStatusResChechup;
			}
			set
			{
				if ((this._SmokeStatusResChechup != value))
				{
					this._SmokeStatusResChechup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokeTypeResCheckup", DbType="NVarChar(255)")]
		public string SmokeTypeResCheckup
		{
			get
			{
				return this._SmokeTypeResCheckup;
			}
			set
			{
				if ((this._SmokeTypeResCheckup != value))
				{
					this._SmokeTypeResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateSmokeResCheckup", DbType="NVarChar(255)")]
		public string StartDateSmokeResCheckup
		{
			get
			{
				return this._StartDateSmokeResCheckup;
			}
			set
			{
				if ((this._StartDateSmokeResCheckup != value))
				{
					this._StartDateSmokeResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResPhysicalActivityResCheckup", DbType="NVarChar(255)")]
		public string ResPhysicalActivityResCheckup
		{
			get
			{
				return this._ResPhysicalActivityResCheckup;
			}
			set
			{
				if ((this._ResPhysicalActivityResCheckup != value))
				{
					this._ResPhysicalActivityResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyActivityRiskFactResCheckup", DbType="NVarChar(255)")]
		public string BodyActivityRiskFactResCheckup
		{
			get
			{
				return this._BodyActivityRiskFactResCheckup;
			}
			set
			{
				if ((this._BodyActivityRiskFactResCheckup != value))
				{
					this._BodyActivityRiskFactResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARQResCheckup", DbType="NVarChar(255)")]
		public string PARQResCheckup
		{
			get
			{
				return this._PARQResCheckup;
			}
			set
			{
				if ((this._PARQResCheckup != value))
				{
					this._PARQResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterventionBodyActTypeResCheckup", DbType="NVarChar(255)")]
		public string InterventionBodyActTypeResCheckup
		{
			get
			{
				return this._InterventionBodyActTypeResCheckup;
			}
			set
			{
				if ((this._InterventionBodyActTypeResCheckup != value))
				{
					this._InterventionBodyActTypeResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodAssessmentResCheckup", DbType="Float")]
		public System.Nullable<double> FoodAssessmentResCheckup
		{
			get
			{
				return this._FoodAssessmentResCheckup;
			}
			set
			{
				if ((this._FoodAssessmentResCheckup != value))
				{
					this._FoodAssessmentResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFoodActionResCheckup", DbType="NVarChar(255)")]
		public string ResFoodActionResCheckup
		{
			get
			{
				return this._ResFoodActionResCheckup;
			}
			set
			{
				if ((this._ResFoodActionResCheckup != value))
				{
					this._ResFoodActionResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartVescularAssessmentResCheckup", DbType="Float")]
		public System.Nullable<double> HeartVescularAssessmentResCheckup
		{
			get
			{
				return this._HeartVescularAssessmentResCheckup;
			}
			set
			{
				if ((this._HeartVescularAssessmentResCheckup != value))
				{
					this._HeartVescularAssessmentResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsteoprosisResCheckup", DbType="NVarChar(255)")]
		public string OsteoprosisResCheckup
		{
			get
			{
				return this._OsteoprosisResCheckup;
			}
			set
			{
				if ((this._OsteoprosisResCheckup != value))
				{
					this._OsteoprosisResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MentalAssessmentResCheckup", DbType="NVarChar(255)")]
		public string MentalAssessmentResCheckup
		{
			get
			{
				return this._MentalAssessmentResCheckup;
			}
			set
			{
				if ((this._MentalAssessmentResCheckup != value))
				{
					this._MentalAssessmentResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsthmaAllergyAssessResCheckup", DbType="NVarChar(255)")]
		public string AsthmaAllergyAssessResCheckup
		{
			get
			{
				return this._AsthmaAllergyAssessResCheckup;
			}
			set
			{
				if ((this._AsthmaAllergyAssessResCheckup != value))
				{
					this._AsthmaAllergyAssessResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancerResCheckup", DbType="NVarChar(255)")]
		public string CancerResCheckup
		{
			get
			{
				return this._CancerResCheckup;
			}
			set
			{
				if ((this._CancerResCheckup != value))
				{
					this._CancerResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancerStageResCheckup", DbType="NVarChar(255)")]
		public string CancerStageResCheckup
		{
			get
			{
				return this._CancerStageResCheckup;
			}
			set
			{
				if ((this._CancerStageResCheckup != value))
				{
					this._CancerStageResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefferMouthTeethResCheckup", DbType="NVarChar(255)")]
		public string RefferMouthTeethResCheckup
		{
			get
			{
				return this._RefferMouthTeethResCheckup;
			}
			set
			{
				if ((this._RefferMouthTeethResCheckup != value))
				{
					this._RefferMouthTeethResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other1", DbType="NVarChar(255)")]
		public string Other1
		{
			get
			{
				return this._Other1;
			}
			set
			{
				if ((this._Other1 != value))
				{
					this._Other1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other2", DbType="NVarChar(255)")]
		public string Other2
		{
			get
			{
				return this._Other2;
			}
			set
			{
				if ((this._Other2 != value))
				{
					this._Other2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other3", DbType="NVarChar(255)")]
		public string Other3
		{
			get
			{
				return this._Other3;
			}
			set
			{
				if ((this._Other3 != value))
				{
					this._Other3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other4", DbType="NVarChar(255)")]
		public string Other4
		{
			get
			{
				return this._Other4;
			}
			set
			{
				if ((this._Other4 != value))
				{
					this._Other4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other5", DbType="NVarChar(255)")]
		public string Other5
		{
			get
			{
				return this._Other5;
			}
			set
			{
				if ((this._Other5 != value))
				{
					this._Other5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other6", DbType="NVarChar(255)")]
		public string Other6
		{
			get
			{
				return this._Other6;
			}
			set
			{
				if ((this._Other6 != value))
				{
					this._Other6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other7", DbType="NVarChar(255)")]
		public string Other7
		{
			get
			{
				return this._Other7;
			}
			set
			{
				if ((this._Other7 != value))
				{
					this._Other7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recall", DbType="NVarChar(255)")]
		public string Recall
		{
			get
			{
				return this._Recall;
			}
			set
			{
				if ((this._Recall != value))
				{
					this._Recall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Following", DbType="NVarChar(255)")]
		public string Following
		{
			get
			{
				return this._Following;
			}
			set
			{
				if ((this._Following != value))
				{
					this._Following = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallFollowingDate1", DbType="NVarChar(255)")]
		public string RecallFollowingDate1
		{
			get
			{
				return this._RecallFollowingDate1;
			}
			set
			{
				if ((this._RecallFollowingDate1 != value))
				{
					this._RecallFollowingDate1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallFollowingDate2", DbType="NVarChar(255)")]
		public string RecallFollowingDate2
		{
			get
			{
				return this._RecallFollowingDate2;
			}
			set
			{
				if ((this._RecallFollowingDate2 != value))
				{
					this._RecallFollowingDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallFollowingDate3", DbType="NVarChar(255)")]
		public string RecallFollowingDate3
		{
			get
			{
				return this._RecallFollowingDate3;
			}
			set
			{
				if ((this._RecallFollowingDate3 != value))
				{
					this._RecallFollowingDate3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFollowing1", DbType="NVarChar(255)")]
		public string ResFollowing1
		{
			get
			{
				return this._ResFollowing1;
			}
			set
			{
				if ((this._ResFollowing1 != value))
				{
					this._ResFollowing1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFollowing2", DbType="NVarChar(255)")]
		public string ResFollowing2
		{
			get
			{
				return this._ResFollowing2;
			}
			set
			{
				if ((this._ResFollowing2 != value))
				{
					this._ResFollowing2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFollowing3", DbType="NVarChar(255)")]
		public string ResFollowing3
		{
			get
			{
				return this._ResFollowing3;
			}
			set
			{
				if ((this._ResFollowing3 != value))
				{
					this._ResFollowing3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVisitDate", DbType="NVarChar(255)")]
		public string CurrentVisitDate
		{
			get
			{
				return this._CurrentVisitDate;
			}
			set
			{
				if ((this._CurrentVisitDate != value))
				{
					this._CurrentVisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDatePeriCheck", DbType="NVarChar(255)")]
		public string NextVisitDatePeriCheck
		{
			get
			{
				return this._NextVisitDatePeriCheck;
			}
			set
			{
				if ((this._NextVisitDatePeriCheck != value))
				{
					this._NextVisitDatePeriCheck = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDateChronic", DbType="NVarChar(255)")]
		public string NextVisitDateChronic
		{
			get
			{
				return this._NextVisitDateChronic;
			}
			set
			{
				if ((this._NextVisitDateChronic != value))
				{
					this._NextVisitDateChronic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowingLiable", DbType="NVarChar(255)")]
		public string FollowingLiable
		{
			get
			{
				return this._FollowingLiable;
			}
			set
			{
				if ((this._FollowingLiable != value))
				{
					this._FollowingLiable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empty1", DbType="NVarChar(255)")]
		public string Empty1
		{
			get
			{
				return this._Empty1;
			}
			set
			{
				if ((this._Empty1 != value))
				{
					this._Empty1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empty2", DbType="NVarChar(255)")]
		public string Empty2
		{
			get
			{
				return this._Empty2;
			}
			set
			{
				if ((this._Empty2 != value))
				{
					this._Empty2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentHCIS", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentHCIS
		{
			get
			{
				return this._DepartmentHCIS;
			}
			set
			{
				if ((this._DepartmentHCIS != value))
				{
					this._DepartmentHCIS = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_NurceCountCategory")]
	public partial class Vw_NurceCountCategory
	{
		
		private string _Doctor;
		
		private string _CatName;
		
		private System.Nullable<int> _C;
		
		private string _DepName;
		
		private string _ym;
		
		public Vw_NurceCountCategory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="Int")]
		public System.Nullable<int> C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this._C = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepName", DbType="NVarChar(100)")]
		public string DepName
		{
			get
			{
				return this._DepName;
			}
			set
			{
				if ((this._DepName != value))
				{
					this._DepName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ym", DbType="NVarChar(7)")]
		public string ym
		{
			get
			{
				return this._ym;
			}
			set
			{
				if ((this._ym != value))
				{
					this._ym = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _OldParentID;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Name_En;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Shape;
		
		private string _MESCCode_No;
		
		private System.Nullable<bool> _NIS;
		
		private bool _EmergencyFav;
		
		private string _HIXCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _BasicK;
		
		private System.Nullable<double> _SupplementBasicK;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _ResultType;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _RetireeID;
		
		private System.Nullable<double> _DoctorK;
		
		private System.Nullable<int> _DoctorServiceCategory;
		
		private System.Nullable<int> _IDMeasurement;
		
		private string _LastMUserIFullName;
		
		private string _LastModificationTime;
		
		private string _LastModificationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _CreationUserIFullName;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntitySet<PatternM> _PatternMs;
		
		private EntitySet<DrugAllergy> _DrugAllergies;
		
		private EntitySet<DrugHistory> _DrugHistories;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<QA> _QAs1;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<RequestD> _RequestDs;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<DrugAllergy1> _DrugAllergy1s;
		
		private EntitySet<DrugHistory1> _DrugHistory1s;
		
		private EntitySet<ScreeningItem> _ScreeningItems;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnOldParentIDChanging(System.Nullable<int> value);
    partial void OnOldParentIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnName_EnChanging(string value);
    partial void OnName_EnChanged();
    partial void OnCaliforniaCodeChanging(string value);
    partial void OnCaliforniaCodeChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShapeChanging(string value);
    partial void OnShapeChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnEmergencyFavChanging(bool value);
    partial void OnEmergencyFavChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnBasicKChanging(System.Nullable<double> value);
    partial void OnBasicKChanged();
    partial void OnSupplementBasicKChanging(System.Nullable<double> value);
    partial void OnSupplementBasicKChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRetireeIDChanging(System.Nullable<int> value);
    partial void OnRetireeIDChanged();
    partial void OnDoctorKChanging(System.Nullable<double> value);
    partial void OnDoctorKChanged();
    partial void OnDoctorServiceCategoryChanging(System.Nullable<int> value);
    partial void OnDoctorServiceCategoryChanged();
    partial void OnIDMeasurementChanging(System.Nullable<int> value);
    partial void OnIDMeasurementChanged();
    partial void OnLastMUserIFullNameChanging(string value);
    partial void OnLastMUserIFullNameChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnCreationUserIFullNameChanging(string value);
    partial void OnCreationUserIFullNameChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public Service()
		{
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._PatternMs = new EntitySet<PatternM>(new Action<PatternM>(this.attach_PatternMs), new Action<PatternM>(this.detach_PatternMs));
			this._DrugAllergies = new EntitySet<DrugAllergy>(new Action<DrugAllergy>(this.attach_DrugAllergies), new Action<DrugAllergy>(this.detach_DrugAllergies));
			this._DrugHistories = new EntitySet<DrugHistory>(new Action<DrugHistory>(this.attach_DrugHistories), new Action<DrugHistory>(this.detach_DrugHistories));
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._QAs1 = new EntitySet<QA>(new Action<QA>(this.attach_QAs1), new Action<QA>(this.detach_QAs1));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._RequestDs = new EntitySet<RequestD>(new Action<RequestD>(this.attach_RequestDs), new Action<RequestD>(this.detach_RequestDs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._DrugAllergy1s = new EntitySet<DrugAllergy1>(new Action<DrugAllergy1>(this.attach_DrugAllergy1s), new Action<DrugAllergy1>(this.detach_DrugAllergy1s));
			this._DrugHistory1s = new EntitySet<DrugHistory1>(new Action<DrugHistory1>(this.attach_DrugHistory1s), new Action<DrugHistory1>(this.detach_DrugHistory1s));
			this._ScreeningItems = new EntitySet<ScreeningItem>(new Action<ScreeningItem>(this.attach_ScreeningItems), new Action<ScreeningItem>(this.detach_ScreeningItems));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Service1 = default(EntityRef<Service>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldParentID", DbType="Int")]
		public System.Nullable<int> OldParentID
		{
			get
			{
				return this._OldParentID;
			}
			set
			{
				if ((this._OldParentID != value))
				{
					this.OnOldParentIDChanging(value);
					this.SendPropertyChanging();
					this._OldParentID = value;
					this.SendPropertyChanged("OldParentID");
					this.OnOldParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_En", DbType="NVarChar(MAX)")]
		public string Name_En
		{
			get
			{
				return this._Name_En;
			}
			set
			{
				if ((this._Name_En != value))
				{
					this.OnName_EnChanging(value);
					this.SendPropertyChanging();
					this._Name_En = value;
					this.SendPropertyChanged("Name_En");
					this.OnName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this.OnCaliforniaCodeChanging(value);
					this.SendPropertyChanging();
					this._CaliforniaCode = value;
					this.SendPropertyChanged("CaliforniaCode");
					this.OnCaliforniaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this.OnShapeChanging(value);
					this.SendPropertyChanging();
					this._Shape = value;
					this.SendPropertyChanged("Shape");
					this.OnShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFav", DbType="Bit NOT NULL")]
		public bool EmergencyFav
		{
			get
			{
				return this._EmergencyFav;
			}
			set
			{
				if ((this._EmergencyFav != value))
				{
					this.OnEmergencyFavChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFav = value;
					this.SendPropertyChanged("EmergencyFav");
					this.OnEmergencyFavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicK", DbType="Float")]
		public System.Nullable<double> BasicK
		{
			get
			{
				return this._BasicK;
			}
			set
			{
				if ((this._BasicK != value))
				{
					this.OnBasicKChanging(value);
					this.SendPropertyChanging();
					this._BasicK = value;
					this.SendPropertyChanged("BasicK");
					this.OnBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementBasicK", DbType="Float")]
		public System.Nullable<double> SupplementBasicK
		{
			get
			{
				return this._SupplementBasicK;
			}
			set
			{
				if ((this._SupplementBasicK != value))
				{
					this.OnSupplementBasicKChanging(value);
					this.SendPropertyChanging();
					this._SupplementBasicK = value;
					this.SendPropertyChanged("SupplementBasicK");
					this.OnSupplementBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetireeID", DbType="Int")]
		public System.Nullable<int> RetireeID
		{
			get
			{
				return this._RetireeID;
			}
			set
			{
				if ((this._RetireeID != value))
				{
					this.OnRetireeIDChanging(value);
					this.SendPropertyChanging();
					this._RetireeID = value;
					this.SendPropertyChanged("RetireeID");
					this.OnRetireeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorK", DbType="Float")]
		public System.Nullable<double> DoctorK
		{
			get
			{
				return this._DoctorK;
			}
			set
			{
				if ((this._DoctorK != value))
				{
					this.OnDoctorKChanging(value);
					this.SendPropertyChanging();
					this._DoctorK = value;
					this.SendPropertyChanged("DoctorK");
					this.OnDoctorKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorServiceCategory", DbType="Int")]
		public System.Nullable<int> DoctorServiceCategory
		{
			get
			{
				return this._DoctorServiceCategory;
			}
			set
			{
				if ((this._DoctorServiceCategory != value))
				{
					this.OnDoctorServiceCategoryChanging(value);
					this.SendPropertyChanging();
					this._DoctorServiceCategory = value;
					this.SendPropertyChanged("DoctorServiceCategory");
					this.OnDoctorServiceCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMeasurement", DbType="Int")]
		public System.Nullable<int> IDMeasurement
		{
			get
			{
				return this._IDMeasurement;
			}
			set
			{
				if ((this._IDMeasurement != value))
				{
					this.OnIDMeasurementChanging(value);
					this.SendPropertyChanging();
					this._IDMeasurement = value;
					this.SendPropertyChanged("IDMeasurement");
					this.OnIDMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMUserIFullName", DbType="NVarChar(50)")]
		public string LastMUserIFullName
		{
			get
			{
				return this._LastMUserIFullName;
			}
			set
			{
				if ((this._LastMUserIFullName != value))
				{
					this.OnLastMUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastMUserIFullName = value;
					this.SendPropertyChanged("LastMUserIFullName");
					this.OnLastMUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserIFullName", DbType="NVarChar(50)")]
		public string CreationUserIFullName
		{
			get
			{
				return this._CreationUserIFullName;
			}
			set
			{
				if ((this._CreationUserIFullName != value))
				{
					this.OnCreationUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreationUserIFullName = value;
					this.SendPropertyChanged("CreationUserIFullName");
					this.OnCreationUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="ServiceDID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_PatternMs", ThisKey="ID", OtherKey="ServiceMID")]
		public EntitySet<PatternM> PatternMs
		{
			get
			{
				return this._PatternMs;
			}
			set
			{
				this._PatternMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy", Storage="_DrugAllergies", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugAllergy> DrugAllergies
		{
			get
			{
				return this._DrugAllergies;
			}
			set
			{
				this._DrugAllergies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory", Storage="_DrugHistories", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugHistory> DrugHistories
		{
			get
			{
				return this._DrugHistories;
			}
			set
			{
				this._DrugHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_QAs", ThisKey="ID", OtherKey="QuestionnariID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_QAs1", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<QA> QAs1
		{
			get
			{
				return this._QAs1;
			}
			set
			{
				this._QAs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_RequestD", Storage="_RequestDs", ThisKey="ID", OtherKey="Drug")]
		public EntitySet<RequestD> RequestDs
		{
			get
			{
				return this._RequestDs;
			}
			set
			{
				this._RequestDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Services", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy1", Storage="_DrugAllergy1s", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugAllergy1> DrugAllergy1s
		{
			get
			{
				return this._DrugAllergy1s;
			}
			set
			{
				this._DrugAllergy1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory1", Storage="_DrugHistory1s", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugHistory1> DrugHistory1s
		{
			get
			{
				return this._DrugHistory1s;
			}
			set
			{
				this._DrugHistory1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ScreeningItem", Storage="_ScreeningItems", ThisKey="ID", OtherKey="ItmeID")]
		public EntitySet<ScreeningItem> ScreeningItems
		{
			get
			{
				return this._ScreeningItems;
			}
			set
			{
				this._ScreeningItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Departments", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_ServiceCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_DrugAllergy1s(DrugAllergy1 entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugAllergy1s(DrugAllergy1 entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugHistory1s(DrugHistory1 entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugHistory1s(DrugHistory1 entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugAllergy")]
	public partial class DrugAllergy1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public DrugAllergy1()
		{
			this._Service = default(EntityRef<Service>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy1", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugAllergy1s.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugAllergy1s.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy1", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugAllergy1s.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugAllergy1s.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugHistory")]
	public partial class DrugHistory1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<double> _Amount;
		
		private string _Dosage;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDosageChanging(string value);
    partial void OnDosageChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public DrugHistory1()
		{
			this._Service = default(EntityRef<Service>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dosage", DbType="NVarChar(100)")]
		public string Dosage
		{
			get
			{
				return this._Dosage;
			}
			set
			{
				if ((this._Dosage != value))
				{
					this.OnDosageChanging(value);
					this.SendPropertyChanging();
					this._Dosage = value;
					this.SendPropertyChanged("Dosage");
					this.OnDosageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(100)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory1", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugHistory1s.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugHistory1s.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory1", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugHistory1s.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugHistory1s.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonDisease")]
	public partial class PersonDisease1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<int> _Disease;
		
		private string _DateOfDiscovery;
		
		private System.Nullable<System.Guid> _DoctorDiagnostic;
		
		private EntityRef<SpecialDisease> _SpecialDisease;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDiseaseChanging(System.Nullable<int> value);
    partial void OnDiseaseChanged();
    partial void OnDateOfDiscoveryChanging(string value);
    partial void OnDateOfDiscoveryChanged();
    partial void OnDoctorDiagnosticChanging(System.Nullable<System.Guid> value);
    partial void OnDoctorDiagnosticChanged();
    #endregion
		
		public PersonDisease1()
		{
			this._SpecialDisease = default(EntityRef<SpecialDisease>);
			this._Staff = default(EntityRef<Staff>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disease", DbType="Int")]
		public System.Nullable<int> Disease
		{
			get
			{
				return this._Disease;
			}
			set
			{
				if ((this._Disease != value))
				{
					if (this._SpecialDisease.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiseaseChanging(value);
					this.SendPropertyChanging();
					this._Disease = value;
					this.SendPropertyChanged("Disease");
					this.OnDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfDiscovery", DbType="NVarChar(10)")]
		public string DateOfDiscovery
		{
			get
			{
				return this._DateOfDiscovery;
			}
			set
			{
				if ((this._DateOfDiscovery != value))
				{
					this.OnDateOfDiscoveryChanging(value);
					this.SendPropertyChanging();
					this._DateOfDiscovery = value;
					this.SendPropertyChanged("DateOfDiscovery");
					this.OnDateOfDiscoveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDiagnostic", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DoctorDiagnostic
		{
			get
			{
				return this._DoctorDiagnostic;
			}
			set
			{
				if ((this._DoctorDiagnostic != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoctorDiagnosticChanging(value);
					this.SendPropertyChanging();
					this._DoctorDiagnostic = value;
					this.SendPropertyChanged("DoctorDiagnostic");
					this.OnDoctorDiagnosticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialDisease_PersonDisease1", Storage="_SpecialDisease", ThisKey="Disease", OtherKey="ID", IsForeignKey=true)]
		public SpecialDisease SpecialDisease
		{
			get
			{
				return this._SpecialDisease.Entity;
			}
			set
			{
				SpecialDisease previousValue = this._SpecialDisease.Entity;
				if (((previousValue != value) 
							|| (this._SpecialDisease.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialDisease.Entity = null;
						previousValue.PersonDisease1s.Remove(this);
					}
					this._SpecialDisease.Entity = value;
					if ((value != null))
					{
						value.PersonDisease1s.Add(this);
						this._Disease = value.ID;
					}
					else
					{
						this._Disease = default(Nullable<int>);
					}
					this.SendPropertyChanged("SpecialDisease");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PersonDisease1", Storage="_Staff", ThisKey="DoctorDiagnostic", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.PersonDisease1s.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.PersonDisease1s.Add(this);
						this._DoctorDiagnostic = value.ID;
					}
					else
					{
						this._DoctorDiagnostic = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonDisease1", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonDisease1s.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonDisease1s.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private decimal _Price;
		
		private string _Date;
		
		private string _Type;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private bool _PayBack;
		
		private string _Description;
		
		private string _Time;
		
		private System.Nullable<long> _DossierID;
		
		private string _TransactionID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorFullName;
		
		private System.Nullable<int> _ModificatorUserID;
		
		private string _ModificatorFullName;
		
		private System.Nullable<System.Guid> _PayBackID;
		
		private int _SerialNumber;
		
		private string _PayBackType;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _InstallMent;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Payment> _Payment1;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnPayBackChanging(bool value);
    partial void OnPayBackChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorFullNameChanging(string value);
    partial void OnCreatorFullNameChanged();
    partial void OnModificatorUserIDChanging(System.Nullable<int> value);
    partial void OnModificatorUserIDChanged();
    partial void OnModificatorFullNameChanging(string value);
    partial void OnModificatorFullNameChanged();
    partial void OnPayBackIDChanging(System.Nullable<System.Guid> value);
    partial void OnPayBackIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnPayBackTypeChanging(string value);
    partial void OnPayBackTypeChanged();
    partial void OnCaseNumberChanging(System.Nullable<int> value);
    partial void OnCaseNumberChanged();
    partial void OnInstallMentChanging(string value);
    partial void OnInstallMentChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    #endregion
		
		public Payment()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Payment1 = default(EntityRef<Payment>);
			this._Staff = default(EntityRef<Staff>);
			this._Dossier = default(EntityRef<Dossier>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBack", DbType="Bit NOT NULL")]
		public bool PayBack
		{
			get
			{
				return this._PayBack;
			}
			set
			{
				if ((this._PayBack != value))
				{
					this.OnPayBackChanging(value);
					this.SendPropertyChanging();
					this._PayBack = value;
					this.SendPropertyChanged("PayBack");
					this.OnPayBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorFullName", DbType="NVarChar(100)")]
		public string CreatorFullName
		{
			get
			{
				return this._CreatorFullName;
			}
			set
			{
				if ((this._CreatorFullName != value))
				{
					this.OnCreatorFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorFullName = value;
					this.SendPropertyChanged("CreatorFullName");
					this.OnCreatorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorUserID", DbType="Int")]
		public System.Nullable<int> ModificatorUserID
		{
			get
			{
				return this._ModificatorUserID;
			}
			set
			{
				if ((this._ModificatorUserID != value))
				{
					this.OnModificatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModificatorUserID = value;
					this.SendPropertyChanged("ModificatorUserID");
					this.OnModificatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorFullName", DbType="NVarChar(100)")]
		public string ModificatorFullName
		{
			get
			{
				return this._ModificatorFullName;
			}
			set
			{
				if ((this._ModificatorFullName != value))
				{
					this.OnModificatorFullNameChanging(value);
					this.SendPropertyChanging();
					this._ModificatorFullName = value;
					this.SendPropertyChanged("ModificatorFullName");
					this.OnModificatorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayBackID
		{
			get
			{
				return this._PayBackID;
			}
			set
			{
				if ((this._PayBackID != value))
				{
					if (this._Payment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayBackIDChanging(value);
					this.SendPropertyChanging();
					this._PayBackID = value;
					this.SendPropertyChanged("PayBackID");
					this.OnPayBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackType", DbType="NVarChar(20)")]
		public string PayBackType
		{
			get
			{
				return this._PayBackType;
			}
			set
			{
				if ((this._PayBackType != value))
				{
					this.OnPayBackTypeChanging(value);
					this.SendPropertyChanging();
					this._PayBackType = value;
					this.SendPropertyChanged("PayBackType");
					this.OnPayBackTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this.OnCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._CaseNumber = value;
					this.SendPropertyChanged("CaseNumber");
					this.OnCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMent", DbType="NVarChar(50)")]
		public string InstallMent
		{
			get
			{
				return this._InstallMent;
			}
			set
			{
				if ((this._InstallMent != value))
				{
					this.OnInstallMentChanging(value);
					this.SendPropertyChanging();
					this._InstallMent = value;
					this.SendPropertyChanged("InstallMent");
					this.OnInstallMentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment", Storage="_Payments", ThisKey="ID", OtherKey="PayBackID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment", Storage="_Payment1", ThisKey="PayBackID", OtherKey="ID", IsForeignKey=true)]
		public Payment Payment1
		{
			get
			{
				return this._Payment1.Entity;
			}
			set
			{
				Payment previousValue = this._Payment1.Entity;
				if (((previousValue != value) 
							|| (this._Payment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment1.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Payment1.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PayBackID = value.ID;
					}
					else
					{
						this._PayBackID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Payment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Payment", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Payment", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Payment", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment1 = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Triage")]
	public partial class Triage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private string _AccidentDate;
		
		private string _AccidentTime;
		
		private string _AccidentLocation;
		
		private string _LoginDate;
		
		private string _LoginTime;
		
		private string _TurnToVisit;
		
		private string _PreviousVisit;
		
		private string _FirstVisitTime;
		
		private string _ActionTime;
		
		private string _ActionType;
		
		private string _HowToRefer;
		
		private string _MainComplaint;
		
		private string _AllergyHistory;
		
		private string _ConsciousnessLevel;
		
		private bool _Lethargy;
		
		private bool _Pain;
		
		private string _MedicalHistory;
		
		private string _MedicineHistory;
		
		private string _BP;
		
		private string _PR;
		
		private string _RR;
		
		private string _T;
		
		private string _SPO2;
		
		private bool _Facility;
		
		private string _FacilityCount;
		
		private string _Levell;
		
		private string _ReferTo;
		
		private string _ReferenceDate;
		
		private string _ReferenceTime;
		
		private string _Time;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _IWEW;
		
		private EntitySet<TriageCPR> _TriageCPRs;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnAccidentDateChanging(string value);
    partial void OnAccidentDateChanged();
    partial void OnAccidentTimeChanging(string value);
    partial void OnAccidentTimeChanged();
    partial void OnAccidentLocationChanging(string value);
    partial void OnAccidentLocationChanged();
    partial void OnLoginDateChanging(string value);
    partial void OnLoginDateChanged();
    partial void OnLoginTimeChanging(string value);
    partial void OnLoginTimeChanged();
    partial void OnTurnToVisitChanging(string value);
    partial void OnTurnToVisitChanged();
    partial void OnPreviousVisitChanging(string value);
    partial void OnPreviousVisitChanged();
    partial void OnFirstVisitTimeChanging(string value);
    partial void OnFirstVisitTimeChanged();
    partial void OnActionTimeChanging(string value);
    partial void OnActionTimeChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnHowToReferChanging(string value);
    partial void OnHowToReferChanged();
    partial void OnMainComplaintChanging(string value);
    partial void OnMainComplaintChanged();
    partial void OnAllergyHistoryChanging(string value);
    partial void OnAllergyHistoryChanged();
    partial void OnConsciousnessLevelChanging(string value);
    partial void OnConsciousnessLevelChanged();
    partial void OnLethargyChanging(bool value);
    partial void OnLethargyChanged();
    partial void OnPainChanging(bool value);
    partial void OnPainChanged();
    partial void OnMedicalHistoryChanging(string value);
    partial void OnMedicalHistoryChanged();
    partial void OnMedicineHistoryChanging(string value);
    partial void OnMedicineHistoryChanged();
    partial void OnBPChanging(string value);
    partial void OnBPChanged();
    partial void OnPRChanging(string value);
    partial void OnPRChanged();
    partial void OnRRChanging(string value);
    partial void OnRRChanged();
    partial void OnTChanging(string value);
    partial void OnTChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnFacilityChanging(bool value);
    partial void OnFacilityChanged();
    partial void OnFacilityCountChanging(string value);
    partial void OnFacilityCountChanged();
    partial void OnLevellChanging(string value);
    partial void OnLevellChanged();
    partial void OnReferToChanging(string value);
    partial void OnReferToChanged();
    partial void OnReferenceDateChanging(string value);
    partial void OnReferenceDateChanged();
    partial void OnReferenceTimeChanging(string value);
    partial void OnReferenceTimeChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnIWEWChanging(string value);
    partial void OnIWEWChanged();
    #endregion
		
		public Triage()
		{
			this._TriageCPRs = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs), new Action<TriageCPR>(this.detach_TriageCPRs));
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentDate", DbType="NVarChar(10)")]
		public string AccidentDate
		{
			get
			{
				return this._AccidentDate;
			}
			set
			{
				if ((this._AccidentDate != value))
				{
					this.OnAccidentDateChanging(value);
					this.SendPropertyChanging();
					this._AccidentDate = value;
					this.SendPropertyChanged("AccidentDate");
					this.OnAccidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentTime", DbType="NVarChar(8)")]
		public string AccidentTime
		{
			get
			{
				return this._AccidentTime;
			}
			set
			{
				if ((this._AccidentTime != value))
				{
					this.OnAccidentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccidentTime = value;
					this.SendPropertyChanged("AccidentTime");
					this.OnAccidentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentLocation", DbType="NVarChar(500)")]
		public string AccidentLocation
		{
			get
			{
				return this._AccidentLocation;
			}
			set
			{
				if ((this._AccidentLocation != value))
				{
					this.OnAccidentLocationChanging(value);
					this.SendPropertyChanging();
					this._AccidentLocation = value;
					this.SendPropertyChanged("AccidentLocation");
					this.OnAccidentLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="NVarChar(10)")]
		public string LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="NVarChar(8)")]
		public string LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnToVisit", DbType="NVarChar(10)")]
		public string TurnToVisit
		{
			get
			{
				return this._TurnToVisit;
			}
			set
			{
				if ((this._TurnToVisit != value))
				{
					this.OnTurnToVisitChanging(value);
					this.SendPropertyChanging();
					this._TurnToVisit = value;
					this.SendPropertyChanged("TurnToVisit");
					this.OnTurnToVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousVisit", DbType="NVarChar(50)")]
		public string PreviousVisit
		{
			get
			{
				return this._PreviousVisit;
			}
			set
			{
				if ((this._PreviousVisit != value))
				{
					this.OnPreviousVisitChanging(value);
					this.SendPropertyChanging();
					this._PreviousVisit = value;
					this.SendPropertyChanged("PreviousVisit");
					this.OnPreviousVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstVisitTime", DbType="NVarChar(8)")]
		public string FirstVisitTime
		{
			get
			{
				return this._FirstVisitTime;
			}
			set
			{
				if ((this._FirstVisitTime != value))
				{
					this.OnFirstVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._FirstVisitTime = value;
					this.SendPropertyChanged("FirstVisitTime");
					this.OnFirstVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTime", DbType="NVarChar(8)")]
		public string ActionTime
		{
			get
			{
				return this._ActionTime;
			}
			set
			{
				if ((this._ActionTime != value))
				{
					this.OnActionTimeChanging(value);
					this.SendPropertyChanging();
					this._ActionTime = value;
					this.SendPropertyChanged("ActionTime");
					this.OnActionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(50)")]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowToRefer", DbType="NVarChar(100)")]
		public string HowToRefer
		{
			get
			{
				return this._HowToRefer;
			}
			set
			{
				if ((this._HowToRefer != value))
				{
					this.OnHowToReferChanging(value);
					this.SendPropertyChanging();
					this._HowToRefer = value;
					this.SendPropertyChanged("HowToRefer");
					this.OnHowToReferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainComplaint", DbType="NVarChar(500)")]
		public string MainComplaint
		{
			get
			{
				return this._MainComplaint;
			}
			set
			{
				if ((this._MainComplaint != value))
				{
					this.OnMainComplaintChanging(value);
					this.SendPropertyChanging();
					this._MainComplaint = value;
					this.SendPropertyChanged("MainComplaint");
					this.OnMainComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyHistory", DbType="NVarChar(500)")]
		public string AllergyHistory
		{
			get
			{
				return this._AllergyHistory;
			}
			set
			{
				if ((this._AllergyHistory != value))
				{
					this.OnAllergyHistoryChanging(value);
					this.SendPropertyChanging();
					this._AllergyHistory = value;
					this.SendPropertyChanged("AllergyHistory");
					this.OnAllergyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsciousnessLevel", DbType="NVarChar(30)")]
		public string ConsciousnessLevel
		{
			get
			{
				return this._ConsciousnessLevel;
			}
			set
			{
				if ((this._ConsciousnessLevel != value))
				{
					this.OnConsciousnessLevelChanging(value);
					this.SendPropertyChanging();
					this._ConsciousnessLevel = value;
					this.SendPropertyChanged("ConsciousnessLevel");
					this.OnConsciousnessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lethargy", DbType="Bit NOT NULL")]
		public bool Lethargy
		{
			get
			{
				return this._Lethargy;
			}
			set
			{
				if ((this._Lethargy != value))
				{
					this.OnLethargyChanging(value);
					this.SendPropertyChanging();
					this._Lethargy = value;
					this.SendPropertyChanged("Lethargy");
					this.OnLethargyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pain", DbType="Bit NOT NULL")]
		public bool Pain
		{
			get
			{
				return this._Pain;
			}
			set
			{
				if ((this._Pain != value))
				{
					this.OnPainChanging(value);
					this.SendPropertyChanging();
					this._Pain = value;
					this.SendPropertyChanged("Pain");
					this.OnPainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistory", DbType="NVarChar(200)")]
		public string MedicalHistory
		{
			get
			{
				return this._MedicalHistory;
			}
			set
			{
				if ((this._MedicalHistory != value))
				{
					this.OnMedicalHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistory = value;
					this.SendPropertyChanged("MedicalHistory");
					this.OnMedicalHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineHistory", DbType="NVarChar(200)")]
		public string MedicineHistory
		{
			get
			{
				return this._MedicineHistory;
			}
			set
			{
				if ((this._MedicineHistory != value))
				{
					this.OnMedicineHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicineHistory = value;
					this.SendPropertyChanged("MedicineHistory");
					this.OnMedicineHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BP", DbType="NVarChar(20)")]
		public string BP
		{
			get
			{
				return this._BP;
			}
			set
			{
				if ((this._BP != value))
				{
					this.OnBPChanging(value);
					this.SendPropertyChanging();
					this._BP = value;
					this.SendPropertyChanged("BP");
					this.OnBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="NVarChar(20)")]
		public string PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RR", DbType="NVarChar(20)")]
		public string RR
		{
			get
			{
				return this._RR;
			}
			set
			{
				if ((this._RR != value))
				{
					this.OnRRChanging(value);
					this.SendPropertyChanging();
					this._RR = value;
					this.SendPropertyChanged("RR");
					this.OnRRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T", DbType="NVarChar(20)")]
		public string T
		{
			get
			{
				return this._T;
			}
			set
			{
				if ((this._T != value))
				{
					this.OnTChanging(value);
					this.SendPropertyChanging();
					this._T = value;
					this.SendPropertyChanged("T");
					this.OnTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(20)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="Bit NOT NULL")]
		public bool Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this.OnFacilityChanging(value);
					this.SendPropertyChanging();
					this._Facility = value;
					this.SendPropertyChanged("Facility");
					this.OnFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCount", DbType="NVarChar(10)")]
		public string FacilityCount
		{
			get
			{
				return this._FacilityCount;
			}
			set
			{
				if ((this._FacilityCount != value))
				{
					this.OnFacilityCountChanging(value);
					this.SendPropertyChanging();
					this._FacilityCount = value;
					this.SendPropertyChanged("FacilityCount");
					this.OnFacilityCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Levell", DbType="NVarChar(10)")]
		public string Levell
		{
			get
			{
				return this._Levell;
			}
			set
			{
				if ((this._Levell != value))
				{
					this.OnLevellChanging(value);
					this.SendPropertyChanging();
					this._Levell = value;
					this.SendPropertyChanged("Levell");
					this.OnLevellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferTo", DbType="NVarChar(10)")]
		public string ReferTo
		{
			get
			{
				return this._ReferTo;
			}
			set
			{
				if ((this._ReferTo != value))
				{
					this.OnReferToChanging(value);
					this.SendPropertyChanging();
					this._ReferTo = value;
					this.SendPropertyChanged("ReferTo");
					this.OnReferToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDate", DbType="NVarChar(10)")]
		public string ReferenceDate
		{
			get
			{
				return this._ReferenceDate;
			}
			set
			{
				if ((this._ReferenceDate != value))
				{
					this.OnReferenceDateChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDate = value;
					this.SendPropertyChanged("ReferenceDate");
					this.OnReferenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceTime", DbType="NVarChar(8)")]
		public string ReferenceTime
		{
			get
			{
				return this._ReferenceTime;
			}
			set
			{
				if ((this._ReferenceTime != value))
				{
					this.OnReferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._ReferenceTime = value;
					this.SendPropertyChanged("ReferenceTime");
					this.OnReferenceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IWEW", DbType="NVarChar(50)")]
		public string IWEW
		{
			get
			{
				return this._IWEW;
			}
			set
			{
				if ((this._IWEW != value))
				{
					this.OnIWEWChanging(value);
					this.SendPropertyChanging();
					this._IWEW = value;
					this.SendPropertyChanged("IWEW");
					this.OnIWEWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageCPR", Storage="_TriageCPRs", ThisKey="ID", OtherKey="TriageID")]
		public EntitySet<TriageCPR> TriageCPRs
		{
			get
			{
				return this._TriageCPRs;
			}
			set
			{
				this._TriageCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="TriageID")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Triage", Storage="_GivenServiceM", ThisKey="GivenMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Triages.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Triages.Add(this);
						this._GivenMID = value.ID;
					}
					else
					{
						this._GivenMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Triage", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Triages.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Triages.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = this;
		}
		
		private void detach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = null;
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageCPR")]
	public partial class TriageCPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _IDStaffpresent;
		
		private System.Nullable<System.Guid> _IDStaffAnesthesia;
		
		private System.Nullable<System.Guid> _IDStaffInternal;
		
		private string _OtherStaff;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private string _timeCode;
		
		private string _DateStopHeart;
		
		private string _timeStopHeart;
		
		private string _timePresenceCPR;
		
		private string _CauseStopHeart;
		
		private string _ConditionDescription;
		
		private string _timeEnd;
		
		private System.Nullable<bool> _CprUnsuccessful;
		
		private string _Result;
		
		private string _causeCprUnsuccessful;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Triage> _Triage;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnIDStaffpresentChanging(System.Nullable<System.Guid> value);
    partial void OnIDStaffpresentChanged();
    partial void OnIDStaffAnesthesiaChanging(System.Nullable<System.Guid> value);
    partial void OnIDStaffAnesthesiaChanged();
    partial void OnIDStaffInternalChanging(System.Nullable<System.Guid> value);
    partial void OnIDStaffInternalChanged();
    partial void OnOtherStaffChanging(string value);
    partial void OnOtherStaffChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OntimeCodeChanging(string value);
    partial void OntimeCodeChanged();
    partial void OnDateStopHeartChanging(string value);
    partial void OnDateStopHeartChanged();
    partial void OntimeStopHeartChanging(string value);
    partial void OntimeStopHeartChanged();
    partial void OntimePresenceCPRChanging(string value);
    partial void OntimePresenceCPRChanged();
    partial void OnCauseStopHeartChanging(string value);
    partial void OnCauseStopHeartChanged();
    partial void OnConditionDescriptionChanging(string value);
    partial void OnConditionDescriptionChanged();
    partial void OntimeEndChanging(string value);
    partial void OntimeEndChanged();
    partial void OnCprUnsuccessfulChanging(System.Nullable<bool> value);
    partial void OnCprUnsuccessfulChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OncauseCprUnsuccessfulChanging(string value);
    partial void OncauseCprUnsuccessfulChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageCPR()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Triage = default(EntityRef<Triage>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStaffpresent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDStaffpresent
		{
			get
			{
				return this._IDStaffpresent;
			}
			set
			{
				if ((this._IDStaffpresent != value))
				{
					if ((this._Staff.HasLoadedOrAssignedValue || this._Staff2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStaffpresentChanging(value);
					this.SendPropertyChanging();
					this._IDStaffpresent = value;
					this.SendPropertyChanged("IDStaffpresent");
					this.OnIDStaffpresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStaffAnesthesia", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDStaffAnesthesia
		{
			get
			{
				return this._IDStaffAnesthesia;
			}
			set
			{
				if ((this._IDStaffAnesthesia != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStaffAnesthesiaChanging(value);
					this.SendPropertyChanging();
					this._IDStaffAnesthesia = value;
					this.SendPropertyChanged("IDStaffAnesthesia");
					this.OnIDStaffAnesthesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStaffInternal", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDStaffInternal
		{
			get
			{
				return this._IDStaffInternal;
			}
			set
			{
				if ((this._IDStaffInternal != value))
				{
					this.OnIDStaffInternalChanging(value);
					this.SendPropertyChanging();
					this._IDStaffInternal = value;
					this.SendPropertyChanged("IDStaffInternal");
					this.OnIDStaffInternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherStaff", DbType="NVarChar(MAX)")]
		public string OtherStaff
		{
			get
			{
				return this._OtherStaff;
			}
			set
			{
				if ((this._OtherStaff != value))
				{
					this.OnOtherStaffChanging(value);
					this.SendPropertyChanging();
					this._OtherStaff = value;
					this.SendPropertyChanged("OtherStaff");
					this.OnOtherStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					if (this._Triage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeCode", DbType="NVarChar(8)")]
		public string timeCode
		{
			get
			{
				return this._timeCode;
			}
			set
			{
				if ((this._timeCode != value))
				{
					this.OntimeCodeChanging(value);
					this.SendPropertyChanging();
					this._timeCode = value;
					this.SendPropertyChanged("timeCode");
					this.OntimeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStopHeart", DbType="NVarChar(10)")]
		public string DateStopHeart
		{
			get
			{
				return this._DateStopHeart;
			}
			set
			{
				if ((this._DateStopHeart != value))
				{
					this.OnDateStopHeartChanging(value);
					this.SendPropertyChanging();
					this._DateStopHeart = value;
					this.SendPropertyChanged("DateStopHeart");
					this.OnDateStopHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStopHeart", DbType="NVarChar(8)")]
		public string timeStopHeart
		{
			get
			{
				return this._timeStopHeart;
			}
			set
			{
				if ((this._timeStopHeart != value))
				{
					this.OntimeStopHeartChanging(value);
					this.SendPropertyChanging();
					this._timeStopHeart = value;
					this.SendPropertyChanged("timeStopHeart");
					this.OntimeStopHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePresenceCPR", DbType="NVarChar(8)")]
		public string timePresenceCPR
		{
			get
			{
				return this._timePresenceCPR;
			}
			set
			{
				if ((this._timePresenceCPR != value))
				{
					this.OntimePresenceCPRChanging(value);
					this.SendPropertyChanging();
					this._timePresenceCPR = value;
					this.SendPropertyChanged("timePresenceCPR");
					this.OntimePresenceCPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseStopHeart", DbType="NVarChar(100)")]
		public string CauseStopHeart
		{
			get
			{
				return this._CauseStopHeart;
			}
			set
			{
				if ((this._CauseStopHeart != value))
				{
					this.OnCauseStopHeartChanging(value);
					this.SendPropertyChanging();
					this._CauseStopHeart = value;
					this.SendPropertyChanged("CauseStopHeart");
					this.OnCauseStopHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDescription", DbType="NVarChar(100)")]
		public string ConditionDescription
		{
			get
			{
				return this._ConditionDescription;
			}
			set
			{
				if ((this._ConditionDescription != value))
				{
					this.OnConditionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ConditionDescription = value;
					this.SendPropertyChanged("ConditionDescription");
					this.OnConditionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeEnd", DbType="NVarChar(8)")]
		public string timeEnd
		{
			get
			{
				return this._timeEnd;
			}
			set
			{
				if ((this._timeEnd != value))
				{
					this.OntimeEndChanging(value);
					this.SendPropertyChanging();
					this._timeEnd = value;
					this.SendPropertyChanged("timeEnd");
					this.OntimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CprUnsuccessful", DbType="Bit")]
		public System.Nullable<bool> CprUnsuccessful
		{
			get
			{
				return this._CprUnsuccessful;
			}
			set
			{
				if ((this._CprUnsuccessful != value))
				{
					this.OnCprUnsuccessfulChanging(value);
					this.SendPropertyChanging();
					this._CprUnsuccessful = value;
					this.SendPropertyChanged("CprUnsuccessful");
					this.OnCprUnsuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_causeCprUnsuccessful", DbType="NVarChar(MAX)")]
		public string causeCprUnsuccessful
		{
			get
			{
				return this._causeCprUnsuccessful;
			}
			set
			{
				if ((this._causeCprUnsuccessful != value))
				{
					this.OncauseCprUnsuccessfulChanging(value);
					this.SendPropertyChanging();
					this._causeCprUnsuccessful = value;
					this.SendPropertyChanged("causeCprUnsuccessful");
					this.OncauseCprUnsuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR", Storage="_Staff", ThisKey="IDStaffpresent", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.TriageCPRs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs.Add(this);
						this._IDStaffpresent = value.ID;
					}
					else
					{
						this._IDStaffpresent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR1", Storage="_Staff1", ThisKey="IDStaffAnesthesia", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.TriageCPRs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs1.Add(this);
						this._IDStaffAnesthesia = value.ID;
					}
					else
					{
						this._IDStaffAnesthesia = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR2", Storage="_Staff2", ThisKey="IDStaffpresent", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.TriageCPRs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs2.Add(this);
						this._IDStaffpresent = value.ID;
					}
					else
					{
						this._IDStaffpresent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageCPR", Storage="_Triage", ThisKey="TriageID", OtherKey="ID", IsForeignKey=true)]
		public Triage Triage
		{
			get
			{
				return this._Triage.Entity;
			}
			set
			{
				Triage previousValue = this._Triage.Entity;
				if (((previousValue != value) 
							|| (this._Triage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Triage.Entity = null;
						previousValue.TriageCPRs.Remove(this);
					}
					this._Triage.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs.Add(this);
						this._TriageID = value.ID;
					}
					else
					{
						this._TriageID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Triage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageCPR", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageCPRs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageCPRType")]
	public partial class TriageCPRType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private string _Title;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageCPRType()
		{
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TriageCPRType_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="TyPeID")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.TriageCPRType = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.TriageCPRType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageDossierEM")]
	public partial class TriageDossierEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private string _redcartDate;
		
		private string _redcarttime;
		
		private string _datebastrimovaghat;
		
		private string _timebastarimovaghat;
		
		private string _datebastrighati;
		
		private string _timebastarighati;
		
		private string _dateezam;
		
		private string _timeEzam;
		
		private string _dateOutpation;
		
		private string _timeOutpation;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private bool _Lackofvitalsigns;
		
		private string _Typeofpatient;
		
		private bool _Leavepersonalconsent;
		
		private string _Causetoleave;
		
		private string _Descrptionleave;
		
		private bool _AgeUnder12;
		
		private string _AdmitType;
		
		private string _Detach;
		
		private bool _Blood;
		
		private bool _OperaingRoom;
		
		private bool _Rejecttreatment;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OnredcartDateChanging(string value);
    partial void OnredcartDateChanged();
    partial void OnredcarttimeChanging(string value);
    partial void OnredcarttimeChanged();
    partial void OndatebastrimovaghatChanging(string value);
    partial void OndatebastrimovaghatChanged();
    partial void OntimebastarimovaghatChanging(string value);
    partial void OntimebastarimovaghatChanged();
    partial void OndatebastrighatiChanging(string value);
    partial void OndatebastrighatiChanged();
    partial void OntimebastarighatiChanging(string value);
    partial void OntimebastarighatiChanged();
    partial void OndateezamChanging(string value);
    partial void OndateezamChanged();
    partial void OntimeEzamChanging(string value);
    partial void OntimeEzamChanged();
    partial void OndateOutpationChanging(string value);
    partial void OndateOutpationChanged();
    partial void OntimeOutpationChanging(string value);
    partial void OntimeOutpationChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnLackofvitalsignsChanging(bool value);
    partial void OnLackofvitalsignsChanged();
    partial void OnTypeofpatientChanging(string value);
    partial void OnTypeofpatientChanged();
    partial void OnLeavepersonalconsentChanging(bool value);
    partial void OnLeavepersonalconsentChanged();
    partial void OnCausetoleaveChanging(string value);
    partial void OnCausetoleaveChanged();
    partial void OnDescrptionleaveChanging(string value);
    partial void OnDescrptionleaveChanged();
    partial void OnAgeUnder12Changing(bool value);
    partial void OnAgeUnder12Changed();
    partial void OnAdmitTypeChanging(string value);
    partial void OnAdmitTypeChanged();
    partial void OnDetachChanging(string value);
    partial void OnDetachChanged();
    partial void OnBloodChanging(bool value);
    partial void OnBloodChanged();
    partial void OnOperaingRoomChanging(bool value);
    partial void OnOperaingRoomChanged();
    partial void OnRejecttreatmentChanging(bool value);
    partial void OnRejecttreatmentChanged();
    #endregion
		
		public TriageDossierEM()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redcartDate", DbType="NVarChar(10)")]
		public string redcartDate
		{
			get
			{
				return this._redcartDate;
			}
			set
			{
				if ((this._redcartDate != value))
				{
					this.OnredcartDateChanging(value);
					this.SendPropertyChanging();
					this._redcartDate = value;
					this.SendPropertyChanged("redcartDate");
					this.OnredcartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redcarttime", DbType="NVarChar(8)")]
		public string redcarttime
		{
			get
			{
				return this._redcarttime;
			}
			set
			{
				if ((this._redcarttime != value))
				{
					this.OnredcarttimeChanging(value);
					this.SendPropertyChanging();
					this._redcarttime = value;
					this.SendPropertyChanged("redcarttime");
					this.OnredcarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebastrimovaghat", DbType="NVarChar(10)")]
		public string datebastrimovaghat
		{
			get
			{
				return this._datebastrimovaghat;
			}
			set
			{
				if ((this._datebastrimovaghat != value))
				{
					this.OndatebastrimovaghatChanging(value);
					this.SendPropertyChanging();
					this._datebastrimovaghat = value;
					this.SendPropertyChanged("datebastrimovaghat");
					this.OndatebastrimovaghatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timebastarimovaghat", DbType="NVarChar(8)")]
		public string timebastarimovaghat
		{
			get
			{
				return this._timebastarimovaghat;
			}
			set
			{
				if ((this._timebastarimovaghat != value))
				{
					this.OntimebastarimovaghatChanging(value);
					this.SendPropertyChanging();
					this._timebastarimovaghat = value;
					this.SendPropertyChanged("timebastarimovaghat");
					this.OntimebastarimovaghatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebastrighati", DbType="NVarChar(10)")]
		public string datebastrighati
		{
			get
			{
				return this._datebastrighati;
			}
			set
			{
				if ((this._datebastrighati != value))
				{
					this.OndatebastrighatiChanging(value);
					this.SendPropertyChanging();
					this._datebastrighati = value;
					this.SendPropertyChanged("datebastrighati");
					this.OndatebastrighatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timebastarighati", DbType="NVarChar(8)")]
		public string timebastarighati
		{
			get
			{
				return this._timebastarighati;
			}
			set
			{
				if ((this._timebastarighati != value))
				{
					this.OntimebastarighatiChanging(value);
					this.SendPropertyChanging();
					this._timebastarighati = value;
					this.SendPropertyChanged("timebastarighati");
					this.OntimebastarighatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateezam", DbType="NVarChar(10)")]
		public string dateezam
		{
			get
			{
				return this._dateezam;
			}
			set
			{
				if ((this._dateezam != value))
				{
					this.OndateezamChanging(value);
					this.SendPropertyChanging();
					this._dateezam = value;
					this.SendPropertyChanged("dateezam");
					this.OndateezamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeEzam", DbType="NVarChar(8)")]
		public string timeEzam
		{
			get
			{
				return this._timeEzam;
			}
			set
			{
				if ((this._timeEzam != value))
				{
					this.OntimeEzamChanging(value);
					this.SendPropertyChanging();
					this._timeEzam = value;
					this.SendPropertyChanged("timeEzam");
					this.OntimeEzamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOutpation", DbType="NVarChar(10)")]
		public string dateOutpation
		{
			get
			{
				return this._dateOutpation;
			}
			set
			{
				if ((this._dateOutpation != value))
				{
					this.OndateOutpationChanging(value);
					this.SendPropertyChanging();
					this._dateOutpation = value;
					this.SendPropertyChanged("dateOutpation");
					this.OndateOutpationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOutpation", DbType="NVarChar(8)")]
		public string timeOutpation
		{
			get
			{
				return this._timeOutpation;
			}
			set
			{
				if ((this._timeOutpation != value))
				{
					this.OntimeOutpationChanging(value);
					this.SendPropertyChanging();
					this._timeOutpation = value;
					this.SendPropertyChanged("timeOutpation");
					this.OntimeOutpationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lackofvitalsigns", DbType="Bit NOT NULL")]
		public bool Lackofvitalsigns
		{
			get
			{
				return this._Lackofvitalsigns;
			}
			set
			{
				if ((this._Lackofvitalsigns != value))
				{
					this.OnLackofvitalsignsChanging(value);
					this.SendPropertyChanging();
					this._Lackofvitalsigns = value;
					this.SendPropertyChanged("Lackofvitalsigns");
					this.OnLackofvitalsignsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typeofpatient", DbType="NVarChar(50)")]
		public string Typeofpatient
		{
			get
			{
				return this._Typeofpatient;
			}
			set
			{
				if ((this._Typeofpatient != value))
				{
					this.OnTypeofpatientChanging(value);
					this.SendPropertyChanging();
					this._Typeofpatient = value;
					this.SendPropertyChanged("Typeofpatient");
					this.OnTypeofpatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leavepersonalconsent", DbType="Bit NOT NULL")]
		public bool Leavepersonalconsent
		{
			get
			{
				return this._Leavepersonalconsent;
			}
			set
			{
				if ((this._Leavepersonalconsent != value))
				{
					this.OnLeavepersonalconsentChanging(value);
					this.SendPropertyChanging();
					this._Leavepersonalconsent = value;
					this.SendPropertyChanged("Leavepersonalconsent");
					this.OnLeavepersonalconsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Causetoleave", DbType="NVarChar(50)")]
		public string Causetoleave
		{
			get
			{
				return this._Causetoleave;
			}
			set
			{
				if ((this._Causetoleave != value))
				{
					this.OnCausetoleaveChanging(value);
					this.SendPropertyChanging();
					this._Causetoleave = value;
					this.SendPropertyChanged("Causetoleave");
					this.OnCausetoleaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrptionleave", DbType="NVarChar(50)")]
		public string Descrptionleave
		{
			get
			{
				return this._Descrptionleave;
			}
			set
			{
				if ((this._Descrptionleave != value))
				{
					this.OnDescrptionleaveChanging(value);
					this.SendPropertyChanging();
					this._Descrptionleave = value;
					this.SendPropertyChanged("Descrptionleave");
					this.OnDescrptionleaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeUnder12", DbType="Bit NOT NULL")]
		public bool AgeUnder12
		{
			get
			{
				return this._AgeUnder12;
			}
			set
			{
				if ((this._AgeUnder12 != value))
				{
					this.OnAgeUnder12Changing(value);
					this.SendPropertyChanging();
					this._AgeUnder12 = value;
					this.SendPropertyChanged("AgeUnder12");
					this.OnAgeUnder12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitType", DbType="NVarChar(50)")]
		public string AdmitType
		{
			get
			{
				return this._AdmitType;
			}
			set
			{
				if ((this._AdmitType != value))
				{
					this.OnAdmitTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmitType = value;
					this.SendPropertyChanged("AdmitType");
					this.OnAdmitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detach", DbType="NVarChar(50)")]
		public string Detach
		{
			get
			{
				return this._Detach;
			}
			set
			{
				if ((this._Detach != value))
				{
					this.OnDetachChanging(value);
					this.SendPropertyChanging();
					this._Detach = value;
					this.SendPropertyChanged("Detach");
					this.OnDetachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="Bit NOT NULL")]
		public bool Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaingRoom", DbType="Bit NOT NULL")]
		public bool OperaingRoom
		{
			get
			{
				return this._OperaingRoom;
			}
			set
			{
				if ((this._OperaingRoom != value))
				{
					this.OnOperaingRoomChanging(value);
					this.SendPropertyChanging();
					this._OperaingRoom = value;
					this.SendPropertyChanged("OperaingRoom");
					this.OnOperaingRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rejecttreatment", DbType="Bit NOT NULL")]
		public bool Rejecttreatment
		{
			get
			{
				return this._Rejecttreatment;
			}
			set
			{
				if ((this._Rejecttreatment != value))
				{
					this.OnRejecttreatmentChanging(value);
					this.SendPropertyChanging();
					this._Rejecttreatment = value;
					this.SendPropertyChanged("Rejecttreatment");
					this.OnRejecttreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TriageDossierEM", Storage="_GivenServiceM", ThisKey="GivenMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.TriageDossierEMs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.TriageDossierEMs.Add(this);
						this._GivenMID = value.ID;
					}
					else
					{
						this._GivenMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageDossierEM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageDossierEMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageDossierEMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEMGAccident")]
	public partial class TriageEMGAccident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _ACCDate;
		
		private string _ACCDriver;
		
		private string _ACCAber;
		
		private string _ACCSarneshin;
		
		private string _ACCcar;
		
		private string _ACCInjury;
		
		private string _ACCplace;
		
		private string _ACCsign;
		
		private string _Accapply;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnACCDateChanging(string value);
    partial void OnACCDateChanged();
    partial void OnACCDriverChanging(string value);
    partial void OnACCDriverChanged();
    partial void OnACCAberChanging(string value);
    partial void OnACCAberChanged();
    partial void OnACCSarneshinChanging(string value);
    partial void OnACCSarneshinChanged();
    partial void OnACCcarChanging(string value);
    partial void OnACCcarChanged();
    partial void OnACCInjuryChanging(string value);
    partial void OnACCInjuryChanged();
    partial void OnACCplaceChanging(string value);
    partial void OnACCplaceChanged();
    partial void OnACCsignChanging(string value);
    partial void OnACCsignChanged();
    partial void OnAccapplyChanging(string value);
    partial void OnAccapplyChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEMGAccident()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCDate", DbType="NVarChar(10)")]
		public string ACCDate
		{
			get
			{
				return this._ACCDate;
			}
			set
			{
				if ((this._ACCDate != value))
				{
					this.OnACCDateChanging(value);
					this.SendPropertyChanging();
					this._ACCDate = value;
					this.SendPropertyChanged("ACCDate");
					this.OnACCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCDriver", DbType="NVarChar(50)")]
		public string ACCDriver
		{
			get
			{
				return this._ACCDriver;
			}
			set
			{
				if ((this._ACCDriver != value))
				{
					this.OnACCDriverChanging(value);
					this.SendPropertyChanging();
					this._ACCDriver = value;
					this.SendPropertyChanged("ACCDriver");
					this.OnACCDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCAber", DbType="NVarChar(50)")]
		public string ACCAber
		{
			get
			{
				return this._ACCAber;
			}
			set
			{
				if ((this._ACCAber != value))
				{
					this.OnACCAberChanging(value);
					this.SendPropertyChanging();
					this._ACCAber = value;
					this.SendPropertyChanged("ACCAber");
					this.OnACCAberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCSarneshin", DbType="NVarChar(50)")]
		public string ACCSarneshin
		{
			get
			{
				return this._ACCSarneshin;
			}
			set
			{
				if ((this._ACCSarneshin != value))
				{
					this.OnACCSarneshinChanging(value);
					this.SendPropertyChanging();
					this._ACCSarneshin = value;
					this.SendPropertyChanged("ACCSarneshin");
					this.OnACCSarneshinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCcar", DbType="NVarChar(50)")]
		public string ACCcar
		{
			get
			{
				return this._ACCcar;
			}
			set
			{
				if ((this._ACCcar != value))
				{
					this.OnACCcarChanging(value);
					this.SendPropertyChanging();
					this._ACCcar = value;
					this.SendPropertyChanged("ACCcar");
					this.OnACCcarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCInjury", DbType="NVarChar(50)")]
		public string ACCInjury
		{
			get
			{
				return this._ACCInjury;
			}
			set
			{
				if ((this._ACCInjury != value))
				{
					this.OnACCInjuryChanging(value);
					this.SendPropertyChanging();
					this._ACCInjury = value;
					this.SendPropertyChanged("ACCInjury");
					this.OnACCInjuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCplace", DbType="NVarChar(50)")]
		public string ACCplace
		{
			get
			{
				return this._ACCplace;
			}
			set
			{
				if ((this._ACCplace != value))
				{
					this.OnACCplaceChanging(value);
					this.SendPropertyChanging();
					this._ACCplace = value;
					this.SendPropertyChanged("ACCplace");
					this.OnACCplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCsign", DbType="NVarChar(MAX)")]
		public string ACCsign
		{
			get
			{
				return this._ACCsign;
			}
			set
			{
				if ((this._ACCsign != value))
				{
					this.OnACCsignChanging(value);
					this.SendPropertyChanging();
					this._ACCsign = value;
					this.SendPropertyChanged("ACCsign");
					this.OnACCsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accapply", DbType="NVarChar(MAX)")]
		public string Accapply
		{
			get
			{
				return this._Accapply;
			}
			set
			{
				if ((this._Accapply != value))
				{
					this.OnAccapplyChanging(value);
					this.SendPropertyChanging();
					this._Accapply = value;
					this.SendPropertyChanged("Accapply");
					this.OnAccapplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGAccident", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEMGAccidents.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEMGAccidents.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEmergencyCPR")]
	public partial class TriageEmergencyCPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _TyPeID;
		
		private string _Date;
		
		private string _time;
		
		private System.Nullable<bool> _Succeeded;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private string _Typeofdisease;
		
		private EntityRef<Triage> _Triage;
		
		private EntityRef<TriageCPRType> _TriageCPRType;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnTyPeIDChanging(System.Nullable<System.Guid> value);
    partial void OnTyPeIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnSucceededChanging(System.Nullable<bool> value);
    partial void OnSucceededChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnTypeofdiseaseChanging(string value);
    partial void OnTypeofdiseaseChanged();
    #endregion
		
		public TriageEmergencyCPR()
		{
			this._Triage = default(EntityRef<Triage>);
			this._TriageCPRType = default(EntityRef<TriageCPRType>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					if (this._Triage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TyPeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TyPeID
		{
			get
			{
				return this._TyPeID;
			}
			set
			{
				if ((this._TyPeID != value))
				{
					if (this._TriageCPRType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTyPeIDChanging(value);
					this.SendPropertyChanging();
					this._TyPeID = value;
					this.SendPropertyChanged("TyPeID");
					this.OnTyPeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(8)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Succeeded", DbType="Bit")]
		public System.Nullable<bool> Succeeded
		{
			get
			{
				return this._Succeeded;
			}
			set
			{
				if ((this._Succeeded != value))
				{
					this.OnSucceededChanging(value);
					this.SendPropertyChanging();
					this._Succeeded = value;
					this.SendPropertyChanged("Succeeded");
					this.OnSucceededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typeofdisease", DbType="NVarChar(50)")]
		public string Typeofdisease
		{
			get
			{
				return this._Typeofdisease;
			}
			set
			{
				if ((this._Typeofdisease != value))
				{
					this.OnTypeofdiseaseChanging(value);
					this.SendPropertyChanging();
					this._Typeofdisease = value;
					this.SendPropertyChanged("Typeofdisease");
					this.OnTypeofdiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageEmergencyCPR", Storage="_Triage", ThisKey="TriageID", OtherKey="ID", IsForeignKey=true)]
		public Triage Triage
		{
			get
			{
				return this._Triage.Entity;
			}
			set
			{
				Triage previousValue = this._Triage.Entity;
				if (((previousValue != value) 
							|| (this._Triage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Triage.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._Triage.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._TriageID = value.ID;
					}
					else
					{
						this._TriageID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Triage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TriageCPRType_TriageEmergencyCPR", Storage="_TriageCPRType", ThisKey="TyPeID", OtherKey="ID", IsForeignKey=true)]
		public TriageCPRType TriageCPRType
		{
			get
			{
				return this._TriageCPRType.Entity;
			}
			set
			{
				TriageCPRType previousValue = this._TriageCPRType.Entity;
				if (((previousValue != value) 
							|| (this._TriageCPRType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TriageCPRType.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._TriageCPRType.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._TyPeID = value.ID;
					}
					else
					{
						this._TyPeID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TriageCPRType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEmergencyCPR", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEMGincident")]
	public partial class TriageEMGincident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _AccureDate;
		
		private string _AccuerCity;
		
		private string _AccuerKind;
		
		private string _AccuerPlace;
		
		private string _AccuerReg;
		
		private string _AccuerResult;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnAccureDateChanging(string value);
    partial void OnAccureDateChanged();
    partial void OnAccuerCityChanging(string value);
    partial void OnAccuerCityChanged();
    partial void OnAccuerKindChanging(string value);
    partial void OnAccuerKindChanged();
    partial void OnAccuerPlaceChanging(string value);
    partial void OnAccuerPlaceChanged();
    partial void OnAccuerRegChanging(string value);
    partial void OnAccuerRegChanged();
    partial void OnAccuerResultChanging(string value);
    partial void OnAccuerResultChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEMGincident()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccureDate", DbType="NVarChar(10)")]
		public string AccureDate
		{
			get
			{
				return this._AccureDate;
			}
			set
			{
				if ((this._AccureDate != value))
				{
					this.OnAccureDateChanging(value);
					this.SendPropertyChanging();
					this._AccureDate = value;
					this.SendPropertyChanged("AccureDate");
					this.OnAccureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerCity", DbType="NVarChar(50)")]
		public string AccuerCity
		{
			get
			{
				return this._AccuerCity;
			}
			set
			{
				if ((this._AccuerCity != value))
				{
					this.OnAccuerCityChanging(value);
					this.SendPropertyChanging();
					this._AccuerCity = value;
					this.SendPropertyChanged("AccuerCity");
					this.OnAccuerCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerKind", DbType="NVarChar(50)")]
		public string AccuerKind
		{
			get
			{
				return this._AccuerKind;
			}
			set
			{
				if ((this._AccuerKind != value))
				{
					this.OnAccuerKindChanging(value);
					this.SendPropertyChanging();
					this._AccuerKind = value;
					this.SendPropertyChanged("AccuerKind");
					this.OnAccuerKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerPlace", DbType="NVarChar(50)")]
		public string AccuerPlace
		{
			get
			{
				return this._AccuerPlace;
			}
			set
			{
				if ((this._AccuerPlace != value))
				{
					this.OnAccuerPlaceChanging(value);
					this.SendPropertyChanging();
					this._AccuerPlace = value;
					this.SendPropertyChanged("AccuerPlace");
					this.OnAccuerPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerReg", DbType="NVarChar(50)")]
		public string AccuerReg
		{
			get
			{
				return this._AccuerReg;
			}
			set
			{
				if ((this._AccuerReg != value))
				{
					this.OnAccuerRegChanging(value);
					this.SendPropertyChanging();
					this._AccuerReg = value;
					this.SendPropertyChanged("AccuerReg");
					this.OnAccuerRegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerResult", DbType="NVarChar(50)")]
		public string AccuerResult
		{
			get
			{
				return this._AccuerResult;
			}
			set
			{
				if ((this._AccuerResult != value))
				{
					this.OnAccuerResultChanging(value);
					this.SendPropertyChanging();
					this._AccuerResult = value;
					this.SendPropertyChanged("AccuerResult");
					this.OnAccuerResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGincident", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEMGincidents.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEMGincidents.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEMGkhodkoshi")]
	public partial class TriageEMGkhodkoshi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _Date;
		
		private string _Time;
		
		private string _Reason;
		
		private string _Vasile;
		
		private string _ResultID;
		
		private string _RavaniBackgrand;
		
		private string _JesmiBackgrand;
		
		private string _EghdamBackgrand;
		
		private string _Takmilkonande;
		
		private string _Taeedkonande;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnVasileChanging(string value);
    partial void OnVasileChanged();
    partial void OnResultIDChanging(string value);
    partial void OnResultIDChanged();
    partial void OnRavaniBackgrandChanging(string value);
    partial void OnRavaniBackgrandChanged();
    partial void OnJesmiBackgrandChanging(string value);
    partial void OnJesmiBackgrandChanged();
    partial void OnEghdamBackgrandChanging(string value);
    partial void OnEghdamBackgrandChanged();
    partial void OnTakmilkonandeChanging(string value);
    partial void OnTakmilkonandeChanged();
    partial void OnTaeedkonandeChanging(string value);
    partial void OnTaeedkonandeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEMGkhodkoshi()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(50)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vasile", DbType="NVarChar(50)")]
		public string Vasile
		{
			get
			{
				return this._Vasile;
			}
			set
			{
				if ((this._Vasile != value))
				{
					this.OnVasileChanging(value);
					this.SendPropertyChanging();
					this._Vasile = value;
					this.SendPropertyChanged("Vasile");
					this.OnVasileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", DbType="NVarChar(50)")]
		public string ResultID
		{
			get
			{
				return this._ResultID;
			}
			set
			{
				if ((this._ResultID != value))
				{
					this.OnResultIDChanging(value);
					this.SendPropertyChanging();
					this._ResultID = value;
					this.SendPropertyChanged("ResultID");
					this.OnResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RavaniBackgrand", DbType="NVarChar(MAX)")]
		public string RavaniBackgrand
		{
			get
			{
				return this._RavaniBackgrand;
			}
			set
			{
				if ((this._RavaniBackgrand != value))
				{
					this.OnRavaniBackgrandChanging(value);
					this.SendPropertyChanging();
					this._RavaniBackgrand = value;
					this.SendPropertyChanged("RavaniBackgrand");
					this.OnRavaniBackgrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JesmiBackgrand", DbType="NVarChar(MAX)")]
		public string JesmiBackgrand
		{
			get
			{
				return this._JesmiBackgrand;
			}
			set
			{
				if ((this._JesmiBackgrand != value))
				{
					this.OnJesmiBackgrandChanging(value);
					this.SendPropertyChanging();
					this._JesmiBackgrand = value;
					this.SendPropertyChanged("JesmiBackgrand");
					this.OnJesmiBackgrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EghdamBackgrand", DbType="NVarChar(MAX)")]
		public string EghdamBackgrand
		{
			get
			{
				return this._EghdamBackgrand;
			}
			set
			{
				if ((this._EghdamBackgrand != value))
				{
					this.OnEghdamBackgrandChanging(value);
					this.SendPropertyChanging();
					this._EghdamBackgrand = value;
					this.SendPropertyChanged("EghdamBackgrand");
					this.OnEghdamBackgrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Takmilkonande", DbType="NVarChar(MAX)")]
		public string Takmilkonande
		{
			get
			{
				return this._Takmilkonande;
			}
			set
			{
				if ((this._Takmilkonande != value))
				{
					this.OnTakmilkonandeChanging(value);
					this.SendPropertyChanging();
					this._Takmilkonande = value;
					this.SendPropertyChanged("Takmilkonande");
					this.OnTakmilkonandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taeedkonande", DbType="NVarChar(MAX)")]
		public string Taeedkonande
		{
			get
			{
				return this._Taeedkonande;
			}
			set
			{
				if ((this._Taeedkonande != value))
				{
					this.OnTaeedkonandeChanging(value);
					this.SendPropertyChanging();
					this._Taeedkonande = value;
					this.SendPropertyChanged("Taeedkonande");
					this.OnTaeedkonandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGkhodkoshi", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEMGkhodkoshis.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEMGkhodkoshis.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dossier")]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _UniqID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<int> _XInsuranceID;
		
		private string _NationalCode;
		
		private string _Date;
		
		private string _Time;
		
		private string _MedicalCenter;
		
		private bool _AdvancePaymentPayed;
		
		private decimal _AdvancePayment;
		
		private int _IOtype;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private System.Nullable<bool> _LockBilling;
		
		private string _SpicialCode;
		
		private System.Nullable<decimal> _AllPateintShare;
		
		private System.Nullable<decimal> _AllInsuranceShare;
		
		private System.Nullable<decimal> _AllPay;
		
		private bool _Editable;
		
		private System.Nullable<System.Guid> _StaffCure;
		
		private System.Nullable<bool> _SATASent;
		
		private string _SATAMessage;
		
		private System.Nullable<int> _InsuranceID2;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUniqIDChanging(System.Guid value);
    partial void OnUniqIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnXInsuranceIDChanging(System.Nullable<int> value);
    partial void OnXInsuranceIDChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnMedicalCenterChanging(string value);
    partial void OnMedicalCenterChanged();
    partial void OnAdvancePaymentPayedChanging(bool value);
    partial void OnAdvancePaymentPayedChanged();
    partial void OnAdvancePaymentChanging(decimal value);
    partial void OnAdvancePaymentChanged();
    partial void OnIOtypeChanging(int value);
    partial void OnIOtypeChanged();
    partial void OnTotalPayedChanging(bool value);
    partial void OnTotalPayedChanged();
    partial void OnDischargeChanging(bool value);
    partial void OnDischargeChanged();
    partial void OnLockBillingChanging(System.Nullable<bool> value);
    partial void OnLockBillingChanged();
    partial void OnSpicialCodeChanging(string value);
    partial void OnSpicialCodeChanged();
    partial void OnAllPateintShareChanging(System.Nullable<decimal> value);
    partial void OnAllPateintShareChanged();
    partial void OnAllInsuranceShareChanging(System.Nullable<decimal> value);
    partial void OnAllInsuranceShareChanged();
    partial void OnAllPayChanging(System.Nullable<decimal> value);
    partial void OnAllPayChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnStaffCureChanging(System.Nullable<System.Guid> value);
    partial void OnStaffCureChanged();
    partial void OnSATASentChanging(System.Nullable<bool> value);
    partial void OnSATASentChanged();
    partial void OnSATAMessageChanging(string value);
    partial void OnSATAMessageChanged();
    partial void OnInsuranceID2Changing(System.Nullable<int> value);
    partial void OnInsuranceID2Changed();
    #endregion
		
		public Dossier()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Insurance = default(EntityRef<Insurance>);
			this._Staff = default(EntityRef<Staff>);
			this._Person = default(EntityRef<Person>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid UniqID
		{
			get
			{
				return this._UniqID;
			}
			set
			{
				if ((this._UniqID != value))
				{
					this.OnUniqIDChanging(value);
					this.SendPropertyChanging();
					this._UniqID = value;
					this.SendPropertyChanged("UniqID");
					this.OnUniqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XInsuranceID", DbType="Int")]
		public System.Nullable<int> XInsuranceID
		{
			get
			{
				return this._XInsuranceID;
			}
			set
			{
				if ((this._XInsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._XInsuranceID = value;
					this.SendPropertyChanged("XInsuranceID");
					this.OnXInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(200)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this.OnMedicalCenterChanging(value);
					this.SendPropertyChanging();
					this._MedicalCenter = value;
					this.SendPropertyChanged("MedicalCenter");
					this.OnMedicalCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePaymentPayed", DbType="Bit NOT NULL")]
		public bool AdvancePaymentPayed
		{
			get
			{
				return this._AdvancePaymentPayed;
			}
			set
			{
				if ((this._AdvancePaymentPayed != value))
				{
					this.OnAdvancePaymentPayedChanging(value);
					this.SendPropertyChanging();
					this._AdvancePaymentPayed = value;
					this.SendPropertyChanged("AdvancePaymentPayed");
					this.OnAdvancePaymentPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money NOT NULL")]
		public decimal AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this.OnAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._AdvancePayment = value;
					this.SendPropertyChanged("AdvancePayment");
					this.OnAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this.OnIOtypeChanging(value);
					this.SendPropertyChanging();
					this._IOtype = value;
					this.SendPropertyChanged("IOtype");
					this.OnIOtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this.OnTotalPayedChanging(value);
					this.SendPropertyChanging();
					this._TotalPayed = value;
					this.SendPropertyChanged("TotalPayed");
					this.OnTotalPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this.OnDischargeChanging(value);
					this.SendPropertyChanging();
					this._Discharge = value;
					this.SendPropertyChanged("Discharge");
					this.OnDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockBilling", DbType="Bit")]
		public System.Nullable<bool> LockBilling
		{
			get
			{
				return this._LockBilling;
			}
			set
			{
				if ((this._LockBilling != value))
				{
					this.OnLockBillingChanging(value);
					this.SendPropertyChanging();
					this._LockBilling = value;
					this.SendPropertyChanged("LockBilling");
					this.OnLockBillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpicialCode", DbType="NVarChar(20)")]
		public string SpicialCode
		{
			get
			{
				return this._SpicialCode;
			}
			set
			{
				if ((this._SpicialCode != value))
				{
					this.OnSpicialCodeChanging(value);
					this.SendPropertyChanging();
					this._SpicialCode = value;
					this.SendPropertyChanged("SpicialCode");
					this.OnSpicialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPateintShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPateintShare
		{
			get
			{
				return this._AllPateintShare;
			}
			set
			{
				if ((this._AllPateintShare != value))
				{
					this.OnAllPateintShareChanging(value);
					this.SendPropertyChanging();
					this._AllPateintShare = value;
					this.SendPropertyChanged("AllPateintShare");
					this.OnAllPateintShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllInsuranceShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllInsuranceShare
		{
			get
			{
				return this._AllInsuranceShare;
			}
			set
			{
				if ((this._AllInsuranceShare != value))
				{
					this.OnAllInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._AllInsuranceShare = value;
					this.SendPropertyChanged("AllInsuranceShare");
					this.OnAllInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPay
		{
			get
			{
				return this._AllPay;
			}
			set
			{
				if ((this._AllPay != value))
				{
					this.OnAllPayChanging(value);
					this.SendPropertyChanging();
					this._AllPay = value;
					this.SendPropertyChanged("AllPay");
					this.OnAllPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._Editable;
			}
			set
			{
				if ((this._Editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._Editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCure", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffCure
		{
			get
			{
				return this._StaffCure;
			}
			set
			{
				if ((this._StaffCure != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffCureChanging(value);
					this.SendPropertyChanging();
					this._StaffCure = value;
					this.SendPropertyChanged("StaffCure");
					this.OnStaffCureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATASent", DbType="Bit")]
		public System.Nullable<bool> SATASent
		{
			get
			{
				return this._SATASent;
			}
			set
			{
				if ((this._SATASent != value))
				{
					this.OnSATASentChanging(value);
					this.SendPropertyChanging();
					this._SATASent = value;
					this.SendPropertyChanged("SATASent");
					this.OnSATASentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAMessage", DbType="NVarChar(500)")]
		public string SATAMessage
		{
			get
			{
				return this._SATAMessage;
			}
			set
			{
				if ((this._SATAMessage != value))
				{
					this.OnSATAMessageChanging(value);
					this.SendPropertyChanging();
					this._SATAMessage = value;
					this.SendPropertyChanged("SATAMessage");
					this.OnSATAMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID2", DbType="Int")]
		public System.Nullable<int> InsuranceID2
		{
			get
			{
				return this._InsuranceID2;
			}
			set
			{
				if ((this._InsuranceID2 != value))
				{
					this.OnInsuranceID2Changing(value);
					this.SendPropertyChanging();
					this._InsuranceID2 = value;
					this.SendPropertyChanged("InsuranceID2");
					this.OnInsuranceID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Payment", Storage="_Payments", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Insurance", ThisKey="XInsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._XInsuranceID = value.ID;
					}
					else
					{
						this._XInsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Staff", ThisKey="StaffCure", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._StaffCure = value.ID;
					}
					else
					{
						this._StaffCure = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_FamilyDoctorRpt")]
	public partial class Vw_FamilyDoctorRpt
	{
		
		private string _Doctor;
		
		private string _PersonalCode;
		
		private string _MedicalID;
		
		private string _Person;
		
		private string _BirthDate;
		
		private System.Nullable<bool> _Sex;
		
		private string _modiriat;
		
		private string _sherkat;
		
		private string _sazman;
		
		private System.Nullable<long> _ID;
		
		private string _Phone;
		
		private string _Name;
		
		private string _ServiceName;
		
		private string _Parent1;
		
		private string _Parent2;
		
		private string _Parent3;
		
		private string _Parent4;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private string _CreationDate;
		
		public Vw_FamilyDoctorRpt()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="NVarChar(201)")]
		public string Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this._Person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modiriat", DbType="NVarChar(50)")]
		public string modiriat
		{
			get
			{
				return this._modiriat;
			}
			set
			{
				if ((this._modiriat != value))
				{
					this._modiriat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sherkat", DbType="NVarChar(80)")]
		public string sherkat
		{
			get
			{
				return this._sherkat;
			}
			set
			{
				if ((this._sherkat != value))
				{
					this._sherkat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sazman", DbType="NVarChar(60)")]
		public string sazman
		{
			get
			{
				return this._sazman;
			}
			set
			{
				if ((this._sazman != value))
				{
					this._sazman = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent1", DbType="NVarChar(MAX)")]
		public string Parent1
		{
			get
			{
				return this._Parent1;
			}
			set
			{
				if ((this._Parent1 != value))
				{
					this._Parent1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent2", DbType="NVarChar(MAX)")]
		public string Parent2
		{
			get
			{
				return this._Parent2;
			}
			set
			{
				if ((this._Parent2 != value))
				{
					this._Parent2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent3", DbType="NVarChar(MAX)")]
		public string Parent3
		{
			get
			{
				return this._Parent3;
			}
			set
			{
				if ((this._Parent3 != value))
				{
					this._Parent3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent4", DbType="NVarChar(MAX)")]
		public string Parent4
		{
			get
			{
				return this._Parent4;
			}
			set
			{
				if ((this._Parent4 != value))
				{
					this._Parent4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this._ResultN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this._ResultCHK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this._MResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recall")]
	public partial class Recall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _IDScreening;
		
		private bool _Admitted;
		
		private string _ScreeningDate;
		
		private string _AdmitDate;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Screening> _Screening;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnIDScreeningChanging(System.Nullable<System.Guid> value);
    partial void OnIDScreeningChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnScreeningDateChanging(string value);
    partial void OnScreeningDateChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public Recall()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Screening = default(EntityRef<Screening>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDScreening", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDScreening
		{
			get
			{
				return this._IDScreening;
			}
			set
			{
				if ((this._IDScreening != value))
				{
					if (this._Screening.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDScreeningChanging(value);
					this.SendPropertyChanging();
					this._IDScreening = value;
					this.SendPropertyChanged("IDScreening");
					this.OnIDScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningDate", DbType="NVarChar(10)")]
		public string ScreeningDate
		{
			get
			{
				return this._ScreeningDate;
			}
			set
			{
				if ((this._ScreeningDate != value))
				{
					this.OnScreeningDateChanging(value);
					this.SendPropertyChanging();
					this._ScreeningDate = value;
					this.SendPropertyChanged("ScreeningDate");
					this.OnScreeningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recall_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RecallID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_Recall", Storage="_Screening", ThisKey="IDScreening", OtherKey="ID", IsForeignKey=true)]
		public Screening Screening
		{
			get
			{
				return this._Screening.Entity;
			}
			set
			{
				Screening previousValue = this._Screening.Entity;
				if (((previousValue != value) 
							|| (this._Screening.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Screening.Entity = null;
						previousValue.Recalls.Remove(this);
					}
					this._Screening.Entity = value;
					if ((value != null))
					{
						value.Recalls.Add(this);
						this._IDScreening = value.ID;
					}
					else
					{
						this._IDScreening = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Screening");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Recall", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Recalls.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Recalls.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Recall = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Recall = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceM")]
	public partial class GivenServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private System.Nullable<System.Guid> _PaymentID;
		
		private System.Nullable<int> _AdmitUserID;
		
		private string _CreatorUserFullname;
		
		private System.Nullable<bool> _HasImage;
		
		private System.Nullable<System.DateTime> _CheckImage;
		
		private bool _WardEdit;
		
		private bool _ShowForNurse;
		
		private bool _Archive;
		
		private System.Nullable<int> _ExternalID;
		
		private System.Nullable<System.Guid> _RecallID;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<MedicalRecord> _MedicalRecords;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Triage> _Triages;
		
		private EntitySet<TriageDossierEM> _TriageDossierEMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Agenda> _Agenda;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<GivenServiceM> _GivenServiceM1;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Recall> _Recall;
		
		private EntityRef<Reference> _Reference;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnAgendaIDChanging(System.Nullable<System.Guid> value);
    partial void OnAgendaIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnPeriodicCalendeIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalendeIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnTechnicianIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicianIDChanged();
    partial void OnPhysioOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysioOrderMIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnBookletTypeChanging(string value);
    partial void OnBookletTypeChanged();
    partial void OnBookletDateChanging(string value);
    partial void OnBookletDateChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnTurningDateChanging(string value);
    partial void OnTurningDateChanged();
    partial void OnTurningTimeChanging(string value);
    partial void OnTurningTimeChanged();
    partial void OnBookletSerialNumberChanging(string value);
    partial void OnBookletSerialNumberChanged();
    partial void OnBookletPageNumberChanging(string value);
    partial void OnBookletPageNumberChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnSendToDrTimeChanging(string value);
    partial void OnSendToDrTimeChanged();
    partial void OnSendToDrChanging(bool value);
    partial void OnSendToDrChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnRemissionStatusChanging(bool value);
    partial void OnRemissionStatusChanged();
    partial void OnScreeningChanging(bool value);
    partial void OnScreeningChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDailySNChanging(System.Nullable<int> value);
    partial void OnDailySNChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnComplementInsuranceChanging(string value);
    partial void OnComplementInsuranceChanged();
    partial void OnComplementInsuranceNOChanging(string value);
    partial void OnComplementInsuranceNOChanged();
    partial void OnRefrenceIDChanging(System.Nullable<System.Guid> value);
    partial void OnRefrenceIDChanged();
    partial void OnPortableChanging(bool value);
    partial void OnPortableChanged();
    partial void OnConfirmFinanceSumKChanging(System.Nullable<double> value);
    partial void OnConfirmFinanceSumKChanged();
    partial void OnAdmissionTypeChanging(string value);
    partial void OnAdmissionTypeChanged();
    partial void OnPaymentIDChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentIDChanged();
    partial void OnAdmitUserIDChanging(System.Nullable<int> value);
    partial void OnAdmitUserIDChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnHasImageChanging(System.Nullable<bool> value);
    partial void OnHasImageChanged();
    partial void OnCheckImageChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckImageChanged();
    partial void OnWardEditChanging(bool value);
    partial void OnWardEditChanged();
    partial void OnShowForNurseChanging(bool value);
    partial void OnShowForNurseChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnExternalIDChanging(System.Nullable<int> value);
    partial void OnExternalIDChanged();
    partial void OnRecallIDChanging(System.Nullable<System.Guid> value);
    partial void OnRecallIDChanged();
    #endregion
		
		public GivenServiceM()
		{
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._MedicalRecords = new EntitySet<MedicalRecord>(new Action<MedicalRecord>(this.attach_MedicalRecords), new Action<MedicalRecord>(this.detach_MedicalRecords));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Triages = new EntitySet<Triage>(new Action<Triage>(this.attach_Triages), new Action<Triage>(this.detach_Triages));
			this._TriageDossierEMs = new EntitySet<TriageDossierEM>(new Action<TriageDossierEM>(this.attach_TriageDossierEMs), new Action<TriageDossierEM>(this.detach_TriageDossierEMs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Agenda = default(EntityRef<Agenda>);
			this._Dossier = default(EntityRef<Dossier>);
			this._GivenServiceM1 = default(EntityRef<GivenServiceM>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Recall = default(EntityRef<Recall>);
			this._Reference = default(EntityRef<Reference>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Person = default(EntityRef<Person>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenServiceM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					if (this._Agenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgendaIDChanging(value);
					this.SendPropertyChanging();
					this._AgendaID = value;
					this.SendPropertyChanged("AgendaID");
					this.OnAgendaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					this.OnPeriodicCalendeIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalendeID = value;
					this.SendPropertyChanged("PeriodicCalendeID");
					this.OnPeriodicCalendeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicianIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicianID = value;
					this.SendPropertyChanged("TechnicianID");
					this.OnTechnicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					this.OnPhysioOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysioOrderMID = value;
					this.SendPropertyChanged("PhysioOrderMID");
					this.OnPhysioOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)")]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this.OnBookletTypeChanging(value);
					this.SendPropertyChanging();
					this._BookletType = value;
					this.SendPropertyChanged("BookletType");
					this.OnBookletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)")]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this.OnBookletDateChanging(value);
					this.SendPropertyChanging();
					this._BookletDate = value;
					this.SendPropertyChanged("BookletDate");
					this.OnBookletDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)")]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this.OnTurningDateChanging(value);
					this.SendPropertyChanging();
					this._TurningDate = value;
					this.SendPropertyChanged("TurningDate");
					this.OnTurningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)")]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this.OnTurningTimeChanging(value);
					this.SendPropertyChanging();
					this._TurningTime = value;
					this.SendPropertyChanged("TurningTime");
					this.OnTurningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)")]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this.OnBookletSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletSerialNumber = value;
					this.SendPropertyChanged("BookletSerialNumber");
					this.OnBookletSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)")]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this.OnBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletPageNumber = value;
					this.SendPropertyChanged("BookletPageNumber");
					this.OnBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)")]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this.OnSendToDrTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToDrTime = value;
					this.SendPropertyChanged("SendToDrTime");
					this.OnSendToDrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL")]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this.OnSendToDrChanging(value);
					this.SendPropertyChanging();
					this._SendToDr = value;
					this.SendPropertyChanged("SendToDr");
					this.OnSendToDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL")]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this.OnRemissionStatusChanging(value);
					this.SendPropertyChanging();
					this._RemissionStatus = value;
					this.SendPropertyChanged("RemissionStatus");
					this.OnRemissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL")]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this.OnScreeningChanging(value);
					this.SendPropertyChanging();
					this._Screening = value;
					this.SendPropertyChanged("Screening");
					this.OnScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int")]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this.OnDailySNChanging(value);
					this.SendPropertyChanging();
					this._DailySN = value;
					this.SendPropertyChanged("DailySN");
					this.OnDailySNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)")]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this.OnComplementInsuranceChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsurance = value;
					this.SendPropertyChanged("ComplementInsurance");
					this.OnComplementInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)")]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this.OnComplementInsuranceNOChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsuranceNO = value;
					this.SendPropertyChanged("ComplementInsuranceNO");
					this.OnComplementInsuranceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					if (this._Reference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RefrenceID = value;
					this.SendPropertyChanged("RefrenceID");
					this.OnRefrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL")]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this.OnPortableChanging(value);
					this.SendPropertyChanging();
					this._Portable = value;
					this.SendPropertyChanged("Portable");
					this.OnPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float")]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this.OnConfirmFinanceSumKChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinanceSumK = value;
					this.SendPropertyChanged("ConfirmFinanceSumK");
					this.OnConfirmFinanceSumKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)")]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUserID", DbType="Int")]
		public System.Nullable<int> AdmitUserID
		{
			get
			{
				return this._AdmitUserID;
			}
			set
			{
				if ((this._AdmitUserID != value))
				{
					this.OnAdmitUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdmitUserID = value;
					this.SendPropertyChanged("AdmitUserID");
					this.OnAdmitUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasImage", DbType="Bit")]
		public System.Nullable<bool> HasImage
		{
			get
			{
				return this._HasImage;
			}
			set
			{
				if ((this._HasImage != value))
				{
					this.OnHasImageChanging(value);
					this.SendPropertyChanging();
					this._HasImage = value;
					this.SendPropertyChanged("HasImage");
					this.OnHasImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckImage", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CheckImage
		{
			get
			{
				return this._CheckImage;
			}
			set
			{
				if ((this._CheckImage != value))
				{
					this.OnCheckImageChanging(value);
					this.SendPropertyChanging();
					this._CheckImage = value;
					this.SendPropertyChanged("CheckImage");
					this.OnCheckImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardEdit", DbType="Bit NOT NULL")]
		public bool WardEdit
		{
			get
			{
				return this._WardEdit;
			}
			set
			{
				if ((this._WardEdit != value))
				{
					this.OnWardEditChanging(value);
					this.SendPropertyChanging();
					this._WardEdit = value;
					this.SendPropertyChanged("WardEdit");
					this.OnWardEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForNurse", DbType="Bit NOT NULL")]
		public bool ShowForNurse
		{
			get
			{
				return this._ShowForNurse;
			}
			set
			{
				if ((this._ShowForNurse != value))
				{
					this.OnShowForNurseChanging(value);
					this.SendPropertyChanging();
					this._ShowForNurse = value;
					this.SendPropertyChanged("ShowForNurse");
					this.OnShowForNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archive", DbType="Bit NOT NULL")]
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="Int")]
		public System.Nullable<int> ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RecallID
		{
			get
			{
				return this._RecallID;
			}
			set
			{
				if ((this._RecallID != value))
				{
					if (this._Recall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecallIDChanging(value);
					this.SendPropertyChanging();
					this._RecallID = value;
					this.SendPropertyChanged("RecallID");
					this.OnRecallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_QAs", ThisKey="ID", OtherKey="IDGivenServiceM")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_References", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_MedicalRecord", Storage="_MedicalRecords", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<MedicalRecord> MedicalRecords
		{
			get
			{
				return this._MedicalRecords;
			}
			set
			{
				this._MedicalRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Triage", Storage="_Triages", ThisKey="ID", OtherKey="GivenMID")]
		public EntitySet<Triage> Triages
		{
			get
			{
				return this._Triages;
			}
			set
			{
				this._Triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TriageDossierEM", Storage="_TriageDossierEMs", ThisKey="ID", OtherKey="GivenMID")]
		public EntitySet<TriageDossierEM> TriageDossierEMs
		{
			get
			{
				return this._TriageDossierEMs;
			}
			set
			{
				this._TriageDossierEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_Agenda", ThisKey="AgendaID", OtherKey="ID", IsForeignKey=true)]
		public Agenda Agenda
		{
			get
			{
				return this._Agenda.Entity;
			}
			set
			{
				Agenda previousValue = this._Agenda.Entity;
				if (((previousValue != value) 
							|| (this._Agenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agenda.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Agenda.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._AgendaID = value.ID;
					}
					else
					{
						this._AgendaID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Agenda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceM1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM1
		{
			get
			{
				return this._GivenServiceM1.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM1.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._GivenServiceM1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recall_GivenServiceM", Storage="_Recall", ThisKey="RecallID", OtherKey="ID", IsForeignKey=true)]
		public Recall Recall
		{
			get
			{
				return this._Recall.Entity;
			}
			set
			{
				Recall previousValue = this._Recall.Entity;
				if (((previousValue != value) 
							|| (this._Recall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recall.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Recall.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RecallID = value.ID;
					}
					else
					{
						this._RecallID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Recall");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_Reference", ThisKey="RefrenceID", OtherKey="ID", IsForeignKey=true)]
		public Reference Reference
		{
			get
			{
				return this._Reference.Entity;
			}
			set
			{
				Reference previousValue = this._Reference.Entity;
				if (((previousValue != value) 
							|| (this._Reference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reference.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Reference.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RefrenceID = value.ID;
					}
					else
					{
						this._RefrenceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Reference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_ServiceCategory", ThisKey="ServiceCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ServiceCategoryID = value.ID;
					}
					else
					{
						this._ServiceCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_Staff1", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_Staff2", ThisKey="TechnicianID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.GivenServiceMs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs2.Add(this);
						this._TechnicianID = value.ID;
					}
					else
					{
						this._TechnicianID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Screening")]
	public partial class Screening : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Number;
		
		private string _Goal;
		
		private string _Date;
		
		private bool _Finish;
		
		private EntitySet<Recall> _Recalls;
		
		private EntitySet<ScreeningItem> _ScreeningItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnGoalChanging(string value);
    partial void OnGoalChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnFinishChanging(bool value);
    partial void OnFinishChanged();
    #endregion
		
		public Screening()
		{
			this._Recalls = new EntitySet<Recall>(new Action<Recall>(this.attach_Recalls), new Action<Recall>(this.detach_Recalls));
			this._ScreeningItems = new EntitySet<ScreeningItem>(new Action<ScreeningItem>(this.attach_ScreeningItems), new Action<ScreeningItem>(this.detach_ScreeningItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goal", DbType="NVarChar(100)")]
		public string Goal
		{
			get
			{
				return this._Goal;
			}
			set
			{
				if ((this._Goal != value))
				{
					this.OnGoalChanging(value);
					this.SendPropertyChanging();
					this._Goal = value;
					this.SendPropertyChanged("Goal");
					this.OnGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finish", DbType="Bit NOT NULL")]
		public bool Finish
		{
			get
			{
				return this._Finish;
			}
			set
			{
				if ((this._Finish != value))
				{
					this.OnFinishChanging(value);
					this.SendPropertyChanging();
					this._Finish = value;
					this.SendPropertyChanged("Finish");
					this.OnFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_Recall", Storage="_Recalls", ThisKey="ID", OtherKey="IDScreening")]
		public EntitySet<Recall> Recalls
		{
			get
			{
				return this._Recalls;
			}
			set
			{
				this._Recalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_ScreeningItem", Storage="_ScreeningItems", ThisKey="ID", OtherKey="ScreeningID")]
		public EntitySet<ScreeningItem> ScreeningItems
		{
			get
			{
				return this._ScreeningItems;
			}
			set
			{
				this._ScreeningItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Screening = this;
		}
		
		private void detach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Screening = null;
		}
		
		private void attach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Screening = this;
		}
		
		private void detach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Screening = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScreeningItem")]
	public partial class ScreeningItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ScreeningID;
		
		private System.Guid _ItmeID;
		
		private string _Comment;
		
		private EntityRef<Screening> _Screening;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnScreeningIDChanging(System.Guid value);
    partial void OnScreeningIDChanged();
    partial void OnItmeIDChanging(System.Guid value);
    partial void OnItmeIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ScreeningItem()
		{
			this._Screening = default(EntityRef<Screening>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScreeningID
		{
			get
			{
				return this._ScreeningID;
			}
			set
			{
				if ((this._ScreeningID != value))
				{
					if (this._Screening.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScreeningIDChanging(value);
					this.SendPropertyChanging();
					this._ScreeningID = value;
					this.SendPropertyChanged("ScreeningID");
					this.OnScreeningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItmeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItmeID
		{
			get
			{
				return this._ItmeID;
			}
			set
			{
				if ((this._ItmeID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmeIDChanging(value);
					this.SendPropertyChanging();
					this._ItmeID = value;
					this.SendPropertyChanged("ItmeID");
					this.OnItmeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_ScreeningItem", Storage="_Screening", ThisKey="ScreeningID", OtherKey="ID", IsForeignKey=true)]
		public Screening Screening
		{
			get
			{
				return this._Screening.Entity;
			}
			set
			{
				Screening previousValue = this._Screening.Entity;
				if (((previousValue != value) 
							|| (this._Screening.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Screening.Entity = null;
						previousValue.ScreeningItems.Remove(this);
					}
					this._Screening.Entity = value;
					if ((value != null))
					{
						value.ScreeningItems.Add(this);
						this._ScreeningID = value.ID;
					}
					else
					{
						this._ScreeningID = default(System.Guid);
					}
					this.SendPropertyChanged("Screening");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ScreeningItem", Storage="_Service", ThisKey="ItmeID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ScreeningItems.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ScreeningItems.Add(this);
						this._ItmeID = value.ID;
					}
					else
					{
						this._ItmeID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _IDInt;
		
		private string _MedicalID;
		
		private string _FamilyNumber;
		
		private System.Nullable<System.Guid> _FamilyDoctor;
		
		private System.Nullable<System.Guid> _FamilyNurse;
		
		private System.Nullable<System.Guid> _FDDepartment;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _IdentityNumber;
		
		private string _IdentityPlace;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _BirthPlace;
		
		private string _Phone;
		
		private string _CellularPhone;
		
		private string _WorkPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Address;
		
		private string _WorkAddress;
		
		private string _InsuranceName;
		
		private string _InsuranceNo;
		
		private string _Education;
		
		private string _Comment;
		
		private string _MaritalStatus;
		
		private string _Religion;
		
		private string _CurrentJob;
		
		private string _BloodType;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _Barcode;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _BookletExpireDate;
		
		private bool _AllowInstallment;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		private bool _Death;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private string _DialectLanguage;
		
		private bool _Forieng;
		
		private string _Nationality;
		
		private string _PassportNumber;
		
		private System.Nullable<System.DateTime> _TS;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private EntitySet<DrugAllergy> _DrugAllergies;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<DrugHistory> _DrugHistories;
		
		private EntitySet<PersonDisease> _PersonDiseases;
		
		private EntitySet<DrugAllergy1> _DrugAllergy1s;
		
		private EntitySet<DrugHistory1> _DrugHistory1s;
		
		private EntitySet<PersonDisease1> _PersonDisease1s;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<Triage> _Triages;
		
		private EntitySet<TriageCPR> _TriageCPRs;
		
		private EntitySet<TriageDossierEM> _TriageDossierEMs;
		
		private EntitySet<TriageEMGAccident> _TriageEMGAccidents;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
		private EntitySet<TriageEMGincident> _TriageEMGincidents;
		
		private EntitySet<TriageEMGkhodkoshi> _TriageEMGkhodkoshis;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<Recall> _Recalls;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
		private EntityRef<Person> _Person1;
		
		private EntityRef<Person> _Person2;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFamilyNumberChanging(string value);
    partial void OnFamilyNumberChanged();
    partial void OnFamilyDoctorChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyDoctorChanged();
    partial void OnFamilyNurseChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyNurseChanged();
    partial void OnFDDepartmentChanging(System.Nullable<System.Guid> value);
    partial void OnFDDepartmentChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnPersonalCodeChanging(string value);
    partial void OnPersonalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnIdentityPlaceChanging(string value);
    partial void OnIdentityPlaceChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellularPhoneChanging(string value);
    partial void OnCellularPhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkAddressChanging(string value);
    partial void OnWorkAddressChanged();
    partial void OnInsuranceNameChanging(string value);
    partial void OnInsuranceNameChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnBarcodeChanging(System.Nullable<int> value);
    partial void OnBarcodeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAllowInstallmentChanging(bool value);
    partial void OnAllowInstallmentChanged();
    partial void OnNotUseChanging(bool value);
    partial void OnNotUseChanged();
    partial void OnVisibelChanging(bool value);
    partial void OnVisibelChanged();
    partial void OnDeathChanging(bool value);
    partial void OnDeathChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDialectLanguageChanging(string value);
    partial void OnDialectLanguageChanged();
    partial void OnForiengChanging(bool value);
    partial void OnForiengChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnTSChanging(System.Nullable<System.DateTime> value);
    partial void OnTSChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    #endregion
		
		public Person()
		{
			this._DrugAllergies = new EntitySet<DrugAllergy>(new Action<DrugAllergy>(this.attach_DrugAllergies), new Action<DrugAllergy>(this.detach_DrugAllergies));
			this._Staff = default(EntityRef<Staff>);
			this._DrugHistories = new EntitySet<DrugHistory>(new Action<DrugHistory>(this.attach_DrugHistories), new Action<DrugHistory>(this.detach_DrugHistories));
			this._PersonDiseases = new EntitySet<PersonDisease>(new Action<PersonDisease>(this.attach_PersonDiseases), new Action<PersonDisease>(this.detach_PersonDiseases));
			this._DrugAllergy1s = new EntitySet<DrugAllergy1>(new Action<DrugAllergy1>(this.attach_DrugAllergy1s), new Action<DrugAllergy1>(this.detach_DrugAllergy1s));
			this._DrugHistory1s = new EntitySet<DrugHistory1>(new Action<DrugHistory1>(this.attach_DrugHistory1s), new Action<DrugHistory1>(this.detach_DrugHistory1s));
			this._PersonDisease1s = new EntitySet<PersonDisease1>(new Action<PersonDisease1>(this.attach_PersonDisease1s), new Action<PersonDisease1>(this.detach_PersonDisease1s));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Triages = new EntitySet<Triage>(new Action<Triage>(this.attach_Triages), new Action<Triage>(this.detach_Triages));
			this._TriageCPRs = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs), new Action<TriageCPR>(this.detach_TriageCPRs));
			this._TriageDossierEMs = new EntitySet<TriageDossierEM>(new Action<TriageDossierEM>(this.attach_TriageDossierEMs), new Action<TriageDossierEM>(this.detach_TriageDossierEMs));
			this._TriageEMGAccidents = new EntitySet<TriageEMGAccident>(new Action<TriageEMGAccident>(this.attach_TriageEMGAccidents), new Action<TriageEMGAccident>(this.detach_TriageEMGAccidents));
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			this._TriageEMGincidents = new EntitySet<TriageEMGincident>(new Action<TriageEMGincident>(this.attach_TriageEMGincidents), new Action<TriageEMGincident>(this.detach_TriageEMGincidents));
			this._TriageEMGkhodkoshis = new EntitySet<TriageEMGkhodkoshi>(new Action<TriageEMGkhodkoshi>(this.attach_TriageEMGkhodkoshis), new Action<TriageEMGkhodkoshi>(this.detach_TriageEMGkhodkoshis));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Recalls = new EntitySet<Recall>(new Action<Recall>(this.attach_Recalls), new Action<Recall>(this.detach_Recalls));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			this._Person1 = default(EntityRef<Person>);
			this._Person2 = default(EntityRef<Person>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNumber", DbType="NVarChar(10)")]
		public string FamilyNumber
		{
			get
			{
				return this._FamilyNumber;
			}
			set
			{
				if ((this._FamilyNumber != value))
				{
					this.OnFamilyNumberChanging(value);
					this.SendPropertyChanging();
					this._FamilyNumber = value;
					this.SendPropertyChanged("FamilyNumber");
					this.OnFamilyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDoctor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyDoctor
		{
			get
			{
				return this._FamilyDoctor;
			}
			set
			{
				if ((this._FamilyDoctor != value))
				{
					if (this._Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyDoctorChanging(value);
					this.SendPropertyChanging();
					this._FamilyDoctor = value;
					this.SendPropertyChanged("FamilyDoctor");
					this.OnFamilyDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNurse", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyNurse
		{
			get
			{
				return this._FamilyNurse;
			}
			set
			{
				if ((this._FamilyNurse != value))
				{
					if (this._Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyNurse = value;
					this.SendPropertyChanged("FamilyNurse");
					this.OnFamilyNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDDepartment", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FDDepartment
		{
			get
			{
				return this._FDDepartment;
			}
			set
			{
				if ((this._FDDepartment != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFDDepartmentChanging(value);
					this.SendPropertyChanging();
					this._FDDepartment = value;
					this.SendPropertyChanged("FDDepartment");
					this.OnFDDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this.OnPersonalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonalCode = value;
					this.SendPropertyChanged("PersonalCode");
					this.OnPersonalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this.OnIdentityPlaceChanging(value);
					this.SendPropertyChanging();
					this._IdentityPlace = value;
					this.SendPropertyChanged("IdentityPlace");
					this.OnIdentityPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellularPhone", DbType="NVarChar(25)")]
		public string CellularPhone
		{
			get
			{
				return this._CellularPhone;
			}
			set
			{
				if ((this._CellularPhone != value))
				{
					this.OnCellularPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellularPhone = value;
					this.SendPropertyChanged("CellularPhone");
					this.OnCellularPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAddress", DbType="NVarChar(300)")]
		public string WorkAddress
		{
			get
			{
				return this._WorkAddress;
			}
			set
			{
				if ((this._WorkAddress != value))
				{
					this.OnWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkAddress = value;
					this.SendPropertyChanged("WorkAddress");
					this.OnWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this.OnInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._InsuranceName = value;
					this.SendPropertyChanged("InsuranceName");
					this.OnInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(100)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(500)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(20)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Int")]
		public System.Nullable<int> Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInstallment", DbType="Bit NOT NULL")]
		public bool AllowInstallment
		{
			get
			{
				return this._AllowInstallment;
			}
			set
			{
				if ((this._AllowInstallment != value))
				{
					this.OnAllowInstallmentChanging(value);
					this.SendPropertyChanging();
					this._AllowInstallment = value;
					this.SendPropertyChanged("AllowInstallment");
					this.OnAllowInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this.OnNotUseChanging(value);
					this.SendPropertyChanging();
					this._NotUse = value;
					this.SendPropertyChanged("NotUse");
					this.OnNotUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this.OnVisibelChanging(value);
					this.SendPropertyChanging();
					this._Visibel = value;
					this.SendPropertyChanged("Visibel");
					this.OnVisibelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Death", DbType="Bit NOT NULL")]
		public bool Death
		{
			get
			{
				return this._Death;
			}
			set
			{
				if ((this._Death != value))
				{
					this.OnDeathChanging(value);
					this.SendPropertyChanging();
					this._Death = value;
					this.SendPropertyChanged("Death");
					this.OnDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NVarChar(8)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NVarChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectLanguage", DbType="NVarChar(50)")]
		public string DialectLanguage
		{
			get
			{
				return this._DialectLanguage;
			}
			set
			{
				if ((this._DialectLanguage != value))
				{
					this.OnDialectLanguageChanging(value);
					this.SendPropertyChanging();
					this._DialectLanguage = value;
					this.SendPropertyChanged("DialectLanguage");
					this.OnDialectLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forieng", DbType="Bit NOT NULL")]
		public bool Forieng
		{
			get
			{
				return this._Forieng;
			}
			set
			{
				if ((this._Forieng != value))
				{
					this.OnForiengChanging(value);
					this.SendPropertyChanging();
					this._Forieng = value;
					this.SendPropertyChanged("Forieng");
					this.OnForiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(50)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy", Storage="_DrugAllergies", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugAllergy> DrugAllergies
		{
			get
			{
				return this._DrugAllergies;
			}
			set
			{
				this._DrugAllergies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory", Storage="_DrugHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugHistory> DrugHistories
		{
			get
			{
				return this._DrugHistories;
			}
			set
			{
				this._DrugHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonDisease", Storage="_PersonDiseases", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<PersonDisease> PersonDiseases
		{
			get
			{
				return this._PersonDiseases;
			}
			set
			{
				this._PersonDiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy1", Storage="_DrugAllergy1s", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugAllergy1> DrugAllergy1s
		{
			get
			{
				return this._DrugAllergy1s;
			}
			set
			{
				this._DrugAllergy1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory1", Storage="_DrugHistory1s", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugHistory1> DrugHistory1s
		{
			get
			{
				return this._DrugHistory1s;
			}
			set
			{
				this._DrugHistory1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonDisease1", Storage="_PersonDisease1s", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<PersonDisease1> PersonDisease1s
		{
			get
			{
				return this._PersonDisease1s;
			}
			set
			{
				this._PersonDisease1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Payment", Storage="_Payments", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Triage", Storage="_Triages", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Triage> Triages
		{
			get
			{
				return this._Triages;
			}
			set
			{
				this._Triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageCPR", Storage="_TriageCPRs", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageCPR> TriageCPRs
		{
			get
			{
				return this._TriageCPRs;
			}
			set
			{
				this._TriageCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageDossierEM", Storage="_TriageDossierEMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<TriageDossierEM> TriageDossierEMs
		{
			get
			{
				return this._TriageDossierEMs;
			}
			set
			{
				this._TriageDossierEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGAccident", Storage="_TriageEMGAccidents", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEMGAccident> TriageEMGAccidents
		{
			get
			{
				return this._TriageEMGAccidents;
			}
			set
			{
				this._TriageEMGAccidents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGincident", Storage="_TriageEMGincidents", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEMGincident> TriageEMGincidents
		{
			get
			{
				return this._TriageEMGincidents;
			}
			set
			{
				this._TriageEMGincidents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGkhodkoshi", Storage="_TriageEMGkhodkoshis", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEMGkhodkoshi> TriageEMGkhodkoshis
		{
			get
			{
				return this._TriageEMGkhodkoshis;
			}
			set
			{
				this._TriageEMGkhodkoshis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Recall", Storage="_Recalls", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<Recall> Recalls
		{
			get
			{
				return this._Recalls;
			}
			set
			{
				this._Recalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Persons", ThisKey="ID", OtherKey="FamilyDoctor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="FamilyNurse")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Person1", ThisKey="FamilyDoctor", OtherKey="ID", IsForeignKey=true)]
		public Person Person1
		{
			get
			{
				return this._Person1.Entity;
			}
			set
			{
				Person previousValue = this._Person1.Entity;
				if (((previousValue != value) 
							|| (this._Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person1.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Person1.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FamilyDoctor = value.ID;
					}
					else
					{
						this._FamilyDoctor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Person2", ThisKey="FamilyNurse", OtherKey="ID", IsForeignKey=true)]
		public Person Person2
		{
			get
			{
				return this._Person2.Entity;
			}
			set
			{
				Person previousValue = this._Person2.Entity;
				if (((previousValue != value) 
							|| (this._Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person2.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._Person2.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._FamilyNurse = value.ID;
					}
					else
					{
						this._FamilyNurse = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Person", Storage="_Department", ThisKey="FDDepartment", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FDDepartment = value.ID;
					}
					else
					{
						this._FDDepartment = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_DrugAllergy1s(DrugAllergy1 entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugAllergy1s(DrugAllergy1 entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_DrugHistory1s(DrugHistory1 entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugHistory1s(DrugHistory1 entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PersonDisease1s(PersonDisease1 entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonDisease1s(PersonDisease1 entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEMGAccidents(TriageEMGAccident entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEMGAccidents(TriageEMGAccident entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEMGincidents(TriageEMGincident entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEMGincidents(TriageEMGincident entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEMGkhodkoshis(TriageEMGkhodkoshi entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEMGkhodkoshis(TriageEMGkhodkoshi entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ClientID;
		
		private System.Nullable<int> _OldId;
		
		private int _IDInt;
		
		private System.Nullable<int> _IDIntParent;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<System.Guid> _Parent;
		
		private System.Nullable<int> _IMPHOID;
		
		private System.Nullable<int> _JamiatID;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdWardRef;
		
		private System.Nullable<int> _SataIdWardRefint;
		
		private System.Nullable<decimal> _VisitAmountPerHour;
		
		private bool _HideInReports;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Reference> _References1;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Pharmacy> _Pharmacy;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<RequestM> _RequestMs;
		
		private EntitySet<RequestM> _RequestMs1;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<System.Guid> value);
    partial void OnClientIDChanged();
    partial void OnOldIdChanging(System.Nullable<int> value);
    partial void OnOldIdChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnIDIntParentChanging(System.Nullable<int> value);
    partial void OnIDIntParentChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnIMPHOIDChanging(System.Nullable<int> value);
    partial void OnIMPHOIDChanged();
    partial void OnJamiatIDChanging(System.Nullable<int> value);
    partial void OnJamiatIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdWardRefChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdWardRefChanged();
    partial void OnSataIdWardRefintChanging(System.Nullable<int> value);
    partial void OnSataIdWardRefintChanged();
    partial void OnVisitAmountPerHourChanging(System.Nullable<decimal> value);
    partial void OnVisitAmountPerHourChanged();
    partial void OnHideInReportsChanging(bool value);
    partial void OnHideInReportsChanged();
    #endregion
		
		public Department()
		{
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._References1 = new EntitySet<Reference>(new Action<Reference>(this.attach_References1), new Action<Reference>(this.detach_References1));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Pharmacy = default(EntityRef<Pharmacy>);
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._RequestMs = new EntitySet<RequestM>(new Action<RequestM>(this.attach_RequestMs), new Action<RequestM>(this.detach_RequestMs));
			this._RequestMs1 = new EntitySet<RequestM>(new Action<RequestM>(this.attach_RequestMs1), new Action<RequestM>(this.detach_RequestMs1));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Department1 = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int")]
		public System.Nullable<int> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntParent", DbType="Int")]
		public System.Nullable<int> IDIntParent
		{
			get
			{
				return this._IDIntParent;
			}
			set
			{
				if ((this._IDIntParent != value))
				{
					this.OnIDIntParentChanging(value);
					this.SendPropertyChanging();
					this._IDIntParent = value;
					this.SendPropertyChanged("IDIntParent");
					this.OnIDIntParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMPHOID", DbType="Int")]
		public System.Nullable<int> IMPHOID
		{
			get
			{
				return this._IMPHOID;
			}
			set
			{
				if ((this._IMPHOID != value))
				{
					this.OnIMPHOIDChanging(value);
					this.SendPropertyChanging();
					this._IMPHOID = value;
					this.SendPropertyChanged("IMPHOID");
					this.OnIMPHOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JamiatID", DbType="Int")]
		public System.Nullable<int> JamiatID
		{
			get
			{
				return this._JamiatID;
			}
			set
			{
				if ((this._JamiatID != value))
				{
					this.OnJamiatIDChanging(value);
					this.SendPropertyChanging();
					this._JamiatID = value;
					this.SendPropertyChanged("JamiatID");
					this.OnJamiatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdWardRef", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdWardRef
		{
			get
			{
				return this._SATAIdWardRef;
			}
			set
			{
				if ((this._SATAIdWardRef != value))
				{
					this.OnSATAIdWardRefChanging(value);
					this.SendPropertyChanging();
					this._SATAIdWardRef = value;
					this.SendPropertyChanged("SATAIdWardRef");
					this.OnSATAIdWardRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SataIdWardRefint", DbType="Int")]
		public System.Nullable<int> SataIdWardRefint
		{
			get
			{
				return this._SataIdWardRefint;
			}
			set
			{
				if ((this._SataIdWardRefint != value))
				{
					this.OnSataIdWardRefintChanging(value);
					this.SendPropertyChanging();
					this._SataIdWardRefint = value;
					this.SendPropertyChanged("SataIdWardRefint");
					this.OnSataIdWardRefintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitAmountPerHour", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> VisitAmountPerHour
		{
			get
			{
				return this._VisitAmountPerHour;
			}
			set
			{
				if ((this._VisitAmountPerHour != value))
				{
					this.OnVisitAmountPerHourChanging(value);
					this.SendPropertyChanging();
					this._VisitAmountPerHour = value;
					this.SendPropertyChanged("VisitAmountPerHour");
					this.OnVisitAmountPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideInReports", DbType="Bit NOT NULL")]
		public bool HideInReports
		{
			get
			{
				return this._HideInReports;
			}
			set
			{
				if ((this._HideInReports != value))
				{
					this.OnHideInReportsChanging(value);
					this.SendPropertyChanging();
					this._HideInReports = value;
					this.SendPropertyChanged("HideInReports");
					this.OnHideInReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_References", ThisKey="ID", OtherKey="DestinationWard")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_References1", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Reference> References1
		{
			get
			{
				return this._References1;
			}
			set
			{
				this._References1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Pharmacy", Storage="_Pharmacy", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Pharmacy Pharmacy
		{
			get
			{
				return this._Pharmacy.Entity;
			}
			set
			{
				Pharmacy previousValue = this._Pharmacy.Entity;
				if (((previousValue != value) 
							|| (this._Pharmacy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pharmacy.Entity = null;
						previousValue.Department = null;
					}
					this._Pharmacy.Entity = value;
					if ((value != null))
					{
						value.Department = this;
					}
					this.SendPropertyChanged("Pharmacy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="PharmacyID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM", Storage="_RequestMs", ThisKey="ID", OtherKey="FromUnit")]
		public EntitySet<RequestM> RequestMs
		{
			get
			{
				return this._RequestMs;
			}
			set
			{
				this._RequestMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM1", Storage="_RequestMs1", ThisKey="ID", OtherKey="ToUnit")]
		public EntitySet<RequestM> RequestMs1
		{
			get
			{
				return this._RequestMs1;
			}
			set
			{
				this._RequestMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Person", Storage="_Persons", ThisKey="ID", OtherKey="FDDepartment")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_RequestMs(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_RequestMs(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_RequestMs1(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_RequestMs1(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_CareGSD")]
	public partial class Vw_CareGSD
	{
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private double _Amount;
		
		private string _Name;
		
		public Vw_CareGSD()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					this._GivenServiceMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_CareGSM")]
	public partial class Vw_CareGSM
	{
		
		private string _MedicalID;
		
		private string _Person;
		
		private string _Doctor;
		
		private System.Nullable<long> _DossierID;
		
		private string _Name;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		public Vw_CareGSM()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="NVarChar(201)")]
		public string Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this._Person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this._RequestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
	}
	
	public partial class ExtendedSearchResult
	{
		
		private System.Guid _ID;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private string _IdentityNumber;
		
		private string _BirthDate;
		
		private string _Phone;
		
		private string _PersonalCode;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		public ExtendedSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this._IdentityNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this._NotUse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this._Visibel = value;
				}
			}
		}
	}
	
	public partial class Spu_DiagnosticService_HistoryResult
	{
		
		private int _SerialNumber;
		
		private string _person;
		
		private string _NationalCode;
		
		private string _Doctor;
		
		private string _service;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _Note;
		
		private string _CDate;
		
		private string _CTime;
		
		public Spu_DiagnosticService_HistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person", DbType="NVarChar(201)")]
		public string person
		{
			get
			{
				return this._person;
			}
			set
			{
				if ((this._person != value))
				{
					this._person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service", DbType="NVarChar(MAX)")]
		public string service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					this._service = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(10)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDate", DbType="NVarChar(10)")]
		public string CDate
		{
			get
			{
				return this._CDate;
			}
			set
			{
				if ((this._CDate != value))
				{
					this._CDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTime", DbType="NVarChar(10)")]
		public string CTime
		{
			get
			{
				return this._CTime;
			}
			set
			{
				if ((this._CTime != value))
				{
					this._CTime = value;
				}
			}
		}
	}
	
	public partial class Spu_DrugHistoryResult
	{
		
		private string _Code;
		
		private string _HIX;
		
		private string _Doctor;
		
		private string _DrugName;
		
		private string _NationalCode;
		
		private string _MedicalID;
		
		private string _Comment;
		
		private System.Nullable<double> _Amount;
		
		private string _Speciality;
		
		private string _Date;
		
		public Spu_DrugHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIX", DbType="NVarChar(1000)")]
		public string HIX
		{
			get
			{
				return this._HIX;
			}
			set
			{
				if ((this._HIX != value))
				{
					this._HIX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="NVarChar(MAX)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(20)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	public partial class Spu_FullLabHistoryResult
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _MedicalID;
		
		private string _Doctor;
		
		private string _Abbr;
		
		private string _Result;
		
		private string _NormalRange;
		
		private string _AdmitDate;
		
		private string _EName;
		
		private string _Cdate;
		
		private string _ID;
		
		private System.Nullable<System.Guid> _gsmID;
		
		private System.Nullable<int> _gsmHospital;
		
		public Spu_FullLabHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbr", DbType="NVarChar(50)")]
		public string Abbr
		{
			get
			{
				return this._Abbr;
			}
			set
			{
				if ((this._Abbr != value))
				{
					this._Abbr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(500)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this._NormalRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(50)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this._EName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cdate", DbType="NVarChar(10)")]
		public string Cdate
		{
			get
			{
				return this._Cdate;
			}
			set
			{
				if ((this._Cdate != value))
				{
					this._Cdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gsmID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> gsmID
		{
			get
			{
				return this._gsmID;
			}
			set
			{
				if ((this._gsmID != value))
				{
					this._gsmID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gsmHospital", DbType="Int")]
		public System.Nullable<int> gsmHospital
		{
			get
			{
				return this._gsmHospital;
			}
			set
			{
				if ((this._gsmHospital != value))
				{
					this._gsmHospital = value;
				}
			}
		}
	}
	
	public partial class Spu_VisitsHistoryResult
	{
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MedicalID;
		
		private string _Date;
		
		private string _Doctor;
		
		private string _Comment;
		
		private string _CC;
		
		private string _Ago;
		
		private System.Nullable<int> _Since;
		
		private string _IMP;
		
		private string _DDx1;
		
		private string _DDx2;
		
		private string _Department;
		
		private string _Cuser;
		
		private bool _Admitted;
		
		private string _Relation;
		
		private string _ValidCenter;
		
		public Spu_VisitsHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(12)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="NVarChar(500)")]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this._CC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NVarChar(MAX)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this._Ago = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="Int")]
		public System.Nullable<int> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this._Since = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMP", DbType="NVarChar(MAX)")]
		public string IMP
		{
			get
			{
				return this._IMP;
			}
			set
			{
				if ((this._IMP != value))
				{
					this._IMP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx1", DbType="NVarChar(MAX)")]
		public string DDx1
		{
			get
			{
				return this._DDx1;
			}
			set
			{
				if ((this._DDx1 != value))
				{
					this._DDx1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx2", DbType="NVarChar(MAX)")]
		public string DDx2
		{
			get
			{
				return this._DDx2;
			}
			set
			{
				if ((this._DDx2 != value))
				{
					this._DDx2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuser", DbType="NVarChar(101)")]
		public string Cuser
		{
			get
			{
				return this._Cuser;
			}
			set
			{
				if ((this._Cuser != value))
				{
					this._Cuser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this._Admitted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this._Relation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidCenter", DbType="NVarChar(70)")]
		public string ValidCenter
		{
			get
			{
				return this._ValidCenter;
			}
			set
			{
				if ((this._ValidCenter != value))
				{
					this._ValidCenter = value;
				}
			}
		}
	}
	
	public partial class Spu_DentistHistoryResult
	{
		
		private System.Nullable<int> _OldID;
		
		private string _ServiceName;
		
		private string _Comment;
		
		private string _MedicalID;
		
		private string _NationalCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _ConfirmedK;
		
		private string _Date;
		
		public Spu_DentistHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this._OldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this._K = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedK", DbType="Float")]
		public System.Nullable<double> ConfirmedK
		{
			get
			{
				return this._ConfirmedK;
			}
			set
			{
				if ((this._ConfirmedK != value))
				{
					this._ConfirmedK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(12)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	public partial class Spu_AllDBPersonResult
	{
		
		private string _NationalCode;
		
		private string _PersonnelNo;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _HomePhone;
		
		private string _InsureName;
		
		private string _InsuranceNo;
		
		private string _ExpDate;
		
		private System.Nullable<byte> _Sex;
		
		private string _Note;
		
		private string _HomeCity;
		
		private string _HomeAddress;
		
		private System.Nullable<byte> _IDMaritalStatus;
		
		private byte _IDManagement;
		
		private short _IDCompany;
		
		private short _IDSubCompany;
		
		private System.Data.Linq.Binary _Photo;
		
		public Spu_AllDBPersonResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="NVarChar(25)")]
		public string PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(35)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(25)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsureName
		{
			get
			{
				return this._InsureName;
			}
			set
			{
				if ((this._InsureName != value))
				{
					this._InsureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this._ExpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="TinyInt")]
		public System.Nullable<byte> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeCity", DbType="NVarChar(30)")]
		public string HomeCity
		{
			get
			{
				return this._HomeCity;
			}
			set
			{
				if ((this._HomeCity != value))
				{
					this._HomeCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaritalStatus", DbType="TinyInt")]
		public System.Nullable<byte> IDMaritalStatus
		{
			get
			{
				return this._IDMaritalStatus;
			}
			set
			{
				if ((this._IDMaritalStatus != value))
				{
					this._IDMaritalStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="TinyInt NOT NULL")]
		public byte IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt NOT NULL")]
		public short IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="SmallInt NOT NULL")]
		public short IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image")]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
