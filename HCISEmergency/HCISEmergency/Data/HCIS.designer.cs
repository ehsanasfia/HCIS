#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCISEmergency.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCIS")]
	public partial class HCISDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBed(Bed instance);
    partial void UpdateBed(Bed instance);
    partial void DeleteBed(Bed instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertServiceCategory(ServiceCategory instance);
    partial void UpdateServiceCategory(ServiceCategory instance);
    partial void DeleteServiceCategory(ServiceCategory instance);
    partial void InsertDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void UpdateDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void DeleteDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void InsertTariff(Tariff instance);
    partial void UpdateTariff(Tariff instance);
    partial void DeleteTariff(Tariff instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTreatmentProgress(TreatmentProgress instance);
    partial void UpdateTreatmentProgress(TreatmentProgress instance);
    partial void DeleteTreatmentProgress(TreatmentProgress instance);
    partial void InsertConsultant(Consultant instance);
    partial void UpdateConsultant(Consultant instance);
    partial void DeleteConsultant(Consultant instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertDiet(Diet instance);
    partial void UpdateDiet(Diet instance);
    partial void DeleteDiet(Diet instance);
    partial void InsertAbsorptionandDisposalofFluid(AbsorptionandDisposalofFluid instance);
    partial void UpdateAbsorptionandDisposalofFluid(AbsorptionandDisposalofFluid instance);
    partial void DeleteAbsorptionandDisposalofFluid(AbsorptionandDisposalofFluid instance);
    partial void InsertBedReservation(BedReservation instance);
    partial void UpdateBedReservation(BedReservation instance);
    partial void DeleteBedReservation(BedReservation instance);
    partial void InsertGivenDrug(GivenDrug instance);
    partial void UpdateGivenDrug(GivenDrug instance);
    partial void DeleteGivenDrug(GivenDrug instance);
    partial void InsertQA(QA instance);
    partial void UpdateQA(QA instance);
    partial void DeleteQA(QA instance);
    partial void InsertDrugAllergy(DrugAllergy instance);
    partial void UpdateDrugAllergy(DrugAllergy instance);
    partial void DeleteDrugAllergy(DrugAllergy instance);
    partial void InsertDrugHistory(DrugHistory instance);
    partial void UpdateDrugHistory(DrugHistory instance);
    partial void DeleteDrugHistory(DrugHistory instance);
    partial void InsertICD10(ICD10 instance);
    partial void UpdateICD10(ICD10 instance);
    partial void DeleteICD10(ICD10 instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertFavoriteService(FavoriteService instance);
    partial void UpdateFavoriteService(FavoriteService instance);
    partial void DeleteFavoriteService(FavoriteService instance);
    partial void InsertPatternM(PatternM instance);
    partial void UpdatePatternM(PatternM instance);
    partial void DeletePatternM(PatternM instance);
    partial void InsertPatternD(PatternD instance);
    partial void UpdatePatternD(PatternD instance);
    partial void DeletePatternD(PatternD instance);
    partial void InsertPharmacyDrug(PharmacyDrug instance);
    partial void UpdatePharmacyDrug(PharmacyDrug instance);
    partial void DeletePharmacyDrug(PharmacyDrug instance);
    partial void InsertLabGroup(LabGroup instance);
    partial void UpdateLabGroup(LabGroup instance);
    partial void DeleteLabGroup(LabGroup instance);
    partial void InsertLabSubGroup(LabSubGroup instance);
    partial void UpdateLabSubGroup(LabSubGroup instance);
    partial void DeleteLabSubGroup(LabSubGroup instance);
    partial void InsertLabTestGroup(LabTestGroup instance);
    partial void UpdateLabTestGroup(LabTestGroup instance);
    partial void DeleteLabTestGroup(LabTestGroup instance);
    partial void InsertDoctorComment(DoctorComment instance);
    partial void UpdateDoctorComment(DoctorComment instance);
    partial void DeleteDoctorComment(DoctorComment instance);
    partial void InsertVitalSign(VitalSign instance);
    partial void UpdateVitalSign(VitalSign instance);
    partial void DeleteVitalSign(VitalSign instance);
    partial void InsertDispatchReason(DispatchReason instance);
    partial void UpdateDispatchReason(DispatchReason instance);
    partial void DeleteDispatchReason(DispatchReason instance);
    partial void InsertSpecialityDrug(SpecialityDrug instance);
    partial void UpdateSpecialityDrug(SpecialityDrug instance);
    partial void DeleteSpecialityDrug(SpecialityDrug instance);
    partial void InsertTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void UpdateTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void DeleteTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void InsertGivenLaboratoryServiceD(GivenLaboratoryServiceD instance);
    partial void UpdateGivenLaboratoryServiceD(GivenLaboratoryServiceD instance);
    partial void DeleteGivenLaboratoryServiceD(GivenLaboratoryServiceD instance);
    partial void InsertDispatch(Dispatch instance);
    partial void UpdateDispatch(Dispatch instance);
    partial void DeleteDispatch(Dispatch instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertGivenServiceD(GivenServiceD instance);
    partial void UpdateGivenServiceD(GivenServiceD instance);
    partial void DeleteGivenServiceD(GivenServiceD instance);
    partial void InsertPresentation(Presentation instance);
    partial void UpdatePresentation(Presentation instance);
    partial void DeletePresentation(Presentation instance);
    partial void InsertDischarge(Discharge instance);
    partial void UpdateDischarge(Discharge instance);
    partial void DeleteDischarge(Discharge instance);
    partial void InsertInsurance(Insurance instance);
    partial void UpdateInsurance(Insurance instance);
    partial void DeleteInsurance(Insurance instance);
    partial void InsertGivenServiceM(GivenServiceM instance);
    partial void UpdateGivenServiceM(GivenServiceM instance);
    partial void DeleteGivenServiceM(GivenServiceM instance);
    partial void InsertTriage(Triage instance);
    partial void UpdateTriage(Triage instance);
    partial void DeleteTriage(Triage instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertLaboratoryServiceDetail(LaboratoryServiceDetail instance);
    partial void UpdateLaboratoryServiceDetail(LaboratoryServiceDetail instance);
    partial void DeleteLaboratoryServiceDetail(LaboratoryServiceDetail instance);
    partial void InsertEmergencyWarning(EmergencyWarning instance);
    partial void UpdateEmergencyWarning(EmergencyWarning instance);
    partial void DeleteEmergencyWarning(EmergencyWarning instance);
    #endregion
		
		public HCISDataContext() : 
				base(global::HCISEmergency.Properties.Settings.Default.HCISConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bed> Beds
		{
			get
			{
				return this.GetTable<Bed>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCategory> ServiceCategories
		{
			get
			{
				return this.GetTable<ServiceCategory>();
			}
		}
		
		public System.Data.Linq.Table<DrugFrequencyUsage> DrugFrequencyUsages
		{
			get
			{
				return this.GetTable<DrugFrequencyUsage>();
			}
		}
		
		public System.Data.Linq.Table<Tariff> Tariffs
		{
			get
			{
				return this.GetTable<Tariff>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<TreatmentProgress> TreatmentProgresses
		{
			get
			{
				return this.GetTable<TreatmentProgress>();
			}
		}
		
		public System.Data.Linq.Table<Consultant> Consultants
		{
			get
			{
				return this.GetTable<Consultant>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<Diet> Diets
		{
			get
			{
				return this.GetTable<Diet>();
			}
		}
		
		public System.Data.Linq.Table<AbsorptionandDisposalofFluid> AbsorptionandDisposalofFluids
		{
			get
			{
				return this.GetTable<AbsorptionandDisposalofFluid>();
			}
		}
		
		public System.Data.Linq.Table<BedReservation> BedReservations
		{
			get
			{
				return this.GetTable<BedReservation>();
			}
		}
		
		public System.Data.Linq.Table<GivenDrug> GivenDrugs
		{
			get
			{
				return this.GetTable<GivenDrug>();
			}
		}
		
		public System.Data.Linq.Table<QA> QAs
		{
			get
			{
				return this.GetTable<QA>();
			}
		}
		
		public System.Data.Linq.Table<DrugAllergy> DrugAllergies
		{
			get
			{
				return this.GetTable<DrugAllergy>();
			}
		}
		
		public System.Data.Linq.Table<DrugHistory> DrugHistories
		{
			get
			{
				return this.GetTable<DrugHistory>();
			}
		}
		
		public System.Data.Linq.Table<VwDrugHistoryUnion> VwDrugHistoryUnions
		{
			get
			{
				return this.GetTable<VwDrugHistoryUnion>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosFinance> Vw_DosFinances
		{
			get
			{
				return this.GetTable<Vw_DosFinance>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosseirPayment> Vw_DosseirPayments
		{
			get
			{
				return this.GetTable<Vw_DosseirPayment>();
			}
		}
		
		public System.Data.Linq.Table<Vw_AbsorptionandDisposalofFluidsWithDossier> Vw_AbsorptionandDisposalofFluidsWithDossiers
		{
			get
			{
				return this.GetTable<Vw_AbsorptionandDisposalofFluidsWithDossier>();
			}
		}
		
		public System.Data.Linq.Table<ICD10> ICD10s
		{
			get
			{
				return this.GetTable<ICD10>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteService> FavoriteServices
		{
			get
			{
				return this.GetTable<FavoriteService>();
			}
		}
		
		public System.Data.Linq.Table<PatternM> PatternMs
		{
			get
			{
				return this.GetTable<PatternM>();
			}
		}
		
		public System.Data.Linq.Table<PatternD> PatternDs
		{
			get
			{
				return this.GetTable<PatternD>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this.GetTable<PharmacyDrug>();
			}
		}
		
		public System.Data.Linq.Table<LabGroup> LabGroups
		{
			get
			{
				return this.GetTable<LabGroup>();
			}
		}
		
		public System.Data.Linq.Table<LabSubGroup> LabSubGroups
		{
			get
			{
				return this.GetTable<LabSubGroup>();
			}
		}
		
		public System.Data.Linq.Table<LabTestGroup> LabTestGroups
		{
			get
			{
				return this.GetTable<LabTestGroup>();
			}
		}
		
		public System.Data.Linq.Table<DoctorComment> DoctorComments
		{
			get
			{
				return this.GetTable<DoctorComment>();
			}
		}
		
		public System.Data.Linq.Table<VitalSign> VitalSigns
		{
			get
			{
				return this.GetTable<VitalSign>();
			}
		}
		
		public System.Data.Linq.Table<DispatchReason> DispatchReasons
		{
			get
			{
				return this.GetTable<DispatchReason>();
			}
		}
		
		public System.Data.Linq.Table<SpecialityDrug> SpecialityDrugs
		{
			get
			{
				return this.GetTable<SpecialityDrug>();
			}
		}
		
		public System.Data.Linq.Table<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this.GetTable<TriageEmergencyCPR>();
			}
		}
		
		public System.Data.Linq.Table<GivenLaboratoryServiceD> GivenLaboratoryServiceDs
		{
			get
			{
				return this.GetTable<GivenLaboratoryServiceD>();
			}
		}
		
		public System.Data.Linq.Table<View_SecurityUser> View_SecurityUsers
		{
			get
			{
				return this.GetTable<View_SecurityUser>();
			}
		}
		
		public System.Data.Linq.Table<Dispatch> Dispatches
		{
			get
			{
				return this.GetTable<Dispatch>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfers
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this.GetTable<GivenServiceD>();
			}
		}
		
		public System.Data.Linq.Table<Presentation> Presentations
		{
			get
			{
				return this.GetTable<Presentation>();
			}
		}
		
		public System.Data.Linq.Table<Discharge> Discharges
		{
			get
			{
				return this.GetTable<Discharge>();
			}
		}
		
		public System.Data.Linq.Table<Insurance> Insurances
		{
			get
			{
				return this.GetTable<Insurance>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this.GetTable<GivenServiceM>();
			}
		}
		
		public System.Data.Linq.Table<View_IMPHO_Person> View_IMPHO_Persons
		{
			get
			{
				return this.GetTable<View_IMPHO_Person>();
			}
		}
		
		public System.Data.Linq.Table<Triage> Triages
		{
			get
			{
				return this.GetTable<Triage>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossiers
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<VwDoctorInstraction> VwDoctorInstractions
		{
			get
			{
				return this.GetTable<VwDoctorInstraction>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<ViewLabGroupby> ViewLabGroupbies
		{
			get
			{
				return this.GetTable<ViewLabGroupby>();
			}
		}
		
		public System.Data.Linq.Table<LaboratoryServiceDetail> LaboratoryServiceDetails
		{
			get
			{
				return this.GetTable<LaboratoryServiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_EmergencyNursePatientList> View_EmergencyNursePatientLists
		{
			get
			{
				return this.GetTable<View_EmergencyNursePatientList>();
			}
		}
		
		public System.Data.Linq.Table<EmergencyWarning> EmergencyWarnings
		{
			get
			{
				return this.GetTable<EmergencyWarning>();
			}
		}
		
		public System.Data.Linq.Table<Vw_CareGSD> Vw_CareGSDs
		{
			get
			{
				return this.GetTable<Vw_CareGSD>();
			}
		}
		
		public System.Data.Linq.Table<Vw_CareGSM> Vw_CareGSMs
		{
			get
			{
				return this.GetTable<Vw_CareGSM>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_FullLabHistory")]
		public ISingleResult<Spu_FullLabHistoryResult> Spu_FullLabHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Spu_FullLabHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_DrugHistory")]
		public ISingleResult<Spu_DrugHistoryResult> Spu_DrugHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode);
			return ((ISingleResult<Spu_DrugHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_DiagnosticService_History")]
		public ISingleResult<Spu_DiagnosticService_HistoryResult> Spu_DiagnosticService_History([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NAtionalCode", DbType="NVarChar(10)")] string nAtionalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nAtionalCode);
			return ((ISingleResult<Spu_DiagnosticService_HistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_AllDBPerson")]
		public ISingleResult<Spu_AllDBPersonResult> Spu_AllDBPerson([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonnelNo", DbType="NVarChar(25)")] string personnelNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personnelNo, nationalCode);
			return ((ISingleResult<Spu_AllDBPersonResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_AllDBPerson_insure")]
		public ISingleResult<Spu_AllDBPerson_insureResult> Spu_AllDBPerson_insure([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonnelNo", DbType="NVarChar(10)")] string personnelNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Insure", DbType="NVarChar(10)")] string insure)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personnelNo, nationalCode, insure);
			return ((ISingleResult<Spu_AllDBPerson_insureResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Spu_AllDBPersoninsuer")]
		public ISingleResult<Spu_AllDBPersoninsuerResult> Spu_AllDBPersoninsuer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonnelNo", DbType="NVarChar(10)")] string personnelNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personnelNo, nationalCode);
			return ((ISingleResult<Spu_AllDBPersoninsuerResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bed")]
	public partial class Bed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Bed1;
		
		private System.Nullable<int> _BedNumber;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _Condition;
		
		private string _Type;
		
		private System.Nullable<int> _RoomNumber;
		
		private EntitySet<BedReservation> _BedReservations;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBed1Changing(System.Nullable<int> value);
    partial void OnBed1Changed();
    partial void OnBedNumberChanging(System.Nullable<int> value);
    partial void OnBedNumberChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    #endregion
		
		public Bed()
		{
			this._BedReservations = new EntitySet<BedReservation>(new Action<BedReservation>(this.attach_BedReservations), new Action<BedReservation>(this.detach_BedReservations));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bed", Storage="_Bed1", DbType="Int")]
		public System.Nullable<int> Bed1
		{
			get
			{
				return this._Bed1;
			}
			set
			{
				if ((this._Bed1 != value))
				{
					this.OnBed1Changing(value);
					this.SendPropertyChanging();
					this._Bed1 = value;
					this.SendPropertyChanged("Bed1");
					this.OnBed1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedNumber", DbType="Int")]
		public System.Nullable<int> BedNumber
		{
			get
			{
				return this._BedNumber;
			}
			set
			{
				if ((this._BedNumber != value))
				{
					this.OnBedNumberChanging(value);
					this.SendPropertyChanging();
					this._BedNumber = value;
					this.SendPropertyChanged("BedNumber");
					this.OnBedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(50)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_BedReservation", Storage="_BedReservations", ThisKey="ID", OtherKey="BedID")]
		public EntitySet<BedReservation> BedReservations
		{
			get
			{
				return this._BedReservations;
			}
			set
			{
				this._BedReservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="BedID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Bed", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Beds.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Beds.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.Bed = this;
		}
		
		private void detach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.Bed = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Bed = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Bed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MedicalID;
		
		private string _FamilyNumber;
		
		private System.Nullable<System.Guid> _FamilyDoctor;
		
		private System.Nullable<System.Guid> _FamilyNurse;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _IdentityNumber;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _Phone;
		
		private string _CellularPhone;
		
		private string _WorkPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Address;
		
		private string _WorkAddress;
		
		private string _InsuranceName;
		
		private string _InsuranceNo;
		
		private string _Education;
		
		private string _Comment;
		
		private string _MaritalStatus;
		
		private string _Religion;
		
		private string _CurrentJob;
		
		private string _BloodType;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _Barcode;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _BookletExpireDate;
		
		private bool _AllowInstallment;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		private bool _Death;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private string _DialectLanguage;
		
		private bool _Forieng;
		
		private string _Nationality;
		
		private string _PassportNumber;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<DrugAllergy> _DrugAllergies;
		
		private EntitySet<DrugHistory> _DrugHistories;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Triage> _Triages;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntityRef<Person> _Person1;
		
		private EntityRef<Person> _Person2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFamilyNumberChanging(string value);
    partial void OnFamilyNumberChanged();
    partial void OnFamilyDoctorChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyDoctorChanged();
    partial void OnFamilyNurseChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyNurseChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnPersonalCodeChanging(string value);
    partial void OnPersonalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellularPhoneChanging(string value);
    partial void OnCellularPhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkAddressChanging(string value);
    partial void OnWorkAddressChanged();
    partial void OnInsuranceNameChanging(string value);
    partial void OnInsuranceNameChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnBarcodeChanging(System.Nullable<int> value);
    partial void OnBarcodeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAllowInstallmentChanging(bool value);
    partial void OnAllowInstallmentChanged();
    partial void OnNotUseChanging(bool value);
    partial void OnNotUseChanged();
    partial void OnVisibelChanging(bool value);
    partial void OnVisibelChanged();
    partial void OnDeathChanging(bool value);
    partial void OnDeathChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDialectLanguageChanging(string value);
    partial void OnDialectLanguageChanged();
    partial void OnForiengChanging(bool value);
    partial void OnForiengChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    #endregion
		
		public Person()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			this._Staff = default(EntityRef<Staff>);
			this._DrugAllergies = new EntitySet<DrugAllergy>(new Action<DrugAllergy>(this.attach_DrugAllergies), new Action<DrugAllergy>(this.detach_DrugAllergies));
			this._DrugHistories = new EntitySet<DrugHistory>(new Action<DrugHistory>(this.attach_DrugHistories), new Action<DrugHistory>(this.detach_DrugHistories));
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Triages = new EntitySet<Triage>(new Action<Triage>(this.attach_Triages), new Action<Triage>(this.detach_Triages));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Person1 = default(EntityRef<Person>);
			this._Person2 = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNumber", DbType="NVarChar(10)")]
		public string FamilyNumber
		{
			get
			{
				return this._FamilyNumber;
			}
			set
			{
				if ((this._FamilyNumber != value))
				{
					this.OnFamilyNumberChanging(value);
					this.SendPropertyChanging();
					this._FamilyNumber = value;
					this.SendPropertyChanged("FamilyNumber");
					this.OnFamilyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDoctor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyDoctor
		{
			get
			{
				return this._FamilyDoctor;
			}
			set
			{
				if ((this._FamilyDoctor != value))
				{
					if (this._Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyDoctorChanging(value);
					this.SendPropertyChanging();
					this._FamilyDoctor = value;
					this.SendPropertyChanged("FamilyDoctor");
					this.OnFamilyDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNurse", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyNurse
		{
			get
			{
				return this._FamilyNurse;
			}
			set
			{
				if ((this._FamilyNurse != value))
				{
					if (this._Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyNurse = value;
					this.SendPropertyChanged("FamilyNurse");
					this.OnFamilyNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this.OnPersonalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonalCode = value;
					this.SendPropertyChanged("PersonalCode");
					this.OnPersonalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellularPhone", DbType="NVarChar(25)")]
		public string CellularPhone
		{
			get
			{
				return this._CellularPhone;
			}
			set
			{
				if ((this._CellularPhone != value))
				{
					this.OnCellularPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellularPhone = value;
					this.SendPropertyChanged("CellularPhone");
					this.OnCellularPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAddress", DbType="NVarChar(300)")]
		public string WorkAddress
		{
			get
			{
				return this._WorkAddress;
			}
			set
			{
				if ((this._WorkAddress != value))
				{
					this.OnWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkAddress = value;
					this.SendPropertyChanged("WorkAddress");
					this.OnWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this.OnInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._InsuranceName = value;
					this.SendPropertyChanged("InsuranceName");
					this.OnInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(100)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(500)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(20)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Int")]
		public System.Nullable<int> Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInstallment", DbType="Bit NOT NULL")]
		public bool AllowInstallment
		{
			get
			{
				return this._AllowInstallment;
			}
			set
			{
				if ((this._AllowInstallment != value))
				{
					this.OnAllowInstallmentChanging(value);
					this.SendPropertyChanging();
					this._AllowInstallment = value;
					this.SendPropertyChanged("AllowInstallment");
					this.OnAllowInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this.OnNotUseChanging(value);
					this.SendPropertyChanging();
					this._NotUse = value;
					this.SendPropertyChanged("NotUse");
					this.OnNotUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this.OnVisibelChanging(value);
					this.SendPropertyChanging();
					this._Visibel = value;
					this.SendPropertyChanged("Visibel");
					this.OnVisibelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Death", DbType="Bit NOT NULL")]
		public bool Death
		{
			get
			{
				return this._Death;
			}
			set
			{
				if ((this._Death != value))
				{
					this.OnDeathChanging(value);
					this.SendPropertyChanging();
					this._Death = value;
					this.SendPropertyChanged("Death");
					this.OnDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NVarChar(8)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NVarChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectLanguage", DbType="NVarChar(50)")]
		public string DialectLanguage
		{
			get
			{
				return this._DialectLanguage;
			}
			set
			{
				if ((this._DialectLanguage != value))
				{
					this.OnDialectLanguageChanging(value);
					this.SendPropertyChanging();
					this._DialectLanguage = value;
					this.SendPropertyChanged("DialectLanguage");
					this.OnDialectLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forieng", DbType="Bit NOT NULL")]
		public bool Forieng
		{
			get
			{
				return this._Forieng;
			}
			set
			{
				if ((this._Forieng != value))
				{
					this.OnForiengChanging(value);
					this.SendPropertyChanging();
					this._Forieng = value;
					this.SendPropertyChanged("Forieng");
					this.OnForiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(50)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Persons", ThisKey="ID", OtherKey="FamilyDoctor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="FamilyNurse")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy", Storage="_DrugAllergies", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugAllergy> DrugAllergies
		{
			get
			{
				return this._DrugAllergies;
			}
			set
			{
				this._DrugAllergies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory", Storage="_DrugHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugHistory> DrugHistories
		{
			get
			{
				return this._DrugHistories;
			}
			set
			{
				this._DrugHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Triage", Storage="_Triages", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Triage> Triages
		{
			get
			{
				return this._Triages;
			}
			set
			{
				this._Triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Person1", ThisKey="FamilyDoctor", OtherKey="ID", IsForeignKey=true)]
		public Person Person1
		{
			get
			{
				return this._Person1.Entity;
			}
			set
			{
				Person previousValue = this._Person1.Entity;
				if (((previousValue != value) 
							|| (this._Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person1.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Person1.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FamilyDoctor = value.ID;
					}
					else
					{
						this._FamilyDoctor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Person2", ThisKey="FamilyNurse", OtherKey="ID", IsForeignKey=true)]
		public Person Person2
		{
			get
			{
				return this._Person2.Entity;
			}
			set
			{
				Person previousValue = this._Person2.Entity;
				if (((previousValue != value) 
							|| (this._Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person2.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._Person2.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._FamilyNurse = value.ID;
					}
					else
					{
						this._FamilyNurse = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = null;
		}
		
		private void attach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCategory")]
	public partial class ServiceCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ServiceCategory()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ServiceCategoryID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_Services", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugFrequencyUsage")]
	public partial class DrugFrequencyUsage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _EName;
		
		private string _Code;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public DrugFrequencyUsage()
		{
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(1000)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(1000)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this.OnENameChanging(value);
					this.SendPropertyChanging();
					this._EName = value;
					this.SendPropertyChanged("EName");
					this.OnENameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="HIXCode")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariff")]
	public partial class Tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<decimal> _FreePrice;
		
		private System.Nullable<decimal> _GovernmentalPrice;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private bool _Lock;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPatientShareChanging(System.Nullable<decimal> value);
    partial void OnPatientShareChanged();
    partial void OnOrganizationShareChanging(System.Nullable<decimal> value);
    partial void OnOrganizationShareChanged();
    partial void OnFreePriceChanging(System.Nullable<decimal> value);
    partial void OnFreePriceChanged();
    partial void OnGovernmentalPriceChanging(System.Nullable<decimal> value);
    partial void OnGovernmentalPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    #endregion
		
		public Tariff()
		{
			this._Insurance = default(EntityRef<Insurance>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this.OnOrganizationShareChanging(value);
					this.SendPropertyChanging();
					this._OrganizationShare = value;
					this.SendPropertyChanged("OrganizationShare");
					this.OnOrganizationShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreePrice", DbType="Money")]
		public System.Nullable<decimal> FreePrice
		{
			get
			{
				return this._FreePrice;
			}
			set
			{
				if ((this._FreePrice != value))
				{
					this.OnFreePriceChanging(value);
					this.SendPropertyChanging();
					this._FreePrice = value;
					this.SendPropertyChanged("FreePrice");
					this.OnFreePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentalPrice", DbType="Money")]
		public System.Nullable<decimal> GovernmentalPrice
		{
			get
			{
				return this._GovernmentalPrice;
			}
			set
			{
				if ((this._GovernmentalPrice != value))
				{
					this.OnGovernmentalPriceChanging(value);
					this.SendPropertyChanging();
					this._GovernmentalPrice = value;
					this.SendPropertyChanged("GovernmentalPrice");
					this.OnGovernmentalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private string _RoomNumber;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private EntitySet<Consultant> _Consultants;
		
		private EntitySet<GivenDrug> _GivenDrugs;
		
		private EntitySet<FavoriteService> _FavoriteServices;
		
		private EntitySet<Transfer> _Transfers;
		
		private EntitySet<Transfer> _Transfers1;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs2;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<Reference> _References;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    #endregion
		
		public Staff()
		{
			this._Consultants = new EntitySet<Consultant>(new Action<Consultant>(this.attach_Consultants), new Action<Consultant>(this.detach_Consultants));
			this._GivenDrugs = new EntitySet<GivenDrug>(new Action<GivenDrug>(this.attach_GivenDrugs), new Action<GivenDrug>(this.detach_GivenDrugs));
			this._FavoriteServices = new EntitySet<FavoriteService>(new Action<FavoriteService>(this.attach_FavoriteServices), new Action<FavoriteService>(this.detach_FavoriteServices));
			this._Transfers = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers), new Action<Transfer>(this.detach_Transfers));
			this._Transfers1 = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers1), new Action<Transfer>(this.detach_Transfers1));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._GivenServiceMs2 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs2), new Action<GivenServiceM>(this.detach_GivenServiceMs2));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Person = default(EntityRef<Person>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(200)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Consultant", Storage="_Consultants", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Consultant> Consultants
		{
			get
			{
				return this._Consultants;
			}
			set
			{
				this._Consultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenDrug", Storage="_GivenDrugs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenDrug> GivenDrugs
		{
			get
			{
				return this._GivenDrugs;
			}
			set
			{
				this._GivenDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteService", Storage="_FavoriteServices", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<FavoriteService> FavoriteServices
		{
			get
			{
				return this._FavoriteServices;
			}
			set
			{
				this._FavoriteServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer", Storage="_Transfers", ThisKey="ID", OtherKey="FromStaffID")]
		public EntitySet<Transfer> Transfers
		{
			get
			{
				return this._Transfers;
			}
			set
			{
				this._Transfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer1", Storage="_Transfers1", ThisKey="ID", OtherKey="ToStaffID")]
		public EntitySet<Transfer> Transfers1
		{
			get
			{
				return this._Transfers1;
			}
			set
			{
				this._Transfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="DischargerStaffID")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_GivenServiceMs2", ThisKey="ID", OtherKey="TechnicianID")]
		public EntitySet<GivenServiceM> GivenServiceMs2
		{
			get
			{
				return this._GivenServiceMs2;
			}
			set
			{
				this._GivenServiceMs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="StaffCure")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_References", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Transfers1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_Transfers1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreatmentProgresses")]
	public partial class TreatmentProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GivenserviceMID;
		
		private System.Nullable<long> _DosseirID;
		
		private string _PROGRESSNote;
		
		private string _Date;
		
		private string _Time;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGivenserviceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenserviceMIDChanged();
    partial void OnDosseirIDChanging(System.Nullable<long> value);
    partial void OnDosseirIDChanged();
    partial void OnPROGRESSNoteChanging(string value);
    partial void OnPROGRESSNoteChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public TreatmentProgress()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenserviceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenserviceMID
		{
			get
			{
				return this._GivenserviceMID;
			}
			set
			{
				if ((this._GivenserviceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenserviceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenserviceMID = value;
					this.SendPropertyChanged("GivenserviceMID");
					this.OnGivenserviceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosseirID", DbType="BigInt")]
		public System.Nullable<long> DosseirID
		{
			get
			{
				return this._DosseirID;
			}
			set
			{
				if ((this._DosseirID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDosseirIDChanging(value);
					this.SendPropertyChanging();
					this._DosseirID = value;
					this.SendPropertyChanged("DosseirID");
					this.OnDosseirIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRESSNote", DbType="NVarChar(200)")]
		public string PROGRESSNote
		{
			get
			{
				return this._PROGRESSNote;
			}
			set
			{
				if ((this._PROGRESSNote != value))
				{
					this.OnPROGRESSNoteChanging(value);
					this.SendPropertyChanging();
					this._PROGRESSNote = value;
					this.SendPropertyChanged("PROGRESSNote");
					this.OnPROGRESSNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TreatmentProgress", Storage="_GivenServiceM", ThisKey="GivenserviceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.TreatmentProgresses.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.TreatmentProgresses.Add(this);
						this._GivenserviceMID = value.ID;
					}
					else
					{
						this._GivenserviceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_TreatmentProgress", Storage="_Dossier", ThisKey="DosseirID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.TreatmentProgresses.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.TreatmentProgresses.Add(this);
						this._DosseirID = value.ID;
					}
					else
					{
						this._DosseirID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultant")]
	public partial class Consultant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ReqType;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private string _ReqText;
		
		private string _ReplyText;
		
		private string _ReqTime;
		
		private string _ReqDate;
		
		private string _ReplyTime;
		
		private string _ReplyDate;
		
		private System.Nullable<long> _DossierID;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnReqTypeChanging(string value);
    partial void OnReqTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnReqTextChanging(string value);
    partial void OnReqTextChanged();
    partial void OnReplyTextChanging(string value);
    partial void OnReplyTextChanged();
    partial void OnReqTimeChanging(string value);
    partial void OnReqTimeChanged();
    partial void OnReqDateChanging(string value);
    partial void OnReqDateChanged();
    partial void OnReplyTimeChanging(string value);
    partial void OnReplyTimeChanged();
    partial void OnReplyDateChanging(string value);
    partial void OnReplyDateChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    #endregion
		
		public Consultant()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Speciality = default(EntityRef<Speciality>);
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqType", DbType="NVarChar(50)")]
		public string ReqType
		{
			get
			{
				return this._ReqType;
			}
			set
			{
				if ((this._ReqType != value))
				{
					this.OnReqTypeChanging(value);
					this.SendPropertyChanging();
					this._ReqType = value;
					this.SendPropertyChanged("ReqType");
					this.OnReqTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqText", DbType="NVarChar(MAX)")]
		public string ReqText
		{
			get
			{
				return this._ReqText;
			}
			set
			{
				if ((this._ReqText != value))
				{
					this.OnReqTextChanging(value);
					this.SendPropertyChanging();
					this._ReqText = value;
					this.SendPropertyChanged("ReqText");
					this.OnReqTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyText", DbType="NVarChar(MAX)")]
		public string ReplyText
		{
			get
			{
				return this._ReplyText;
			}
			set
			{
				if ((this._ReplyText != value))
				{
					this.OnReplyTextChanging(value);
					this.SendPropertyChanging();
					this._ReplyText = value;
					this.SendPropertyChanged("ReplyText");
					this.OnReplyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqTime", DbType="NChar(10)")]
		public string ReqTime
		{
			get
			{
				return this._ReqTime;
			}
			set
			{
				if ((this._ReqTime != value))
				{
					this.OnReqTimeChanging(value);
					this.SendPropertyChanging();
					this._ReqTime = value;
					this.SendPropertyChanged("ReqTime");
					this.OnReqTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqDate", DbType="NChar(10)")]
		public string ReqDate
		{
			get
			{
				return this._ReqDate;
			}
			set
			{
				if ((this._ReqDate != value))
				{
					this.OnReqDateChanging(value);
					this.SendPropertyChanging();
					this._ReqDate = value;
					this.SendPropertyChanged("ReqDate");
					this.OnReqDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTime", DbType="NChar(10)")]
		public string ReplyTime
		{
			get
			{
				return this._ReplyTime;
			}
			set
			{
				if ((this._ReplyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyDate", DbType="NChar(10)")]
		public string ReplyDate
		{
			get
			{
				return this._ReplyDate;
			}
			set
			{
				if ((this._ReplyDate != value))
				{
					this.OnReplyDateChanging(value);
					this.SendPropertyChanging();
					this._ReplyDate = value;
					this.SendPropertyChanged("ReplyDate");
					this.OnReplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Consultant", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Consultants.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Consultants.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Consultant", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Consultants.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Consultants.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Consultant", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Consultants.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Consultants.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Speciality1;
		
		private System.Nullable<int> _HeadUserID;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Consultant> _Consultants;
		
		private EntitySet<DispatchReason> _DispatchReasons;
		
		private EntitySet<SpecialityDrug> _SpecialityDrugs;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    partial void OnHeadUserIDChanging(System.Nullable<int> value);
    partial void OnHeadUserIDChanged();
    #endregion
		
		public Speciality()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Consultants = new EntitySet<Consultant>(new Action<Consultant>(this.attach_Consultants), new Action<Consultant>(this.detach_Consultants));
			this._DispatchReasons = new EntitySet<DispatchReason>(new Action<DispatchReason>(this.attach_DispatchReasons), new Action<DispatchReason>(this.detach_DispatchReasons));
			this._SpecialityDrugs = new EntitySet<SpecialityDrug>(new Action<SpecialityDrug>(this.attach_SpecialityDrugs), new Action<SpecialityDrug>(this.detach_SpecialityDrugs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadUserID", DbType="Int")]
		public System.Nullable<int> HeadUserID
		{
			get
			{
				return this._HeadUserID;
			}
			set
			{
				if ((this._HeadUserID != value))
				{
					this.OnHeadUserIDChanging(value);
					this.SendPropertyChanging();
					this._HeadUserID = value;
					this.SendPropertyChanged("HeadUserID");
					this.OnHeadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Consultant", Storage="_Consultants", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Consultant> Consultants
		{
			get
			{
				return this._Consultants;
			}
			set
			{
				this._Consultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_DispatchReason", Storage="_DispatchReasons", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<DispatchReason> DispatchReasons
		{
			get
			{
				return this._DispatchReasons;
			}
			set
			{
				this._DispatchReasons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_SpecialityDrug", Storage="_SpecialityDrugs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<SpecialityDrug> SpecialityDrugs
		{
			get
			{
				return this._SpecialityDrugs;
			}
			set
			{
				this._SpecialityDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Services", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_DispatchReasons(DispatchReason entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_DispatchReasons(DispatchReason entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Parent;
		
		private string _Name;
		
		private EntitySet<Definition> _Definitions;
		
		private EntitySet<Presentation> _Presentations;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Definition()
		{
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._Presentations = new EntitySet<Presentation>(new Action<Presentation>(this.attach_Presentations), new Action<Presentation>(this.detach_Presentations));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Presentation", Storage="_Presentations", ThisKey="ID", OtherKey="PatientCondition")]
		public EntitySet<Presentation> Presentations
		{
			get
			{
				return this._Presentations;
			}
			set
			{
				this._Presentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="PatientStatus")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="VisitType")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Departments", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Presentations(Presentation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Presentations(Presentation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diet")]
	public partial class Diet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _GsdID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Meal;
		
		private System.Nullable<bool> _Along;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntitySet<Diet> _Diets;
		
		private EntityRef<Diet> _Diet1;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnGsdIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsdIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnMealChanging(string value);
    partial void OnMealChanged();
    partial void OnAlongChanging(System.Nullable<bool> value);
    partial void OnAlongChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public Diet()
		{
			this._Diets = new EntitySet<Diet>(new Action<Diet>(this.attach_Diets), new Action<Diet>(this.detach_Diets));
			this._Diet1 = default(EntityRef<Diet>);
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Diet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsdID
		{
			get
			{
				return this._GsdID;
			}
			set
			{
				if ((this._GsdID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsdIDChanging(value);
					this.SendPropertyChanging();
					this._GsdID = value;
					this.SendPropertyChanged("GsdID");
					this.OnGsdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meal", DbType="NVarChar(50)")]
		public string Meal
		{
			get
			{
				return this._Meal;
			}
			set
			{
				if ((this._Meal != value))
				{
					this.OnMealChanging(value);
					this.SendPropertyChanging();
					this._Meal = value;
					this.SendPropertyChanged("Meal");
					this.OnMealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Along", DbType="Bit")]
		public System.Nullable<bool> Along
		{
			get
			{
				return this._Along;
			}
			set
			{
				if ((this._Along != value))
				{
					this.OnAlongChanging(value);
					this.SendPropertyChanging();
					this._Along = value;
					this.SendPropertyChanged("Along");
					this.OnAlongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diet_Diet", Storage="_Diets", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Diet> Diets
		{
			get
			{
				return this._Diets;
			}
			set
			{
				this._Diets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diet_Diet", Storage="_Diet1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Diet Diet1
		{
			get
			{
				return this._Diet1.Entity;
			}
			set
			{
				Diet previousValue = this._Diet1.Entity;
				if (((previousValue != value) 
							|| (this._Diet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diet1.Entity = null;
						previousValue.Diets.Remove(this);
					}
					this._Diet1.Entity = value;
					if ((value != null))
					{
						value.Diets.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Diet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Diet", Storage="_GivenServiceD", ThisKey="GsdID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.Diets.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.Diets.Add(this);
						this._GsdID = value.ID;
					}
					else
					{
						this._GsdID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Diet", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Diets.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Diets.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Diet1 = this;
		}
		
		private void detach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Diet1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbsorptionandDisposalofFluids")]
	public partial class AbsorptionandDisposalofFluid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MouthWay;
		
		private string _Urine;
		
		private string _Blood;
		
		private string _Feces;
		
		private string _Liquids;
		
		private string _Vomit;
		
		private string _OtherWay;
		
		private string _DifferentSecretions;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CrationDate;
		
		private string _CreationTime;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMouthWayChanging(string value);
    partial void OnMouthWayChanged();
    partial void OnUrineChanging(string value);
    partial void OnUrineChanged();
    partial void OnBloodChanging(string value);
    partial void OnBloodChanged();
    partial void OnFecesChanging(string value);
    partial void OnFecesChanged();
    partial void OnLiquidsChanging(string value);
    partial void OnLiquidsChanged();
    partial void OnVomitChanging(string value);
    partial void OnVomitChanged();
    partial void OnOtherWayChanging(string value);
    partial void OnOtherWayChanged();
    partial void OnDifferentSecretionsChanging(string value);
    partial void OnDifferentSecretionsChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCrationDateChanging(string value);
    partial void OnCrationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public AbsorptionandDisposalofFluid()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MouthWay", DbType="NVarChar(50)")]
		public string MouthWay
		{
			get
			{
				return this._MouthWay;
			}
			set
			{
				if ((this._MouthWay != value))
				{
					this.OnMouthWayChanging(value);
					this.SendPropertyChanging();
					this._MouthWay = value;
					this.SendPropertyChanged("MouthWay");
					this.OnMouthWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urine", DbType="NVarChar(50)")]
		public string Urine
		{
			get
			{
				return this._Urine;
			}
			set
			{
				if ((this._Urine != value))
				{
					this.OnUrineChanging(value);
					this.SendPropertyChanging();
					this._Urine = value;
					this.SendPropertyChanged("Urine");
					this.OnUrineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="NVarChar(50)")]
		public string Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feces", DbType="NVarChar(50)")]
		public string Feces
		{
			get
			{
				return this._Feces;
			}
			set
			{
				if ((this._Feces != value))
				{
					this.OnFecesChanging(value);
					this.SendPropertyChanging();
					this._Feces = value;
					this.SendPropertyChanged("Feces");
					this.OnFecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liquids", DbType="NVarChar(50)")]
		public string Liquids
		{
			get
			{
				return this._Liquids;
			}
			set
			{
				if ((this._Liquids != value))
				{
					this.OnLiquidsChanging(value);
					this.SendPropertyChanging();
					this._Liquids = value;
					this.SendPropertyChanged("Liquids");
					this.OnLiquidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vomit", DbType="NVarChar(50)")]
		public string Vomit
		{
			get
			{
				return this._Vomit;
			}
			set
			{
				if ((this._Vomit != value))
				{
					this.OnVomitChanging(value);
					this.SendPropertyChanging();
					this._Vomit = value;
					this.SendPropertyChanged("Vomit");
					this.OnVomitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherWay", DbType="NVarChar(50)")]
		public string OtherWay
		{
			get
			{
				return this._OtherWay;
			}
			set
			{
				if ((this._OtherWay != value))
				{
					this.OnOtherWayChanging(value);
					this.SendPropertyChanging();
					this._OtherWay = value;
					this.SendPropertyChanged("OtherWay");
					this.OnOtherWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferentSecretions", DbType="NVarChar(50)")]
		public string DifferentSecretions
		{
			get
			{
				return this._DifferentSecretions;
			}
			set
			{
				if ((this._DifferentSecretions != value))
				{
					this.OnDifferentSecretionsChanging(value);
					this.SendPropertyChanging();
					this._DifferentSecretions = value;
					this.SendPropertyChanged("DifferentSecretions");
					this.OnDifferentSecretionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrationDate", DbType="NVarChar(10)")]
		public string CrationDate
		{
			get
			{
				return this._CrationDate;
			}
			set
			{
				if ((this._CrationDate != value))
				{
					this.OnCrationDateChanging(value);
					this.SendPropertyChanging();
					this._CrationDate = value;
					this.SendPropertyChanged("CrationDate");
					this.OnCrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_AbsorptionandDisposalofFluid", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.AbsorptionandDisposalofFluid = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.AbsorptionandDisposalofFluid = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BedReservation")]
	public partial class BedReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private string _FromDate;
		
		private string _ToDate;
		
		private System.Nullable<bool> _Cancel;
		
		private string _Comment;
		
		private System.Nullable<bool> _Leave;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Bed> _Bed;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnFromDateChanging(string value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(string value);
    partial void OnToDateChanged();
    partial void OnCancelChanging(System.Nullable<bool> value);
    partial void OnCancelChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLeaveChanging(System.Nullable<bool> value);
    partial void OnLeaveChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public BedReservation()
		{
			this._Bed = default(EntityRef<Bed>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					if (this._Bed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="NVarChar(10)")]
		public string FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="NVarChar(10)")]
		public string ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancel", DbType="Bit")]
		public System.Nullable<bool> Cancel
		{
			get
			{
				return this._Cancel;
			}
			set
			{
				if ((this._Cancel != value))
				{
					this.OnCancelChanging(value);
					this.SendPropertyChanging();
					this._Cancel = value;
					this.SendPropertyChanged("Cancel");
					this.OnCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leave", DbType="Bit")]
		public System.Nullable<bool> Leave
		{
			get
			{
				return this._Leave;
			}
			set
			{
				if ((this._Leave != value))
				{
					this.OnLeaveChanging(value);
					this.SendPropertyChanging();
					this._Leave = value;
					this.SendPropertyChanged("Leave");
					this.OnLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_BedReservation", Storage="_Bed", ThisKey="BedID", OtherKey="ID", IsForeignKey=true)]
		public Bed Bed
		{
			get
			{
				return this._Bed.Entity;
			}
			set
			{
				Bed previousValue = this._Bed.Entity;
				if (((previousValue != value) 
							|| (this._Bed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bed.Entity = null;
						previousValue.BedReservations.Remove(this);
					}
					this._Bed.Entity = value;
					if ((value != null))
					{
						value.BedReservations.Add(this);
						this._BedID = value.ID;
					}
					else
					{
						this._BedID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Bed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BedReservation", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.BedReservations.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.BedReservations.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenDrug")]
	public partial class GivenDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GsdID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private string _Time;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGsdIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsdIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    #endregion
		
		public GivenDrug()
		{
			this._Staff = default(EntityRef<Staff>);
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsdID
		{
			get
			{
				return this._GsdID;
			}
			set
			{
				if ((this._GsdID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsdIDChanging(value);
					this.SendPropertyChanging();
					this._GsdID = value;
					this.SendPropertyChanged("GsdID");
					this.OnGsdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenDrug", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenDrugs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenDrugs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenDrug", Storage="_GivenServiceD", ThisKey="GsdID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.GivenDrugs.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenDrugs.Add(this);
						this._GsdID = value.ID;
					}
					else
					{
						this._GsdID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenDrug", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenDrugs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QA")]
	public partial class QA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDGivenServiceM;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _QuestionnariID;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Service> _Service1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGivenServiceMChanging(System.Nullable<System.Guid> value);
    partial void OnIDGivenServiceMChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnQuestionnariIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnariIDChanged();
    partial void OnResultNChanging(System.Nullable<int> value);
    partial void OnResultNChanged();
    partial void OnResultCHKChanging(System.Nullable<bool> value);
    partial void OnResultCHKChanged();
    partial void OnMResultChanging(string value);
    partial void OnMResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    #endregion
		
		public QA()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Service = default(EntityRef<Service>);
			this._Service1 = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGivenServiceM", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGivenServiceM
		{
			get
			{
				return this._IDGivenServiceM;
			}
			set
			{
				if ((this._IDGivenServiceM != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGivenServiceMChanging(value);
					this.SendPropertyChanging();
					this._IDGivenServiceM = value;
					this.SendPropertyChanged("IDGivenServiceM");
					this.OnIDGivenServiceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnariID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnariID
		{
			get
			{
				return this._QuestionnariID;
			}
			set
			{
				if ((this._QuestionnariID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnariIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnariID = value;
					this.SendPropertyChanged("QuestionnariID");
					this.OnQuestionnariIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this.OnResultNChanging(value);
					this.SendPropertyChanging();
					this._ResultN = value;
					this.SendPropertyChanged("ResultN");
					this.OnResultNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this.OnResultCHKChanging(value);
					this.SendPropertyChanging();
					this._ResultCHK = value;
					this.SendPropertyChanged("ResultCHK");
					this.OnResultCHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this.OnMResultChanging(value);
					this.SendPropertyChanging();
					this._MResult = value;
					this.SendPropertyChanged("MResult");
					this.OnMResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_GivenServiceM", ThisKey="IDGivenServiceM", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._IDGivenServiceM = value.ID;
					}
					else
					{
						this._IDGivenServiceM = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_Service", ThisKey="QuestionnariID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._QuestionnariID = value.ID;
					}
					else
					{
						this._QuestionnariID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.QAs1.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.QAs1.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugAllergy")]
	public partial class DrugAllergy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public DrugAllergy()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugAllergies.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugAllergies.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugAllergies.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugAllergies.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugHistory")]
	public partial class DrugHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<double> _Amount;
		
		private string _Dosage;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDosageChanging(string value);
    partial void OnDosageChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public DrugHistory()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dosage", DbType="NVarChar(100)")]
		public string Dosage
		{
			get
			{
				return this._Dosage;
			}
			set
			{
				if ((this._Dosage != value))
				{
					this.OnDosageChanging(value);
					this.SendPropertyChanging();
					this._Dosage = value;
					this.SendPropertyChanged("Dosage");
					this.OnDosageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(100)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugHistories.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugHistories.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwDrugHistoryUnion")]
	public partial class VwDrugHistoryUnion
	{
		
		private string _NationalCode;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Name;
		
		private string _Doc;
		
		public VwDrugHistoryUnion()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Doc
		{
			get
			{
				return this._Doc;
			}
			set
			{
				if ((this._Doc != value))
				{
					this._Doc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosFinance")]
	public partial class Vw_DosFinance
	{
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _Dep;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private int _ID;
		
		private string _ParentName;
		
		private string _Name;
		
		private double _Amount;
		
		private bool _Confirm;
		
		private string _GsdDate;
		
		private string _Time;
		
		private bool _NoTake;
		
		private decimal _PatientShare;
		
		private decimal _TotalPrice;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private bool _Payed;
		
		private string _PersonInsure;
		
		private string _GsmInsure;
		
		private string _Company;
		
		private string _Relation;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _BirthDate;
		
		private string _PersonalCode;
		
		private bool _Discharge;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _DischargeStatus;
		
		private bool _TotalPayed;
		
		public Vw_DosFinance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(100)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(MAX)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdDate", DbType="NVarChar(10)")]
		public string GsdDate
		{
			get
			{
				return this._GsdDate;
			}
			set
			{
				if ((this._GsdDate != value))
				{
					this._GsdDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this._PayedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this._Payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInsure", DbType="NVarChar(50)")]
		public string PersonInsure
		{
			get
			{
				return this._PersonInsure;
			}
			set
			{
				if ((this._PersonInsure != value))
				{
					this._PersonInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmInsure", DbType="NVarChar(100)")]
		public string GsmInsure
		{
			get
			{
				return this._GsmInsure;
			}
			set
			{
				if ((this._GsmInsure != value))
				{
					this._GsmInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this._Relation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this._DischargeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this._DischargeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeStatus", DbType="NVarChar(50)")]
		public string DischargeStatus
		{
			get
			{
				return this._DischargeStatus;
			}
			set
			{
				if ((this._DischargeStatus != value))
				{
					this._DischargeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosseirPayment")]
	public partial class Vw_DosseirPayment
	{
		
		private long _ID;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private int _IOtype;
		
		private decimal _Price;
		
		private string _Date;
		
		private string _Type;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private bool _PayBack;
		
		private string _Description;
		
		private string _Time;
		
		private string _TransactionID;
		
		private string _CreatorFullName;
		
		private System.Nullable<System.Guid> _PayBackID;
		
		private string _ModificatorFullName;
		
		private int _SerialNumber;
		
		private string _PayBackType;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _InstallMent;
		
		public Vw_DosseirPayment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBack", DbType="Bit NOT NULL")]
		public bool PayBack
		{
			get
			{
				return this._PayBack;
			}
			set
			{
				if ((this._PayBack != value))
				{
					this._PayBack = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this._TransactionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorFullName", DbType="NVarChar(100)")]
		public string CreatorFullName
		{
			get
			{
				return this._CreatorFullName;
			}
			set
			{
				if ((this._CreatorFullName != value))
				{
					this._CreatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayBackID
		{
			get
			{
				return this._PayBackID;
			}
			set
			{
				if ((this._PayBackID != value))
				{
					this._PayBackID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorFullName", DbType="NVarChar(100)")]
		public string ModificatorFullName
		{
			get
			{
				return this._ModificatorFullName;
			}
			set
			{
				if ((this._ModificatorFullName != value))
				{
					this._ModificatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackType", DbType="NVarChar(20)")]
		public string PayBackType
		{
			get
			{
				return this._PayBackType;
			}
			set
			{
				if ((this._PayBackType != value))
				{
					this._PayBackType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this._CaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMent", DbType="NVarChar(50)")]
		public string InstallMent
		{
			get
			{
				return this._InstallMent;
			}
			set
			{
				if ((this._InstallMent != value))
				{
					this._InstallMent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_AbsorptionandDisposalofFluidsWithDossier")]
	public partial class Vw_AbsorptionandDisposalofFluidsWithDossier
	{
		
		private string _MouthWay;
		
		private string _Urine;
		
		private string _Blood;
		
		private string _Feces;
		
		private string _Liquids;
		
		private string _Vomit;
		
		private string _OtherWay;
		
		private string _DifferentSecretions;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CrationDate;
		
		private string _CreationTime;
		
		private System.Guid _PersonID;
		
		private long _DosID;
		
		public Vw_AbsorptionandDisposalofFluidsWithDossier()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MouthWay", DbType="NVarChar(50)")]
		public string MouthWay
		{
			get
			{
				return this._MouthWay;
			}
			set
			{
				if ((this._MouthWay != value))
				{
					this._MouthWay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urine", DbType="NVarChar(50)")]
		public string Urine
		{
			get
			{
				return this._Urine;
			}
			set
			{
				if ((this._Urine != value))
				{
					this._Urine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="NVarChar(50)")]
		public string Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this._Blood = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feces", DbType="NVarChar(50)")]
		public string Feces
		{
			get
			{
				return this._Feces;
			}
			set
			{
				if ((this._Feces != value))
				{
					this._Feces = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liquids", DbType="NVarChar(50)")]
		public string Liquids
		{
			get
			{
				return this._Liquids;
			}
			set
			{
				if ((this._Liquids != value))
				{
					this._Liquids = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vomit", DbType="NVarChar(50)")]
		public string Vomit
		{
			get
			{
				return this._Vomit;
			}
			set
			{
				if ((this._Vomit != value))
				{
					this._Vomit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherWay", DbType="NVarChar(50)")]
		public string OtherWay
		{
			get
			{
				return this._OtherWay;
			}
			set
			{
				if ((this._OtherWay != value))
				{
					this._OtherWay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferentSecretions", DbType="NVarChar(50)")]
		public string DifferentSecretions
		{
			get
			{
				return this._DifferentSecretions;
			}
			set
			{
				if ((this._DifferentSecretions != value))
				{
					this._DifferentSecretions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this._CreatorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrationDate", DbType="NVarChar(10)")]
		public string CrationDate
		{
			get
			{
				return this._CrationDate;
			}
			set
			{
				if ((this._CrationDate != value))
				{
					this._CrationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosID", DbType="BigInt NOT NULL")]
		public long DosID
		{
			get
			{
				return this._DosID;
			}
			set
			{
				if ((this._DosID != value))
				{
					this._DosID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICD10")]
	public partial class ICD10 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDParent;
		
		private string _NameF;
		
		private string _NameE;
		
		private string _ICDCode;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<byte> _CodeType;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<Visit> _Visits1;
		
		private EntitySet<Visit> _Visits2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDParentChanging(System.Nullable<int> value);
    partial void OnIDParentChanged();
    partial void OnNameFChanging(string value);
    partial void OnNameFChanged();
    partial void OnNameEChanging(string value);
    partial void OnNameEChanged();
    partial void OnICDCodeChanging(string value);
    partial void OnICDCodeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCodeTypeChanging(System.Nullable<byte> value);
    partial void OnCodeTypeChanged();
    #endregion
		
		public ICD10()
		{
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._Visits1 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits1), new Action<Visit>(this.detach_Visits1));
			this._Visits2 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits2), new Action<Visit>(this.detach_Visits2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDParent", DbType="Int")]
		public System.Nullable<int> IDParent
		{
			get
			{
				return this._IDParent;
			}
			set
			{
				if ((this._IDParent != value))
				{
					this.OnIDParentChanging(value);
					this.SendPropertyChanging();
					this._IDParent = value;
					this.SendPropertyChanged("IDParent");
					this.OnIDParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameF", DbType="NVarChar(500)")]
		public string NameF
		{
			get
			{
				return this._NameF;
			}
			set
			{
				if ((this._NameF != value))
				{
					this.OnNameFChanging(value);
					this.SendPropertyChanging();
					this._NameF = value;
					this.SendPropertyChanged("NameF");
					this.OnNameFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameE", DbType="NVarChar(500)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDCode", DbType="NVarChar(20)")]
		public string ICDCode
		{
			get
			{
				return this._ICDCode;
			}
			set
			{
				if ((this._ICDCode != value))
				{
					this.OnICDCodeChanging(value);
					this.SendPropertyChanging();
					this._ICDCode = value;
					this.SendPropertyChanged("ICDCode");
					this.OnICDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeType", DbType="TinyInt")]
		public System.Nullable<byte> CodeType
		{
			get
			{
				return this._CodeType;
			}
			set
			{
				if ((this._CodeType != value))
				{
					this.OnCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._CodeType = value;
					this.SendPropertyChanged("CodeType");
					this.OnCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit", Storage="_Visits", ThisKey="ID", OtherKey="IMP")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit1", Storage="_Visits1", ThisKey="ID", OtherKey="DDx1")]
		public EntitySet<Visit> Visits1
		{
			get
			{
				return this._Visits1;
			}
			set
			{
				this._Visits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit2", Storage="_Visits2", ThisKey="ID", OtherKey="DDx2")]
		public EntitySet<Visit> Visits2
		{
			get
			{
				return this._Visits2;
			}
			set
			{
				this._Visits2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = null;
		}
		
		private void attach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = this;
		}
		
		private void detach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = null;
		}
		
		private void attach_Visits2(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = this;
		}
		
		private void detach_Visits2(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Comment;
		
		private string _ChiefComplaint;
		
		private string _Ago;
		
		private System.Nullable<short> _Since;
		
		private string _AccompanyingDocument;
		
		private System.Nullable<bool> _RO;
		
		private System.Nullable<int> _IMP;
		
		private System.Nullable<int> _DDx1;
		
		private System.Nullable<int> _DDx2;
		
		private EntityRef<ICD10> _ICD10;
		
		private EntityRef<ICD10> _ICD101;
		
		private EntityRef<ICD10> _ICD102;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnChiefComplaintChanging(string value);
    partial void OnChiefComplaintChanged();
    partial void OnAgoChanging(string value);
    partial void OnAgoChanged();
    partial void OnSinceChanging(System.Nullable<short> value);
    partial void OnSinceChanged();
    partial void OnAccompanyingDocumentChanging(string value);
    partial void OnAccompanyingDocumentChanged();
    partial void OnROChanging(System.Nullable<bool> value);
    partial void OnROChanged();
    partial void OnIMPChanging(System.Nullable<int> value);
    partial void OnIMPChanged();
    partial void OnDDx1Changing(System.Nullable<int> value);
    partial void OnDDx1Changed();
    partial void OnDDx2Changing(System.Nullable<int> value);
    partial void OnDDx2Changed();
    #endregion
		
		public Visit()
		{
			this._ICD10 = default(EntityRef<ICD10>);
			this._ICD101 = default(EntityRef<ICD10>);
			this._ICD102 = default(EntityRef<ICD10>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefComplaint", DbType="NVarChar(100)")]
		public string ChiefComplaint
		{
			get
			{
				return this._ChiefComplaint;
			}
			set
			{
				if ((this._ChiefComplaint != value))
				{
					this.OnChiefComplaintChanging(value);
					this.SendPropertyChanging();
					this._ChiefComplaint = value;
					this.SendPropertyChanged("ChiefComplaint");
					this.OnChiefComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NVarChar(10)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this.OnAgoChanging(value);
					this.SendPropertyChanging();
					this._Ago = value;
					this.SendPropertyChanged("Ago");
					this.OnAgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="SmallInt")]
		public System.Nullable<short> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this.OnSinceChanging(value);
					this.SendPropertyChanging();
					this._Since = value;
					this.SendPropertyChanged("Since");
					this.OnSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccompanyingDocument", DbType="NVarChar(MAX)")]
		public string AccompanyingDocument
		{
			get
			{
				return this._AccompanyingDocument;
			}
			set
			{
				if ((this._AccompanyingDocument != value))
				{
					this.OnAccompanyingDocumentChanging(value);
					this.SendPropertyChanging();
					this._AccompanyingDocument = value;
					this.SendPropertyChanged("AccompanyingDocument");
					this.OnAccompanyingDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RO", DbType="Bit")]
		public System.Nullable<bool> RO
		{
			get
			{
				return this._RO;
			}
			set
			{
				if ((this._RO != value))
				{
					this.OnROChanging(value);
					this.SendPropertyChanging();
					this._RO = value;
					this.SendPropertyChanged("RO");
					this.OnROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMP", DbType="Int")]
		public System.Nullable<int> IMP
		{
			get
			{
				return this._IMP;
			}
			set
			{
				if ((this._IMP != value))
				{
					if (this._ICD10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIMPChanging(value);
					this.SendPropertyChanging();
					this._IMP = value;
					this.SendPropertyChanged("IMP");
					this.OnIMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx1", DbType="Int")]
		public System.Nullable<int> DDx1
		{
			get
			{
				return this._DDx1;
			}
			set
			{
				if ((this._DDx1 != value))
				{
					if (this._ICD101.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx1Changing(value);
					this.SendPropertyChanging();
					this._DDx1 = value;
					this.SendPropertyChanged("DDx1");
					this.OnDDx1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx2", DbType="Int")]
		public System.Nullable<int> DDx2
		{
			get
			{
				return this._DDx2;
			}
			set
			{
				if ((this._DDx2 != value))
				{
					if (this._ICD102.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx2Changing(value);
					this.SendPropertyChanging();
					this._DDx2 = value;
					this.SendPropertyChanged("DDx2");
					this.OnDDx2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit", Storage="_ICD10", ThisKey="IMP", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD10
		{
			get
			{
				return this._ICD10.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD10.Entity;
				if (((previousValue != value) 
							|| (this._ICD10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD10.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._ICD10.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._IMP = value.ID;
					}
					else
					{
						this._IMP = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit1", Storage="_ICD101", ThisKey="DDx1", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD101
		{
			get
			{
				return this._ICD101.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD101.Entity;
				if (((previousValue != value) 
							|| (this._ICD101.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD101.Entity = null;
						previousValue.Visits1.Remove(this);
					}
					this._ICD101.Entity = value;
					if ((value != null))
					{
						value.Visits1.Add(this);
						this._DDx1 = value.ID;
					}
					else
					{
						this._DDx1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD101");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit2", Storage="_ICD102", ThisKey="DDx2", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD102
		{
			get
			{
				return this._ICD102.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD102.Entity;
				if (((previousValue != value) 
							|| (this._ICD102.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD102.Entity = null;
						previousValue.Visits2.Remove(this);
					}
					this._ICD102.Entity = value;
					if ((value != null))
					{
						value.Visits2.Add(this);
						this._DDx2 = value.ID;
					}
					else
					{
						this._DDx2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD102");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Visit", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Visit = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Visit = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteService")]
	public partial class FavoriteService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public FavoriteService()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteService", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FavoriteServices.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FavoriteServices.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FavoriteService", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.FavoriteServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.FavoriteServices.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternM")]
	public partial class PatternM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PatternNumber;
		
		private string _PatternName;
		
		private System.Nullable<System.Guid> _ServiceMID;
		
		private string _Date;
		
		private string _Time;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternNumberChanging(int value);
    partial void OnPatternNumberChanged();
    partial void OnPatternNameChanging(string value);
    partial void OnPatternNameChanged();
    partial void OnServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceMIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public PatternM()
		{
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternNumber", DbType="Int NOT NULL")]
		public int PatternNumber
		{
			get
			{
				return this._PatternNumber;
			}
			set
			{
				if ((this._PatternNumber != value))
				{
					this.OnPatternNumberChanging(value);
					this.SendPropertyChanging();
					this._PatternNumber = value;
					this.SendPropertyChanged("PatternNumber");
					this.OnPatternNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternName", DbType="NVarChar(100)")]
		public string PatternName
		{
			get
			{
				return this._PatternName;
			}
			set
			{
				if ((this._PatternName != value))
				{
					this.OnPatternNameChanging(value);
					this.SendPropertyChanging();
					this._PatternName = value;
					this.SendPropertyChanged("PatternName");
					this.OnPatternNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceMID
		{
			get
			{
				return this._ServiceMID;
			}
			set
			{
				if ((this._ServiceMID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceMID = value;
					this.SendPropertyChanged("ServiceMID");
					this.OnServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="PatternMID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_Service", ThisKey="ServiceMID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternMs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternMs.Add(this);
						this._ServiceMID = value.ID;
					}
					else
					{
						this._ServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternD")]
	public partial class PatternD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PatternMID;
		
		private System.Nullable<System.Guid> _ServiceDID;
		
		private double _Amount;
		
		private EntityRef<PatternM> _PatternM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternMIDChanging(System.Nullable<int> value);
    partial void OnPatternMIDChanged();
    partial void OnServiceDIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceDIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public PatternD()
		{
			this._PatternM = default(EntityRef<PatternM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternMID", DbType="Int")]
		public System.Nullable<int> PatternMID
		{
			get
			{
				return this._PatternMID;
			}
			set
			{
				if ((this._PatternMID != value))
				{
					if (this._PatternM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternMIDChanging(value);
					this.SendPropertyChanging();
					this._PatternMID = value;
					this.SendPropertyChanged("PatternMID");
					this.OnPatternMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceDID
		{
			get
			{
				return this._ServiceDID;
			}
			set
			{
				if ((this._ServiceDID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceDIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceDID = value;
					this.SendPropertyChanged("ServiceDID");
					this.OnServiceDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternM", ThisKey="PatternMID", OtherKey="ID", IsForeignKey=true)]
		public PatternM PatternM
		{
			get
			{
				return this._PatternM.Entity;
			}
			set
			{
				PatternM previousValue = this._PatternM.Entity;
				if (((previousValue != value) 
							|| (this._PatternM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatternM.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._PatternM.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._PatternMID = value.ID;
					}
					else
					{
						this._PatternMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatternM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_Service", ThisKey="ServiceDID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._ServiceDID = value.ID;
					}
					else
					{
						this._ServiceDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PharmacyDrug")]
	public partial class PharmacyDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PharmacyID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private bool _NIS;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPharmacyIDChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnNISChanging(bool value);
    partial void OnNISChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public PharmacyDrug()
		{
			this._Department = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyID
		{
			get
			{
				return this._PharmacyID;
			}
			set
			{
				if ((this._PharmacyID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPharmacyIDChanging(value);
					this.SendPropertyChanging();
					this._PharmacyID = value;
					this.SendPropertyChanged("PharmacyID");
					this.OnPharmacyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit NOT NULL")]
		public bool NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_Department", ThisKey="PharmacyID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._PharmacyID = value.ID;
					}
					else
					{
						this._PharmacyID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabGroup")]
	public partial class LabGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GoupName;
		
		private System.Nullable<int> _OldID;
		
		private string _EName;
		
		private EntitySet<LabSubGroup> _LabSubGroups;
		
		private EntitySet<LaboratoryServiceDetail> _LaboratoryServiceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGoupNameChanging(string value);
    partial void OnGoupNameChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    #endregion
		
		public LabGroup()
		{
			this._LabSubGroups = new EntitySet<LabSubGroup>(new Action<LabSubGroup>(this.attach_LabSubGroups), new Action<LabSubGroup>(this.detach_LabSubGroups));
			this._LaboratoryServiceDetails = new EntitySet<LaboratoryServiceDetail>(new Action<LaboratoryServiceDetail>(this.attach_LaboratoryServiceDetails), new Action<LaboratoryServiceDetail>(this.detach_LaboratoryServiceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoupName", DbType="NVarChar(50)")]
		public string GoupName
		{
			get
			{
				return this._GoupName;
			}
			set
			{
				if ((this._GoupName != value))
				{
					this.OnGoupNameChanging(value);
					this.SendPropertyChanging();
					this._GoupName = value;
					this.SendPropertyChanged("GoupName");
					this.OnGoupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(50)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this.OnENameChanging(value);
					this.SendPropertyChanging();
					this._EName = value;
					this.SendPropertyChanged("EName");
					this.OnENameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LabSubGroup", Storage="_LabSubGroups", ThisKey="ID", OtherKey="LabGroupID")]
		public EntitySet<LabSubGroup> LabSubGroups
		{
			get
			{
				return this._LabSubGroups;
			}
			set
			{
				this._LabSubGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LaboratoryServiceDetail", Storage="_LaboratoryServiceDetails", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<LaboratoryServiceDetail> LaboratoryServiceDetails
		{
			get
			{
				return this._LaboratoryServiceDetails;
			}
			set
			{
				this._LaboratoryServiceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabSubGroups(LabSubGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = this;
		}
		
		private void detach_LabSubGroups(LabSubGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = null;
		}
		
		private void attach_LaboratoryServiceDetails(LaboratoryServiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = this;
		}
		
		private void detach_LaboratoryServiceDetails(LaboratoryServiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabSubGroup")]
	public partial class LabSubGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SubGroupName;
		
		private System.Nullable<int> _LabGroupID;
		
		private System.Nullable<int> _OldID;
		
		private EntitySet<LabTestGroup> _LabTestGroups;
		
		private EntityRef<LabGroup> _LabGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubGroupNameChanging(string value);
    partial void OnSubGroupNameChanged();
    partial void OnLabGroupIDChanging(System.Nullable<int> value);
    partial void OnLabGroupIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    #endregion
		
		public LabSubGroup()
		{
			this._LabTestGroups = new EntitySet<LabTestGroup>(new Action<LabTestGroup>(this.attach_LabTestGroups), new Action<LabTestGroup>(this.detach_LabTestGroups));
			this._LabGroup = default(EntityRef<LabGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGroupName", DbType="NVarChar(50)")]
		public string SubGroupName
		{
			get
			{
				return this._SubGroupName;
			}
			set
			{
				if ((this._SubGroupName != value))
				{
					this.OnSubGroupNameChanging(value);
					this.SendPropertyChanging();
					this._SubGroupName = value;
					this.SendPropertyChanged("SubGroupName");
					this.OnSubGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabGroupID", DbType="Int")]
		public System.Nullable<int> LabGroupID
		{
			get
			{
				return this._LabGroupID;
			}
			set
			{
				if ((this._LabGroupID != value))
				{
					if (this._LabGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabGroupIDChanging(value);
					this.SendPropertyChanging();
					this._LabGroupID = value;
					this.SendPropertyChanged("LabGroupID");
					this.OnLabGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabSubGroup_LabTestGroup", Storage="_LabTestGroups", ThisKey="ID", OtherKey="LabSubGroupID")]
		public EntitySet<LabTestGroup> LabTestGroups
		{
			get
			{
				return this._LabTestGroups;
			}
			set
			{
				this._LabTestGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LabSubGroup", Storage="_LabGroup", ThisKey="LabGroupID", OtherKey="ID", IsForeignKey=true)]
		public LabGroup LabGroup
		{
			get
			{
				return this._LabGroup.Entity;
			}
			set
			{
				LabGroup previousValue = this._LabGroup.Entity;
				if (((previousValue != value) 
							|| (this._LabGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabGroup.Entity = null;
						previousValue.LabSubGroups.Remove(this);
					}
					this._LabGroup.Entity = value;
					if ((value != null))
					{
						value.LabSubGroups.Add(this);
						this._LabGroupID = value.ID;
					}
					else
					{
						this._LabGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabSubGroup = this;
		}
		
		private void detach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabSubGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabTestGroup")]
	public partial class LabTestGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LabSubGroupID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<bool> _Flg;
		
		private EntityRef<LabSubGroup> _LabSubGroup;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLabSubGroupIDChanging(System.Nullable<int> value);
    partial void OnLabSubGroupIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnFlgChanging(System.Nullable<bool> value);
    partial void OnFlgChanged();
    #endregion
		
		public LabTestGroup()
		{
			this._LabSubGroup = default(EntityRef<LabSubGroup>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabSubGroupID", DbType="Int")]
		public System.Nullable<int> LabSubGroupID
		{
			get
			{
				return this._LabSubGroupID;
			}
			set
			{
				if ((this._LabSubGroupID != value))
				{
					if (this._LabSubGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabSubGroupIDChanging(value);
					this.SendPropertyChanging();
					this._LabSubGroupID = value;
					this.SendPropertyChanged("LabSubGroupID");
					this.OnLabSubGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flg", DbType="Bit")]
		public System.Nullable<bool> Flg
		{
			get
			{
				return this._Flg;
			}
			set
			{
				if ((this._Flg != value))
				{
					this.OnFlgChanging(value);
					this.SendPropertyChanging();
					this._Flg = value;
					this.SendPropertyChanged("Flg");
					this.OnFlgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabSubGroup_LabTestGroup", Storage="_LabSubGroup", ThisKey="LabSubGroupID", OtherKey="ID", IsForeignKey=true)]
		public LabSubGroup LabSubGroup
		{
			get
			{
				return this._LabSubGroup.Entity;
			}
			set
			{
				LabSubGroup previousValue = this._LabSubGroup.Entity;
				if (((previousValue != value) 
							|| (this._LabSubGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabSubGroup.Entity = null;
						previousValue.LabTestGroups.Remove(this);
					}
					this._LabSubGroup.Entity = value;
					if ((value != null))
					{
						value.LabTestGroups.Add(this);
						this._LabSubGroupID = value.ID;
					}
					else
					{
						this._LabSubGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabSubGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LabTestGroup", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LabTestGroups.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LabTestGroups.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorComment")]
	public partial class DoctorComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private string _Comment;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public DoctorComment()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_DoctorComment", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.DoctorComments.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.DoctorComments.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VitalSigns")]
	public partial class VitalSign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Temperatures;
		
		private string _Breathing;
		
		private string _NervousSymptoms;
		
		private string _PupilReflexes;
		
		private string _SystolicBloodPressure;
		
		private string _DiastolicBloodPressure;
		
		private string _Pulse;
		
		private string _SPO2;
		
		private string _Glucometry;
		
		private System.Nullable<int> _TriageLevelChange;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTemperaturesChanging(string value);
    partial void OnTemperaturesChanged();
    partial void OnBreathingChanging(string value);
    partial void OnBreathingChanged();
    partial void OnNervousSymptomsChanging(string value);
    partial void OnNervousSymptomsChanged();
    partial void OnPupilReflexesChanging(string value);
    partial void OnPupilReflexesChanged();
    partial void OnSystolicBloodPressureChanging(string value);
    partial void OnSystolicBloodPressureChanged();
    partial void OnDiastolicBloodPressureChanging(string value);
    partial void OnDiastolicBloodPressureChanged();
    partial void OnPulseChanging(string value);
    partial void OnPulseChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnGlucometryChanging(string value);
    partial void OnGlucometryChanged();
    partial void OnTriageLevelChangeChanging(System.Nullable<int> value);
    partial void OnTriageLevelChangeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public VitalSign()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperatures", DbType="NVarChar(50)")]
		public string Temperatures
		{
			get
			{
				return this._Temperatures;
			}
			set
			{
				if ((this._Temperatures != value))
				{
					this.OnTemperaturesChanging(value);
					this.SendPropertyChanging();
					this._Temperatures = value;
					this.SendPropertyChanged("Temperatures");
					this.OnTemperaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breathing", DbType="NVarChar(50)")]
		public string Breathing
		{
			get
			{
				return this._Breathing;
			}
			set
			{
				if ((this._Breathing != value))
				{
					this.OnBreathingChanging(value);
					this.SendPropertyChanging();
					this._Breathing = value;
					this.SendPropertyChanged("Breathing");
					this.OnBreathingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSymptoms", DbType="NVarChar(50)")]
		public string NervousSymptoms
		{
			get
			{
				return this._NervousSymptoms;
			}
			set
			{
				if ((this._NervousSymptoms != value))
				{
					this.OnNervousSymptomsChanging(value);
					this.SendPropertyChanging();
					this._NervousSymptoms = value;
					this.SendPropertyChanged("NervousSymptoms");
					this.OnNervousSymptomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilReflexes", DbType="NVarChar(50)")]
		public string PupilReflexes
		{
			get
			{
				return this._PupilReflexes;
			}
			set
			{
				if ((this._PupilReflexes != value))
				{
					this.OnPupilReflexesChanging(value);
					this.SendPropertyChanging();
					this._PupilReflexes = value;
					this.SendPropertyChanged("PupilReflexes");
					this.OnPupilReflexesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystolicBloodPressure", DbType="NVarChar(50)")]
		public string SystolicBloodPressure
		{
			get
			{
				return this._SystolicBloodPressure;
			}
			set
			{
				if ((this._SystolicBloodPressure != value))
				{
					this.OnSystolicBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._SystolicBloodPressure = value;
					this.SendPropertyChanged("SystolicBloodPressure");
					this.OnSystolicBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiastolicBloodPressure", DbType="NVarChar(50)")]
		public string DiastolicBloodPressure
		{
			get
			{
				return this._DiastolicBloodPressure;
			}
			set
			{
				if ((this._DiastolicBloodPressure != value))
				{
					this.OnDiastolicBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._DiastolicBloodPressure = value;
					this.SendPropertyChanged("DiastolicBloodPressure");
					this.OnDiastolicBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pulse", DbType="NVarChar(50)")]
		public string Pulse
		{
			get
			{
				return this._Pulse;
			}
			set
			{
				if ((this._Pulse != value))
				{
					this.OnPulseChanging(value);
					this.SendPropertyChanging();
					this._Pulse = value;
					this.SendPropertyChanged("Pulse");
					this.OnPulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(50)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glucometry", DbType="NVarChar(50)")]
		public string Glucometry
		{
			get
			{
				return this._Glucometry;
			}
			set
			{
				if ((this._Glucometry != value))
				{
					this.OnGlucometryChanging(value);
					this.SendPropertyChanging();
					this._Glucometry = value;
					this.SendPropertyChanged("Glucometry");
					this.OnGlucometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageLevelChange", DbType="Int")]
		public System.Nullable<int> TriageLevelChange
		{
			get
			{
				return this._TriageLevelChange;
			}
			set
			{
				if ((this._TriageLevelChange != value))
				{
					this.OnTriageLevelChangeChanging(value);
					this.SendPropertyChanging();
					this._TriageLevelChange = value;
					this.SendPropertyChanged("TriageLevelChange");
					this.OnTriageLevelChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_VitalSign", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.VitalSign = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.VitalSign = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DispatchReason")]
	public partial class DispatchReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SpecialityID;
		
		private string _Title;
		
		private System.Nullable<int> _NationalID;
		
		private string _Description;
		
		private bool _EmergencyResons;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpecialityIDChanging(int value);
    partial void OnSpecialityIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNationalIDChanging(System.Nullable<int> value);
    partial void OnNationalIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEmergencyResonsChanging(bool value);
    partial void OnEmergencyResonsChanged();
    #endregion
		
		public DispatchReason()
		{
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int NOT NULL")]
		public int SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(3000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="Int")]
		public System.Nullable<int> NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyResons", DbType="Bit NOT NULL")]
		public bool EmergencyResons
		{
			get
			{
				return this._EmergencyResons;
			}
			set
			{
				if ((this._EmergencyResons != value))
				{
					this.OnEmergencyResonsChanging(value);
					this.SendPropertyChanging();
					this._EmergencyResons = value;
					this.SendPropertyChanged("EmergencyResons");
					this.OnEmergencyResonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispatchReason_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="DispatchResonID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_DispatchReason", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.DispatchReasons.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.DispatchReasons.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(int);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.DispatchReason = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.DispatchReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialityDrugs")]
	public partial class SpecialityDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<int> _SpecialityID;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    #endregion
		
		public SpecialityDrug()
		{
			this._Speciality = default(EntityRef<Speciality>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_SpecialityDrug", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.SpecialityDrugs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.SpecialityDrugs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SpecialityDrug", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.SpecialityDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.SpecialityDrugs.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEmergencyCPR")]
	public partial class TriageEmergencyCPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _TyPeID;
		
		private string _Date;
		
		private string _time;
		
		private System.Nullable<bool> _Succeeded;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Triage> _Triage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnTyPeIDChanging(System.Nullable<System.Guid> value);
    partial void OnTyPeIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnSucceededChanging(System.Nullable<bool> value);
    partial void OnSucceededChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEmergencyCPR()
		{
			this._Person = default(EntityRef<Person>);
			this._Triage = default(EntityRef<Triage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					if (this._Triage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TyPeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TyPeID
		{
			get
			{
				return this._TyPeID;
			}
			set
			{
				if ((this._TyPeID != value))
				{
					this.OnTyPeIDChanging(value);
					this.SendPropertyChanging();
					this._TyPeID = value;
					this.SendPropertyChanged("TyPeID");
					this.OnTyPeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(8)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Succeeded", DbType="Bit")]
		public System.Nullable<bool> Succeeded
		{
			get
			{
				return this._Succeeded;
			}
			set
			{
				if ((this._Succeeded != value))
				{
					this.OnSucceededChanging(value);
					this.SendPropertyChanging();
					this._Succeeded = value;
					this.SendPropertyChanged("Succeeded");
					this.OnSucceededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEmergencyCPR", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageEmergencyCPR", Storage="_Triage", ThisKey="TriageID", OtherKey="ID", IsForeignKey=true)]
		public Triage Triage
		{
			get
			{
				return this._Triage.Entity;
			}
			set
			{
				Triage previousValue = this._Triage.Entity;
				if (((previousValue != value) 
							|| (this._Triage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Triage.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._Triage.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._TriageID = value.ID;
					}
					else
					{
						this._TriageID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Triage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenLaboratoryServiceD")]
	public partial class GivenLaboratoryServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Result;
		
		private string _NormalRange;
		
		private bool _GetSampel;
		
		private int _SampelCounter;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private EntitySet<GivenLaboratoryServiceD> _GivenLaboratoryServiceDs;
		
		private EntityRef<GivenLaboratoryServiceD> _GivenLaboratoryServiceD1;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnNormalRangeChanging(string value);
    partial void OnNormalRangeChanged();
    partial void OnGetSampelChanging(bool value);
    partial void OnGetSampelChanged();
    partial void OnSampelCounterChanging(int value);
    partial void OnSampelCounterChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    #endregion
		
		public GivenLaboratoryServiceD()
		{
			this._GivenLaboratoryServiceDs = new EntitySet<GivenLaboratoryServiceD>(new Action<GivenLaboratoryServiceD>(this.attach_GivenLaboratoryServiceDs), new Action<GivenLaboratoryServiceD>(this.detach_GivenLaboratoryServiceDs));
			this._GivenLaboratoryServiceD1 = default(EntityRef<GivenLaboratoryServiceD>);
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(500)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this.OnNormalRangeChanging(value);
					this.SendPropertyChanging();
					this._NormalRange = value;
					this.SendPropertyChanged("NormalRange");
					this.OnNormalRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetSampel", DbType="Bit NOT NULL")]
		public bool GetSampel
		{
			get
			{
				return this._GetSampel;
			}
			set
			{
				if ((this._GetSampel != value))
				{
					this.OnGetSampelChanging(value);
					this.SendPropertyChanging();
					this._GetSampel = value;
					this.SendPropertyChanged("GetSampel");
					this.OnGetSampelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampelCounter", DbType="Int NOT NULL")]
		public int SampelCounter
		{
			get
			{
				return this._SampelCounter;
			}
			set
			{
				if ((this._SampelCounter != value))
				{
					this.OnSampelCounterChanging(value);
					this.SendPropertyChanging();
					this._SampelCounter = value;
					this.SendPropertyChanged("SampelCounter");
					this.OnSampelCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenLaboratoryServiceD1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenLaboratoryServiceD_GivenLaboratoryServiceD", Storage="_GivenLaboratoryServiceDs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenLaboratoryServiceD> GivenLaboratoryServiceDs
		{
			get
			{
				return this._GivenLaboratoryServiceDs;
			}
			set
			{
				this._GivenLaboratoryServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenLaboratoryServiceD_GivenLaboratoryServiceD", Storage="_GivenLaboratoryServiceD1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenLaboratoryServiceD GivenLaboratoryServiceD1
		{
			get
			{
				return this._GivenLaboratoryServiceD1.Entity;
			}
			set
			{
				GivenLaboratoryServiceD previousValue = this._GivenLaboratoryServiceD1.Entity;
				if (((previousValue != value) 
							|| (this._GivenLaboratoryServiceD1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenLaboratoryServiceD1.Entity = null;
						previousValue.GivenLaboratoryServiceDs.Remove(this);
					}
					this._GivenLaboratoryServiceD1.Entity = value;
					if ((value != null))
					{
						value.GivenLaboratoryServiceDs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenLaboratoryServiceD1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenLaboratoryServiceD", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.GivenLaboratoryServiceD = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenLaboratoryServiceD = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenLaboratoryServiceDs(GivenLaboratoryServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenLaboratoryServiceD1 = this;
		}
		
		private void detach_GivenLaboratoryServiceDs(GivenLaboratoryServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenLaboratoryServiceD1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SecurityUsers")]
	public partial class View_SecurityUser
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FullName;
		
		private bool _Disabled;
		
		private System.Nullable<int> _PersonalNo;
		
		private string _Descriptions;
		
		private System.Nullable<bool> _Sex;
		
		private System.Nullable<int> _ApplicationID;
		
		private string _ApplicationName;
		
		public View_SecurityUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(101)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit NOT NULL")]
		public bool Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this._Disabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="Int")]
		public System.Nullable<int> PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(MAX)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this._Descriptions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dispatch")]
	public partial class Dispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GsmID;
		
		private System.Nullable<int> _DispatchResonID;
		
		private string _Comment;
		
		private string _Destinition;
		
		private string _Sender;
		
		private string _Receiver;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModifactor;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _Deleted;
		
		private bool _Confirmation;
		
		private string _ConfirmationDate;
		
		private string _ConfirmationTime;
		
		private System.Nullable<int> _ConfirmationUserID;
		
		private EntityRef<DispatchReason> _DispatchReason;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsmIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsmIDChanged();
    partial void OnDispatchResonIDChanging(System.Nullable<int> value);
    partial void OnDispatchResonIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDestinitionChanging(string value);
    partial void OnDestinitionChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifactorChanging(System.Nullable<int> value);
    partial void OnLastModifactorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnConfirmationChanging(bool value);
    partial void OnConfirmationChanged();
    partial void OnConfirmationDateChanging(string value);
    partial void OnConfirmationDateChanged();
    partial void OnConfirmationTimeChanging(string value);
    partial void OnConfirmationTimeChanged();
    partial void OnConfirmationUserIDChanging(System.Nullable<int> value);
    partial void OnConfirmationUserIDChanged();
    #endregion
		
		public Dispatch()
		{
			this._DispatchReason = default(EntityRef<DispatchReason>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsmID
		{
			get
			{
				return this._GsmID;
			}
			set
			{
				if ((this._GsmID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsmIDChanging(value);
					this.SendPropertyChanging();
					this._GsmID = value;
					this.SendPropertyChanged("GsmID");
					this.OnGsmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchResonID", DbType="Int")]
		public System.Nullable<int> DispatchResonID
		{
			get
			{
				return this._DispatchResonID;
			}
			set
			{
				if ((this._DispatchResonID != value))
				{
					if (this._DispatchReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispatchResonIDChanging(value);
					this.SendPropertyChanging();
					this._DispatchResonID = value;
					this.SendPropertyChanged("DispatchResonID");
					this.OnDispatchResonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(3000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destinition", DbType="NVarChar(50)")]
		public string Destinition
		{
			get
			{
				return this._Destinition;
			}
			set
			{
				if ((this._Destinition != value))
				{
					this.OnDestinitionChanging(value);
					this.SendPropertyChanging();
					this._Destinition = value;
					this.SendPropertyChanged("Destinition");
					this.OnDestinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(50)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(50)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifactor", DbType="Int")]
		public System.Nullable<int> LastModifactor
		{
			get
			{
				return this._LastModifactor;
			}
			set
			{
				if ((this._LastModifactor != value))
				{
					this.OnLastModifactorChanging(value);
					this.SendPropertyChanging();
					this._LastModifactor = value;
					this.SendPropertyChanged("LastModifactor");
					this.OnLastModifactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmation", DbType="Bit NOT NULL")]
		public bool Confirmation
		{
			get
			{
				return this._Confirmation;
			}
			set
			{
				if ((this._Confirmation != value))
				{
					this.OnConfirmationChanging(value);
					this.SendPropertyChanging();
					this._Confirmation = value;
					this.SendPropertyChanged("Confirmation");
					this.OnConfirmationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationDate", DbType="NVarChar(10)")]
		public string ConfirmationDate
		{
			get
			{
				return this._ConfirmationDate;
			}
			set
			{
				if ((this._ConfirmationDate != value))
				{
					this.OnConfirmationDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationDate = value;
					this.SendPropertyChanged("ConfirmationDate");
					this.OnConfirmationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationTime", DbType="NVarChar(8)")]
		public string ConfirmationTime
		{
			get
			{
				return this._ConfirmationTime;
			}
			set
			{
				if ((this._ConfirmationTime != value))
				{
					this.OnConfirmationTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationTime = value;
					this.SendPropertyChanged("ConfirmationTime");
					this.OnConfirmationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationUserID", DbType="Int")]
		public System.Nullable<int> ConfirmationUserID
		{
			get
			{
				return this._ConfirmationUserID;
			}
			set
			{
				if ((this._ConfirmationUserID != value))
				{
					this.OnConfirmationUserIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationUserID = value;
					this.SendPropertyChanged("ConfirmationUserID");
					this.OnConfirmationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispatchReason_Dispatch", Storage="_DispatchReason", ThisKey="DispatchResonID", OtherKey="ID", IsForeignKey=true)]
		public DispatchReason DispatchReason
		{
			get
			{
				return this._DispatchReason.Entity;
			}
			set
			{
				DispatchReason previousValue = this._DispatchReason.Entity;
				if (((previousValue != value) 
							|| (this._DispatchReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispatchReason.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._DispatchReason.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._DispatchResonID = value.ID;
					}
					else
					{
						this._DispatchResonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DispatchReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Dispatch", Storage="_GivenServiceM", ThisKey="GsmID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._GsmID = value.ID;
					}
					else
					{
						this._GsmID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _GivenServiceMID;
		
		private System.Guid _FromStaffID;
		
		private System.Guid _ToStaffID;
		
		private int _CreatorID;
		
		private string _Date;
		
		private string _Time;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Guid value);
    partial void OnGivenServiceMIDChanged();
    partial void OnFromStaffIDChanging(System.Guid value);
    partial void OnFromStaffIDChanged();
    partial void OnToStaffIDChanging(System.Guid value);
    partial void OnToStaffIDChanged();
    partial void OnCreatorIDChanging(int value);
    partial void OnCreatorIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public Transfer()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromStaffID
		{
			get
			{
				return this._FromStaffID;
			}
			set
			{
				if ((this._FromStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStaffIDChanging(value);
					this.SendPropertyChanging();
					this._FromStaffID = value;
					this.SendPropertyChanged("FromStaffID");
					this.OnFromStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ToStaffID
		{
			get
			{
				return this._ToStaffID;
			}
			set
			{
				if ((this._ToStaffID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStaffIDChanging(value);
					this.SendPropertyChanging();
					this._ToStaffID = value;
					this.SendPropertyChanged("ToStaffID");
					this.OnToStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int NOT NULL")]
		public int CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer", Storage="_Staff", ThisKey="FromStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Transfers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Transfers.Add(this);
						this._FromStaffID = value.ID;
					}
					else
					{
						this._FromStaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer1", Storage="_Staff1", ThisKey="ToStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.Transfers1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.Transfers1.Add(this);
						this._ToStaffID = value.ID;
					}
					else
					{
						this._ToStaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Transfer", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Transfers.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Transfers.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceD")]
	public partial class GivenServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private System.Nullable<System.Guid> _TariffID;
		
		private System.Nullable<int> _TadilAreaID;
		
		private decimal _TotalPrice;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private bool _Payed;
		
		private decimal _PaymentPrice;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private bool _Confirm;
		
		private bool _Reflected;
		
		private System.Nullable<int> _HIXCode;
		
		private string _Position;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _Date;
		
		private string _Time;
		
		private bool _NoTake;
		
		private bool _Normal;
		
		private System.Nullable<bool> _NIS;
		
		private string _CreatorUserFullname;
		
		private string _Category;
		
		private System.Nullable<System.Guid> _xParentID;
		
		private EntitySet<Diet> _Diets;
		
		private EntityRef<AbsorptionandDisposalofFluid> _AbsorptionandDisposalofFluid;
		
		private EntitySet<GivenDrug> _GivenDrugs;
		
		private EntityRef<VitalSign> _VitalSign;
		
		private EntityRef<GivenLaboratoryServiceD> _GivenLaboratoryServiceD;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntityRef<DrugFrequencyUsage> _DrugFrequencyUsage;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<GivenServiceD> _GivenServiceD1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnGivenAmountChanging(double value);
    partial void OnGivenAmountChanged();
    partial void OnTariffIDChanging(System.Nullable<System.Guid> value);
    partial void OnTariffIDChanged();
    partial void OnTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnTadilAreaIDChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnPatientShareChanging(decimal value);
    partial void OnPatientShareChanged();
    partial void OnInsuranceShareChanging(decimal value);
    partial void OnInsuranceShareChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnHIXCodeChanging(System.Nullable<int> value);
    partial void OnHIXCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnNoTakeChanging(bool value);
    partial void OnNoTakeChanged();
    partial void OnNormalChanging(bool value);
    partial void OnNormalChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnxParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnxParentIDChanged();
    #endregion
		
		public GivenServiceD()
		{
			this._Diets = new EntitySet<Diet>(new Action<Diet>(this.attach_Diets), new Action<Diet>(this.detach_Diets));
			this._AbsorptionandDisposalofFluid = default(EntityRef<AbsorptionandDisposalofFluid>);
			this._GivenDrugs = new EntitySet<GivenDrug>(new Action<GivenDrug>(this.attach_GivenDrugs), new Action<GivenDrug>(this.detach_GivenDrugs));
			this._VitalSign = default(EntityRef<VitalSign>);
			this._GivenLaboratoryServiceD = default(EntityRef<GivenLaboratoryServiceD>);
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._DrugFrequencyUsage = default(EntityRef<DrugFrequencyUsage>);
			this._Staff = default(EntityRef<Staff>);
			this._GivenServiceD1 = default(EntityRef<GivenServiceD>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this.OnGivenAmountChanging(value);
					this.SendPropertyChanging();
					this._GivenAmount = value;
					this.SendPropertyChanged("GivenAmount");
					this.OnGivenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilAreaID", DbType="Int")]
		public System.Nullable<int> TadilAreaID
		{
			get
			{
				return this._TadilAreaID;
			}
			set
			{
				if ((this._TadilAreaID != value))
				{
					this.OnTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._TadilAreaID = value;
					this.SendPropertyChanged("TadilAreaID");
					this.OnTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this.OnInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._InsuranceShare = value;
					this.SendPropertyChanged("InsuranceShare");
					this.OnInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="Int")]
		public System.Nullable<int> HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					if (this._DrugFrequencyUsage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this.OnNoTakeChanging(value);
					this.SendPropertyChanging();
					this._NoTake = value;
					this.SendPropertyChanged("NoTake");
					this.OnNoTakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Bit NOT NULL")]
		public bool Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> xParentID
		{
			get
			{
				return this._xParentID;
			}
			set
			{
				if ((this._xParentID != value))
				{
					if (this._GivenServiceD1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnxParentIDChanging(value);
					this.SendPropertyChanging();
					this._xParentID = value;
					this.SendPropertyChanged("xParentID");
					this.OnxParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Diet", Storage="_Diets", ThisKey="ID", OtherKey="GsdID")]
		public EntitySet<Diet> Diets
		{
			get
			{
				return this._Diets;
			}
			set
			{
				this._Diets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_AbsorptionandDisposalofFluid", Storage="_AbsorptionandDisposalofFluid", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public AbsorptionandDisposalofFluid AbsorptionandDisposalofFluid
		{
			get
			{
				return this._AbsorptionandDisposalofFluid.Entity;
			}
			set
			{
				AbsorptionandDisposalofFluid previousValue = this._AbsorptionandDisposalofFluid.Entity;
				if (((previousValue != value) 
							|| (this._AbsorptionandDisposalofFluid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AbsorptionandDisposalofFluid.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._AbsorptionandDisposalofFluid.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("AbsorptionandDisposalofFluid");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenDrug", Storage="_GivenDrugs", ThisKey="ID", OtherKey="GsdID")]
		public EntitySet<GivenDrug> GivenDrugs
		{
			get
			{
				return this._GivenDrugs;
			}
			set
			{
				this._GivenDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_VitalSign", Storage="_VitalSign", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public VitalSign VitalSign
		{
			get
			{
				return this._VitalSign.Entity;
			}
			set
			{
				VitalSign previousValue = this._VitalSign.Entity;
				if (((previousValue != value) 
							|| (this._VitalSign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VitalSign.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._VitalSign.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("VitalSign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenLaboratoryServiceD", Storage="_GivenLaboratoryServiceD", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public GivenLaboratoryServiceD GivenLaboratoryServiceD
		{
			get
			{
				return this._GivenLaboratoryServiceD.Entity;
			}
			set
			{
				GivenLaboratoryServiceD previousValue = this._GivenLaboratoryServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenLaboratoryServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenLaboratoryServiceD.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._GivenLaboratoryServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("GivenLaboratoryServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="xParentID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_GivenServiceD", Storage="_DrugFrequencyUsage", ThisKey="HIXCode", OtherKey="ID", IsForeignKey=true)]
		public DrugFrequencyUsage DrugFrequencyUsage
		{
			get
			{
				return this._DrugFrequencyUsage.Entity;
			}
			set
			{
				DrugFrequencyUsage previousValue = this._DrugFrequencyUsage.Entity;
				if (((previousValue != value) 
							|| (this._DrugFrequencyUsage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DrugFrequencyUsage.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._DrugFrequencyUsage.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._HIXCode = value.ID;
					}
					else
					{
						this._HIXCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("DrugFrequencyUsage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenServiceD", Storage="_GivenServiceD1", ThisKey="xParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD1
		{
			get
			{
				return this._GivenServiceD1.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD1.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._GivenServiceD1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._xParentID = value.ID;
					}
					else
					{
						this._xParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
		
		private void attach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD1 = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Presentation")]
	public partial class Presentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _PatientCondition;
		
		private string _PresentationDescribed;
		
		private string _Symptomatic;
		
		private string _historyOfCurrentDiseases;
		
		private string _HistoryOfPastDiseases;
		
		private string _UsingDrug;
		
		private string _Allergy;
		
		private string _FamilyHistory;
		
		private string _Summery;
		
		private string _PrimDiag;
		
		private System.Nullable<bool> _EyeCheck;
		
		private string _Eye;
		
		private System.Nullable<bool> _NoseCheck;
		
		private string _Nose;
		
		private System.Nullable<bool> _MouthCheck;
		
		private string _Mouth;
		
		private System.Nullable<bool> _ThroatCheck;
		
		private string _Throat;
		
		private System.Nullable<bool> _LymphaticNodesCheck;
		
		private string _LymphaticNodes;
		
		private System.Nullable<bool> _ChestCheck;
		
		private string _Chest;
		
		private System.Nullable<bool> _BreastCheck;
		
		private string _Breast;
		
		private System.Nullable<bool> _HeartCheck;
		
		private string _Heart;
		
		private System.Nullable<bool> _LungCkeck;
		
		private string _Lung;
		
		private System.Nullable<bool> _VesslesCheck;
		
		private string _Vessles;
		
		private System.Nullable<bool> _AbdomenCheck;
		
		private string _Abdomen;
		
		private System.Nullable<bool> _GenitalOrgansMaleCheck;
		
		private string _GenitalOrgansMale;
		
		private System.Nullable<bool> _GenitalOrgansFmaleCheck;
		
		private string _GenitalOrgansFmale;
		
		private System.Nullable<bool> _RectumCheck;
		
		private string _Rectum;
		
		private System.Nullable<bool> _NervousSystemCheck;
		
		private string _NervousSystem;
		
		private System.Nullable<bool> _ExtermititiesCheck;
		
		private string _Extermitities;
		
		private System.Nullable<bool> _BoneJointsMuscelesCheck;
		
		private string _BoneJointsMusceles;
		
		private System.Nullable<bool> _NeckCheck;
		
		private string _Neck;
		
		private System.Nullable<bool> _OrgansCheck;
		
		private string _Organs;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPatientConditionChanging(System.Nullable<int> value);
    partial void OnPatientConditionChanged();
    partial void OnPresentationDescribedChanging(string value);
    partial void OnPresentationDescribedChanged();
    partial void OnSymptomaticChanging(string value);
    partial void OnSymptomaticChanged();
    partial void OnhistoryOfCurrentDiseasesChanging(string value);
    partial void OnhistoryOfCurrentDiseasesChanged();
    partial void OnHistoryOfPastDiseasesChanging(string value);
    partial void OnHistoryOfPastDiseasesChanged();
    partial void OnUsingDrugChanging(string value);
    partial void OnUsingDrugChanged();
    partial void OnAllergyChanging(string value);
    partial void OnAllergyChanged();
    partial void OnFamilyHistoryChanging(string value);
    partial void OnFamilyHistoryChanged();
    partial void OnSummeryChanging(string value);
    partial void OnSummeryChanged();
    partial void OnPrimDiagChanging(string value);
    partial void OnPrimDiagChanged();
    partial void OnEyeCheckChanging(System.Nullable<bool> value);
    partial void OnEyeCheckChanged();
    partial void OnEyeChanging(string value);
    partial void OnEyeChanged();
    partial void OnNoseCheckChanging(System.Nullable<bool> value);
    partial void OnNoseCheckChanged();
    partial void OnNoseChanging(string value);
    partial void OnNoseChanged();
    partial void OnMouthCheckChanging(System.Nullable<bool> value);
    partial void OnMouthCheckChanged();
    partial void OnMouthChanging(string value);
    partial void OnMouthChanged();
    partial void OnThroatCheckChanging(System.Nullable<bool> value);
    partial void OnThroatCheckChanged();
    partial void OnThroatChanging(string value);
    partial void OnThroatChanged();
    partial void OnLymphaticNodesCheckChanging(System.Nullable<bool> value);
    partial void OnLymphaticNodesCheckChanged();
    partial void OnLymphaticNodesChanging(string value);
    partial void OnLymphaticNodesChanged();
    partial void OnChestCheckChanging(System.Nullable<bool> value);
    partial void OnChestCheckChanged();
    partial void OnChestChanging(string value);
    partial void OnChestChanged();
    partial void OnBreastCheckChanging(System.Nullable<bool> value);
    partial void OnBreastCheckChanged();
    partial void OnBreastChanging(string value);
    partial void OnBreastChanged();
    partial void OnHeartCheckChanging(System.Nullable<bool> value);
    partial void OnHeartCheckChanged();
    partial void OnHeartChanging(string value);
    partial void OnHeartChanged();
    partial void OnLungCkeckChanging(System.Nullable<bool> value);
    partial void OnLungCkeckChanged();
    partial void OnLungChanging(string value);
    partial void OnLungChanged();
    partial void OnVesslesCheckChanging(System.Nullable<bool> value);
    partial void OnVesslesCheckChanged();
    partial void OnVesslesChanging(string value);
    partial void OnVesslesChanged();
    partial void OnAbdomenCheckChanging(System.Nullable<bool> value);
    partial void OnAbdomenCheckChanged();
    partial void OnAbdomenChanging(string value);
    partial void OnAbdomenChanged();
    partial void OnGenitalOrgansMaleCheckChanging(System.Nullable<bool> value);
    partial void OnGenitalOrgansMaleCheckChanged();
    partial void OnGenitalOrgansMaleChanging(string value);
    partial void OnGenitalOrgansMaleChanged();
    partial void OnGenitalOrgansFmaleCheckChanging(System.Nullable<bool> value);
    partial void OnGenitalOrgansFmaleCheckChanged();
    partial void OnGenitalOrgansFmaleChanging(string value);
    partial void OnGenitalOrgansFmaleChanged();
    partial void OnRectumCheckChanging(System.Nullable<bool> value);
    partial void OnRectumCheckChanged();
    partial void OnRectumChanging(string value);
    partial void OnRectumChanged();
    partial void OnNervousSystemCheckChanging(System.Nullable<bool> value);
    partial void OnNervousSystemCheckChanged();
    partial void OnNervousSystemChanging(string value);
    partial void OnNervousSystemChanged();
    partial void OnExtermititiesCheckChanging(System.Nullable<bool> value);
    partial void OnExtermititiesCheckChanged();
    partial void OnExtermititiesChanging(string value);
    partial void OnExtermititiesChanged();
    partial void OnBoneJointsMuscelesCheckChanging(System.Nullable<bool> value);
    partial void OnBoneJointsMuscelesCheckChanged();
    partial void OnBoneJointsMuscelesChanging(string value);
    partial void OnBoneJointsMuscelesChanged();
    partial void OnNeckCheckChanging(System.Nullable<bool> value);
    partial void OnNeckCheckChanged();
    partial void OnNeckChanging(string value);
    partial void OnNeckChanged();
    partial void OnOrgansCheckChanging(System.Nullable<bool> value);
    partial void OnOrgansCheckChanged();
    partial void OnOrgansChanging(string value);
    partial void OnOrgansChanged();
    #endregion
		
		public Presentation()
		{
			this._Definition = default(EntityRef<Definition>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCondition", DbType="Int")]
		public System.Nullable<int> PatientCondition
		{
			get
			{
				return this._PatientCondition;
			}
			set
			{
				if ((this._PatientCondition != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientConditionChanging(value);
					this.SendPropertyChanging();
					this._PatientCondition = value;
					this.SendPropertyChanged("PatientCondition");
					this.OnPatientConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentationDescribed", DbType="NVarChar(50)")]
		public string PresentationDescribed
		{
			get
			{
				return this._PresentationDescribed;
			}
			set
			{
				if ((this._PresentationDescribed != value))
				{
					this.OnPresentationDescribedChanging(value);
					this.SendPropertyChanging();
					this._PresentationDescribed = value;
					this.SendPropertyChanged("PresentationDescribed");
					this.OnPresentationDescribedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symptomatic", DbType="NVarChar(100)")]
		public string Symptomatic
		{
			get
			{
				return this._Symptomatic;
			}
			set
			{
				if ((this._Symptomatic != value))
				{
					this.OnSymptomaticChanging(value);
					this.SendPropertyChanging();
					this._Symptomatic = value;
					this.SendPropertyChanged("Symptomatic");
					this.OnSymptomaticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_historyOfCurrentDiseases", DbType="NVarChar(100)")]
		public string historyOfCurrentDiseases
		{
			get
			{
				return this._historyOfCurrentDiseases;
			}
			set
			{
				if ((this._historyOfCurrentDiseases != value))
				{
					this.OnhistoryOfCurrentDiseasesChanging(value);
					this.SendPropertyChanging();
					this._historyOfCurrentDiseases = value;
					this.SendPropertyChanged("historyOfCurrentDiseases");
					this.OnhistoryOfCurrentDiseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryOfPastDiseases", DbType="NVarChar(100)")]
		public string HistoryOfPastDiseases
		{
			get
			{
				return this._HistoryOfPastDiseases;
			}
			set
			{
				if ((this._HistoryOfPastDiseases != value))
				{
					this.OnHistoryOfPastDiseasesChanging(value);
					this.SendPropertyChanging();
					this._HistoryOfPastDiseases = value;
					this.SendPropertyChanged("HistoryOfPastDiseases");
					this.OnHistoryOfPastDiseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingDrug", DbType="NVarChar(500)")]
		public string UsingDrug
		{
			get
			{
				return this._UsingDrug;
			}
			set
			{
				if ((this._UsingDrug != value))
				{
					this.OnUsingDrugChanging(value);
					this.SendPropertyChanging();
					this._UsingDrug = value;
					this.SendPropertyChanged("UsingDrug");
					this.OnUsingDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allergy", DbType="NVarChar(100)")]
		public string Allergy
		{
			get
			{
				return this._Allergy;
			}
			set
			{
				if ((this._Allergy != value))
				{
					this.OnAllergyChanging(value);
					this.SendPropertyChanging();
					this._Allergy = value;
					this.SendPropertyChanged("Allergy");
					this.OnAllergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyHistory", DbType="NVarChar(100)")]
		public string FamilyHistory
		{
			get
			{
				return this._FamilyHistory;
			}
			set
			{
				if ((this._FamilyHistory != value))
				{
					this.OnFamilyHistoryChanging(value);
					this.SendPropertyChanging();
					this._FamilyHistory = value;
					this.SendPropertyChanged("FamilyHistory");
					this.OnFamilyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summery", DbType="NVarChar(4000)")]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this.OnSummeryChanging(value);
					this.SendPropertyChanging();
					this._Summery = value;
					this.SendPropertyChanged("Summery");
					this.OnSummeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimDiag", DbType="NVarChar(100)")]
		public string PrimDiag
		{
			get
			{
				return this._PrimDiag;
			}
			set
			{
				if ((this._PrimDiag != value))
				{
					this.OnPrimDiagChanging(value);
					this.SendPropertyChanging();
					this._PrimDiag = value;
					this.SendPropertyChanged("PrimDiag");
					this.OnPrimDiagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeCheck", DbType="Bit")]
		public System.Nullable<bool> EyeCheck
		{
			get
			{
				return this._EyeCheck;
			}
			set
			{
				if ((this._EyeCheck != value))
				{
					this.OnEyeCheckChanging(value);
					this.SendPropertyChanging();
					this._EyeCheck = value;
					this.SendPropertyChanged("EyeCheck");
					this.OnEyeCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="NVarChar(100)")]
		public string Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this.OnEyeChanging(value);
					this.SendPropertyChanging();
					this._Eye = value;
					this.SendPropertyChanged("Eye");
					this.OnEyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoseCheck", DbType="Bit")]
		public System.Nullable<bool> NoseCheck
		{
			get
			{
				return this._NoseCheck;
			}
			set
			{
				if ((this._NoseCheck != value))
				{
					this.OnNoseCheckChanging(value);
					this.SendPropertyChanging();
					this._NoseCheck = value;
					this.SendPropertyChanged("NoseCheck");
					this.OnNoseCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nose", DbType="NVarChar(100)")]
		public string Nose
		{
			get
			{
				return this._Nose;
			}
			set
			{
				if ((this._Nose != value))
				{
					this.OnNoseChanging(value);
					this.SendPropertyChanging();
					this._Nose = value;
					this.SendPropertyChanged("Nose");
					this.OnNoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MouthCheck", DbType="Bit")]
		public System.Nullable<bool> MouthCheck
		{
			get
			{
				return this._MouthCheck;
			}
			set
			{
				if ((this._MouthCheck != value))
				{
					this.OnMouthCheckChanging(value);
					this.SendPropertyChanging();
					this._MouthCheck = value;
					this.SendPropertyChanged("MouthCheck");
					this.OnMouthCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mouth", DbType="NVarChar(100)")]
		public string Mouth
		{
			get
			{
				return this._Mouth;
			}
			set
			{
				if ((this._Mouth != value))
				{
					this.OnMouthChanging(value);
					this.SendPropertyChanging();
					this._Mouth = value;
					this.SendPropertyChanged("Mouth");
					this.OnMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThroatCheck", DbType="Bit")]
		public System.Nullable<bool> ThroatCheck
		{
			get
			{
				return this._ThroatCheck;
			}
			set
			{
				if ((this._ThroatCheck != value))
				{
					this.OnThroatCheckChanging(value);
					this.SendPropertyChanging();
					this._ThroatCheck = value;
					this.SendPropertyChanged("ThroatCheck");
					this.OnThroatCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Throat", DbType="NVarChar(100)")]
		public string Throat
		{
			get
			{
				return this._Throat;
			}
			set
			{
				if ((this._Throat != value))
				{
					this.OnThroatChanging(value);
					this.SendPropertyChanging();
					this._Throat = value;
					this.SendPropertyChanged("Throat");
					this.OnThroatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LymphaticNodesCheck", DbType="Bit")]
		public System.Nullable<bool> LymphaticNodesCheck
		{
			get
			{
				return this._LymphaticNodesCheck;
			}
			set
			{
				if ((this._LymphaticNodesCheck != value))
				{
					this.OnLymphaticNodesCheckChanging(value);
					this.SendPropertyChanging();
					this._LymphaticNodesCheck = value;
					this.SendPropertyChanged("LymphaticNodesCheck");
					this.OnLymphaticNodesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LymphaticNodes", DbType="NVarChar(100)")]
		public string LymphaticNodes
		{
			get
			{
				return this._LymphaticNodes;
			}
			set
			{
				if ((this._LymphaticNodes != value))
				{
					this.OnLymphaticNodesChanging(value);
					this.SendPropertyChanging();
					this._LymphaticNodes = value;
					this.SendPropertyChanged("LymphaticNodes");
					this.OnLymphaticNodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChestCheck", DbType="Bit")]
		public System.Nullable<bool> ChestCheck
		{
			get
			{
				return this._ChestCheck;
			}
			set
			{
				if ((this._ChestCheck != value))
				{
					this.OnChestCheckChanging(value);
					this.SendPropertyChanging();
					this._ChestCheck = value;
					this.SendPropertyChanged("ChestCheck");
					this.OnChestCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chest", DbType="NVarChar(100)")]
		public string Chest
		{
			get
			{
				return this._Chest;
			}
			set
			{
				if ((this._Chest != value))
				{
					this.OnChestChanging(value);
					this.SendPropertyChanging();
					this._Chest = value;
					this.SendPropertyChanged("Chest");
					this.OnChestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreastCheck", DbType="Bit")]
		public System.Nullable<bool> BreastCheck
		{
			get
			{
				return this._BreastCheck;
			}
			set
			{
				if ((this._BreastCheck != value))
				{
					this.OnBreastCheckChanging(value);
					this.SendPropertyChanging();
					this._BreastCheck = value;
					this.SendPropertyChanged("BreastCheck");
					this.OnBreastCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breast", DbType="NVarChar(100)")]
		public string Breast
		{
			get
			{
				return this._Breast;
			}
			set
			{
				if ((this._Breast != value))
				{
					this.OnBreastChanging(value);
					this.SendPropertyChanging();
					this._Breast = value;
					this.SendPropertyChanged("Breast");
					this.OnBreastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartCheck", DbType="Bit")]
		public System.Nullable<bool> HeartCheck
		{
			get
			{
				return this._HeartCheck;
			}
			set
			{
				if ((this._HeartCheck != value))
				{
					this.OnHeartCheckChanging(value);
					this.SendPropertyChanging();
					this._HeartCheck = value;
					this.SendPropertyChanged("HeartCheck");
					this.OnHeartCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heart", DbType="NVarChar(100)")]
		public string Heart
		{
			get
			{
				return this._Heart;
			}
			set
			{
				if ((this._Heart != value))
				{
					this.OnHeartChanging(value);
					this.SendPropertyChanging();
					this._Heart = value;
					this.SendPropertyChanged("Heart");
					this.OnHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LungCkeck", DbType="Bit")]
		public System.Nullable<bool> LungCkeck
		{
			get
			{
				return this._LungCkeck;
			}
			set
			{
				if ((this._LungCkeck != value))
				{
					this.OnLungCkeckChanging(value);
					this.SendPropertyChanging();
					this._LungCkeck = value;
					this.SendPropertyChanged("LungCkeck");
					this.OnLungCkeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lung", DbType="NVarChar(100)")]
		public string Lung
		{
			get
			{
				return this._Lung;
			}
			set
			{
				if ((this._Lung != value))
				{
					this.OnLungChanging(value);
					this.SendPropertyChanging();
					this._Lung = value;
					this.SendPropertyChanged("Lung");
					this.OnLungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VesslesCheck", DbType="Bit")]
		public System.Nullable<bool> VesslesCheck
		{
			get
			{
				return this._VesslesCheck;
			}
			set
			{
				if ((this._VesslesCheck != value))
				{
					this.OnVesslesCheckChanging(value);
					this.SendPropertyChanging();
					this._VesslesCheck = value;
					this.SendPropertyChanged("VesslesCheck");
					this.OnVesslesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vessles", DbType="NVarChar(100)")]
		public string Vessles
		{
			get
			{
				return this._Vessles;
			}
			set
			{
				if ((this._Vessles != value))
				{
					this.OnVesslesChanging(value);
					this.SendPropertyChanging();
					this._Vessles = value;
					this.SendPropertyChanged("Vessles");
					this.OnVesslesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbdomenCheck", DbType="Bit")]
		public System.Nullable<bool> AbdomenCheck
		{
			get
			{
				return this._AbdomenCheck;
			}
			set
			{
				if ((this._AbdomenCheck != value))
				{
					this.OnAbdomenCheckChanging(value);
					this.SendPropertyChanging();
					this._AbdomenCheck = value;
					this.SendPropertyChanged("AbdomenCheck");
					this.OnAbdomenCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abdomen", DbType="NVarChar(100)")]
		public string Abdomen
		{
			get
			{
				return this._Abdomen;
			}
			set
			{
				if ((this._Abdomen != value))
				{
					this.OnAbdomenChanging(value);
					this.SendPropertyChanging();
					this._Abdomen = value;
					this.SendPropertyChanged("Abdomen");
					this.OnAbdomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansMaleCheck", DbType="Bit")]
		public System.Nullable<bool> GenitalOrgansMaleCheck
		{
			get
			{
				return this._GenitalOrgansMaleCheck;
			}
			set
			{
				if ((this._GenitalOrgansMaleCheck != value))
				{
					this.OnGenitalOrgansMaleCheckChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansMaleCheck = value;
					this.SendPropertyChanged("GenitalOrgansMaleCheck");
					this.OnGenitalOrgansMaleCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansMale", DbType="NVarChar(100)")]
		public string GenitalOrgansMale
		{
			get
			{
				return this._GenitalOrgansMale;
			}
			set
			{
				if ((this._GenitalOrgansMale != value))
				{
					this.OnGenitalOrgansMaleChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansMale = value;
					this.SendPropertyChanged("GenitalOrgansMale");
					this.OnGenitalOrgansMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansFmaleCheck", DbType="Bit")]
		public System.Nullable<bool> GenitalOrgansFmaleCheck
		{
			get
			{
				return this._GenitalOrgansFmaleCheck;
			}
			set
			{
				if ((this._GenitalOrgansFmaleCheck != value))
				{
					this.OnGenitalOrgansFmaleCheckChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansFmaleCheck = value;
					this.SendPropertyChanged("GenitalOrgansFmaleCheck");
					this.OnGenitalOrgansFmaleCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansFmale", DbType="NVarChar(100)")]
		public string GenitalOrgansFmale
		{
			get
			{
				return this._GenitalOrgansFmale;
			}
			set
			{
				if ((this._GenitalOrgansFmale != value))
				{
					this.OnGenitalOrgansFmaleChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansFmale = value;
					this.SendPropertyChanged("GenitalOrgansFmale");
					this.OnGenitalOrgansFmaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectumCheck", DbType="Bit")]
		public System.Nullable<bool> RectumCheck
		{
			get
			{
				return this._RectumCheck;
			}
			set
			{
				if ((this._RectumCheck != value))
				{
					this.OnRectumCheckChanging(value);
					this.SendPropertyChanging();
					this._RectumCheck = value;
					this.SendPropertyChanged("RectumCheck");
					this.OnRectumCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectum", DbType="NVarChar(100)")]
		public string Rectum
		{
			get
			{
				return this._Rectum;
			}
			set
			{
				if ((this._Rectum != value))
				{
					this.OnRectumChanging(value);
					this.SendPropertyChanging();
					this._Rectum = value;
					this.SendPropertyChanged("Rectum");
					this.OnRectumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSystemCheck", DbType="Bit")]
		public System.Nullable<bool> NervousSystemCheck
		{
			get
			{
				return this._NervousSystemCheck;
			}
			set
			{
				if ((this._NervousSystemCheck != value))
				{
					this.OnNervousSystemCheckChanging(value);
					this.SendPropertyChanging();
					this._NervousSystemCheck = value;
					this.SendPropertyChanged("NervousSystemCheck");
					this.OnNervousSystemCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSystem", DbType="NVarChar(100)")]
		public string NervousSystem
		{
			get
			{
				return this._NervousSystem;
			}
			set
			{
				if ((this._NervousSystem != value))
				{
					this.OnNervousSystemChanging(value);
					this.SendPropertyChanging();
					this._NervousSystem = value;
					this.SendPropertyChanged("NervousSystem");
					this.OnNervousSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtermititiesCheck", DbType="Bit")]
		public System.Nullable<bool> ExtermititiesCheck
		{
			get
			{
				return this._ExtermititiesCheck;
			}
			set
			{
				if ((this._ExtermititiesCheck != value))
				{
					this.OnExtermititiesCheckChanging(value);
					this.SendPropertyChanging();
					this._ExtermititiesCheck = value;
					this.SendPropertyChanged("ExtermititiesCheck");
					this.OnExtermititiesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extermitities", DbType="NVarChar(100)")]
		public string Extermitities
		{
			get
			{
				return this._Extermitities;
			}
			set
			{
				if ((this._Extermitities != value))
				{
					this.OnExtermititiesChanging(value);
					this.SendPropertyChanging();
					this._Extermitities = value;
					this.SendPropertyChanged("Extermitities");
					this.OnExtermititiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneJointsMuscelesCheck", DbType="Bit")]
		public System.Nullable<bool> BoneJointsMuscelesCheck
		{
			get
			{
				return this._BoneJointsMuscelesCheck;
			}
			set
			{
				if ((this._BoneJointsMuscelesCheck != value))
				{
					this.OnBoneJointsMuscelesCheckChanging(value);
					this.SendPropertyChanging();
					this._BoneJointsMuscelesCheck = value;
					this.SendPropertyChanged("BoneJointsMuscelesCheck");
					this.OnBoneJointsMuscelesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneJointsMusceles", DbType="NVarChar(100)")]
		public string BoneJointsMusceles
		{
			get
			{
				return this._BoneJointsMusceles;
			}
			set
			{
				if ((this._BoneJointsMusceles != value))
				{
					this.OnBoneJointsMuscelesChanging(value);
					this.SendPropertyChanging();
					this._BoneJointsMusceles = value;
					this.SendPropertyChanged("BoneJointsMusceles");
					this.OnBoneJointsMuscelesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeckCheck", DbType="Bit")]
		public System.Nullable<bool> NeckCheck
		{
			get
			{
				return this._NeckCheck;
			}
			set
			{
				if ((this._NeckCheck != value))
				{
					this.OnNeckCheckChanging(value);
					this.SendPropertyChanging();
					this._NeckCheck = value;
					this.SendPropertyChanged("NeckCheck");
					this.OnNeckCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neck", DbType="NVarChar(100)")]
		public string Neck
		{
			get
			{
				return this._Neck;
			}
			set
			{
				if ((this._Neck != value))
				{
					this.OnNeckChanging(value);
					this.SendPropertyChanging();
					this._Neck = value;
					this.SendPropertyChanged("Neck");
					this.OnNeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgansCheck", DbType="Bit")]
		public System.Nullable<bool> OrgansCheck
		{
			get
			{
				return this._OrgansCheck;
			}
			set
			{
				if ((this._OrgansCheck != value))
				{
					this.OnOrgansCheckChanging(value);
					this.SendPropertyChanging();
					this._OrgansCheck = value;
					this.SendPropertyChanged("OrgansCheck");
					this.OnOrgansCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organs", DbType="NVarChar(100)")]
		public string Organs
		{
			get
			{
				return this._Organs;
			}
			set
			{
				if ((this._Organs != value))
				{
					this.OnOrgansChanging(value);
					this.SendPropertyChanging();
					this._Organs = value;
					this.SendPropertyChanged("Organs");
					this.OnOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Presentation", Storage="_Definition", ThisKey="PatientCondition", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Presentations.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Presentations.Add(this);
						this._PatientCondition = value.ID;
					}
					else
					{
						this._PatientCondition = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Presentation", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Presentation = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Presentation = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discharge")]
	public partial class Discharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DossierID;
		
		private System.Nullable<int> _PatientStatus;
		
		private string _FinalDiagnosis;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private System.Nullable<System.Guid> _DischargeDepID;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private System.Nullable<System.Guid> _DischargerStaffID;
		
		private string _DischargeAdvance;
		
		private string _DeathReasone;
		
		private string _DeathPlace;
		
		private System.Nullable<int> _DeathPlaceSepasID;
		
		private string _DischargerUserID;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDossierIDChanging(long value);
    partial void OnDossierIDChanged();
    partial void OnPatientStatusChanging(System.Nullable<int> value);
    partial void OnPatientStatusChanged();
    partial void OnFinalDiagnosisChanging(string value);
    partial void OnFinalDiagnosisChanged();
    partial void OnDischargeTimeChanging(string value);
    partial void OnDischargeTimeChanged();
    partial void OnDischargeDateChanging(string value);
    partial void OnDischargeDateChanged();
    partial void OnDischargeDepIDChanging(System.Nullable<System.Guid> value);
    partial void OnDischargeDepIDChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDischargerStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnDischargerStaffIDChanged();
    partial void OnDischargeAdvanceChanging(string value);
    partial void OnDischargeAdvanceChanged();
    partial void OnDeathReasoneChanging(string value);
    partial void OnDeathReasoneChanged();
    partial void OnDeathPlaceChanging(string value);
    partial void OnDeathPlaceChanged();
    partial void OnDeathPlaceSepasIDChanging(System.Nullable<int> value);
    partial void OnDeathPlaceSepasIDChanged();
    partial void OnDischargerUserIDChanging(string value);
    partial void OnDischargerUserIDChanged();
    #endregion
		
		public Discharge()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Staff = default(EntityRef<Staff>);
			this._Department = default(EntityRef<Department>);
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatus", DbType="Int")]
		public System.Nullable<int> PatientStatus
		{
			get
			{
				return this._PatientStatus;
			}
			set
			{
				if ((this._PatientStatus != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientStatus = value;
					this.SendPropertyChanged("PatientStatus");
					this.OnPatientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDiagnosis", DbType="NVarChar(2000)")]
		public string FinalDiagnosis
		{
			get
			{
				return this._FinalDiagnosis;
			}
			set
			{
				if ((this._FinalDiagnosis != value))
				{
					this.OnFinalDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._FinalDiagnosis = value;
					this.SendPropertyChanged("FinalDiagnosis");
					this.OnFinalDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this.OnDischargeTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeTime = value;
					this.SendPropertyChanged("DischargeTime");
					this.OnDischargeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDepID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DischargeDepID
		{
			get
			{
				return this._DischargeDepID;
			}
			set
			{
				if ((this._DischargeDepID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDischargeDepIDChanging(value);
					this.SendPropertyChanging();
					this._DischargeDepID = value;
					this.SendPropertyChanged("DischargeDepID");
					this.OnDischargeDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NChar(10)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DischargerStaffID
		{
			get
			{
				return this._DischargerStaffID;
			}
			set
			{
				if ((this._DischargerStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDischargerStaffIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerStaffID = value;
					this.SendPropertyChanged("DischargerStaffID");
					this.OnDischargerStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeAdvance", DbType="NVarChar(MAX)")]
		public string DischargeAdvance
		{
			get
			{
				return this._DischargeAdvance;
			}
			set
			{
				if ((this._DischargeAdvance != value))
				{
					this.OnDischargeAdvanceChanging(value);
					this.SendPropertyChanging();
					this._DischargeAdvance = value;
					this.SendPropertyChanged("DischargeAdvance");
					this.OnDischargeAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathReasone", DbType="NVarChar(MAX)")]
		public string DeathReasone
		{
			get
			{
				return this._DeathReasone;
			}
			set
			{
				if ((this._DeathReasone != value))
				{
					this.OnDeathReasoneChanging(value);
					this.SendPropertyChanging();
					this._DeathReasone = value;
					this.SendPropertyChanged("DeathReasone");
					this.OnDeathReasoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlace", DbType="NVarChar(50)")]
		public string DeathPlace
		{
			get
			{
				return this._DeathPlace;
			}
			set
			{
				if ((this._DeathPlace != value))
				{
					this.OnDeathPlaceChanging(value);
					this.SendPropertyChanging();
					this._DeathPlace = value;
					this.SendPropertyChanged("DeathPlace");
					this.OnDeathPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlaceSepasID", DbType="Int")]
		public System.Nullable<int> DeathPlaceSepasID
		{
			get
			{
				return this._DeathPlaceSepasID;
			}
			set
			{
				if ((this._DeathPlaceSepasID != value))
				{
					this.OnDeathPlaceSepasIDChanging(value);
					this.SendPropertyChanging();
					this._DeathPlaceSepasID = value;
					this.SendPropertyChanged("DeathPlaceSepasID");
					this.OnDeathPlaceSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerUserID", DbType="NVarChar(100)")]
		public string DischargerUserID
		{
			get
			{
				return this._DischargerUserID;
			}
			set
			{
				if ((this._DischargerUserID != value))
				{
					this.OnDischargerUserIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerUserID = value;
					this.SendPropertyChanged("DischargerUserID");
					this.OnDischargerUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Discharge", Storage="_Definition", ThisKey="PatientStatus", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._PatientStatus = value.ID;
					}
					else
					{
						this._PatientStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Staff", ThisKey="DischargerStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._DischargerStaffID = value.ID;
					}
					else
					{
						this._DischargerStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Discharge", Storage="_Department", ThisKey="DischargeDepID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._DischargeDepID = value.ID;
					}
					else
					{
						this._DischargeDepID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Discharge1 = null;
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Discharge1 = this;
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(long);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurance")]
	public partial class Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Name;
		
		private System.Nullable<bool> _HasContract;
		
		private System.Nullable<int> _SepasID;
		
		private string _CompanyType;
		
		private bool _CheckingExpDate;
		
		private bool _AllowChoose;
		
		private bool _CheckBookletPageNumber;
		
		private bool _CheckbookletCode;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Dossier> _Dossiers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasContractChanging(System.Nullable<bool> value);
    partial void OnHasContractChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    partial void OnCheckingExpDateChanging(bool value);
    partial void OnCheckingExpDateChanged();
    partial void OnAllowChooseChanging(bool value);
    partial void OnAllowChooseChanged();
    partial void OnCheckBookletPageNumberChanging(bool value);
    partial void OnCheckBookletPageNumberChanged();
    partial void OnCheckbookletCodeChanging(bool value);
    partial void OnCheckbookletCodeChanged();
    #endregion
		
		public Insurance()
		{
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContract", DbType="Bit")]
		public System.Nullable<bool> HasContract
		{
			get
			{
				return this._HasContract;
			}
			set
			{
				if ((this._HasContract != value))
				{
					this.OnHasContractChanging(value);
					this.SendPropertyChanging();
					this._HasContract = value;
					this.SendPropertyChanged("HasContract");
					this.OnHasContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingExpDate", DbType="Bit NOT NULL")]
		public bool CheckingExpDate
		{
			get
			{
				return this._CheckingExpDate;
			}
			set
			{
				if ((this._CheckingExpDate != value))
				{
					this.OnCheckingExpDateChanging(value);
					this.SendPropertyChanging();
					this._CheckingExpDate = value;
					this.SendPropertyChanged("CheckingExpDate");
					this.OnCheckingExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowChoose", DbType="Bit NOT NULL")]
		public bool AllowChoose
		{
			get
			{
				return this._AllowChoose;
			}
			set
			{
				if ((this._AllowChoose != value))
				{
					this.OnAllowChooseChanging(value);
					this.SendPropertyChanging();
					this._AllowChoose = value;
					this.SendPropertyChanged("AllowChoose");
					this.OnAllowChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBookletPageNumber", DbType="Bit NOT NULL")]
		public bool CheckBookletPageNumber
		{
			get
			{
				return this._CheckBookletPageNumber;
			}
			set
			{
				if ((this._CheckBookletPageNumber != value))
				{
					this.OnCheckBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckBookletPageNumber = value;
					this.SendPropertyChanged("CheckBookletPageNumber");
					this.OnCheckBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckbookletCode", DbType="Bit NOT NULL")]
		public bool CheckbookletCode
		{
			get
			{
				return this._CheckbookletCode;
			}
			set
			{
				if ((this._CheckbookletCode != value))
				{
					this.OnCheckbookletCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckbookletCode = value;
					this.SendPropertyChanged("CheckbookletCode");
					this.OnCheckbookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="XInsuranceID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceM")]
	public partial class GivenServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private System.Nullable<System.Guid> _PaymentID;
		
		private System.Nullable<int> _AdmitUserID;
		
		private string _CreatorUserFullname;
		
		private System.Nullable<bool> _HasImage;
		
		private System.Nullable<System.DateTime> _CheckImage;
		
		private bool _WardEdit;
		
		private bool _ShowForNurse;
		
		private EntitySet<TreatmentProgress> _TreatmentProgresses;
		
		private EntitySet<BedReservation> _BedReservations;
		
		private EntitySet<QA> _QAs;
		
		private EntityRef<Visit> _Visit;
		
		private EntitySet<DoctorComment> _DoctorComments;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntitySet<Transfer> _Transfers;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntityRef<Presentation> _Presentation;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Triage> _Triages;
		
		private EntitySet<Reference> _References;
		
		private EntityRef<Bed> _Bed;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<GivenServiceM> _GivenServiceM1;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<Reference> _Reference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnAgendaIDChanging(System.Nullable<System.Guid> value);
    partial void OnAgendaIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnPeriodicCalendeIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalendeIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnTechnicianIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicianIDChanged();
    partial void OnPhysioOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysioOrderMIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnBookletTypeChanging(string value);
    partial void OnBookletTypeChanged();
    partial void OnBookletDateChanging(string value);
    partial void OnBookletDateChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnTurningDateChanging(string value);
    partial void OnTurningDateChanged();
    partial void OnTurningTimeChanging(string value);
    partial void OnTurningTimeChanged();
    partial void OnBookletSerialNumberChanging(string value);
    partial void OnBookletSerialNumberChanged();
    partial void OnBookletPageNumberChanging(string value);
    partial void OnBookletPageNumberChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnSendToDrTimeChanging(string value);
    partial void OnSendToDrTimeChanged();
    partial void OnSendToDrChanging(bool value);
    partial void OnSendToDrChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnRemissionStatusChanging(bool value);
    partial void OnRemissionStatusChanged();
    partial void OnScreeningChanging(bool value);
    partial void OnScreeningChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDailySNChanging(System.Nullable<int> value);
    partial void OnDailySNChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnComplementInsuranceChanging(string value);
    partial void OnComplementInsuranceChanged();
    partial void OnComplementInsuranceNOChanging(string value);
    partial void OnComplementInsuranceNOChanged();
    partial void OnRefrenceIDChanging(System.Nullable<System.Guid> value);
    partial void OnRefrenceIDChanged();
    partial void OnPortableChanging(bool value);
    partial void OnPortableChanged();
    partial void OnConfirmFinanceSumKChanging(System.Nullable<double> value);
    partial void OnConfirmFinanceSumKChanged();
    partial void OnAdmissionTypeChanging(string value);
    partial void OnAdmissionTypeChanged();
    partial void OnPaymentIDChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentIDChanged();
    partial void OnAdmitUserIDChanging(System.Nullable<int> value);
    partial void OnAdmitUserIDChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnHasImageChanging(System.Nullable<bool> value);
    partial void OnHasImageChanged();
    partial void OnCheckImageChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckImageChanged();
    partial void OnWardEditChanging(bool value);
    partial void OnWardEditChanged();
    partial void OnShowForNurseChanging(bool value);
    partial void OnShowForNurseChanged();
    #endregion
		
		public GivenServiceM()
		{
			this._TreatmentProgresses = new EntitySet<TreatmentProgress>(new Action<TreatmentProgress>(this.attach_TreatmentProgresses), new Action<TreatmentProgress>(this.detach_TreatmentProgresses));
			this._BedReservations = new EntitySet<BedReservation>(new Action<BedReservation>(this.attach_BedReservations), new Action<BedReservation>(this.detach_BedReservations));
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._Visit = default(EntityRef<Visit>);
			this._DoctorComments = new EntitySet<DoctorComment>(new Action<DoctorComment>(this.attach_DoctorComments), new Action<DoctorComment>(this.detach_DoctorComments));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Transfers = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers), new Action<Transfer>(this.detach_Transfers));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Presentation = default(EntityRef<Presentation>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Triages = new EntitySet<Triage>(new Action<Triage>(this.attach_Triages), new Action<Triage>(this.detach_Triages));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Bed = default(EntityRef<Bed>);
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._GivenServiceM1 = default(EntityRef<GivenServiceM>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Person = default(EntityRef<Person>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Department = default(EntityRef<Department>);
			this._Dossier = default(EntityRef<Dossier>);
			this._Reference = default(EntityRef<Reference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenServiceM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					this.OnAgendaIDChanging(value);
					this.SendPropertyChanging();
					this._AgendaID = value;
					this.SendPropertyChanged("AgendaID");
					this.OnAgendaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					this.OnPeriodicCalendeIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalendeID = value;
					this.SendPropertyChanged("PeriodicCalendeID");
					this.OnPeriodicCalendeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicianIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicianID = value;
					this.SendPropertyChanged("TechnicianID");
					this.OnTechnicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					this.OnPhysioOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysioOrderMID = value;
					this.SendPropertyChanged("PhysioOrderMID");
					this.OnPhysioOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					if (this._Bed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)")]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this.OnBookletTypeChanging(value);
					this.SendPropertyChanging();
					this._BookletType = value;
					this.SendPropertyChanged("BookletType");
					this.OnBookletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)")]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this.OnBookletDateChanging(value);
					this.SendPropertyChanging();
					this._BookletDate = value;
					this.SendPropertyChanged("BookletDate");
					this.OnBookletDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)")]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this.OnTurningDateChanging(value);
					this.SendPropertyChanging();
					this._TurningDate = value;
					this.SendPropertyChanged("TurningDate");
					this.OnTurningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)")]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this.OnTurningTimeChanging(value);
					this.SendPropertyChanging();
					this._TurningTime = value;
					this.SendPropertyChanged("TurningTime");
					this.OnTurningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)")]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this.OnBookletSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletSerialNumber = value;
					this.SendPropertyChanged("BookletSerialNumber");
					this.OnBookletSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)")]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this.OnBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletPageNumber = value;
					this.SendPropertyChanged("BookletPageNumber");
					this.OnBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)")]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this.OnSendToDrTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToDrTime = value;
					this.SendPropertyChanged("SendToDrTime");
					this.OnSendToDrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL")]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this.OnSendToDrChanging(value);
					this.SendPropertyChanging();
					this._SendToDr = value;
					this.SendPropertyChanged("SendToDr");
					this.OnSendToDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL")]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this.OnRemissionStatusChanging(value);
					this.SendPropertyChanging();
					this._RemissionStatus = value;
					this.SendPropertyChanged("RemissionStatus");
					this.OnRemissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL")]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this.OnScreeningChanging(value);
					this.SendPropertyChanging();
					this._Screening = value;
					this.SendPropertyChanged("Screening");
					this.OnScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int")]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this.OnDailySNChanging(value);
					this.SendPropertyChanging();
					this._DailySN = value;
					this.SendPropertyChanged("DailySN");
					this.OnDailySNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)")]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this.OnComplementInsuranceChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsurance = value;
					this.SendPropertyChanged("ComplementInsurance");
					this.OnComplementInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)")]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this.OnComplementInsuranceNOChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsuranceNO = value;
					this.SendPropertyChanged("ComplementInsuranceNO");
					this.OnComplementInsuranceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					if (this._Reference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RefrenceID = value;
					this.SendPropertyChanged("RefrenceID");
					this.OnRefrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL")]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this.OnPortableChanging(value);
					this.SendPropertyChanging();
					this._Portable = value;
					this.SendPropertyChanged("Portable");
					this.OnPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float")]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this.OnConfirmFinanceSumKChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinanceSumK = value;
					this.SendPropertyChanged("ConfirmFinanceSumK");
					this.OnConfirmFinanceSumKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)")]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUserID", DbType="Int")]
		public System.Nullable<int> AdmitUserID
		{
			get
			{
				return this._AdmitUserID;
			}
			set
			{
				if ((this._AdmitUserID != value))
				{
					this.OnAdmitUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdmitUserID = value;
					this.SendPropertyChanged("AdmitUserID");
					this.OnAdmitUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasImage", DbType="Bit")]
		public System.Nullable<bool> HasImage
		{
			get
			{
				return this._HasImage;
			}
			set
			{
				if ((this._HasImage != value))
				{
					this.OnHasImageChanging(value);
					this.SendPropertyChanging();
					this._HasImage = value;
					this.SendPropertyChanged("HasImage");
					this.OnHasImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckImage", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CheckImage
		{
			get
			{
				return this._CheckImage;
			}
			set
			{
				if ((this._CheckImage != value))
				{
					this.OnCheckImageChanging(value);
					this.SendPropertyChanging();
					this._CheckImage = value;
					this.SendPropertyChanged("CheckImage");
					this.OnCheckImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardEdit", DbType="Bit NOT NULL")]
		public bool WardEdit
		{
			get
			{
				return this._WardEdit;
			}
			set
			{
				if ((this._WardEdit != value))
				{
					this.OnWardEditChanging(value);
					this.SendPropertyChanging();
					this._WardEdit = value;
					this.SendPropertyChanged("WardEdit");
					this.OnWardEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForNurse", DbType="Bit NOT NULL")]
		public bool ShowForNurse
		{
			get
			{
				return this._ShowForNurse;
			}
			set
			{
				if ((this._ShowForNurse != value))
				{
					this.OnShowForNurseChanging(value);
					this.SendPropertyChanging();
					this._ShowForNurse = value;
					this.SendPropertyChanged("ShowForNurse");
					this.OnShowForNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TreatmentProgress", Storage="_TreatmentProgresses", ThisKey="ID", OtherKey="GivenserviceMID")]
		public EntitySet<TreatmentProgress> TreatmentProgresses
		{
			get
			{
				return this._TreatmentProgresses;
			}
			set
			{
				this._TreatmentProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BedReservation", Storage="_BedReservations", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<BedReservation> BedReservations
		{
			get
			{
				return this._BedReservations;
			}
			set
			{
				this._BedReservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_QAs", ThisKey="ID", OtherKey="IDGivenServiceM")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Visit", Storage="_Visit", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_DoctorComment", Storage="_DoctorComments", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<DoctorComment> DoctorComments
		{
			get
			{
				return this._DoctorComments;
			}
			set
			{
				this._DoctorComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="GsmID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Transfer", Storage="_Transfers", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Transfer> Transfers
		{
			get
			{
				return this._Transfers;
			}
			set
			{
				this._Transfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Presentation", Storage="_Presentation", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Presentation Presentation
		{
			get
			{
				return this._Presentation.Entity;
			}
			set
			{
				Presentation previousValue = this._Presentation.Entity;
				if (((previousValue != value) 
							|| (this._Presentation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Presentation.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Presentation.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Presentation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Triage", Storage="_Triages", ThisKey="ID", OtherKey="GivenMID")]
		public EntitySet<Triage> Triages
		{
			get
			{
				return this._Triages;
			}
			set
			{
				this._Triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_References", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_GivenServiceM", Storage="_Bed", ThisKey="BedID", OtherKey="ID", IsForeignKey=true)]
		public Bed Bed
		{
			get
			{
				return this._Bed.Entity;
			}
			set
			{
				Bed previousValue = this._Bed.Entity;
				if (((previousValue != value) 
							|| (this._Bed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bed.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Bed.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._BedID = value.ID;
					}
					else
					{
						this._BedID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Bed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM", Storage="_Definition", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM1", Storage="_Definition1", ThisKey="VisitType", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._VisitType = value.ID;
					}
					else
					{
						this._VisitType = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceM1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM1
		{
			get
			{
				return this._GivenServiceM1.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM1.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._GivenServiceM1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_ServiceCategory", ThisKey="ServiceCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ServiceCategoryID = value.ID;
					}
					else
					{
						this._ServiceCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_Staff1", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_Staff2", ThisKey="TechnicianID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.GivenServiceMs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs2.Add(this);
						this._TechnicianID = value.ID;
					}
					else
					{
						this._TechnicianID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_Reference", ThisKey="RefrenceID", OtherKey="ID", IsForeignKey=true)]
		public Reference Reference
		{
			get
			{
				return this._Reference.Entity;
			}
			set
			{
				Reference previousValue = this._Reference.Entity;
				if (((previousValue != value) 
							|| (this._Reference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reference.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Reference.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RefrenceID = value.ID;
					}
					else
					{
						this._RefrenceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Reference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_DoctorComments(DoctorComment entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_DoctorComments(DoctorComment entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = null;
		}
		
		private void attach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_IMPHO_Person")]
	public partial class View_IMPHO_Person
	{
		
		private string _NationalCode;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _HomePhone;
		
		private string _ExpDate;
		
		private string _PersonnelNo;
		
		private string _InsuranceNo;
		
		private string _InsureName;
		
		private System.Nullable<byte> _Sex;
		
		private string _BirthPlace;
		
		private string _IdentityPlace;
		
		private string _Note;
		
		private string _HomeCity;
		
		private string _HomeAddress;
		
		private string _IdentityNo;
		
		private string _HomeCountry;
		
		private string _Zone;
		
		private string _MaritalStatus;
		
		private string _EmployeType;
		
		private System.Nullable<bool> _Diabetic;
		
		private System.Nullable<byte> _EmpStatus;
		
		private byte _IDRelation;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _RelationName;
		
		private string _Name;
		
		private string _Expr1;
		
		private System.Nullable<byte> _IDMaritalStatus;
		
		private byte _IDManagement;
		
		private short _IDCompany;
		
		private short _IDSubCompany;
		
		private System.Nullable<byte> _IDValidCenterZone;
		
		private short _IDValidCenter;
		
		private System.Nullable<System.Guid> _NewIDPerson;
		
		private int _IDPerson;
		
		public View_IMPHO_Person()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(35)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(25)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this._ExpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="NVarChar(25)")]
		public string PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsureName
		{
			get
			{
				return this._InsureName;
			}
			set
			{
				if ((this._InsureName != value))
				{
					this._InsureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="TinyInt")]
		public System.Nullable<byte> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this._IdentityPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeCity", DbType="NVarChar(30)")]
		public string HomeCity
		{
			get
			{
				return this._HomeCity;
			}
			set
			{
				if ((this._HomeCity != value))
				{
					this._HomeCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNo", DbType="NVarChar(8)")]
		public string IdentityNo
		{
			get
			{
				return this._IdentityNo;
			}
			set
			{
				if ((this._IdentityNo != value))
				{
					this._IdentityNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeCountry", DbType="NVarChar(20)")]
		public string HomeCountry
		{
			get
			{
				return this._HomeCountry;
			}
			set
			{
				if ((this._HomeCountry != value))
				{
					this._HomeCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(141)")]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this._Zone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(30)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this._MaritalStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeType", DbType="NVarChar(20)")]
		public string EmployeType
		{
			get
			{
				return this._EmployeType;
			}
			set
			{
				if ((this._EmployeType != value))
				{
					this._EmployeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diabetic", DbType="Bit")]
		public System.Nullable<bool> Diabetic
		{
			get
			{
				return this._Diabetic;
			}
			set
			{
				if ((this._Diabetic != value))
				{
					this._Diabetic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatus", DbType="TinyInt")]
		public System.Nullable<byte> EmpStatus
		{
			get
			{
				return this._EmpStatus;
			}
			set
			{
				if ((this._EmpStatus != value))
				{
					this._EmpStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRelation", DbType="TinyInt NOT NULL")]
		public byte IDRelation
		{
			get
			{
				return this._IDRelation;
			}
			set
			{
				if ((this._IDRelation != value))
				{
					this._IDRelation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(60)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaritalStatus", DbType="TinyInt")]
		public System.Nullable<byte> IDMaritalStatus
		{
			get
			{
				return this._IDMaritalStatus;
			}
			set
			{
				if ((this._IDMaritalStatus != value))
				{
					this._IDMaritalStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="TinyInt NOT NULL")]
		public byte IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt NOT NULL")]
		public short IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="SmallInt NOT NULL")]
		public short IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="TinyInt")]
		public System.Nullable<byte> IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this._IDValidCenterZone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", DbType="SmallInt NOT NULL")]
		public short IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this._IDValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewIDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NewIDPerson
		{
			get
			{
				return this._NewIDPerson;
			}
			set
			{
				if ((this._NewIDPerson != value))
				{
					this._NewIDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="Int NOT NULL")]
		public int IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Triage")]
	public partial class Triage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private string _AccidentDate;
		
		private string _AccidentTime;
		
		private string _AccidentLocation;
		
		private string _LoginDate;
		
		private string _LoginTime;
		
		private string _TurnToVisit;
		
		private string _PreviousVisit;
		
		private string _FirstVisitTime;
		
		private string _ActionTime;
		
		private string _ActionType;
		
		private string _HowToRefer;
		
		private string _MainComplaint;
		
		private string _AllergyHistory;
		
		private string _ConsciousnessLevel;
		
		private bool _Lethargy;
		
		private bool _Pain;
		
		private string _MedicalHistory;
		
		private string _MedicineHistory;
		
		private string _BP;
		
		private string _PR;
		
		private string _RR;
		
		private string _T;
		
		private string _SPO2;
		
		private bool _Facility;
		
		private string _FacilityCount;
		
		private string _Levell;
		
		private string _ReferTo;
		
		private string _ReferenceDate;
		
		private string _ReferenceTime;
		
		private string _Time;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _IWEW;
		
		private string _AVPUScale;
		
		private bool _AirwayRisk;
		
		private bool _RespiratoryDistress;
		
		private bool _Cyanosis;
		
		private bool _ShockSigns;
		
		private bool _SPO2LessThan90;
		
		private bool _PregnantWoman;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnAccidentDateChanging(string value);
    partial void OnAccidentDateChanged();
    partial void OnAccidentTimeChanging(string value);
    partial void OnAccidentTimeChanged();
    partial void OnAccidentLocationChanging(string value);
    partial void OnAccidentLocationChanged();
    partial void OnLoginDateChanging(string value);
    partial void OnLoginDateChanged();
    partial void OnLoginTimeChanging(string value);
    partial void OnLoginTimeChanged();
    partial void OnTurnToVisitChanging(string value);
    partial void OnTurnToVisitChanged();
    partial void OnPreviousVisitChanging(string value);
    partial void OnPreviousVisitChanged();
    partial void OnFirstVisitTimeChanging(string value);
    partial void OnFirstVisitTimeChanged();
    partial void OnActionTimeChanging(string value);
    partial void OnActionTimeChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnHowToReferChanging(string value);
    partial void OnHowToReferChanged();
    partial void OnMainComplaintChanging(string value);
    partial void OnMainComplaintChanged();
    partial void OnAllergyHistoryChanging(string value);
    partial void OnAllergyHistoryChanged();
    partial void OnConsciousnessLevelChanging(string value);
    partial void OnConsciousnessLevelChanged();
    partial void OnLethargyChanging(bool value);
    partial void OnLethargyChanged();
    partial void OnPainChanging(bool value);
    partial void OnPainChanged();
    partial void OnMedicalHistoryChanging(string value);
    partial void OnMedicalHistoryChanged();
    partial void OnMedicineHistoryChanging(string value);
    partial void OnMedicineHistoryChanged();
    partial void OnBPChanging(string value);
    partial void OnBPChanged();
    partial void OnPRChanging(string value);
    partial void OnPRChanged();
    partial void OnRRChanging(string value);
    partial void OnRRChanged();
    partial void OnTChanging(string value);
    partial void OnTChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnFacilityChanging(bool value);
    partial void OnFacilityChanged();
    partial void OnFacilityCountChanging(string value);
    partial void OnFacilityCountChanged();
    partial void OnLevellChanging(string value);
    partial void OnLevellChanged();
    partial void OnReferToChanging(string value);
    partial void OnReferToChanged();
    partial void OnReferenceDateChanging(string value);
    partial void OnReferenceDateChanged();
    partial void OnReferenceTimeChanging(string value);
    partial void OnReferenceTimeChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnIWEWChanging(string value);
    partial void OnIWEWChanged();
    partial void OnAVPUScaleChanging(string value);
    partial void OnAVPUScaleChanged();
    partial void OnAirwayRiskChanging(bool value);
    partial void OnAirwayRiskChanged();
    partial void OnRespiratoryDistressChanging(bool value);
    partial void OnRespiratoryDistressChanged();
    partial void OnCyanosisChanging(bool value);
    partial void OnCyanosisChanged();
    partial void OnShockSignsChanging(bool value);
    partial void OnShockSignsChanged();
    partial void OnSPO2LessThan90Changing(bool value);
    partial void OnSPO2LessThan90Changed();
    partial void OnPregnantWomanChanging(bool value);
    partial void OnPregnantWomanChanged();
    #endregion
		
		public Triage()
		{
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentDate", DbType="NVarChar(10)")]
		public string AccidentDate
		{
			get
			{
				return this._AccidentDate;
			}
			set
			{
				if ((this._AccidentDate != value))
				{
					this.OnAccidentDateChanging(value);
					this.SendPropertyChanging();
					this._AccidentDate = value;
					this.SendPropertyChanged("AccidentDate");
					this.OnAccidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentTime", DbType="NVarChar(8)")]
		public string AccidentTime
		{
			get
			{
				return this._AccidentTime;
			}
			set
			{
				if ((this._AccidentTime != value))
				{
					this.OnAccidentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccidentTime = value;
					this.SendPropertyChanged("AccidentTime");
					this.OnAccidentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentLocation", DbType="NVarChar(500)")]
		public string AccidentLocation
		{
			get
			{
				return this._AccidentLocation;
			}
			set
			{
				if ((this._AccidentLocation != value))
				{
					this.OnAccidentLocationChanging(value);
					this.SendPropertyChanging();
					this._AccidentLocation = value;
					this.SendPropertyChanged("AccidentLocation");
					this.OnAccidentLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="NVarChar(10)")]
		public string LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="NVarChar(8)")]
		public string LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnToVisit", DbType="NVarChar(10)")]
		public string TurnToVisit
		{
			get
			{
				return this._TurnToVisit;
			}
			set
			{
				if ((this._TurnToVisit != value))
				{
					this.OnTurnToVisitChanging(value);
					this.SendPropertyChanging();
					this._TurnToVisit = value;
					this.SendPropertyChanged("TurnToVisit");
					this.OnTurnToVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousVisit", DbType="NVarChar(50)")]
		public string PreviousVisit
		{
			get
			{
				return this._PreviousVisit;
			}
			set
			{
				if ((this._PreviousVisit != value))
				{
					this.OnPreviousVisitChanging(value);
					this.SendPropertyChanging();
					this._PreviousVisit = value;
					this.SendPropertyChanged("PreviousVisit");
					this.OnPreviousVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstVisitTime", DbType="NVarChar(8)")]
		public string FirstVisitTime
		{
			get
			{
				return this._FirstVisitTime;
			}
			set
			{
				if ((this._FirstVisitTime != value))
				{
					this.OnFirstVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._FirstVisitTime = value;
					this.SendPropertyChanged("FirstVisitTime");
					this.OnFirstVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTime", DbType="NVarChar(8)")]
		public string ActionTime
		{
			get
			{
				return this._ActionTime;
			}
			set
			{
				if ((this._ActionTime != value))
				{
					this.OnActionTimeChanging(value);
					this.SendPropertyChanging();
					this._ActionTime = value;
					this.SendPropertyChanged("ActionTime");
					this.OnActionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(50)")]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowToRefer", DbType="NVarChar(100)")]
		public string HowToRefer
		{
			get
			{
				return this._HowToRefer;
			}
			set
			{
				if ((this._HowToRefer != value))
				{
					this.OnHowToReferChanging(value);
					this.SendPropertyChanging();
					this._HowToRefer = value;
					this.SendPropertyChanged("HowToRefer");
					this.OnHowToReferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainComplaint", DbType="NVarChar(500)")]
		public string MainComplaint
		{
			get
			{
				return this._MainComplaint;
			}
			set
			{
				if ((this._MainComplaint != value))
				{
					this.OnMainComplaintChanging(value);
					this.SendPropertyChanging();
					this._MainComplaint = value;
					this.SendPropertyChanged("MainComplaint");
					this.OnMainComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyHistory", DbType="NVarChar(500)")]
		public string AllergyHistory
		{
			get
			{
				return this._AllergyHistory;
			}
			set
			{
				if ((this._AllergyHistory != value))
				{
					this.OnAllergyHistoryChanging(value);
					this.SendPropertyChanging();
					this._AllergyHistory = value;
					this.SendPropertyChanged("AllergyHistory");
					this.OnAllergyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsciousnessLevel", DbType="NVarChar(30)")]
		public string ConsciousnessLevel
		{
			get
			{
				return this._ConsciousnessLevel;
			}
			set
			{
				if ((this._ConsciousnessLevel != value))
				{
					this.OnConsciousnessLevelChanging(value);
					this.SendPropertyChanging();
					this._ConsciousnessLevel = value;
					this.SendPropertyChanged("ConsciousnessLevel");
					this.OnConsciousnessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lethargy", DbType="Bit NOT NULL")]
		public bool Lethargy
		{
			get
			{
				return this._Lethargy;
			}
			set
			{
				if ((this._Lethargy != value))
				{
					this.OnLethargyChanging(value);
					this.SendPropertyChanging();
					this._Lethargy = value;
					this.SendPropertyChanged("Lethargy");
					this.OnLethargyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pain", DbType="Bit NOT NULL")]
		public bool Pain
		{
			get
			{
				return this._Pain;
			}
			set
			{
				if ((this._Pain != value))
				{
					this.OnPainChanging(value);
					this.SendPropertyChanging();
					this._Pain = value;
					this.SendPropertyChanged("Pain");
					this.OnPainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistory", DbType="NVarChar(200)")]
		public string MedicalHistory
		{
			get
			{
				return this._MedicalHistory;
			}
			set
			{
				if ((this._MedicalHistory != value))
				{
					this.OnMedicalHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistory = value;
					this.SendPropertyChanged("MedicalHistory");
					this.OnMedicalHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineHistory", DbType="NVarChar(200)")]
		public string MedicineHistory
		{
			get
			{
				return this._MedicineHistory;
			}
			set
			{
				if ((this._MedicineHistory != value))
				{
					this.OnMedicineHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicineHistory = value;
					this.SendPropertyChanged("MedicineHistory");
					this.OnMedicineHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BP", DbType="NVarChar(20)")]
		public string BP
		{
			get
			{
				return this._BP;
			}
			set
			{
				if ((this._BP != value))
				{
					this.OnBPChanging(value);
					this.SendPropertyChanging();
					this._BP = value;
					this.SendPropertyChanged("BP");
					this.OnBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="NVarChar(20)")]
		public string PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RR", DbType="NVarChar(20)")]
		public string RR
		{
			get
			{
				return this._RR;
			}
			set
			{
				if ((this._RR != value))
				{
					this.OnRRChanging(value);
					this.SendPropertyChanging();
					this._RR = value;
					this.SendPropertyChanged("RR");
					this.OnRRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T", DbType="NVarChar(20)")]
		public string T
		{
			get
			{
				return this._T;
			}
			set
			{
				if ((this._T != value))
				{
					this.OnTChanging(value);
					this.SendPropertyChanging();
					this._T = value;
					this.SendPropertyChanged("T");
					this.OnTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(20)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="Bit NOT NULL")]
		public bool Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this.OnFacilityChanging(value);
					this.SendPropertyChanging();
					this._Facility = value;
					this.SendPropertyChanged("Facility");
					this.OnFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCount", DbType="NVarChar(10)")]
		public string FacilityCount
		{
			get
			{
				return this._FacilityCount;
			}
			set
			{
				if ((this._FacilityCount != value))
				{
					this.OnFacilityCountChanging(value);
					this.SendPropertyChanging();
					this._FacilityCount = value;
					this.SendPropertyChanged("FacilityCount");
					this.OnFacilityCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Levell", DbType="NVarChar(10)")]
		public string Levell
		{
			get
			{
				return this._Levell;
			}
			set
			{
				if ((this._Levell != value))
				{
					this.OnLevellChanging(value);
					this.SendPropertyChanging();
					this._Levell = value;
					this.SendPropertyChanged("Levell");
					this.OnLevellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferTo", DbType="NVarChar(10)")]
		public string ReferTo
		{
			get
			{
				return this._ReferTo;
			}
			set
			{
				if ((this._ReferTo != value))
				{
					this.OnReferToChanging(value);
					this.SendPropertyChanging();
					this._ReferTo = value;
					this.SendPropertyChanged("ReferTo");
					this.OnReferToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDate", DbType="NVarChar(10)")]
		public string ReferenceDate
		{
			get
			{
				return this._ReferenceDate;
			}
			set
			{
				if ((this._ReferenceDate != value))
				{
					this.OnReferenceDateChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDate = value;
					this.SendPropertyChanged("ReferenceDate");
					this.OnReferenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceTime", DbType="NVarChar(8)")]
		public string ReferenceTime
		{
			get
			{
				return this._ReferenceTime;
			}
			set
			{
				if ((this._ReferenceTime != value))
				{
					this.OnReferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._ReferenceTime = value;
					this.SendPropertyChanged("ReferenceTime");
					this.OnReferenceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IWEW", DbType="NVarChar(50)")]
		public string IWEW
		{
			get
			{
				return this._IWEW;
			}
			set
			{
				if ((this._IWEW != value))
				{
					this.OnIWEWChanging(value);
					this.SendPropertyChanging();
					this._IWEW = value;
					this.SendPropertyChanged("IWEW");
					this.OnIWEWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVPUScale", DbType="NVarChar(5)")]
		public string AVPUScale
		{
			get
			{
				return this._AVPUScale;
			}
			set
			{
				if ((this._AVPUScale != value))
				{
					this.OnAVPUScaleChanging(value);
					this.SendPropertyChanging();
					this._AVPUScale = value;
					this.SendPropertyChanged("AVPUScale");
					this.OnAVPUScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirwayRisk", DbType="Bit NOT NULL")]
		public bool AirwayRisk
		{
			get
			{
				return this._AirwayRisk;
			}
			set
			{
				if ((this._AirwayRisk != value))
				{
					this.OnAirwayRiskChanging(value);
					this.SendPropertyChanging();
					this._AirwayRisk = value;
					this.SendPropertyChanged("AirwayRisk");
					this.OnAirwayRiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RespiratoryDistress", DbType="Bit NOT NULL")]
		public bool RespiratoryDistress
		{
			get
			{
				return this._RespiratoryDistress;
			}
			set
			{
				if ((this._RespiratoryDistress != value))
				{
					this.OnRespiratoryDistressChanging(value);
					this.SendPropertyChanging();
					this._RespiratoryDistress = value;
					this.SendPropertyChanged("RespiratoryDistress");
					this.OnRespiratoryDistressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cyanosis", DbType="Bit NOT NULL")]
		public bool Cyanosis
		{
			get
			{
				return this._Cyanosis;
			}
			set
			{
				if ((this._Cyanosis != value))
				{
					this.OnCyanosisChanging(value);
					this.SendPropertyChanging();
					this._Cyanosis = value;
					this.SendPropertyChanged("Cyanosis");
					this.OnCyanosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShockSigns", DbType="Bit NOT NULL")]
		public bool ShockSigns
		{
			get
			{
				return this._ShockSigns;
			}
			set
			{
				if ((this._ShockSigns != value))
				{
					this.OnShockSignsChanging(value);
					this.SendPropertyChanging();
					this._ShockSigns = value;
					this.SendPropertyChanged("ShockSigns");
					this.OnShockSignsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2LessThan90", DbType="Bit NOT NULL")]
		public bool SPO2LessThan90
		{
			get
			{
				return this._SPO2LessThan90;
			}
			set
			{
				if ((this._SPO2LessThan90 != value))
				{
					this.OnSPO2LessThan90Changing(value);
					this.SendPropertyChanging();
					this._SPO2LessThan90 = value;
					this.SendPropertyChanged("SPO2LessThan90");
					this.OnSPO2LessThan90Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PregnantWoman", DbType="Bit NOT NULL")]
		public bool PregnantWoman
		{
			get
			{
				return this._PregnantWoman;
			}
			set
			{
				if ((this._PregnantWoman != value))
				{
					this.OnPregnantWomanChanging(value);
					this.SendPropertyChanging();
					this._PregnantWoman = value;
					this.SendPropertyChanged("PregnantWoman");
					this.OnPregnantWomanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="TriageID")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Triage", Storage="_GivenServiceM", ThisKey="GivenMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Triages.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Triages.Add(this);
						this._GivenMID = value.ID;
					}
					else
					{
						this._GivenMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Triage", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Triages.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Triages.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ClientID;
		
		private System.Nullable<int> _OldId;
		
		private int _IDInt;
		
		private System.Nullable<int> _IDIntParent;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<System.Guid> _Parent;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdWardRef;
		
		private System.Nullable<int> _SataIdWardRefint;
		
		private System.Nullable<decimal> _VisitAmountPerHour;
		
		private bool _HideInReports;
		
		private EntitySet<Bed> _Beds;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Reference> _References1;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<System.Guid> value);
    partial void OnClientIDChanged();
    partial void OnOldIdChanging(System.Nullable<int> value);
    partial void OnOldIdChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnIDIntParentChanging(System.Nullable<int> value);
    partial void OnIDIntParentChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdWardRefChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdWardRefChanged();
    partial void OnSataIdWardRefintChanging(System.Nullable<int> value);
    partial void OnSataIdWardRefintChanged();
    partial void OnVisitAmountPerHourChanging(System.Nullable<decimal> value);
    partial void OnVisitAmountPerHourChanged();
    partial void OnHideInReportsChanging(bool value);
    partial void OnHideInReportsChanged();
    #endregion
		
		public Department()
		{
			this._Beds = new EntitySet<Bed>(new Action<Bed>(this.attach_Beds), new Action<Bed>(this.detach_Beds));
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._References1 = new EntitySet<Reference>(new Action<Reference>(this.attach_References1), new Action<Reference>(this.detach_References1));
			this._Definition = default(EntityRef<Definition>);
			this._Department1 = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int")]
		public System.Nullable<int> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntParent", DbType="Int")]
		public System.Nullable<int> IDIntParent
		{
			get
			{
				return this._IDIntParent;
			}
			set
			{
				if ((this._IDIntParent != value))
				{
					this.OnIDIntParentChanging(value);
					this.SendPropertyChanging();
					this._IDIntParent = value;
					this.SendPropertyChanged("IDIntParent");
					this.OnIDIntParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdWardRef", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdWardRef
		{
			get
			{
				return this._SATAIdWardRef;
			}
			set
			{
				if ((this._SATAIdWardRef != value))
				{
					this.OnSATAIdWardRefChanging(value);
					this.SendPropertyChanging();
					this._SATAIdWardRef = value;
					this.SendPropertyChanged("SATAIdWardRef");
					this.OnSATAIdWardRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SataIdWardRefint", DbType="Int")]
		public System.Nullable<int> SataIdWardRefint
		{
			get
			{
				return this._SataIdWardRefint;
			}
			set
			{
				if ((this._SataIdWardRefint != value))
				{
					this.OnSataIdWardRefintChanging(value);
					this.SendPropertyChanging();
					this._SataIdWardRefint = value;
					this.SendPropertyChanged("SataIdWardRefint");
					this.OnSataIdWardRefintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitAmountPerHour", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> VisitAmountPerHour
		{
			get
			{
				return this._VisitAmountPerHour;
			}
			set
			{
				if ((this._VisitAmountPerHour != value))
				{
					this.OnVisitAmountPerHourChanging(value);
					this.SendPropertyChanging();
					this._VisitAmountPerHour = value;
					this.SendPropertyChanged("VisitAmountPerHour");
					this.OnVisitAmountPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideInReports", DbType="Bit NOT NULL")]
		public bool HideInReports
		{
			get
			{
				return this._HideInReports;
			}
			set
			{
				if ((this._HideInReports != value))
				{
					this.OnHideInReportsChanging(value);
					this.SendPropertyChanging();
					this._HideInReports = value;
					this.SendPropertyChanged("HideInReports");
					this.OnHideInReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Bed", Storage="_Beds", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Bed> Beds
		{
			get
			{
				return this._Beds;
			}
			set
			{
				this._Beds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="PharmacyID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="DischargeDepID")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_References", ThisKey="ID", OtherKey="DestinationWard")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_References1", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Reference> References1
		{
			get
			{
				return this._References1;
			}
			set
			{
				this._References1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Definition", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Beds(Bed entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Beds(Bed entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dossier")]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _UniqID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _XInsuranceID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _NationalCode;
		
		private string _Date;
		
		private string _Time;
		
		private string _MedicalCenter;
		
		private bool _AdvancePaymentPayed;
		
		private decimal _AdvancePayment;
		
		private int _IOtype;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private System.Nullable<bool> _LockBilling;
		
		private string _SpicialCode;
		
		private System.Nullable<decimal> _AllPateintShare;
		
		private System.Nullable<decimal> _AllInsuranceShare;
		
		private System.Nullable<decimal> _AllPay;
		
		private bool _Editable;
		
		private System.Nullable<System.Guid> _StaffCure;
		
		private System.Nullable<bool> _SATASent;
		
		private string _SATAMessage;
		
		private System.Nullable<int> _InsuranceID2;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntitySet<TreatmentProgress> _TreatmentProgresses;
		
		private EntitySet<Consultant> _Consultants;
		
		private EntityRef<Discharge> _Discharge1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUniqIDChanging(System.Guid value);
    partial void OnUniqIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnXInsuranceIDChanging(System.Nullable<int> value);
    partial void OnXInsuranceIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnMedicalCenterChanging(string value);
    partial void OnMedicalCenterChanged();
    partial void OnAdvancePaymentPayedChanging(bool value);
    partial void OnAdvancePaymentPayedChanged();
    partial void OnAdvancePaymentChanging(decimal value);
    partial void OnAdvancePaymentChanged();
    partial void OnIOtypeChanging(int value);
    partial void OnIOtypeChanged();
    partial void OnTotalPayedChanging(bool value);
    partial void OnTotalPayedChanged();
    partial void OnDischargeChanging(bool value);
    partial void OnDischargeChanged();
    partial void OnLockBillingChanging(System.Nullable<bool> value);
    partial void OnLockBillingChanged();
    partial void OnSpicialCodeChanging(string value);
    partial void OnSpicialCodeChanged();
    partial void OnAllPateintShareChanging(System.Nullable<decimal> value);
    partial void OnAllPateintShareChanged();
    partial void OnAllInsuranceShareChanging(System.Nullable<decimal> value);
    partial void OnAllInsuranceShareChanged();
    partial void OnAllPayChanging(System.Nullable<decimal> value);
    partial void OnAllPayChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnStaffCureChanging(System.Nullable<System.Guid> value);
    partial void OnStaffCureChanged();
    partial void OnSATASentChanging(System.Nullable<bool> value);
    partial void OnSATASentChanged();
    partial void OnSATAMessageChanging(string value);
    partial void OnSATAMessageChanged();
    partial void OnInsuranceID2Changing(System.Nullable<int> value);
    partial void OnInsuranceID2Changed();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public Dossier()
		{
			this._TreatmentProgresses = new EntitySet<TreatmentProgress>(new Action<TreatmentProgress>(this.attach_TreatmentProgresses), new Action<TreatmentProgress>(this.detach_TreatmentProgresses));
			this._Consultants = new EntitySet<Consultant>(new Action<Consultant>(this.attach_Consultants), new Action<Consultant>(this.detach_Consultants));
			this._Discharge1 = default(EntityRef<Discharge>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid UniqID
		{
			get
			{
				return this._UniqID;
			}
			set
			{
				if ((this._UniqID != value))
				{
					this.OnUniqIDChanging(value);
					this.SendPropertyChanging();
					this._UniqID = value;
					this.SendPropertyChanged("UniqID");
					this.OnUniqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XInsuranceID", DbType="Int")]
		public System.Nullable<int> XInsuranceID
		{
			get
			{
				return this._XInsuranceID;
			}
			set
			{
				if ((this._XInsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._XInsuranceID = value;
					this.SendPropertyChanged("XInsuranceID");
					this.OnXInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(200)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this.OnMedicalCenterChanging(value);
					this.SendPropertyChanging();
					this._MedicalCenter = value;
					this.SendPropertyChanged("MedicalCenter");
					this.OnMedicalCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePaymentPayed", DbType="Bit NOT NULL")]
		public bool AdvancePaymentPayed
		{
			get
			{
				return this._AdvancePaymentPayed;
			}
			set
			{
				if ((this._AdvancePaymentPayed != value))
				{
					this.OnAdvancePaymentPayedChanging(value);
					this.SendPropertyChanging();
					this._AdvancePaymentPayed = value;
					this.SendPropertyChanged("AdvancePaymentPayed");
					this.OnAdvancePaymentPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money NOT NULL")]
		public decimal AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this.OnAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._AdvancePayment = value;
					this.SendPropertyChanged("AdvancePayment");
					this.OnAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this.OnIOtypeChanging(value);
					this.SendPropertyChanging();
					this._IOtype = value;
					this.SendPropertyChanged("IOtype");
					this.OnIOtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this.OnTotalPayedChanging(value);
					this.SendPropertyChanging();
					this._TotalPayed = value;
					this.SendPropertyChanged("TotalPayed");
					this.OnTotalPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this.OnDischargeChanging(value);
					this.SendPropertyChanging();
					this._Discharge = value;
					this.SendPropertyChanged("Discharge");
					this.OnDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockBilling", DbType="Bit")]
		public System.Nullable<bool> LockBilling
		{
			get
			{
				return this._LockBilling;
			}
			set
			{
				if ((this._LockBilling != value))
				{
					this.OnLockBillingChanging(value);
					this.SendPropertyChanging();
					this._LockBilling = value;
					this.SendPropertyChanged("LockBilling");
					this.OnLockBillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpicialCode", DbType="NVarChar(20)")]
		public string SpicialCode
		{
			get
			{
				return this._SpicialCode;
			}
			set
			{
				if ((this._SpicialCode != value))
				{
					this.OnSpicialCodeChanging(value);
					this.SendPropertyChanging();
					this._SpicialCode = value;
					this.SendPropertyChanged("SpicialCode");
					this.OnSpicialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPateintShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPateintShare
		{
			get
			{
				return this._AllPateintShare;
			}
			set
			{
				if ((this._AllPateintShare != value))
				{
					this.OnAllPateintShareChanging(value);
					this.SendPropertyChanging();
					this._AllPateintShare = value;
					this.SendPropertyChanged("AllPateintShare");
					this.OnAllPateintShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllInsuranceShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllInsuranceShare
		{
			get
			{
				return this._AllInsuranceShare;
			}
			set
			{
				if ((this._AllInsuranceShare != value))
				{
					this.OnAllInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._AllInsuranceShare = value;
					this.SendPropertyChanged("AllInsuranceShare");
					this.OnAllInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPay
		{
			get
			{
				return this._AllPay;
			}
			set
			{
				if ((this._AllPay != value))
				{
					this.OnAllPayChanging(value);
					this.SendPropertyChanging();
					this._AllPay = value;
					this.SendPropertyChanged("AllPay");
					this.OnAllPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._Editable;
			}
			set
			{
				if ((this._Editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._Editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCure", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffCure
		{
			get
			{
				return this._StaffCure;
			}
			set
			{
				if ((this._StaffCure != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffCureChanging(value);
					this.SendPropertyChanging();
					this._StaffCure = value;
					this.SendPropertyChanged("StaffCure");
					this.OnStaffCureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATASent", DbType="Bit")]
		public System.Nullable<bool> SATASent
		{
			get
			{
				return this._SATASent;
			}
			set
			{
				if ((this._SATASent != value))
				{
					this.OnSATASentChanging(value);
					this.SendPropertyChanging();
					this._SATASent = value;
					this.SendPropertyChanged("SATASent");
					this.OnSATASentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAMessage", DbType="NVarChar(500)")]
		public string SATAMessage
		{
			get
			{
				return this._SATAMessage;
			}
			set
			{
				if ((this._SATAMessage != value))
				{
					this.OnSATAMessageChanging(value);
					this.SendPropertyChanging();
					this._SATAMessage = value;
					this.SendPropertyChanged("SATAMessage");
					this.OnSATAMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID2", DbType="Int")]
		public System.Nullable<int> InsuranceID2
		{
			get
			{
				return this._InsuranceID2;
			}
			set
			{
				if ((this._InsuranceID2 != value))
				{
					this.OnInsuranceID2Changing(value);
					this.SendPropertyChanging();
					this._InsuranceID2 = value;
					this.SendPropertyChanged("InsuranceID2");
					this.OnInsuranceID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_TreatmentProgress", Storage="_TreatmentProgresses", ThisKey="ID", OtherKey="DosseirID")]
		public EntitySet<TreatmentProgress> TreatmentProgresses
		{
			get
			{
				return this._TreatmentProgresses;
			}
			set
			{
				this._TreatmentProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Consultant", Storage="_Consultants", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<Consultant> Consultants
		{
			get
			{
				return this._Consultants;
			}
			set
			{
				this._Consultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Discharge1", ThisKey="ID", OtherKey="DossierID", IsUnique=true, IsForeignKey=false)]
		public Discharge Discharge1
		{
			get
			{
				return this._Discharge1.Entity;
			}
			set
			{
				Discharge previousValue = this._Discharge1.Entity;
				if (((previousValue != value) 
							|| (this._Discharge1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discharge1.Entity = null;
						previousValue.Dossier = null;
					}
					this._Discharge1.Entity = value;
					if ((value != null))
					{
						value.Dossier = this;
					}
					this.SendPropertyChanged("Discharge1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Insurance", ThisKey="XInsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._XInsuranceID = value.ID;
					}
					else
					{
						this._XInsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Staff", ThisKey="StaffCure", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._StaffCure = value.ID;
					}
					else
					{
						this._StaffCure = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwDoctorInstraction")]
	public partial class VwDoctorInstraction
	{
		
		private System.Nullable<bool> _payed;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private string _CatName;
		
		private string _ServiceName;
		
		private string _FullCategoryName;
		
		private string _FullServiceName;
		
		private System.Nullable<double> _Amount;
		
		private string _Date;
		
		private string _Time;
		
		private string _Result;
		
		private string _NormalRange;
		
		private System.Nullable<int> _SerialNumber;
		
		private System.Nullable<System.Guid> _ID;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _InsuranceShare;
		
		private System.Nullable<System.Guid> _GSDID;
		
		private string _gsdComment;
		
		private string _RequestedDoctor;
		
		private System.Nullable<int> _DepartmentTypeID;
		
		public VwDoctorInstraction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payed", DbType="Bit")]
		public System.Nullable<bool> payed
		{
			get
			{
				return this._payed;
			}
			set
			{
				if ((this._payed != value))
				{
					this._payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(MAX)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullCategoryName", DbType="NVarChar(100)")]
		public string FullCategoryName
		{
			get
			{
				return this._FullCategoryName;
			}
			set
			{
				if ((this._FullCategoryName != value))
				{
					this._FullCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullServiceName", DbType="NVarChar(MAX)")]
		public string FullServiceName
		{
			get
			{
				return this._FullServiceName;
			}
			set
			{
				if ((this._FullServiceName != value))
				{
					this._FullServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this._NormalRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int")]
		public System.Nullable<int> SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money")]
		public System.Nullable<decimal> InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSDID
		{
			get
			{
				return this._GSDID;
			}
			set
			{
				if ((this._GSDID != value))
				{
					this._GSDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gsdComment", DbType="NVarChar(MAX)")]
		public string gsdComment
		{
			get
			{
				return this._gsdComment;
			}
			set
			{
				if ((this._gsdComment != value))
				{
					this._gsdComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDoctor", DbType="NVarChar(201)")]
		public string RequestedDoctor
		{
			get
			{
				return this._RequestedDoctor;
			}
			set
			{
				if ((this._RequestedDoctor != value))
				{
					this._RequestedDoctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentTypeID", DbType="Int")]
		public System.Nullable<int> DepartmentTypeID
		{
			get
			{
				return this._DepartmentTypeID;
			}
			set
			{
				if ((this._DepartmentTypeID != value))
				{
					this._DepartmentTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _OldParentID;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Name_En;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Shape;
		
		private string _MESCCode_No;
		
		private System.Nullable<bool> _NIS;
		
		private bool _EmergencyFav;
		
		private string _HIXCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _BasicK;
		
		private System.Nullable<double> _SupplementBasicK;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _ResultType;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _RetireeID;
		
		private System.Nullable<double> _DoctorK;
		
		private System.Nullable<int> _DoctorServiceCategory;
		
		private System.Nullable<int> _IDMeasurement;
		
		private string _LastMUserIFullName;
		
		private string _LastModificationTime;
		
		private string _LastModificationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _CreationUserIFullName;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _DrugCount;
		
		private bool _DrugDeleted;
		
		private bool _Hide;
		
		private System.Nullable<long> _SATACode;
		
		private int _IDint;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<Diet> _Diets;
		
		private EntitySet<GivenDrug> _GivenDrugs;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<QA> _QAs1;
		
		private EntitySet<DrugAllergy> _DrugAllergies;
		
		private EntitySet<DrugHistory> _DrugHistories;
		
		private EntitySet<FavoriteService> _FavoriteServices;
		
		private EntitySet<PatternM> _PatternMs;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<LabTestGroup> _LabTestGroups;
		
		private EntitySet<SpecialityDrug> _SpecialityDrugs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Service> _Services;
		
		private EntityRef<LaboratoryServiceDetail> _LaboratoryServiceDetail;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnOldParentIDChanging(System.Nullable<int> value);
    partial void OnOldParentIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnName_EnChanging(string value);
    partial void OnName_EnChanged();
    partial void OnCaliforniaCodeChanging(string value);
    partial void OnCaliforniaCodeChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShapeChanging(string value);
    partial void OnShapeChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnEmergencyFavChanging(bool value);
    partial void OnEmergencyFavChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnBasicKChanging(System.Nullable<double> value);
    partial void OnBasicKChanged();
    partial void OnSupplementBasicKChanging(System.Nullable<double> value);
    partial void OnSupplementBasicKChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRetireeIDChanging(System.Nullable<int> value);
    partial void OnRetireeIDChanged();
    partial void OnDoctorKChanging(System.Nullable<double> value);
    partial void OnDoctorKChanged();
    partial void OnDoctorServiceCategoryChanging(System.Nullable<int> value);
    partial void OnDoctorServiceCategoryChanged();
    partial void OnIDMeasurementChanging(System.Nullable<int> value);
    partial void OnIDMeasurementChanged();
    partial void OnLastMUserIFullNameChanging(string value);
    partial void OnLastMUserIFullNameChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnCreationUserIFullNameChanging(string value);
    partial void OnCreationUserIFullNameChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnDrugCountChanging(bool value);
    partial void OnDrugCountChanged();
    partial void OnDrugDeletedChanging(bool value);
    partial void OnDrugDeletedChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    partial void OnSATACodeChanging(System.Nullable<long> value);
    partial void OnSATACodeChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public Service()
		{
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._Diets = new EntitySet<Diet>(new Action<Diet>(this.attach_Diets), new Action<Diet>(this.detach_Diets));
			this._GivenDrugs = new EntitySet<GivenDrug>(new Action<GivenDrug>(this.attach_GivenDrugs), new Action<GivenDrug>(this.detach_GivenDrugs));
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._QAs1 = new EntitySet<QA>(new Action<QA>(this.attach_QAs1), new Action<QA>(this.detach_QAs1));
			this._DrugAllergies = new EntitySet<DrugAllergy>(new Action<DrugAllergy>(this.attach_DrugAllergies), new Action<DrugAllergy>(this.detach_DrugAllergies));
			this._DrugHistories = new EntitySet<DrugHistory>(new Action<DrugHistory>(this.attach_DrugHistories), new Action<DrugHistory>(this.detach_DrugHistories));
			this._FavoriteServices = new EntitySet<FavoriteService>(new Action<FavoriteService>(this.attach_FavoriteServices), new Action<FavoriteService>(this.detach_FavoriteServices));
			this._PatternMs = new EntitySet<PatternM>(new Action<PatternM>(this.attach_PatternMs), new Action<PatternM>(this.detach_PatternMs));
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._LabTestGroups = new EntitySet<LabTestGroup>(new Action<LabTestGroup>(this.attach_LabTestGroups), new Action<LabTestGroup>(this.detach_LabTestGroups));
			this._SpecialityDrugs = new EntitySet<SpecialityDrug>(new Action<SpecialityDrug>(this.attach_SpecialityDrugs), new Action<SpecialityDrug>(this.detach_SpecialityDrugs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._LaboratoryServiceDetail = default(EntityRef<LaboratoryServiceDetail>);
			this._Service1 = default(EntityRef<Service>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldParentID", DbType="Int")]
		public System.Nullable<int> OldParentID
		{
			get
			{
				return this._OldParentID;
			}
			set
			{
				if ((this._OldParentID != value))
				{
					this.OnOldParentIDChanging(value);
					this.SendPropertyChanging();
					this._OldParentID = value;
					this.SendPropertyChanged("OldParentID");
					this.OnOldParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_En", DbType="NVarChar(MAX)")]
		public string Name_En
		{
			get
			{
				return this._Name_En;
			}
			set
			{
				if ((this._Name_En != value))
				{
					this.OnName_EnChanging(value);
					this.SendPropertyChanging();
					this._Name_En = value;
					this.SendPropertyChanged("Name_En");
					this.OnName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this.OnCaliforniaCodeChanging(value);
					this.SendPropertyChanging();
					this._CaliforniaCode = value;
					this.SendPropertyChanged("CaliforniaCode");
					this.OnCaliforniaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this.OnShapeChanging(value);
					this.SendPropertyChanging();
					this._Shape = value;
					this.SendPropertyChanged("Shape");
					this.OnShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFav", DbType="Bit NOT NULL")]
		public bool EmergencyFav
		{
			get
			{
				return this._EmergencyFav;
			}
			set
			{
				if ((this._EmergencyFav != value))
				{
					this.OnEmergencyFavChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFav = value;
					this.SendPropertyChanged("EmergencyFav");
					this.OnEmergencyFavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicK", DbType="Float")]
		public System.Nullable<double> BasicK
		{
			get
			{
				return this._BasicK;
			}
			set
			{
				if ((this._BasicK != value))
				{
					this.OnBasicKChanging(value);
					this.SendPropertyChanging();
					this._BasicK = value;
					this.SendPropertyChanged("BasicK");
					this.OnBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementBasicK", DbType="Float")]
		public System.Nullable<double> SupplementBasicK
		{
			get
			{
				return this._SupplementBasicK;
			}
			set
			{
				if ((this._SupplementBasicK != value))
				{
					this.OnSupplementBasicKChanging(value);
					this.SendPropertyChanging();
					this._SupplementBasicK = value;
					this.SendPropertyChanged("SupplementBasicK");
					this.OnSupplementBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetireeID", DbType="Int")]
		public System.Nullable<int> RetireeID
		{
			get
			{
				return this._RetireeID;
			}
			set
			{
				if ((this._RetireeID != value))
				{
					this.OnRetireeIDChanging(value);
					this.SendPropertyChanging();
					this._RetireeID = value;
					this.SendPropertyChanged("RetireeID");
					this.OnRetireeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorK", DbType="Float")]
		public System.Nullable<double> DoctorK
		{
			get
			{
				return this._DoctorK;
			}
			set
			{
				if ((this._DoctorK != value))
				{
					this.OnDoctorKChanging(value);
					this.SendPropertyChanging();
					this._DoctorK = value;
					this.SendPropertyChanged("DoctorK");
					this.OnDoctorKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorServiceCategory", DbType="Int")]
		public System.Nullable<int> DoctorServiceCategory
		{
			get
			{
				return this._DoctorServiceCategory;
			}
			set
			{
				if ((this._DoctorServiceCategory != value))
				{
					this.OnDoctorServiceCategoryChanging(value);
					this.SendPropertyChanging();
					this._DoctorServiceCategory = value;
					this.SendPropertyChanged("DoctorServiceCategory");
					this.OnDoctorServiceCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMeasurement", DbType="Int")]
		public System.Nullable<int> IDMeasurement
		{
			get
			{
				return this._IDMeasurement;
			}
			set
			{
				if ((this._IDMeasurement != value))
				{
					this.OnIDMeasurementChanging(value);
					this.SendPropertyChanging();
					this._IDMeasurement = value;
					this.SendPropertyChanged("IDMeasurement");
					this.OnIDMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMUserIFullName", DbType="NVarChar(50)")]
		public string LastMUserIFullName
		{
			get
			{
				return this._LastMUserIFullName;
			}
			set
			{
				if ((this._LastMUserIFullName != value))
				{
					this.OnLastMUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastMUserIFullName = value;
					this.SendPropertyChanged("LastMUserIFullName");
					this.OnLastMUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserIFullName", DbType="NVarChar(50)")]
		public string CreationUserIFullName
		{
			get
			{
				return this._CreationUserIFullName;
			}
			set
			{
				if ((this._CreationUserIFullName != value))
				{
					this.OnCreationUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreationUserIFullName = value;
					this.SendPropertyChanged("CreationUserIFullName");
					this.OnCreationUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugCount", DbType="Bit NOT NULL")]
		public bool DrugCount
		{
			get
			{
				return this._DrugCount;
			}
			set
			{
				if ((this._DrugCount != value))
				{
					this.OnDrugCountChanging(value);
					this.SendPropertyChanging();
					this._DrugCount = value;
					this.SendPropertyChanged("DrugCount");
					this.OnDrugCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugDeleted", DbType="Bit NOT NULL")]
		public bool DrugDeleted
		{
			get
			{
				return this._DrugDeleted;
			}
			set
			{
				if ((this._DrugDeleted != value))
				{
					this.OnDrugDeletedChanging(value);
					this.SendPropertyChanging();
					this._DrugDeleted = value;
					this.SendPropertyChanged("DrugDeleted");
					this.OnDrugDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATACode", DbType="BigInt")]
		public System.Nullable<long> SATACode
		{
			get
			{
				return this._SATACode;
			}
			set
			{
				if ((this._SATACode != value))
				{
					this.OnSATACodeChanging(value);
					this.SendPropertyChanging();
					this._SATACode = value;
					this.SendPropertyChanged("SATACode");
					this.OnSATACodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Diet", Storage="_Diets", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Diet> Diets
		{
			get
			{
				return this._Diets;
			}
			set
			{
				this._Diets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenDrug", Storage="_GivenDrugs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenDrug> GivenDrugs
		{
			get
			{
				return this._GivenDrugs;
			}
			set
			{
				this._GivenDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_QAs", ThisKey="ID", OtherKey="QuestionnariID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_QAs1", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<QA> QAs1
		{
			get
			{
				return this._QAs1;
			}
			set
			{
				this._QAs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy", Storage="_DrugAllergies", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugAllergy> DrugAllergies
		{
			get
			{
				return this._DrugAllergies;
			}
			set
			{
				this._DrugAllergies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory", Storage="_DrugHistories", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugHistory> DrugHistories
		{
			get
			{
				return this._DrugHistories;
			}
			set
			{
				this._DrugHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FavoriteService", Storage="_FavoriteServices", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<FavoriteService> FavoriteServices
		{
			get
			{
				return this._FavoriteServices;
			}
			set
			{
				this._FavoriteServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_PatternMs", ThisKey="ID", OtherKey="ServiceMID")]
		public EntitySet<PatternM> PatternMs
		{
			get
			{
				return this._PatternMs;
			}
			set
			{
				this._PatternMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="ServiceDID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LabTestGroup", Storage="_LabTestGroups", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<LabTestGroup> LabTestGroups
		{
			get
			{
				return this._LabTestGroups;
			}
			set
			{
				this._LabTestGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SpecialityDrug", Storage="_SpecialityDrugs", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<SpecialityDrug> SpecialityDrugs
		{
			get
			{
				return this._SpecialityDrugs;
			}
			set
			{
				this._SpecialityDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Departments", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Services", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LaboratoryServiceDetail", Storage="_LaboratoryServiceDetail", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public LaboratoryServiceDetail LaboratoryServiceDetail
		{
			get
			{
				return this._LaboratoryServiceDetail.Entity;
			}
			set
			{
				LaboratoryServiceDetail previousValue = this._LaboratoryServiceDetail.Entity;
				if (((previousValue != value) 
							|| (this._LaboratoryServiceDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LaboratoryServiceDetail.Entity = null;
						previousValue.Service = null;
					}
					this._LaboratoryServiceDetail.Entity = value;
					if ((value != null))
					{
						value.Service = this;
					}
					this.SendPropertyChanged("LaboratoryServiceDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_ServiceCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private bool _Priority;
		
		private System.Nullable<System.Guid> _DestinationWard;
		
		private string _SuggestedDate;
		
		private string _SuggestedTime;
		
		private string _StartDateLicense;
		
		private string _EndDateLicense;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private int _AdmitDateCount;
		
		private string _Comment;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnDestinationWardChanging(System.Nullable<System.Guid> value);
    partial void OnDestinationWardChanged();
    partial void OnSuggestedDateChanging(string value);
    partial void OnSuggestedDateChanged();
    partial void OnSuggestedTimeChanging(string value);
    partial void OnSuggestedTimeChanged();
    partial void OnStartDateLicenseChanging(string value);
    partial void OnStartDateLicenseChanged();
    partial void OnEndDateLicenseChanging(string value);
    partial void OnEndDateLicenseChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnAdmitDateCountChanging(int value);
    partial void OnAdmitDateCountChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Reference()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationWard", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DestinationWard
		{
			get
			{
				return this._DestinationWard;
			}
			set
			{
				if ((this._DestinationWard != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationWardChanging(value);
					this.SendPropertyChanging();
					this._DestinationWard = value;
					this.SendPropertyChanged("DestinationWard");
					this.OnDestinationWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedDate", DbType="NVarChar(10)")]
		public string SuggestedDate
		{
			get
			{
				return this._SuggestedDate;
			}
			set
			{
				if ((this._SuggestedDate != value))
				{
					this.OnSuggestedDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestedDate = value;
					this.SendPropertyChanged("SuggestedDate");
					this.OnSuggestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedTime", DbType="NVarChar(8)")]
		public string SuggestedTime
		{
			get
			{
				return this._SuggestedTime;
			}
			set
			{
				if ((this._SuggestedTime != value))
				{
					this.OnSuggestedTimeChanging(value);
					this.SendPropertyChanging();
					this._SuggestedTime = value;
					this.SendPropertyChanged("SuggestedTime");
					this.OnSuggestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateLicense", DbType="NVarChar(10)")]
		public string StartDateLicense
		{
			get
			{
				return this._StartDateLicense;
			}
			set
			{
				if ((this._StartDateLicense != value))
				{
					this.OnStartDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._StartDateLicense = value;
					this.SendPropertyChanged("StartDateLicense");
					this.OnStartDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateLicense", DbType="NVarChar(10)")]
		public string EndDateLicense
		{
			get
			{
				return this._EndDateLicense;
			}
			set
			{
				if ((this._EndDateLicense != value))
				{
					this.OnEndDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._EndDateLicense = value;
					this.SendPropertyChanged("EndDateLicense");
					this.OnEndDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDateCount", DbType="Int NOT NULL")]
		public int AdmitDateCount
		{
			get
			{
				return this._AdmitDateCount;
			}
			set
			{
				if ((this._AdmitDateCount != value))
				{
					this.OnAdmitDateCountChanging(value);
					this.SendPropertyChanging();
					this._AdmitDateCount = value;
					this.SendPropertyChanged("AdmitDateCount");
					this.OnAdmitDateCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RefrenceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_Department", ThisKey="DestinationWard", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._DestinationWard = value.ID;
					}
					else
					{
						this._DestinationWard = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_Department1", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.References1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.References1.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.References.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewLabGroupby")]
	public partial class ViewLabGroupby
	{
		
		private System.Nullable<System.Guid> _PersonID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _GroupID;
		
		private string _GroupName;
		
		private System.Guid _GivenServiceMID;
		
		private string _EName;
		
		public ViewLabGroupby()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					this._GivenServiceMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(50)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this._EName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LaboratoryServiceDetail")]
	public partial class LaboratoryServiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _TestCode;
		
		private System.Nullable<bool> _TestOnly;
		
		private System.Nullable<short> _TestNo;
		
		private string _MeasurementUnit;
		
		private string _AbbreviationName;
		
		private string _TestType;
		
		private string _UpperBound;
		
		private string _LowerBound;
		
		private string _NormalRange;
		
		private bool _Show;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _OldGroupID;
		
		private EntityRef<LabGroup> _LabGroup;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTestCodeChanging(int value);
    partial void OnTestCodeChanged();
    partial void OnTestOnlyChanging(System.Nullable<bool> value);
    partial void OnTestOnlyChanged();
    partial void OnTestNoChanging(System.Nullable<short> value);
    partial void OnTestNoChanged();
    partial void OnMeasurementUnitChanging(string value);
    partial void OnMeasurementUnitChanged();
    partial void OnAbbreviationNameChanging(string value);
    partial void OnAbbreviationNameChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnUpperBoundChanging(string value);
    partial void OnUpperBoundChanged();
    partial void OnLowerBoundChanging(string value);
    partial void OnLowerBoundChanged();
    partial void OnNormalRangeChanging(string value);
    partial void OnNormalRangeChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnOldGroupIDChanging(System.Nullable<int> value);
    partial void OnOldGroupIDChanged();
    #endregion
		
		public LaboratoryServiceDetail()
		{
			this._LabGroup = default(EntityRef<LabGroup>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCode", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TestCode
		{
			get
			{
				return this._TestCode;
			}
			set
			{
				if ((this._TestCode != value))
				{
					this.OnTestCodeChanging(value);
					this.SendPropertyChanging();
					this._TestCode = value;
					this.SendPropertyChanged("TestCode");
					this.OnTestCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestOnly", DbType="Bit")]
		public System.Nullable<bool> TestOnly
		{
			get
			{
				return this._TestOnly;
			}
			set
			{
				if ((this._TestOnly != value))
				{
					this.OnTestOnlyChanging(value);
					this.SendPropertyChanging();
					this._TestOnly = value;
					this.SendPropertyChanged("TestOnly");
					this.OnTestOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNo", DbType="SmallInt")]
		public System.Nullable<short> TestNo
		{
			get
			{
				return this._TestNo;
			}
			set
			{
				if ((this._TestNo != value))
				{
					this.OnTestNoChanging(value);
					this.SendPropertyChanging();
					this._TestNo = value;
					this.SendPropertyChanged("TestNo");
					this.OnTestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnit", DbType="NVarChar(50)")]
		public string MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit;
			}
			set
			{
				if ((this._MeasurementUnit != value))
				{
					this.OnMeasurementUnitChanging(value);
					this.SendPropertyChanging();
					this._MeasurementUnit = value;
					this.SendPropertyChanged("MeasurementUnit");
					this.OnMeasurementUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbbreviationName", DbType="NVarChar(50)")]
		public string AbbreviationName
		{
			get
			{
				return this._AbbreviationName;
			}
			set
			{
				if ((this._AbbreviationName != value))
				{
					this.OnAbbreviationNameChanging(value);
					this.SendPropertyChanging();
					this._AbbreviationName = value;
					this.SendPropertyChanged("AbbreviationName");
					this.OnAbbreviationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="NVarChar(20)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperBound", DbType="NVarChar(50)")]
		public string UpperBound
		{
			get
			{
				return this._UpperBound;
			}
			set
			{
				if ((this._UpperBound != value))
				{
					this.OnUpperBoundChanging(value);
					this.SendPropertyChanging();
					this._UpperBound = value;
					this.SendPropertyChanged("UpperBound");
					this.OnUpperBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerBound", DbType="NVarChar(50)")]
		public string LowerBound
		{
			get
			{
				return this._LowerBound;
			}
			set
			{
				if ((this._LowerBound != value))
				{
					this.OnLowerBoundChanging(value);
					this.SendPropertyChanging();
					this._LowerBound = value;
					this.SendPropertyChanged("LowerBound");
					this.OnLowerBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this.OnNormalRangeChanging(value);
					this.SendPropertyChanging();
					this._NormalRange = value;
					this.SendPropertyChanged("NormalRange");
					this.OnNormalRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._LabGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldGroupID", DbType="Int")]
		public System.Nullable<int> OldGroupID
		{
			get
			{
				return this._OldGroupID;
			}
			set
			{
				if ((this._OldGroupID != value))
				{
					this.OnOldGroupIDChanging(value);
					this.SendPropertyChanging();
					this._OldGroupID = value;
					this.SendPropertyChanged("OldGroupID");
					this.OnOldGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LaboratoryServiceDetail", Storage="_LabGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public LabGroup LabGroup
		{
			get
			{
				return this._LabGroup.Entity;
			}
			set
			{
				LabGroup previousValue = this._LabGroup.Entity;
				if (((previousValue != value) 
							|| (this._LabGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabGroup.Entity = null;
						previousValue.LaboratoryServiceDetails.Remove(this);
					}
					this._LabGroup.Entity = value;
					if ((value != null))
					{
						value.LaboratoryServiceDetails.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LaboratoryServiceDetail", Storage="_Service", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LaboratoryServiceDetail = null;
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LaboratoryServiceDetail = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EmergencyNursePatientList")]
	public partial class View_EmergencyNursePatientList
	{
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private System.Nullable<System.Guid> _PaymentID;
		
		private System.Nullable<int> _AdmitUserID;
		
		private string _CreatorUserFullname;
		
		private System.Nullable<bool> _HasImage;
		
		private System.Nullable<System.DateTime> _CheckImage;
		
		private bool _WardEdit;
		
		private bool _ShowForNurse;
		
		private string _FullName;
		
		private string _PersonalCode;
		
		private string _NationalCode;
		
		public View_EmergencyNursePatientList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					this._RequestStaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					this._InsuranceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this._ShiftID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					this._AgendaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this._RoomNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					this._PeriodicCalendeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					this._FunctorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					this._TechnicianID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					this._PhysioOrderMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					this._BedID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					this._VisitType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this._RequestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this._NumberOfOrgans = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this._RequestedTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)")]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this._BookletType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)")]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this._BookletDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this._BookletExpireDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this._AnsweringDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)")]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this._TurningDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)")]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this._TurningTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)")]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this._BookletSerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)")]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this._BookletPageNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this._PayedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)")]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this._SendToDrTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL")]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this._SendToDr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this._Admitted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this._ConfirmDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this._ConfirmTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this._Payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL")]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this._RemissionStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL")]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this._Screening = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this._Cancelled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this._Reflected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int")]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this._DailySN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this._CreatorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this._CreationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this._LastModificator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this._LastModificationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this._LastModificationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)")]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this._ComplementInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)")]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this._ComplementInsuranceNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					this._RefrenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL")]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this._Portable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float")]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this._ConfirmFinanceSumK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)")]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this._AdmissionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this._PaymentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUserID", DbType="Int")]
		public System.Nullable<int> AdmitUserID
		{
			get
			{
				return this._AdmitUserID;
			}
			set
			{
				if ((this._AdmitUserID != value))
				{
					this._AdmitUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this._CreatorUserFullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasImage", DbType="Bit")]
		public System.Nullable<bool> HasImage
		{
			get
			{
				return this._HasImage;
			}
			set
			{
				if ((this._HasImage != value))
				{
					this._HasImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckImage", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CheckImage
		{
			get
			{
				return this._CheckImage;
			}
			set
			{
				if ((this._CheckImage != value))
				{
					this._CheckImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardEdit", DbType="Bit NOT NULL")]
		public bool WardEdit
		{
			get
			{
				return this._WardEdit;
			}
			set
			{
				if ((this._WardEdit != value))
				{
					this._WardEdit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForNurse", DbType="Bit NOT NULL")]
		public bool ShowForNurse
		{
			get
			{
				return this._ShowForNurse;
			}
			set
			{
				if ((this._ShowForNurse != value))
				{
					this._ShowForNurse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(201)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmergencyWarning")]
	public partial class EmergencyWarning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private bool _Drug;
		
		private System.Nullable<int> _DrugTime;
		
		private bool _IVTraphy;
		
		private System.Nullable<int> _IVTraphyTime;
		
		private bool _Test;
		
		private System.Nullable<int> _TestTime;
		
		private bool _Diag;
		
		private System.Nullable<int> _DiagTime;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugChanging(bool value);
    partial void OnDrugChanged();
    partial void OnDrugTimeChanging(System.Nullable<int> value);
    partial void OnDrugTimeChanged();
    partial void OnIVTraphyChanging(bool value);
    partial void OnIVTraphyChanged();
    partial void OnIVTraphyTimeChanging(System.Nullable<int> value);
    partial void OnIVTraphyTimeChanged();
    partial void OnTestChanging(bool value);
    partial void OnTestChanged();
    partial void OnTestTimeChanging(System.Nullable<int> value);
    partial void OnTestTimeChanged();
    partial void OnDiagChanging(bool value);
    partial void OnDiagChanged();
    partial void OnDiagTimeChanging(System.Nullable<int> value);
    partial void OnDiagTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public EmergencyWarning()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drug", DbType="Bit NOT NULL")]
		public bool Drug
		{
			get
			{
				return this._Drug;
			}
			set
			{
				if ((this._Drug != value))
				{
					this.OnDrugChanging(value);
					this.SendPropertyChanging();
					this._Drug = value;
					this.SendPropertyChanged("Drug");
					this.OnDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTime", DbType="Int")]
		public System.Nullable<int> DrugTime
		{
			get
			{
				return this._DrugTime;
			}
			set
			{
				if ((this._DrugTime != value))
				{
					this.OnDrugTimeChanging(value);
					this.SendPropertyChanging();
					this._DrugTime = value;
					this.SendPropertyChanged("DrugTime");
					this.OnDrugTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVTraphy", DbType="Bit NOT NULL")]
		public bool IVTraphy
		{
			get
			{
				return this._IVTraphy;
			}
			set
			{
				if ((this._IVTraphy != value))
				{
					this.OnIVTraphyChanging(value);
					this.SendPropertyChanging();
					this._IVTraphy = value;
					this.SendPropertyChanged("IVTraphy");
					this.OnIVTraphyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVTraphyTime", DbType="Int")]
		public System.Nullable<int> IVTraphyTime
		{
			get
			{
				return this._IVTraphyTime;
			}
			set
			{
				if ((this._IVTraphyTime != value))
				{
					this.OnIVTraphyTimeChanging(value);
					this.SendPropertyChanging();
					this._IVTraphyTime = value;
					this.SendPropertyChanged("IVTraphyTime");
					this.OnIVTraphyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test", DbType="Bit NOT NULL")]
		public bool Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this.OnTestChanging(value);
					this.SendPropertyChanging();
					this._Test = value;
					this.SendPropertyChanged("Test");
					this.OnTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTime", DbType="Int")]
		public System.Nullable<int> TestTime
		{
			get
			{
				return this._TestTime;
			}
			set
			{
				if ((this._TestTime != value))
				{
					this.OnTestTimeChanging(value);
					this.SendPropertyChanging();
					this._TestTime = value;
					this.SendPropertyChanged("TestTime");
					this.OnTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diag", DbType="Bit NOT NULL")]
		public bool Diag
		{
			get
			{
				return this._Diag;
			}
			set
			{
				if ((this._Diag != value))
				{
					this.OnDiagChanging(value);
					this.SendPropertyChanging();
					this._Diag = value;
					this.SendPropertyChanged("Diag");
					this.OnDiagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiagTime", DbType="Int")]
		public System.Nullable<int> DiagTime
		{
			get
			{
				return this._DiagTime;
			}
			set
			{
				if ((this._DiagTime != value))
				{
					this.OnDiagTimeChanging(value);
					this.SendPropertyChanging();
					this._DiagTime = value;
					this.SendPropertyChanged("DiagTime");
					this.OnDiagTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="VarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="VarChar(5)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_CareGSD")]
	public partial class Vw_CareGSD
	{
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private double _Amount;
		
		private string _Name;
		
		public Vw_CareGSD()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					this._GivenServiceMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_CareGSM")]
	public partial class Vw_CareGSM
	{
		
		private string _MedicalID;
		
		private string _Person;
		
		private string _Doctor;
		
		private System.Nullable<long> _DossierID;
		
		private string _Name;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private System.Guid _ID;
		
		private System.Guid _PersonID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		public Vw_CareGSM()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="NVarChar(201)")]
		public string Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this._Person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this._RequestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
	}
	
	public partial class Spu_FullLabHistoryResult
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _MedicalID;
		
		private string _Doctor;
		
		private string _Abbr;
		
		private string _Result;
		
		private string _NormalRange;
		
		private string _AdmitDate;
		
		private string _EName;
		
		private string _Cdate;
		
		private string _ID;
		
		public Spu_FullLabHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(12)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbr", DbType="NVarChar(50)")]
		public string Abbr
		{
			get
			{
				return this._Abbr;
			}
			set
			{
				if ((this._Abbr != value))
				{
					this._Abbr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(500)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this._NormalRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(50)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this._EName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cdate", DbType="NVarChar(10)")]
		public string Cdate
		{
			get
			{
				return this._Cdate;
			}
			set
			{
				if ((this._Cdate != value))
				{
					this._Cdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class Spu_DrugHistoryResult
	{
		
		private string _Code;
		
		private string _HIX;
		
		private string _Doctor;
		
		private string _DrugName;
		
		private string _NationalCode;
		
		private string _MedicalID;
		
		private string _Comment;
		
		private System.Nullable<double> _Amount;
		
		private string _Speciality;
		
		private string _Date;
		
		public Spu_DrugHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIX", DbType="NVarChar(1000)")]
		public string HIX
		{
			get
			{
				return this._HIX;
			}
			set
			{
				if ((this._HIX != value))
				{
					this._HIX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="NVarChar(MAX)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(12)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(20)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	public partial class Spu_DiagnosticService_HistoryResult
	{
		
		private int _SerialNumber;
		
		private string _person;
		
		private string _NationalCode;
		
		private string _Doctor;
		
		private string _service;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _Note;
		
		private string _CDate;
		
		private string _CTime;
		
		public Spu_DiagnosticService_HistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person", DbType="NVarChar(201)")]
		public string person
		{
			get
			{
				return this._person;
			}
			set
			{
				if ((this._person != value))
				{
					this._person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(201)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service", DbType="NVarChar(MAX)")]
		public string service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					this._service = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(10)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDate", DbType="NVarChar(10)")]
		public string CDate
		{
			get
			{
				return this._CDate;
			}
			set
			{
				if ((this._CDate != value))
				{
					this._CDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTime", DbType="NVarChar(10)")]
		public string CTime
		{
			get
			{
				return this._CTime;
			}
			set
			{
				if ((this._CTime != value))
				{
					this._CTime = value;
				}
			}
		}
	}
	
	public partial class Spu_AllDBPersonResult
	{
		
		private string _NationalCode;
		
		private string _PersonnelNo;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _HomePhone;
		
		private string _InsureName;
		
		private string _InsuranceNo;
		
		private string _ExpDate;
		
		private System.Nullable<byte> _Sex;
		
		private string _Note;
		
		private string _HomeCity;
		
		private string _HomeAddress;
		
		private System.Nullable<byte> _IDMaritalStatus;
		
		private byte _IDManagement;
		
		private short _IDCompany;
		
		private short _IDSubCompany;
		
		private System.Data.Linq.Binary _Photo;
		
		public Spu_AllDBPersonResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="NVarChar(25)")]
		public string PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(35)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(25)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsureName
		{
			get
			{
				return this._InsureName;
			}
			set
			{
				if ((this._InsureName != value))
				{
					this._InsureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this._ExpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="TinyInt")]
		public System.Nullable<byte> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeCity", DbType="NVarChar(30)")]
		public string HomeCity
		{
			get
			{
				return this._HomeCity;
			}
			set
			{
				if ((this._HomeCity != value))
				{
					this._HomeCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaritalStatus", DbType="TinyInt")]
		public System.Nullable<byte> IDMaritalStatus
		{
			get
			{
				return this._IDMaritalStatus;
			}
			set
			{
				if ((this._IDMaritalStatus != value))
				{
					this._IDMaritalStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="TinyInt NOT NULL")]
		public byte IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt NOT NULL")]
		public short IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="SmallInt NOT NULL")]
		public short IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image")]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
	}
	
	public partial class Spu_AllDBPerson_insureResult
	{
		
		private string _NationalCode;
		
		private string _PersonnelNo;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _HomePhone;
		
		private string _InsureName;
		
		private string _InsuranceNo;
		
		private string _ExpDate;
		
		public Spu_AllDBPerson_insureResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="NVarChar(25)")]
		public string PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(35)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(25)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsureName
		{
			get
			{
				return this._InsureName;
			}
			set
			{
				if ((this._InsureName != value))
				{
					this._InsureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this._ExpDate = value;
				}
			}
		}
	}
	
	public partial class Spu_AllDBPersoninsuerResult
	{
		
		private string _NationalCode;
		
		private string _PersonnelNo;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _HomePhone;
		
		private string _InsureName;
		
		private string _InsuranceNo;
		
		private string _ExpDate;
		
		public Spu_AllDBPersoninsuerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="NVarChar(25)")]
		public string PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(35)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(25)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsureName
		{
			get
			{
				return this._InsureName;
			}
			set
			{
				if ((this._InsureName != value))
				{
					this._InsureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this._ExpDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
