#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCISCash.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hcis")]
	public partial class HCISCashDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertTariff(Tariff instance);
    partial void UpdateTariff(Tariff instance);
    partial void DeleteTariff(Tariff instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertServiceCategory(ServiceCategory instance);
    partial void UpdateServiceCategory(ServiceCategory instance);
    partial void DeleteServiceCategory(ServiceCategory instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertDischarge(Discharge instance);
    partial void UpdateDischarge(Discharge instance);
    partial void DeleteDischarge(Discharge instance);
    partial void InsertExeption(Exeption instance);
    partial void UpdateExeption(Exeption instance);
    partial void DeleteExeption(Exeption instance);
    partial void InsertSystemError(SystemError instance);
    partial void UpdateSystemError(SystemError instance);
    partial void DeleteSystemError(SystemError instance);
    partial void InsertGivenServiceM(GivenServiceM instance);
    partial void UpdateGivenServiceM(GivenServiceM instance);
    partial void DeleteGivenServiceM(GivenServiceM instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertGivenServiceD(GivenServiceD instance);
    partial void UpdateGivenServiceD(GivenServiceD instance);
    partial void DeleteGivenServiceD(GivenServiceD instance);
    partial void InsertBilling(Billing instance);
    partial void UpdateBilling(Billing instance);
    partial void DeleteBilling(Billing instance);
    partial void InsertInsurance(Insurance instance);
    partial void UpdateInsurance(Insurance instance);
    partial void DeleteInsurance(Insurance instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    #endregion
		
		public HCISCashDataContextDataContext() : 
				base(global::HCISCash.Properties.Settings.Default.hcisConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public HCISCashDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISCashDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISCashDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISCashDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<Tariff> Tariffs
		{
			get
			{
				return this.GetTable<Tariff>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<View_Dossier> View_Dossiers
		{
			get
			{
				return this.GetTable<View_Dossier>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCategory> ServiceCategories
		{
			get
			{
				return this.GetTable<ServiceCategory>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<ViewAngioBill> ViewAngioBills
		{
			get
			{
				return this.GetTable<ViewAngioBill>();
			}
		}
		
		public System.Data.Linq.Table<Discharge> Discharges
		{
			get
			{
				return this.GetTable<Discharge>();
			}
		}
		
		public System.Data.Linq.Table<Exeption> Exeptions
		{
			get
			{
				return this.GetTable<Exeption>();
			}
		}
		
		public System.Data.Linq.Table<Vw_KhadamatTashkhisi> Vw_KhadamatTashkhisis
		{
			get
			{
				return this.GetTable<Vw_KhadamatTashkhisi>();
			}
		}
		
		public System.Data.Linq.Table<View_RetireeBastari> View_RetireeBastaris
		{
			get
			{
				return this.GetTable<View_RetireeBastari>();
			}
		}
		
		public System.Data.Linq.Table<SystemError> SystemErrors
		{
			get
			{
				return this.GetTable<SystemError>();
			}
		}
		
		public System.Data.Linq.Table<Vw_SystemErrorRpt> Vw_SystemErrorRpts
		{
			get
			{
				return this.GetTable<Vw_SystemErrorRpt>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosFinance> Vw_DosFinances
		{
			get
			{
				return this.GetTable<Vw_DosFinance>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this.GetTable<GivenServiceM>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosForSepa> Vw_DosForSepas
		{
			get
			{
				return this.GetTable<Vw_DosForSepa>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosseirPayment> Vw_DosseirPayments
		{
			get
			{
				return this.GetTable<Vw_DosseirPayment>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosFinanceSB> Vw_DosFinanceSBs
		{
			get
			{
				return this.GetTable<Vw_DosFinanceSB>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this.GetTable<GivenServiceD>();
			}
		}
		
		public System.Data.Linq.Table<Billing> Billings
		{
			get
			{
				return this.GetTable<Billing>();
			}
		}
		
		public System.Data.Linq.Table<View_EzamiBastariNew> View_EzamiBastariNews
		{
			get
			{
				return this.GetTable<View_EzamiBastariNew>();
			}
		}
		
		public System.Data.Linq.Table<VwPersonsCompany> VwPersonsCompanies
		{
			get
			{
				return this.GetTable<VwPersonsCompany>();
			}
		}
		
		public System.Data.Linq.Table<View_IMPHO_Person> View_IMPHO_Persons
		{
			get
			{
				return this.GetTable<View_IMPHO_Person>();
			}
		}
		
		public System.Data.Linq.Table<ViewFinalSurgicalUnit> ViewFinalSurgicalUnits
		{
			get
			{
				return this.GetTable<ViewFinalSurgicalUnit>();
			}
		}
		
		public System.Data.Linq.Table<ViewSurgeryBill> ViewSurgeryBills
		{
			get
			{
				return this.GetTable<ViewSurgeryBill>();
			}
		}
		
		public System.Data.Linq.Table<ViewAnesthesiaBill> ViewAnesthesiaBills
		{
			get
			{
				return this.GetTable<ViewAnesthesiaBill>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DrugEzami> Vw_DrugEzamis
		{
			get
			{
				return this.GetTable<Vw_DrugEzami>();
			}
		}
		
		public System.Data.Linq.Table<Insurance> Insurances
		{
			get
			{
				return this.GetTable<Insurance>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossiers
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DossierBastari> Vw_DossierBastaris
		{
			get
			{
				return this.GetTable<Vw_DossierBastari>();
			}
		}
		
		public System.Data.Linq.Table<Vw_CashPay> Vw_CashPays
		{
			get
			{
				return this.GetTable<Vw_CashPay>();
			}
		}
		
		public System.Data.Linq.Table<Vw_OutDoorPatinetByInsurance> Vw_OutDoorPatinetByInsurances
		{
			get
			{
				return this.GetTable<Vw_OutDoorPatinetByInsurance>();
			}
		}
		
		public System.Data.Linq.Table<View_FalateghareSarepaei> View_FalateghareSarepaeis
		{
			get
			{
				return this.GetTable<View_FalateghareSarepaei>();
			}
		}
		
		public System.Data.Linq.Table<View_AllInsureBastari> View_AllInsureBastaris
		{
			get
			{
				return this.GetTable<View_AllInsureBastari>();
			}
		}
		
		public System.Data.Linq.Table<View_FalateghareSarepaei1> View_FalateghareSarepaei1s
		{
			get
			{
				return this.GetTable<View_FalateghareSarepaei1>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExtendedSearch")]
		public ISingleResult<ExtendedSearchResult> ExtendedSearch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NationalCode", DbType="NVarChar(10)")] string nationalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FatherName", DbType="NVarChar(50)")] string fatherName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identity", DbType="NVarChar(10)")] string identity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonalCode", DbType="NVarChar(10)")] string personalCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nationalCode, firstName, lastName, fatherName, identity, personalCode);
			return ((ISingleResult<ExtendedSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsChildLabService", IsComposable=true)]
		public System.Nullable<bool> IsChildLabService([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> mID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> dID)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mID, dID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FindInsure", IsComposable=true)]
		public System.Nullable<short> FindInsure([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalID", DbType="NVarChar(13)")] string medicalID)
		{
			return ((System.Nullable<short>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicalID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Func_DischargeDepName", IsComposable=true)]
		public string Func_DischargeDepName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> dossier)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dossier).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Func_FindResidentDate", IsComposable=true)]
		public string Func_FindResidentDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> dossier)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dossier).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _StaffID;
		
		private int _ShiftID;
		
		private string _Date;
		
		private System.Nullable<int> _Capacity;
		
		private string _BeginTime;
		
		private string _EndTime;
		
		private string _Comment;
		
		private System.Guid _DepartmentID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public Agenda()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Staff = default(EntityRef<Staff>);
			this._Department = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="NChar(5)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="AgendaID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private string _SuggestedDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnSuggestedDateChanging(string value);
    partial void OnSuggestedDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public Reference()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Speciality = default(EntityRef<Speciality>);
			this._Staff = default(EntityRef<Staff>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedDate", DbType="NVarChar(10)")]
		public string SuggestedDate
		{
			get
			{
				return this._SuggestedDate;
			}
			set
			{
				if ((this._SuggestedDate != value))
				{
					this.OnSuggestedDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestedDate = value;
					this.SendPropertyChanged("SuggestedDate");
					this.OnSuggestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RefrenceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Reference", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.References.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariff")]
	public partial class Tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<decimal> _FreePrice;
		
		private System.Nullable<decimal> _GovernmentalPrice;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Insurance> _Insurance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPatientShareChanging(System.Nullable<decimal> value);
    partial void OnPatientShareChanged();
    partial void OnOrganizationShareChanging(System.Nullable<decimal> value);
    partial void OnOrganizationShareChanged();
    partial void OnFreePriceChanging(System.Nullable<decimal> value);
    partial void OnFreePriceChanged();
    partial void OnGovernmentalPriceChanging(System.Nullable<decimal> value);
    partial void OnGovernmentalPriceChanged();
    #endregion
		
		public Tariff()
		{
			this._Service = default(EntityRef<Service>);
			this._Insurance = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this.OnOrganizationShareChanging(value);
					this.SendPropertyChanging();
					this._OrganizationShare = value;
					this.SendPropertyChanged("OrganizationShare");
					this.OnOrganizationShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreePrice", DbType="Money")]
		public System.Nullable<decimal> FreePrice
		{
			get
			{
				return this._FreePrice;
			}
			set
			{
				if ((this._FreePrice != value))
				{
					this.OnFreePriceChanging(value);
					this.SendPropertyChanging();
					this._FreePrice = value;
					this.SendPropertyChanged("FreePrice");
					this.OnFreePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentalPrice", DbType="Money")]
		public System.Nullable<decimal> GovernmentalPrice
		{
			get
			{
				return this._GovernmentalPrice;
			}
			set
			{
				if ((this._GovernmentalPrice != value))
				{
					this.OnGovernmentalPriceChanging(value);
					this.SendPropertyChanging();
					this._GovernmentalPrice = value;
					this.SendPropertyChanged("GovernmentalPrice");
					this.OnGovernmentalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Comment;
		
		private string _ChiefComplaint;
		
		private string _Ago;
		
		private System.Nullable<short> _Since;
		
		private string _AccompanyingDocument;
		
		private System.Nullable<bool> _RO;
		
		private System.Nullable<int> _IMP;
		
		private System.Nullable<int> _DDx1;
		
		private System.Nullable<int> _DDx2;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnChiefComplaintChanging(string value);
    partial void OnChiefComplaintChanged();
    partial void OnAgoChanging(string value);
    partial void OnAgoChanged();
    partial void OnSinceChanging(System.Nullable<short> value);
    partial void OnSinceChanged();
    partial void OnAccompanyingDocumentChanging(string value);
    partial void OnAccompanyingDocumentChanged();
    partial void OnROChanging(System.Nullable<bool> value);
    partial void OnROChanged();
    partial void OnIMPChanging(System.Nullable<int> value);
    partial void OnIMPChanged();
    partial void OnDDx1Changing(System.Nullable<int> value);
    partial void OnDDx1Changed();
    partial void OnDDx2Changing(System.Nullable<int> value);
    partial void OnDDx2Changed();
    #endregion
		
		public Visit()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefComplaint", DbType="NVarChar(100)")]
		public string ChiefComplaint
		{
			get
			{
				return this._ChiefComplaint;
			}
			set
			{
				if ((this._ChiefComplaint != value))
				{
					this.OnChiefComplaintChanging(value);
					this.SendPropertyChanging();
					this._ChiefComplaint = value;
					this.SendPropertyChanged("ChiefComplaint");
					this.OnChiefComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NVarChar(10)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this.OnAgoChanging(value);
					this.SendPropertyChanging();
					this._Ago = value;
					this.SendPropertyChanged("Ago");
					this.OnAgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="SmallInt")]
		public System.Nullable<short> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this.OnSinceChanging(value);
					this.SendPropertyChanging();
					this._Since = value;
					this.SendPropertyChanged("Since");
					this.OnSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccompanyingDocument", DbType="NVarChar(50)")]
		public string AccompanyingDocument
		{
			get
			{
				return this._AccompanyingDocument;
			}
			set
			{
				if ((this._AccompanyingDocument != value))
				{
					this.OnAccompanyingDocumentChanging(value);
					this.SendPropertyChanging();
					this._AccompanyingDocument = value;
					this.SendPropertyChanged("AccompanyingDocument");
					this.OnAccompanyingDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RO", DbType="Bit")]
		public System.Nullable<bool> RO
		{
			get
			{
				return this._RO;
			}
			set
			{
				if ((this._RO != value))
				{
					this.OnROChanging(value);
					this.SendPropertyChanging();
					this._RO = value;
					this.SendPropertyChanged("RO");
					this.OnROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMP", DbType="Int")]
		public System.Nullable<int> IMP
		{
			get
			{
				return this._IMP;
			}
			set
			{
				if ((this._IMP != value))
				{
					this.OnIMPChanging(value);
					this.SendPropertyChanging();
					this._IMP = value;
					this.SendPropertyChanged("IMP");
					this.OnIMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx1", DbType="Int")]
		public System.Nullable<int> DDx1
		{
			get
			{
				return this._DDx1;
			}
			set
			{
				if ((this._DDx1 != value))
				{
					this.OnDDx1Changing(value);
					this.SendPropertyChanging();
					this._DDx1 = value;
					this.SendPropertyChanged("DDx1");
					this.OnDDx1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx2", DbType="Int")]
		public System.Nullable<int> DDx2
		{
			get
			{
				return this._DDx2;
			}
			set
			{
				if ((this._DDx2 != value))
				{
					this.OnDDx2Changing(value);
					this.SendPropertyChanging();
					this._DDx2 = value;
					this.SendPropertyChanged("DDx2");
					this.OnDDx2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Visit", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Visit = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Visit = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Speciality1;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    #endregion
		
		public Speciality()
		{
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Reference", Storage="_References", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Services", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs2;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    #endregion
		
		public Staff()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._GivenServiceMs2 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs2), new Action<GivenServiceM>(this.detach_GivenServiceMs2));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Speciality = default(EntityRef<Speciality>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_References", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="DischargerStaffID")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_GivenServiceMs2", ThisKey="ID", OtherKey="TechnicianID")]
		public EntitySet<GivenServiceM> GivenServiceMs2
		{
			get
			{
				return this._GivenServiceMs2;
			}
			set
			{
				this._GivenServiceMs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Payment", Storage="_Payments", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="StaffCure")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _Parent;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntityRef<Department> _Department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    #endregion
		
		public Department()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Dossier")]
	public partial class View_Dossier
	{
		
		private string _MedicalCenter;
		
		private System.Guid _UniqID;
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private string _Name;
		
		private double _Amount;
		
		private bool _Confirm;
		
		private string _Expr1;
		
		private string _Time;
		
		private bool _NoTake;
		
		private System.Guid _PersonID;
		
		public View_Dossier()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(200)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this._MedicalCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqID
		{
			get
			{
				return this._UniqID;
			}
			set
			{
				if ((this._UniqID != value))
				{
					this._UniqID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(10)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCategory")]
	public partial class ServiceCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _SortCol;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortColChanging(System.Nullable<int> value);
    partial void OnSortColChanged();
    #endregion
		
		public ServiceCategory()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this.OnSortColChanging(value);
					this.SendPropertyChanging();
					this._SortCol = value;
					this.SendPropertyChanged("SortCol");
					this.OnSortColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ServiceCategoryID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_Services", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MedicalID;
		
		private string _FamilyNumber;
		
		private System.Nullable<System.Guid> _FamilyDoctor;
		
		private System.Nullable<System.Guid> _FamilyNurse;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _IdentityNumber;
		
		private string _IdentityPlace;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _BirthPlace;
		
		private string _Phone;
		
		private string _CellularPhone;
		
		private string _WorkPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Address;
		
		private string _WorkAddress;
		
		private string _InsuranceName;
		
		private string _InsuranceNo;
		
		private string _Education;
		
		private string _Comment;
		
		private string _MaritalStatus;
		
		private string _Religion;
		
		private string _CurrentJob;
		
		private string _BloodType;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _Barcode;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _BookletExpireDate;
		
		private bool _AllowInstallment;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		private bool _Death;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private string _DialectLanguage;
		
		private bool _Forieng;
		
		private string _Nationality;
		
		private string _PassportNumber;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntityRef<Person> _Person1;
		
		private EntityRef<Person> _Person2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFamilyNumberChanging(string value);
    partial void OnFamilyNumberChanged();
    partial void OnFamilyDoctorChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyDoctorChanged();
    partial void OnFamilyNurseChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyNurseChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnPersonalCodeChanging(string value);
    partial void OnPersonalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnIdentityPlaceChanging(string value);
    partial void OnIdentityPlaceChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellularPhoneChanging(string value);
    partial void OnCellularPhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkAddressChanging(string value);
    partial void OnWorkAddressChanged();
    partial void OnInsuranceNameChanging(string value);
    partial void OnInsuranceNameChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnBarcodeChanging(System.Nullable<int> value);
    partial void OnBarcodeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAllowInstallmentChanging(bool value);
    partial void OnAllowInstallmentChanged();
    partial void OnNotUseChanging(bool value);
    partial void OnNotUseChanged();
    partial void OnVisibelChanging(bool value);
    partial void OnVisibelChanged();
    partial void OnDeathChanging(bool value);
    partial void OnDeathChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDialectLanguageChanging(string value);
    partial void OnDialectLanguageChanged();
    partial void OnForiengChanging(bool value);
    partial void OnForiengChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    #endregion
		
		public Person()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Person1 = default(EntityRef<Person>);
			this._Person2 = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNumber", DbType="NVarChar(10)")]
		public string FamilyNumber
		{
			get
			{
				return this._FamilyNumber;
			}
			set
			{
				if ((this._FamilyNumber != value))
				{
					this.OnFamilyNumberChanging(value);
					this.SendPropertyChanging();
					this._FamilyNumber = value;
					this.SendPropertyChanged("FamilyNumber");
					this.OnFamilyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDoctor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyDoctor
		{
			get
			{
				return this._FamilyDoctor;
			}
			set
			{
				if ((this._FamilyDoctor != value))
				{
					if (this._Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyDoctorChanging(value);
					this.SendPropertyChanging();
					this._FamilyDoctor = value;
					this.SendPropertyChanged("FamilyDoctor");
					this.OnFamilyDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNurse", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyNurse
		{
			get
			{
				return this._FamilyNurse;
			}
			set
			{
				if ((this._FamilyNurse != value))
				{
					if (this._Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyNurse = value;
					this.SendPropertyChanged("FamilyNurse");
					this.OnFamilyNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this.OnPersonalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonalCode = value;
					this.SendPropertyChanged("PersonalCode");
					this.OnPersonalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this.OnIdentityPlaceChanging(value);
					this.SendPropertyChanging();
					this._IdentityPlace = value;
					this.SendPropertyChanged("IdentityPlace");
					this.OnIdentityPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellularPhone", DbType="NVarChar(25)")]
		public string CellularPhone
		{
			get
			{
				return this._CellularPhone;
			}
			set
			{
				if ((this._CellularPhone != value))
				{
					this.OnCellularPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellularPhone = value;
					this.SendPropertyChanged("CellularPhone");
					this.OnCellularPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAddress", DbType="NVarChar(300)")]
		public string WorkAddress
		{
			get
			{
				return this._WorkAddress;
			}
			set
			{
				if ((this._WorkAddress != value))
				{
					this.OnWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkAddress = value;
					this.SendPropertyChanged("WorkAddress");
					this.OnWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this.OnInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._InsuranceName = value;
					this.SendPropertyChanged("InsuranceName");
					this.OnInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(100)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(500)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(20)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Int")]
		public System.Nullable<int> Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInstallment", DbType="Bit NOT NULL")]
		public bool AllowInstallment
		{
			get
			{
				return this._AllowInstallment;
			}
			set
			{
				if ((this._AllowInstallment != value))
				{
					this.OnAllowInstallmentChanging(value);
					this.SendPropertyChanging();
					this._AllowInstallment = value;
					this.SendPropertyChanged("AllowInstallment");
					this.OnAllowInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this.OnNotUseChanging(value);
					this.SendPropertyChanging();
					this._NotUse = value;
					this.SendPropertyChanged("NotUse");
					this.OnNotUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this.OnVisibelChanging(value);
					this.SendPropertyChanging();
					this._Visibel = value;
					this.SendPropertyChanged("Visibel");
					this.OnVisibelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Death", DbType="Bit NOT NULL")]
		public bool Death
		{
			get
			{
				return this._Death;
			}
			set
			{
				if ((this._Death != value))
				{
					this.OnDeathChanging(value);
					this.SendPropertyChanging();
					this._Death = value;
					this.SendPropertyChanged("Death");
					this.OnDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NVarChar(8)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NVarChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectLanguage", DbType="NVarChar(50)")]
		public string DialectLanguage
		{
			get
			{
				return this._DialectLanguage;
			}
			set
			{
				if ((this._DialectLanguage != value))
				{
					this.OnDialectLanguageChanging(value);
					this.SendPropertyChanging();
					this._DialectLanguage = value;
					this.SendPropertyChanged("DialectLanguage");
					this.OnDialectLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forieng", DbType="Bit NOT NULL")]
		public bool Forieng
		{
			get
			{
				return this._Forieng;
			}
			set
			{
				if ((this._Forieng != value))
				{
					this.OnForiengChanging(value);
					this.SendPropertyChanging();
					this._Forieng = value;
					this.SendPropertyChanged("Forieng");
					this.OnForiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(50)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Persons", ThisKey="ID", OtherKey="FamilyDoctor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="FamilyNurse")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Payment", Storage="_Payments", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Person1", ThisKey="FamilyDoctor", OtherKey="ID", IsForeignKey=true)]
		public Person Person1
		{
			get
			{
				return this._Person1.Entity;
			}
			set
			{
				Person previousValue = this._Person1.Entity;
				if (((previousValue != value) 
							|| (this._Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person1.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Person1.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FamilyDoctor = value.ID;
					}
					else
					{
						this._FamilyDoctor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Person2", ThisKey="FamilyNurse", OtherKey="ID", IsForeignKey=true)]
		public Person Person2
		{
			get
			{
				return this._Person2.Entity;
			}
			set
			{
				Person previousValue = this._Person2.Entity;
				if (((previousValue != value) 
							|| (this._Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person2.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._Person2.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._FamilyNurse = value.ID;
					}
					else
					{
						this._FamilyNurse = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewAngioBill")]
	public partial class ViewAngioBill
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Name;
		
		private string _DoctorName;
		
		private string _DoctorLastName;
		
		private System.Nullable<int> _Expr1;
		
		private long _ID;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _Date;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<double> _Joze_Fanni_27;
		
		private System.Nullable<double> _Joze_Herfeyi_26;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		public ViewAngioBill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="NVarChar(100)")]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this._DoctorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Int")]
		public System.Nullable<int> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this._CaliforniaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this._SalamatBookletCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni_27", DbType="Float")]
		public System.Nullable<double> Joze_Fanni_27
		{
			get
			{
				return this._Joze_Fanni_27;
			}
			set
			{
				if ((this._Joze_Fanni_27 != value))
				{
					this._Joze_Fanni_27 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfeyi_26", DbType="Float")]
		public System.Nullable<double> Joze_Herfeyi_26
		{
			get
			{
				return this._Joze_Herfeyi_26;
			}
			set
			{
				if ((this._Joze_Herfeyi_26 != value))
				{
					this._Joze_Herfeyi_26 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discharge")]
	public partial class Discharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DossierID;
		
		private System.Nullable<int> _PatientStatus;
		
		private string _FinalDiagnosis;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private System.Nullable<System.Guid> _DischargerStaffID;
		
		private string _DischargeAdvance;
		
		private string _DeathReasone;
		
		private string _DeathPlace;
		
		private System.Nullable<int> _DeathPlaceSepasID;
		
		private string _DischargerUserID;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDossierIDChanging(long value);
    partial void OnDossierIDChanged();
    partial void OnPatientStatusChanging(System.Nullable<int> value);
    partial void OnPatientStatusChanged();
    partial void OnFinalDiagnosisChanging(string value);
    partial void OnFinalDiagnosisChanged();
    partial void OnDischargeTimeChanging(string value);
    partial void OnDischargeTimeChanged();
    partial void OnDischargeDateChanging(string value);
    partial void OnDischargeDateChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDischargerStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnDischargerStaffIDChanged();
    partial void OnDischargeAdvanceChanging(string value);
    partial void OnDischargeAdvanceChanged();
    partial void OnDeathReasoneChanging(string value);
    partial void OnDeathReasoneChanged();
    partial void OnDeathPlaceChanging(string value);
    partial void OnDeathPlaceChanged();
    partial void OnDeathPlaceSepasIDChanging(System.Nullable<int> value);
    partial void OnDeathPlaceSepasIDChanged();
    partial void OnDischargerUserIDChanging(string value);
    partial void OnDischargerUserIDChanged();
    #endregion
		
		public Discharge()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatus", DbType="Int")]
		public System.Nullable<int> PatientStatus
		{
			get
			{
				return this._PatientStatus;
			}
			set
			{
				if ((this._PatientStatus != value))
				{
					this.OnPatientStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientStatus = value;
					this.SendPropertyChanged("PatientStatus");
					this.OnPatientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDiagnosis", DbType="NVarChar(2000)")]
		public string FinalDiagnosis
		{
			get
			{
				return this._FinalDiagnosis;
			}
			set
			{
				if ((this._FinalDiagnosis != value))
				{
					this.OnFinalDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._FinalDiagnosis = value;
					this.SendPropertyChanged("FinalDiagnosis");
					this.OnFinalDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this.OnDischargeTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeTime = value;
					this.SendPropertyChanged("DischargeTime");
					this.OnDischargeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NChar(10)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DischargerStaffID
		{
			get
			{
				return this._DischargerStaffID;
			}
			set
			{
				if ((this._DischargerStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDischargerStaffIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerStaffID = value;
					this.SendPropertyChanged("DischargerStaffID");
					this.OnDischargerStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeAdvance", DbType="NVarChar(MAX)")]
		public string DischargeAdvance
		{
			get
			{
				return this._DischargeAdvance;
			}
			set
			{
				if ((this._DischargeAdvance != value))
				{
					this.OnDischargeAdvanceChanging(value);
					this.SendPropertyChanging();
					this._DischargeAdvance = value;
					this.SendPropertyChanged("DischargeAdvance");
					this.OnDischargeAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathReasone", DbType="NVarChar(MAX)")]
		public string DeathReasone
		{
			get
			{
				return this._DeathReasone;
			}
			set
			{
				if ((this._DeathReasone != value))
				{
					this.OnDeathReasoneChanging(value);
					this.SendPropertyChanging();
					this._DeathReasone = value;
					this.SendPropertyChanged("DeathReasone");
					this.OnDeathReasoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlace", DbType="NVarChar(50)")]
		public string DeathPlace
		{
			get
			{
				return this._DeathPlace;
			}
			set
			{
				if ((this._DeathPlace != value))
				{
					this.OnDeathPlaceChanging(value);
					this.SendPropertyChanging();
					this._DeathPlace = value;
					this.SendPropertyChanged("DeathPlace");
					this.OnDeathPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlaceSepasID", DbType="Int")]
		public System.Nullable<int> DeathPlaceSepasID
		{
			get
			{
				return this._DeathPlaceSepasID;
			}
			set
			{
				if ((this._DeathPlaceSepasID != value))
				{
					this.OnDeathPlaceSepasIDChanging(value);
					this.SendPropertyChanging();
					this._DeathPlaceSepasID = value;
					this.SendPropertyChanged("DeathPlaceSepasID");
					this.OnDeathPlaceSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerUserID", DbType="NVarChar(100)")]
		public string DischargerUserID
		{
			get
			{
				return this._DischargerUserID;
			}
			set
			{
				if ((this._DischargerUserID != value))
				{
					this.OnDischargerUserIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerUserID = value;
					this.SendPropertyChanged("DischargerUserID");
					this.OnDischargerUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Staff", ThisKey="DischargerStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._DischargerStaffID = value.ID;
					}
					else
					{
						this._DischargerStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Discharge1 = null;
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Discharge1 = this;
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(long);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exeption")]
	public partial class Exeption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MSG;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Ex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnExChanging(string value);
    partial void OnExChanged();
    #endregion
		
		public Exeption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(100)")]
		public string MSG
		{
			get
			{
				return this._MSG;
			}
			set
			{
				if ((this._MSG != value))
				{
					this.OnMSGChanging(value);
					this.SendPropertyChanging();
					this._MSG = value;
					this.SendPropertyChanged("MSG");
					this.OnMSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ex", DbType="NVarChar(500)")]
		public string Ex
		{
			get
			{
				return this._Ex;
			}
			set
			{
				if ((this._Ex != value))
				{
					this.OnExChanging(value);
					this.SendPropertyChanging();
					this._Ex = value;
					this.SendPropertyChanged("Ex");
					this.OnExChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_KhadamatTashkhisi")]
	public partial class Vw_KhadamatTashkhisi
	{
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _Dep;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private int _ID;
		
		private string _ParentName;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private bool _Confirm;
		
		private string _GsdDate;
		
		private string _Time;
		
		private bool _NoTake;
		
		private decimal _PatientShare;
		
		private decimal _TotalPrice;
		
		private decimal _InsuranceShare;
		
		private string _PersonInsure;
		
		private string _PersonalCode;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private bool _TotalPayed;
		
		private System.Guid _Expr1;
		
		private System.Nullable<decimal> _SubmittedPrice;
		
		private string _IOTypeName;
		
		private string _SalamatBookletCode;
		
		private string _FunctorFName;
		
		private string _FunctorLName;
		
		private string _ServiceName;
		
		public Vw_KhadamatTashkhisi()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(100)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(MAX)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this._GivenAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdDate", DbType="NVarChar(10)")]
		public string GsdDate
		{
			get
			{
				return this._GsdDate;
			}
			set
			{
				if ((this._GsdDate != value))
				{
					this._GsdDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInsure", DbType="NVarChar(50)")]
		public string PersonInsure
		{
			get
			{
				return this._PersonInsure;
			}
			set
			{
				if ((this._PersonInsure != value))
				{
					this._PersonInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedPrice", DbType="Money")]
		public System.Nullable<decimal> SubmittedPrice
		{
			get
			{
				return this._SubmittedPrice;
			}
			set
			{
				if ((this._SubmittedPrice != value))
				{
					this._SubmittedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOTypeName", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string IOTypeName
		{
			get
			{
				return this._IOTypeName;
			}
			set
			{
				if ((this._IOTypeName != value))
				{
					this._IOTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this._SalamatBookletCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorFName", DbType="NVarChar(100)")]
		public string FunctorFName
		{
			get
			{
				return this._FunctorFName;
			}
			set
			{
				if ((this._FunctorFName != value))
				{
					this._FunctorFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorLName", DbType="NVarChar(100)")]
		public string FunctorLName
		{
			get
			{
				return this._FunctorLName;
			}
			set
			{
				if ((this._FunctorLName != value))
				{
					this._FunctorLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_RetireeBastari")]
	public partial class View_RetireeBastari
	{
		
		private string _InsuranceName;
		
		private System.Nullable<int> _IDPerson;
		
		private string _MedicalID;
		
		private int _ValidCenter;
		
		private string _ResidentDate;
		
		private string _EndResidentDate;
		
		private long _DocumentID;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DichargeDepName;
		
		public View_RetireeBastari()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="Int")]
		public System.Nullable<int> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidCenter", DbType="Int NOT NULL")]
		public int ValidCenter
		{
			get
			{
				return this._ValidCenter;
			}
			set
			{
				if ((this._ValidCenter != value))
				{
					this._ValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentDate", DbType="NVarChar(10)")]
		public string ResidentDate
		{
			get
			{
				return this._ResidentDate;
			}
			set
			{
				if ((this._ResidentDate != value))
				{
					this._ResidentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndResidentDate", DbType="NChar(10)")]
		public string EndResidentDate
		{
			get
			{
				return this._EndResidentDate;
			}
			set
			{
				if ((this._EndResidentDate != value))
				{
					this._EndResidentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="BigInt NOT NULL")]
		public long DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this._DocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichargeDepName", DbType="NVarChar(100)")]
		public string DichargeDepName
		{
			get
			{
				return this._DichargeDepName;
			}
			set
			{
				if ((this._DichargeDepName != value))
				{
					this._DichargeDepName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemError")]
	public partial class SystemError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<long> _DosID;
		
		private System.Nullable<System.Guid> _Dep;
		
		private string _Error;
		
		private string _Date;
		
		private string _Time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDosIDChanging(System.Nullable<long> value);
    partial void OnDosIDChanged();
    partial void OnDepChanging(System.Nullable<System.Guid> value);
    partial void OnDepChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public SystemError()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosID", DbType="BigInt")]
		public System.Nullable<long> DosID
		{
			get
			{
				return this._DosID;
			}
			set
			{
				if ((this._DosID != value))
				{
					this.OnDosIDChanging(value);
					this.SendPropertyChanging();
					this._DosID = value;
					this.SendPropertyChanged("DosID");
					this.OnDosIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this.OnDepChanging(value);
					this.SendPropertyChanging();
					this._Dep = value;
					this.SendPropertyChanged("Dep");
					this.OnDepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="NVarChar(300)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_SystemErrorRpt")]
	public partial class Vw_SystemErrorRpt
	{
		
		private string _Name;
		
		private string _Date;
		
		private System.Nullable<long> _DosID;
		
		private string _MedicalID;
		
		private string _Patinet;
		
		private string _InsuranceName;
		
		private string _Error;
		
		public Vw_SystemErrorRpt()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosID", DbType="BigInt")]
		public System.Nullable<long> DosID
		{
			get
			{
				return this._DosID;
			}
			set
			{
				if ((this._DosID != value))
				{
					this._DosID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patinet", DbType="NVarChar(110)")]
		public string Patinet
		{
			get
			{
				return this._Patinet;
			}
			set
			{
				if ((this._Patinet != value))
				{
					this._Patinet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="NVarChar(300)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this._Error = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosFinance")]
	public partial class Vw_DosFinance
	{
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _Dep;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private int _ID;
		
		private string _ParentName;
		
		private string _Name;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private bool _Confirm;
		
		private string _GsdDate;
		
		private string _Time;
		
		private bool _NoTake;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private bool _Payed;
		
		private string _PersonInsure;
		
		private string _GsmInsure;
		
		private string _Company;
		
		private string _Relation;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _BirthDate;
		
		private string _PersonalCode;
		
		private bool _Discharge;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _DischargeStatus;
		
		private bool _TotalPayed;
		
		private System.Guid _GSDID;
		
		private System.Nullable<int> _SortCol;
		
		private System.Nullable<int> _ServiceOldID;
		
		private System.Nullable<int> _ServiceOldParentID;
		
		private string _Sarfasl_Khedmati;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<double> _UnitPrice;
		
		private string _WardParent;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private string _FunctorFName;
		
		private string _FunctorLName;
		
		private bool _Admitted;
		
		private string _NationalID;
		
		public Vw_DosFinance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(100)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(MAX)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this._GivenAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdDate", DbType="NVarChar(10)")]
		public string GsdDate
		{
			get
			{
				return this._GsdDate;
			}
			set
			{
				if ((this._GsdDate != value))
				{
					this._GsdDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this._PayedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this._Payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInsure", DbType="NVarChar(50)")]
		public string PersonInsure
		{
			get
			{
				return this._PersonInsure;
			}
			set
			{
				if ((this._PersonInsure != value))
				{
					this._PersonInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmInsure", DbType="NVarChar(100)")]
		public string GsmInsure
		{
			get
			{
				return this._GsmInsure;
			}
			set
			{
				if ((this._GsmInsure != value))
				{
					this._GsmInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this._Relation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this._DischargeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this._DischargeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeStatus", DbType="NVarChar(50)")]
		public string DischargeStatus
		{
			get
			{
				return this._DischargeStatus;
			}
			set
			{
				if ((this._DischargeStatus != value))
				{
					this._DischargeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GSDID
		{
			get
			{
				return this._GSDID;
			}
			set
			{
				if ((this._GSDID != value))
				{
					this._GSDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this._SortCol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldID", DbType="Int")]
		public System.Nullable<int> ServiceOldID
		{
			get
			{
				return this._ServiceOldID;
			}
			set
			{
				if ((this._ServiceOldID != value))
				{
					this._ServiceOldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldParentID", DbType="Int")]
		public System.Nullable<int> ServiceOldParentID
		{
			get
			{
				return this._ServiceOldParentID;
			}
			set
			{
				if ((this._ServiceOldParentID != value))
				{
					this._ServiceOldParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sarfasl_Khedmati", DbType="NVarChar(255)")]
		public string Sarfasl_Khedmati
		{
			get
			{
				return this._Sarfasl_Khedmati;
			}
			set
			{
				if ((this._Sarfasl_Khedmati != value))
				{
					this._Sarfasl_Khedmati = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardParent", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WardParent
		{
			get
			{
				return this._WardParent;
			}
			set
			{
				if ((this._WardParent != value))
				{
					this._WardParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					this._FunctorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorFName", DbType="NVarChar(100)")]
		public string FunctorFName
		{
			get
			{
				return this._FunctorFName;
			}
			set
			{
				if ((this._FunctorFName != value))
				{
					this._FunctorFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorLName", DbType="NVarChar(100)")]
		public string FunctorLName
		{
			get
			{
				return this._FunctorLName;
			}
			set
			{
				if ((this._FunctorLName != value))
				{
					this._FunctorLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this._Admitted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(15)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this._NationalID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceM")]
	public partial class GivenServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private System.Nullable<System.Guid> _PaymentID;
		
		private EntitySet<Reference> _References;
		
		private EntityRef<Visit> _Visit;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntityRef<Agenda> _Agenda;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<GivenServiceM> _GivenServiceM1;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Reference> _Reference;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnAgendaIDChanging(System.Nullable<System.Guid> value);
    partial void OnAgendaIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnPeriodicCalendeIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalendeIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnTechnicianIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicianIDChanged();
    partial void OnPhysioOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysioOrderMIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnBookletTypeChanging(string value);
    partial void OnBookletTypeChanged();
    partial void OnBookletDateChanging(string value);
    partial void OnBookletDateChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnTurningDateChanging(string value);
    partial void OnTurningDateChanged();
    partial void OnTurningTimeChanging(string value);
    partial void OnTurningTimeChanged();
    partial void OnBookletSerialNumberChanging(string value);
    partial void OnBookletSerialNumberChanged();
    partial void OnBookletPageNumberChanging(string value);
    partial void OnBookletPageNumberChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnSendToDrTimeChanging(string value);
    partial void OnSendToDrTimeChanged();
    partial void OnSendToDrChanging(bool value);
    partial void OnSendToDrChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnRemissionStatusChanging(bool value);
    partial void OnRemissionStatusChanged();
    partial void OnScreeningChanging(bool value);
    partial void OnScreeningChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDailySNChanging(System.Nullable<int> value);
    partial void OnDailySNChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnComplementInsuranceChanging(string value);
    partial void OnComplementInsuranceChanged();
    partial void OnComplementInsuranceNOChanging(string value);
    partial void OnComplementInsuranceNOChanged();
    partial void OnRefrenceIDChanging(System.Nullable<System.Guid> value);
    partial void OnRefrenceIDChanged();
    partial void OnPortableChanging(bool value);
    partial void OnPortableChanged();
    partial void OnConfirmFinanceSumKChanging(System.Nullable<double> value);
    partial void OnConfirmFinanceSumKChanged();
    partial void OnAdmissionTypeChanging(string value);
    partial void OnAdmissionTypeChanged();
    partial void OnPaymentIDChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentIDChanged();
    #endregion
		
		public GivenServiceM()
		{
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Visit = default(EntityRef<Visit>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Agenda = default(EntityRef<Agenda>);
			this._Department = default(EntityRef<Department>);
			this._GivenServiceM1 = default(EntityRef<GivenServiceM>);
			this._Person = default(EntityRef<Person>);
			this._Reference = default(EntityRef<Reference>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenServiceM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					if (this._Agenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgendaIDChanging(value);
					this.SendPropertyChanging();
					this._AgendaID = value;
					this.SendPropertyChanged("AgendaID");
					this.OnAgendaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					this.OnPeriodicCalendeIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalendeID = value;
					this.SendPropertyChanged("PeriodicCalendeID");
					this.OnPeriodicCalendeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicianIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicianID = value;
					this.SendPropertyChanged("TechnicianID");
					this.OnTechnicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					this.OnPhysioOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysioOrderMID = value;
					this.SendPropertyChanged("PhysioOrderMID");
					this.OnPhysioOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this.OnBookletTypeChanging(value);
					this.SendPropertyChanging();
					this._BookletType = value;
					this.SendPropertyChanged("BookletType");
					this.OnBookletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this.OnBookletDateChanging(value);
					this.SendPropertyChanging();
					this._BookletDate = value;
					this.SendPropertyChanged("BookletDate");
					this.OnBookletDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this.OnTurningDateChanging(value);
					this.SendPropertyChanging();
					this._TurningDate = value;
					this.SendPropertyChanged("TurningDate");
					this.OnTurningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this.OnTurningTimeChanging(value);
					this.SendPropertyChanging();
					this._TurningTime = value;
					this.SendPropertyChanged("TurningTime");
					this.OnTurningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this.OnBookletSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletSerialNumber = value;
					this.SendPropertyChanged("BookletSerialNumber");
					this.OnBookletSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this.OnBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletPageNumber = value;
					this.SendPropertyChanged("BookletPageNumber");
					this.OnBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this.OnSendToDrTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToDrTime = value;
					this.SendPropertyChanged("SendToDrTime");
					this.OnSendToDrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this.OnSendToDrChanging(value);
					this.SendPropertyChanging();
					this._SendToDr = value;
					this.SendPropertyChanged("SendToDr");
					this.OnSendToDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this.OnRemissionStatusChanging(value);
					this.SendPropertyChanging();
					this._RemissionStatus = value;
					this.SendPropertyChanged("RemissionStatus");
					this.OnRemissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this.OnScreeningChanging(value);
					this.SendPropertyChanging();
					this._Screening = value;
					this.SendPropertyChanged("Screening");
					this.OnScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this.OnDailySNChanging(value);
					this.SendPropertyChanging();
					this._DailySN = value;
					this.SendPropertyChanged("DailySN");
					this.OnDailySNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this.OnComplementInsuranceChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsurance = value;
					this.SendPropertyChanged("ComplementInsurance");
					this.OnComplementInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this.OnComplementInsuranceNOChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsuranceNO = value;
					this.SendPropertyChanged("ComplementInsuranceNO");
					this.OnComplementInsuranceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					if (this._Reference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RefrenceID = value;
					this.SendPropertyChanged("RefrenceID");
					this.OnRefrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this.OnPortableChanging(value);
					this.SendPropertyChanging();
					this._Portable = value;
					this.SendPropertyChanged("Portable");
					this.OnPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this.OnConfirmFinanceSumKChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinanceSumK = value;
					this.SendPropertyChanged("ConfirmFinanceSumK");
					this.OnConfirmFinanceSumKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_References", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Visit", Storage="_Visit", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_Agenda", ThisKey="AgendaID", OtherKey="ID", IsForeignKey=true)]
		public Agenda Agenda
		{
			get
			{
				return this._Agenda.Entity;
			}
			set
			{
				Agenda previousValue = this._Agenda.Entity;
				if (((previousValue != value) 
							|| (this._Agenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agenda.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Agenda.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._AgendaID = value.ID;
					}
					else
					{
						this._AgendaID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Agenda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceM1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM1
		{
			get
			{
				return this._GivenServiceM1.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM1.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._GivenServiceM1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_Reference", ThisKey="RefrenceID", OtherKey="ID", IsForeignKey=true)]
		public Reference Reference
		{
			get
			{
				return this._Reference.Entity;
			}
			set
			{
				Reference previousValue = this._Reference.Entity;
				if (((previousValue != value) 
							|| (this._Reference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reference.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Reference.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RefrenceID = value.ID;
					}
					else
					{
						this._RefrenceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Reference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_ServiceCategory", ThisKey="ServiceCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ServiceCategoryID = value.ID;
					}
					else
					{
						this._ServiceCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_Staff1", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_Staff2", ThisKey="TechnicianID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.GivenServiceMs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs2.Add(this);
						this._TechnicianID = value.ID;
					}
					else
					{
						this._TechnicianID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosForSepas")]
	public partial class Vw_DosForSepa
	{
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _Dep;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private int _ID;
		
		private string _ParentName;
		
		private string _Name;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private bool _Confirm;
		
		private string _GsdDate;
		
		private string _Time;
		
		private bool _NoTake;
		
		private decimal _PatientShare;
		
		private decimal _TotalPrice;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private bool _Payed;
		
		private string _PersonInsure;
		
		private string _GsmInsure;
		
		private string _Company;
		
		private string _Relation;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _BirthDate;
		
		private string _PersonalCode;
		
		private bool _Discharge;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _DischargeStatus;
		
		private bool _TotalPayed;
		
		private System.Guid _Expr1;
		
		private System.Nullable<double> _CalculatedPrice;
		
		private System.Nullable<decimal> _SubmittedPrice;
		
		private string _IOTypeName;
		
		private System.Nullable<int> _ServiceOldParentID;
		
		private System.Nullable<int> _ServiceOldID;
		
		public Vw_DosForSepa()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(100)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(MAX)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this._GivenAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdDate", DbType="NVarChar(10)")]
		public string GsdDate
		{
			get
			{
				return this._GsdDate;
			}
			set
			{
				if ((this._GsdDate != value))
				{
					this._GsdDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this._PayedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this._Payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInsure", DbType="NVarChar(50)")]
		public string PersonInsure
		{
			get
			{
				return this._PersonInsure;
			}
			set
			{
				if ((this._PersonInsure != value))
				{
					this._PersonInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmInsure", DbType="NVarChar(100)")]
		public string GsmInsure
		{
			get
			{
				return this._GsmInsure;
			}
			set
			{
				if ((this._GsmInsure != value))
				{
					this._GsmInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this._Relation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this._DischargeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this._DischargeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeStatus", DbType="NVarChar(50)")]
		public string DischargeStatus
		{
			get
			{
				return this._DischargeStatus;
			}
			set
			{
				if ((this._DischargeStatus != value))
				{
					this._DischargeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedPrice", DbType="Float")]
		public System.Nullable<double> CalculatedPrice
		{
			get
			{
				return this._CalculatedPrice;
			}
			set
			{
				if ((this._CalculatedPrice != value))
				{
					this._CalculatedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedPrice", DbType="Money")]
		public System.Nullable<decimal> SubmittedPrice
		{
			get
			{
				return this._SubmittedPrice;
			}
			set
			{
				if ((this._SubmittedPrice != value))
				{
					this._SubmittedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOTypeName", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string IOTypeName
		{
			get
			{
				return this._IOTypeName;
			}
			set
			{
				if ((this._IOTypeName != value))
				{
					this._IOTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldParentID", DbType="Int")]
		public System.Nullable<int> ServiceOldParentID
		{
			get
			{
				return this._ServiceOldParentID;
			}
			set
			{
				if ((this._ServiceOldParentID != value))
				{
					this._ServiceOldParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldID", DbType="Int")]
		public System.Nullable<int> ServiceOldID
		{
			get
			{
				return this._ServiceOldID;
			}
			set
			{
				if ((this._ServiceOldID != value))
				{
					this._ServiceOldID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _OldParentID;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Name_En;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Shape;
		
		private string _MESCCode_No;
		
		private System.Nullable<bool> _NIS;
		
		private bool _EmergencyFav;
		
		private string _HIXCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _BasicK;
		
		private System.Nullable<double> _SupplementBasicK;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _ResultType;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _RetireeID;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnOldParentIDChanging(System.Nullable<int> value);
    partial void OnOldParentIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnName_EnChanging(string value);
    partial void OnName_EnChanged();
    partial void OnCaliforniaCodeChanging(string value);
    partial void OnCaliforniaCodeChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShapeChanging(string value);
    partial void OnShapeChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnEmergencyFavChanging(bool value);
    partial void OnEmergencyFavChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnBasicKChanging(System.Nullable<double> value);
    partial void OnBasicKChanged();
    partial void OnSupplementBasicKChanging(System.Nullable<double> value);
    partial void OnSupplementBasicKChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRetireeIDChanging(System.Nullable<int> value);
    partial void OnRetireeIDChanged();
    #endregion
		
		public Service()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Service1 = default(EntityRef<Service>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldParentID", DbType="Int")]
		public System.Nullable<int> OldParentID
		{
			get
			{
				return this._OldParentID;
			}
			set
			{
				if ((this._OldParentID != value))
				{
					this.OnOldParentIDChanging(value);
					this.SendPropertyChanging();
					this._OldParentID = value;
					this.SendPropertyChanged("OldParentID");
					this.OnOldParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_En", DbType="NVarChar(MAX)")]
		public string Name_En
		{
			get
			{
				return this._Name_En;
			}
			set
			{
				if ((this._Name_En != value))
				{
					this.OnName_EnChanging(value);
					this.SendPropertyChanging();
					this._Name_En = value;
					this.SendPropertyChanged("Name_En");
					this.OnName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this.OnCaliforniaCodeChanging(value);
					this.SendPropertyChanging();
					this._CaliforniaCode = value;
					this.SendPropertyChanged("CaliforniaCode");
					this.OnCaliforniaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this.OnShapeChanging(value);
					this.SendPropertyChanging();
					this._Shape = value;
					this.SendPropertyChanged("Shape");
					this.OnShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFav", DbType="Bit NOT NULL")]
		public bool EmergencyFav
		{
			get
			{
				return this._EmergencyFav;
			}
			set
			{
				if ((this._EmergencyFav != value))
				{
					this.OnEmergencyFavChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFav = value;
					this.SendPropertyChanged("EmergencyFav");
					this.OnEmergencyFavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicK", DbType="Float")]
		public System.Nullable<double> BasicK
		{
			get
			{
				return this._BasicK;
			}
			set
			{
				if ((this._BasicK != value))
				{
					this.OnBasicKChanging(value);
					this.SendPropertyChanging();
					this._BasicK = value;
					this.SendPropertyChanged("BasicK");
					this.OnBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementBasicK", DbType="Float")]
		public System.Nullable<double> SupplementBasicK
		{
			get
			{
				return this._SupplementBasicK;
			}
			set
			{
				if ((this._SupplementBasicK != value))
				{
					this.OnSupplementBasicKChanging(value);
					this.SendPropertyChanging();
					this._SupplementBasicK = value;
					this.SendPropertyChanged("SupplementBasicK");
					this.OnSupplementBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetireeID", DbType="Int")]
		public System.Nullable<int> RetireeID
		{
			get
			{
				return this._RetireeID;
			}
			set
			{
				if ((this._RetireeID != value))
				{
					this.OnRetireeIDChanging(value);
					this.SendPropertyChanging();
					this._RetireeID = value;
					this.SendPropertyChanged("RetireeID");
					this.OnRetireeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Services", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_ServiceCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosseirPayment")]
	public partial class Vw_DosseirPayment
	{
		
		private long _ID;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private int _IOtype;
		
		private decimal _Price;
		
		private string _Date;
		
		private string _Type;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private bool _PayBack;
		
		private string _Description;
		
		private string _Time;
		
		private string _TransactionID;
		
		private string _CreatorFullName;
		
		private System.Nullable<System.Guid> _PayBackID;
		
		private string _ModificatorFullName;
		
		private int _SerialNumber;
		
		private string _PayBackType;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _InstallMent;
		
		private string _InsuranceName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private System.Nullable<int> _CreatorUserID;
		
		public Vw_DosseirPayment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBack", DbType="Bit NOT NULL")]
		public bool PayBack
		{
			get
			{
				return this._PayBack;
			}
			set
			{
				if ((this._PayBack != value))
				{
					this._PayBack = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this._TransactionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorFullName", DbType="NVarChar(100)")]
		public string CreatorFullName
		{
			get
			{
				return this._CreatorFullName;
			}
			set
			{
				if ((this._CreatorFullName != value))
				{
					this._CreatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayBackID
		{
			get
			{
				return this._PayBackID;
			}
			set
			{
				if ((this._PayBackID != value))
				{
					this._PayBackID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorFullName", DbType="NVarChar(100)")]
		public string ModificatorFullName
		{
			get
			{
				return this._ModificatorFullName;
			}
			set
			{
				if ((this._ModificatorFullName != value))
				{
					this._ModificatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackType", DbType="NVarChar(20)")]
		public string PayBackType
		{
			get
			{
				return this._PayBackType;
			}
			set
			{
				if ((this._PayBackType != value))
				{
					this._PayBackType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this._CaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMent", DbType="NVarChar(50)")]
		public string InstallMent
		{
			get
			{
				return this._InstallMent;
			}
			set
			{
				if ((this._InstallMent != value))
				{
					this._InstallMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this._CreatorUserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosFinanceSB")]
	public partial class Vw_DosFinanceSB
	{
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _Dep;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private int _ID;
		
		private string _ParentName;
		
		private string _Name;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private bool _Confirm;
		
		private string _GsdDate;
		
		private string _Time;
		
		private bool _NoTake;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private bool _Payed;
		
		private string _PersonInsure;
		
		private string _GsmInsure;
		
		private string _Company;
		
		private string _Relation;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _BirthDate;
		
		private string _PersonalCode;
		
		private bool _Discharge;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _DischargeStatus;
		
		private bool _TotalPayed;
		
		private System.Guid _GSDID;
		
		private System.Nullable<int> _SortCol;
		
		private System.Nullable<int> _ServiceOldID;
		
		private System.Nullable<int> _ServiceOldParentID;
		
		private string _Sarfasl_Khedmati;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<double> _UnitPrice;
		
		private string _WardParent;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private string _FunctorFName;
		
		private string _FunctorLName;
		
		private bool _Admitted;
		
		private string _NationalID;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _ServiceName;
		
		private string _Shape;
		
		public Vw_DosFinanceSB()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(100)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(MAX)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this._GivenAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdDate", DbType="NVarChar(10)")]
		public string GsdDate
		{
			get
			{
				return this._GsdDate;
			}
			set
			{
				if ((this._GsdDate != value))
				{
					this._GsdDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this._PayedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this._Payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInsure", DbType="NVarChar(50)")]
		public string PersonInsure
		{
			get
			{
				return this._PersonInsure;
			}
			set
			{
				if ((this._PersonInsure != value))
				{
					this._PersonInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmInsure", DbType="NVarChar(100)")]
		public string GsmInsure
		{
			get
			{
				return this._GsmInsure;
			}
			set
			{
				if ((this._GsmInsure != value))
				{
					this._GsmInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this._Relation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this._DischargeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this._DischargeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeStatus", DbType="NVarChar(50)")]
		public string DischargeStatus
		{
			get
			{
				return this._DischargeStatus;
			}
			set
			{
				if ((this._DischargeStatus != value))
				{
					this._DischargeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GSDID
		{
			get
			{
				return this._GSDID;
			}
			set
			{
				if ((this._GSDID != value))
				{
					this._GSDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this._SortCol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldID", DbType="Int")]
		public System.Nullable<int> ServiceOldID
		{
			get
			{
				return this._ServiceOldID;
			}
			set
			{
				if ((this._ServiceOldID != value))
				{
					this._ServiceOldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldParentID", DbType="Int")]
		public System.Nullable<int> ServiceOldParentID
		{
			get
			{
				return this._ServiceOldParentID;
			}
			set
			{
				if ((this._ServiceOldParentID != value))
				{
					this._ServiceOldParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sarfasl_Khedmati", DbType="NVarChar(255)")]
		public string Sarfasl_Khedmati
		{
			get
			{
				return this._Sarfasl_Khedmati;
			}
			set
			{
				if ((this._Sarfasl_Khedmati != value))
				{
					this._Sarfasl_Khedmati = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardParent", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WardParent
		{
			get
			{
				return this._WardParent;
			}
			set
			{
				if ((this._WardParent != value))
				{
					this._WardParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					this._FunctorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorFName", DbType="NVarChar(100)")]
		public string FunctorFName
		{
			get
			{
				return this._FunctorFName;
			}
			set
			{
				if ((this._FunctorFName != value))
				{
					this._FunctorFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorLName", DbType="NVarChar(100)")]
		public string FunctorLName
		{
			get
			{
				return this._FunctorLName;
			}
			set
			{
				if ((this._FunctorLName != value))
				{
					this._FunctorLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this._Admitted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(15)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this._NationalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this._K = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this._Shape = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceD")]
	public partial class GivenServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private System.Nullable<System.Guid> _TariffID;
		
		private System.Nullable<int> _TadilAreaID;
		
		private decimal _TotalPrice;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private bool _Payed;
		
		private decimal _PaymentPrice;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private bool _Confirm;
		
		private bool _Reflected;
		
		private System.Nullable<int> _HIXCode;
		
		private string _Position;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _Date;
		
		private string _Time;
		
		private bool _NoTake;
		
		private bool _Normal;
		
		private System.Nullable<bool> _NIS;
		
		private string _CreatorUserFullname;
		
		private string _Category;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnGivenAmountChanging(double value);
    partial void OnGivenAmountChanged();
    partial void OnTariffIDChanging(System.Nullable<System.Guid> value);
    partial void OnTariffIDChanged();
    partial void OnTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnTadilAreaIDChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnPatientShareChanging(decimal value);
    partial void OnPatientShareChanged();
    partial void OnInsuranceShareChanging(decimal value);
    partial void OnInsuranceShareChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnHIXCodeChanging(System.Nullable<int> value);
    partial void OnHIXCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnNoTakeChanging(bool value);
    partial void OnNoTakeChanged();
    partial void OnNormalChanging(bool value);
    partial void OnNormalChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public GivenServiceD()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this.OnGivenAmountChanging(value);
					this.SendPropertyChanging();
					this._GivenAmount = value;
					this.SendPropertyChanged("GivenAmount");
					this.OnGivenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilAreaID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TadilAreaID
		{
			get
			{
				return this._TadilAreaID;
			}
			set
			{
				if ((this._TadilAreaID != value))
				{
					this.OnTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._TadilAreaID = value;
					this.SendPropertyChanged("TadilAreaID");
					this.OnTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this.OnInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._InsuranceShare = value;
					this.SendPropertyChanged("InsuranceShare");
					this.OnInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this.OnNoTakeChanging(value);
					this.SendPropertyChanging();
					this._NoTake = value;
					this.SendPropertyChanged("NoTake");
					this.OnNoTakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billing")]
	public partial class Billing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<int> _InsureID;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _DichargeDepName;
		
		private string _ResidentDate;
		
		private string _EndResidentDate;
		
		private string _MedicalID;
		
		private string _FirstName;
		
		private string _LastName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnInsureIDChanging(System.Nullable<int> value);
    partial void OnInsureIDChanged();
    partial void OnPayMentChanging(System.Nullable<decimal> value);
    partial void OnPayMentChanged();
    partial void OnDichargeDepNameChanging(string value);
    partial void OnDichargeDepNameChanged();
    partial void OnResidentDateChanging(string value);
    partial void OnResidentDateChanged();
    partial void OnEndResidentDateChanging(string value);
    partial void OnEndResidentDateChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public Billing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureID", DbType="Int")]
		public System.Nullable<int> InsureID
		{
			get
			{
				return this._InsureID;
			}
			set
			{
				if ((this._InsureID != value))
				{
					this.OnInsureIDChanging(value);
					this.SendPropertyChanging();
					this._InsureID = value;
					this.SendPropertyChanged("InsureID");
					this.OnInsureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this.OnPayMentChanging(value);
					this.SendPropertyChanging();
					this._PayMent = value;
					this.SendPropertyChanged("PayMent");
					this.OnPayMentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichargeDepName", DbType="NVarChar(50)")]
		public string DichargeDepName
		{
			get
			{
				return this._DichargeDepName;
			}
			set
			{
				if ((this._DichargeDepName != value))
				{
					this.OnDichargeDepNameChanging(value);
					this.SendPropertyChanging();
					this._DichargeDepName = value;
					this.SendPropertyChanged("DichargeDepName");
					this.OnDichargeDepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentDate", DbType="NChar(10)")]
		public string ResidentDate
		{
			get
			{
				return this._ResidentDate;
			}
			set
			{
				if ((this._ResidentDate != value))
				{
					this.OnResidentDateChanging(value);
					this.SendPropertyChanging();
					this._ResidentDate = value;
					this.SendPropertyChanged("ResidentDate");
					this.OnResidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndResidentDate", DbType="NChar(10)")]
		public string EndResidentDate
		{
			get
			{
				return this._EndResidentDate;
			}
			set
			{
				if ((this._EndResidentDate != value))
				{
					this.OnEndResidentDateChanging(value);
					this.SendPropertyChanging();
					this._EndResidentDate = value;
					this.SendPropertyChanged("EndResidentDate");
					this.OnEndResidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(50)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_EzamiBastariNew")]
	public partial class View_EzamiBastariNew
	{
		
		private string _InsuranceName;
		
		private System.Nullable<int> _IDPerson;
		
		private string _MedicalID;
		
		private int _ValidCenter;
		
		private string _ResidentDate;
		
		private string _EndResidentDate;
		
		private long _DocumentID;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DichargeDepName;
		
		private System.Nullable<bool> _EmergencyVisited;
		
		public View_EzamiBastariNew()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="Int")]
		public System.Nullable<int> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidCenter", DbType="Int NOT NULL")]
		public int ValidCenter
		{
			get
			{
				return this._ValidCenter;
			}
			set
			{
				if ((this._ValidCenter != value))
				{
					this._ValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentDate", DbType="NVarChar(10)")]
		public string ResidentDate
		{
			get
			{
				return this._ResidentDate;
			}
			set
			{
				if ((this._ResidentDate != value))
				{
					this._ResidentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndResidentDate", DbType="NChar(10)")]
		public string EndResidentDate
		{
			get
			{
				return this._EndResidentDate;
			}
			set
			{
				if ((this._EndResidentDate != value))
				{
					this._EndResidentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="BigInt NOT NULL")]
		public long DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this._DocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichargeDepName", DbType="NVarChar(100)")]
		public string DichargeDepName
		{
			get
			{
				return this._DichargeDepName;
			}
			set
			{
				if ((this._DichargeDepName != value))
				{
					this._DichargeDepName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyVisited", DbType="Bit")]
		public System.Nullable<bool> EmergencyVisited
		{
			get
			{
				return this._EmergencyVisited;
			}
			set
			{
				if ((this._EmergencyVisited != value))
				{
					this._EmergencyVisited = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwPersonsCompany")]
	public partial class VwPersonsCompany
	{
		
		private string _MedicalID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _Name;
		
		private System.Guid _ID;
		
		private string _PersonalCode;
		
		private string _FatherName;
		
		private string _BirthPlace;
		
		private string _BirthDate;
		
		private string _IdentityPlace;
		
		private string _IdentityNumber;
		
		private string _Expr1;
		
		private string _InsuranceNo;
		
		private string _InsuranceName;
		
		private string _HomeAddress;
		
		private string _WorkCountry;
		
		private string _RelationName;
		
		private string _SubCompany;
		
		private string _CenterZone;
		
		public VwPersonsCompany()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this._IdentityPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this._IdentityNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(13)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCountry", DbType="NVarChar(20)")]
		public string WorkCountry
		{
			get
			{
				return this._WorkCountry;
			}
			set
			{
				if ((this._WorkCountry != value))
				{
					this._WorkCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20)")]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompany", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string SubCompany
		{
			get
			{
				return this._SubCompany;
			}
			set
			{
				if ((this._SubCompany != value))
				{
					this._SubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterZone", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string CenterZone
		{
			get
			{
				return this._CenterZone;
			}
			set
			{
				if ((this._CenterZone != value))
				{
					this._CenterZone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_IMPHO_Person")]
	public partial class View_IMPHO_Person
	{
		
		private string _NationalCode;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _HomePhone;
		
		private string _ExpDate;
		
		private string _PersonnelNo;
		
		private string _InsuranceNo;
		
		private string _InsureName;
		
		private System.Nullable<byte> _Sex;
		
		private string _BirthPlace;
		
		private string _IdentityPlace;
		
		private string _Note;
		
		private string _HomeCity;
		
		private string _HomeAddress;
		
		private string _IdentityNo;
		
		private string _HomeCountry;
		
		private string _Zone;
		
		private string _MaritalStatus;
		
		private string _EmployeType;
		
		private System.Nullable<bool> _Diabetic;
		
		private System.Nullable<byte> _EmpStatus;
		
		private byte _IDRelation;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _RelationName;
		
		private string _Name;
		
		private string _Expr1;
		
		private System.Nullable<byte> _IDMaritalStatus;
		
		private byte _IDManagement;
		
		private short _IDCompany;
		
		private short _IDSubCompany;
		
		private System.Nullable<byte> _IDValidCenterZone;
		
		private short _IDValidCenter;
		
		private System.Nullable<System.Guid> _NewIDPerson;
		
		private int _IDPerson;
		
		public View_IMPHO_Person()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(4000)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(35)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(25)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this._ExpDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonnelNo", DbType="NVarChar(25)")]
		public string PersonnelNo
		{
			get
			{
				return this._PersonnelNo;
			}
			set
			{
				if ((this._PersonnelNo != value))
				{
					this._PersonnelNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureName", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string InsureName
		{
			get
			{
				return this._InsureName;
			}
			set
			{
				if ((this._InsureName != value))
				{
					this._InsureName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="TinyInt")]
		public System.Nullable<byte> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this._IdentityPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeCity", DbType="NVarChar(30)")]
		public string HomeCity
		{
			get
			{
				return this._HomeCity;
			}
			set
			{
				if ((this._HomeCity != value))
				{
					this._HomeCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNo", DbType="NVarChar(8)")]
		public string IdentityNo
		{
			get
			{
				return this._IdentityNo;
			}
			set
			{
				if ((this._IdentityNo != value))
				{
					this._IdentityNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeCountry", DbType="NVarChar(20)")]
		public string HomeCountry
		{
			get
			{
				return this._HomeCountry;
			}
			set
			{
				if ((this._HomeCountry != value))
				{
					this._HomeCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(141)")]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this._Zone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(30)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this._MaritalStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeType", DbType="NVarChar(20)")]
		public string EmployeType
		{
			get
			{
				return this._EmployeType;
			}
			set
			{
				if ((this._EmployeType != value))
				{
					this._EmployeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diabetic", DbType="Bit")]
		public System.Nullable<bool> Diabetic
		{
			get
			{
				return this._Diabetic;
			}
			set
			{
				if ((this._Diabetic != value))
				{
					this._Diabetic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStatus", DbType="TinyInt")]
		public System.Nullable<byte> EmpStatus
		{
			get
			{
				return this._EmpStatus;
			}
			set
			{
				if ((this._EmpStatus != value))
				{
					this._EmpStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRelation", DbType="TinyInt NOT NULL")]
		public byte IDRelation
		{
			get
			{
				return this._IDRelation;
			}
			set
			{
				if ((this._IDRelation != value))
				{
					this._IDRelation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this._Photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(60)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMaritalStatus", DbType="TinyInt")]
		public System.Nullable<byte> IDMaritalStatus
		{
			get
			{
				return this._IDMaritalStatus;
			}
			set
			{
				if ((this._IDMaritalStatus != value))
				{
					this._IDMaritalStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManagement", DbType="TinyInt NOT NULL")]
		public byte IDManagement
		{
			get
			{
				return this._IDManagement;
			}
			set
			{
				if ((this._IDManagement != value))
				{
					this._IDManagement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt NOT NULL")]
		public short IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSubCompany", DbType="SmallInt NOT NULL")]
		public short IDSubCompany
		{
			get
			{
				return this._IDSubCompany;
			}
			set
			{
				if ((this._IDSubCompany != value))
				{
					this._IDSubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="TinyInt")]
		public System.Nullable<byte> IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this._IDValidCenterZone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", DbType="SmallInt NOT NULL")]
		public short IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this._IDValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewIDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NewIDPerson
		{
			get
			{
				return this._NewIDPerson;
			}
			set
			{
				if ((this._NewIDPerson != value))
				{
					this._NewIDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="Int NOT NULL")]
		public int IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewFinalSurgicalUnit")]
	public partial class ViewFinalSurgicalUnit
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<double> _UltimateSurgicalUnit;
		
		private System.Nullable<double> _Joze_Fanni;
		
		private System.Nullable<double> _Joze_Herfei;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private long _ID;
		
		public ViewFinalSurgicalUnit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateSurgicalUnit", DbType="Float")]
		public System.Nullable<double> UltimateSurgicalUnit
		{
			get
			{
				return this._UltimateSurgicalUnit;
			}
			set
			{
				if ((this._UltimateSurgicalUnit != value))
				{
					this._UltimateSurgicalUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni", DbType="Float")]
		public System.Nullable<double> Joze_Fanni
		{
			get
			{
				return this._Joze_Fanni;
			}
			set
			{
				if ((this._Joze_Fanni != value))
				{
					this._Joze_Fanni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfei", DbType="Float")]
		public System.Nullable<double> Joze_Herfei
		{
			get
			{
				return this._Joze_Herfei;
			}
			set
			{
				if ((this._Joze_Herfei != value))
				{
					this._Joze_Herfei = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewSurgeryBill")]
	public partial class ViewSurgeryBill
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Name;
		
		private System.Nullable<double> _BasicSurgicalUnit;
		
		private string _SalamatBookletCode;
		
		private string _TadilPercentNAme;
		
		private string _DoctorName;
		
		private string _DoctorLastName;
		
		private long _ID;
		
		private System.Guid _Expr1;
		
		private string _Date;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<double> _Joze_Fanni;
		
		private System.Nullable<double> _Joze_Herfei;
		
		private int _SerialNumber;
		
		public ViewSurgeryBill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSurgicalUnit", DbType="Float")]
		public System.Nullable<double> BasicSurgicalUnit
		{
			get
			{
				return this._BasicSurgicalUnit;
			}
			set
			{
				if ((this._BasicSurgicalUnit != value))
				{
					this._BasicSurgicalUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this._SalamatBookletCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilPercentNAme", DbType="NVarChar(200)")]
		public string TadilPercentNAme
		{
			get
			{
				return this._TadilPercentNAme;
			}
			set
			{
				if ((this._TadilPercentNAme != value))
				{
					this._TadilPercentNAme = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="NVarChar(100)")]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this._DoctorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni", DbType="Float")]
		public System.Nullable<double> Joze_Fanni
		{
			get
			{
				return this._Joze_Fanni;
			}
			set
			{
				if ((this._Joze_Fanni != value))
				{
					this._Joze_Fanni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfei", DbType="Float")]
		public System.Nullable<double> Joze_Herfei
		{
			get
			{
				return this._Joze_Herfei;
			}
			set
			{
				if ((this._Joze_Herfei != value))
				{
					this._Joze_Herfei = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewAnesthesiaBill")]
	public partial class ViewAnesthesiaBill
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Name;
		
		private System.Nullable<double> _BasicSurgicalUnit;
		
		private string _SalamatBookletCode;
		
		private string _DoctorName;
		
		private string _DoctorLastName;
		
		private System.Guid _ID;
		
		private long _DossierID;
		
		private string _GSDDate;
		
		private string _GSMDate;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private int _Joze_Fanni;
		
		private int _Joze_Herfei;
		
		public ViewAnesthesiaBill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSurgicalUnit", DbType="Float")]
		public System.Nullable<double> BasicSurgicalUnit
		{
			get
			{
				return this._BasicSurgicalUnit;
			}
			set
			{
				if ((this._BasicSurgicalUnit != value))
				{
					this._BasicSurgicalUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this._SalamatBookletCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="NVarChar(100)")]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this._DoctorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt NOT NULL")]
		public long DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDDate", DbType="NVarChar(10)")]
		public string GSDDate
		{
			get
			{
				return this._GSDDate;
			}
			set
			{
				if ((this._GSDDate != value))
				{
					this._GSDDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMDate", DbType="NVarChar(10)")]
		public string GSMDate
		{
			get
			{
				return this._GSMDate;
			}
			set
			{
				if ((this._GSMDate != value))
				{
					this._GSMDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni", DbType="Int NOT NULL")]
		public int Joze_Fanni
		{
			get
			{
				return this._Joze_Fanni;
			}
			set
			{
				if ((this._Joze_Fanni != value))
				{
					this._Joze_Fanni = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfei", DbType="Int NOT NULL")]
		public int Joze_Herfei
		{
			get
			{
				return this._Joze_Herfei;
			}
			set
			{
				if ((this._Joze_Herfei != value))
				{
					this._Joze_Herfei = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DrugEzami")]
	public partial class Vw_DrugEzami
	{
		
		private string _MedicalID;
		
		private long _ID;
		
		private string _Date;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<short> _insure;
		
		private int _IOtype;
		
		private System.Nullable<int> _XInsuranceID;
		
		private System.Nullable<int> _InsuranceID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Name;
		
		private string _Shape;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private decimal _TotalPrice;
		
		private string _CenterZone;
		
		private string _CompanyName;
		
		private string _SubCompany;
		
		public Vw_DrugEzami()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insure", DbType="SmallInt")]
		public System.Nullable<short> insure
		{
			get
			{
				return this._insure;
			}
			set
			{
				if ((this._insure != value))
				{
					this._insure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XInsuranceID", DbType="Int")]
		public System.Nullable<int> XInsuranceID
		{
			get
			{
				return this._XInsuranceID;
			}
			set
			{
				if ((this._XInsuranceID != value))
				{
					this._XInsuranceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					this._InsuranceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this._Shape = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this._GivenAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterZone", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string CenterZone
		{
			get
			{
				return this._CenterZone;
			}
			set
			{
				if ((this._CenterZone != value))
				{
					this._CenterZone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompany", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string SubCompany
		{
			get
			{
				return this._SubCompany;
			}
			set
			{
				if ((this._SubCompany != value))
				{
					this._SubCompany = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurance")]
	public partial class Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Name;
		
		private System.Nullable<bool> _HasContract;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<int> _ParentID;
		
		private string _CompanyType;
		
		private bool _CheckingExpDate;
		
		private bool _AllowChoose;
		
		private bool _CheckBookletPageNumber;
		
		private bool _CheckbookletCode;
		
		private bool _Complementray;
		
		private bool _NeedAdvancePayment;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Insurance> _Insurances;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntityRef<Insurance> _Insurance1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasContractChanging(System.Nullable<bool> value);
    partial void OnHasContractChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    partial void OnCheckingExpDateChanging(bool value);
    partial void OnCheckingExpDateChanged();
    partial void OnAllowChooseChanging(bool value);
    partial void OnAllowChooseChanged();
    partial void OnCheckBookletPageNumberChanging(bool value);
    partial void OnCheckBookletPageNumberChanged();
    partial void OnCheckbookletCodeChanging(bool value);
    partial void OnCheckbookletCodeChanged();
    partial void OnComplementrayChanging(bool value);
    partial void OnComplementrayChanged();
    partial void OnNeedAdvancePaymentChanging(bool value);
    partial void OnNeedAdvancePaymentChanged();
    #endregion
		
		public Insurance()
		{
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Insurances = new EntitySet<Insurance>(new Action<Insurance>(this.attach_Insurances), new Action<Insurance>(this.detach_Insurances));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Insurance1 = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContract", DbType="Bit")]
		public System.Nullable<bool> HasContract
		{
			get
			{
				return this._HasContract;
			}
			set
			{
				if ((this._HasContract != value))
				{
					this.OnHasContractChanging(value);
					this.SendPropertyChanging();
					this._HasContract = value;
					this.SendPropertyChanged("HasContract");
					this.OnHasContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Insurance1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingExpDate", DbType="Bit NOT NULL")]
		public bool CheckingExpDate
		{
			get
			{
				return this._CheckingExpDate;
			}
			set
			{
				if ((this._CheckingExpDate != value))
				{
					this.OnCheckingExpDateChanging(value);
					this.SendPropertyChanging();
					this._CheckingExpDate = value;
					this.SendPropertyChanged("CheckingExpDate");
					this.OnCheckingExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowChoose", DbType="Bit NOT NULL")]
		public bool AllowChoose
		{
			get
			{
				return this._AllowChoose;
			}
			set
			{
				if ((this._AllowChoose != value))
				{
					this.OnAllowChooseChanging(value);
					this.SendPropertyChanging();
					this._AllowChoose = value;
					this.SendPropertyChanged("AllowChoose");
					this.OnAllowChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBookletPageNumber", DbType="Bit NOT NULL")]
		public bool CheckBookletPageNumber
		{
			get
			{
				return this._CheckBookletPageNumber;
			}
			set
			{
				if ((this._CheckBookletPageNumber != value))
				{
					this.OnCheckBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckBookletPageNumber = value;
					this.SendPropertyChanged("CheckBookletPageNumber");
					this.OnCheckBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckbookletCode", DbType="Bit NOT NULL")]
		public bool CheckbookletCode
		{
			get
			{
				return this._CheckbookletCode;
			}
			set
			{
				if ((this._CheckbookletCode != value))
				{
					this.OnCheckbookletCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckbookletCode = value;
					this.SendPropertyChanged("CheckbookletCode");
					this.OnCheckbookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complementray", DbType="Bit NOT NULL")]
		public bool Complementray
		{
			get
			{
				return this._Complementray;
			}
			set
			{
				if ((this._Complementray != value))
				{
					this.OnComplementrayChanging(value);
					this.SendPropertyChanging();
					this._Complementray = value;
					this.SendPropertyChanged("Complementray");
					this.OnComplementrayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedAdvancePayment", DbType="Bit NOT NULL")]
		public bool NeedAdvancePayment
		{
			get
			{
				return this._NeedAdvancePayment;
			}
			set
			{
				if ((this._NeedAdvancePayment != value))
				{
					this.OnNeedAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._NeedAdvancePayment = value;
					this.SendPropertyChanged("NeedAdvancePayment");
					this.OnNeedAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Insurance", Storage="_Insurances", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Insurance> Insurances
		{
			get
			{
				return this._Insurances;
			}
			set
			{
				this._Insurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="XInsuranceID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Insurance", Storage="_Insurance1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance1
		{
			get
			{
				return this._Insurance1.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance1.Entity;
				if (((previousValue != value) 
							|| (this._Insurance1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance1.Entity = null;
						previousValue.Insurances.Remove(this);
					}
					this._Insurance1.Entity = value;
					if ((value != null))
					{
						value.Insurances.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_Insurances(Insurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance1 = this;
		}
		
		private void detach_Insurances(Insurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance1 = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private decimal _Price;
		
		private string _Date;
		
		private string _Type;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private bool _PayBack;
		
		private string _Description;
		
		private string _Time;
		
		private System.Nullable<long> _DossierID;
		
		private string _TransactionID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorFullName;
		
		private System.Nullable<int> _ModificatorUserID;
		
		private string _ModificatorFullName;
		
		private System.Nullable<System.Guid> _PayBackID;
		
		private int _SerialNumber;
		
		private string _PayBackType;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _InstallMent;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private string _GhabzCode;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Payment> _Payment1;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnPayBackChanging(bool value);
    partial void OnPayBackChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorFullNameChanging(string value);
    partial void OnCreatorFullNameChanged();
    partial void OnModificatorUserIDChanging(System.Nullable<int> value);
    partial void OnModificatorUserIDChanged();
    partial void OnModificatorFullNameChanging(string value);
    partial void OnModificatorFullNameChanged();
    partial void OnPayBackIDChanging(System.Nullable<System.Guid> value);
    partial void OnPayBackIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnPayBackTypeChanging(string value);
    partial void OnPayBackTypeChanged();
    partial void OnCaseNumberChanging(System.Nullable<int> value);
    partial void OnCaseNumberChanged();
    partial void OnInstallMentChanging(string value);
    partial void OnInstallMentChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnGhabzCodeChanging(string value);
    partial void OnGhabzCodeChanged();
    #endregion
		
		public Payment()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Payment1 = default(EntityRef<Payment>);
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBack", DbType="Bit NOT NULL")]
		public bool PayBack
		{
			get
			{
				return this._PayBack;
			}
			set
			{
				if ((this._PayBack != value))
				{
					this.OnPayBackChanging(value);
					this.SendPropertyChanging();
					this._PayBack = value;
					this.SendPropertyChanged("PayBack");
					this.OnPayBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorFullName", DbType="NVarChar(100)")]
		public string CreatorFullName
		{
			get
			{
				return this._CreatorFullName;
			}
			set
			{
				if ((this._CreatorFullName != value))
				{
					this.OnCreatorFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorFullName = value;
					this.SendPropertyChanged("CreatorFullName");
					this.OnCreatorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorUserID", DbType="Int")]
		public System.Nullable<int> ModificatorUserID
		{
			get
			{
				return this._ModificatorUserID;
			}
			set
			{
				if ((this._ModificatorUserID != value))
				{
					this.OnModificatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModificatorUserID = value;
					this.SendPropertyChanged("ModificatorUserID");
					this.OnModificatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorFullName", DbType="NVarChar(100)")]
		public string ModificatorFullName
		{
			get
			{
				return this._ModificatorFullName;
			}
			set
			{
				if ((this._ModificatorFullName != value))
				{
					this.OnModificatorFullNameChanging(value);
					this.SendPropertyChanging();
					this._ModificatorFullName = value;
					this.SendPropertyChanged("ModificatorFullName");
					this.OnModificatorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayBackID
		{
			get
			{
				return this._PayBackID;
			}
			set
			{
				if ((this._PayBackID != value))
				{
					if (this._Payment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayBackIDChanging(value);
					this.SendPropertyChanging();
					this._PayBackID = value;
					this.SendPropertyChanged("PayBackID");
					this.OnPayBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackType", DbType="NVarChar(20)")]
		public string PayBackType
		{
			get
			{
				return this._PayBackType;
			}
			set
			{
				if ((this._PayBackType != value))
				{
					this.OnPayBackTypeChanging(value);
					this.SendPropertyChanging();
					this._PayBackType = value;
					this.SendPropertyChanged("PayBackType");
					this.OnPayBackTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this.OnCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._CaseNumber = value;
					this.SendPropertyChanged("CaseNumber");
					this.OnCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMent", DbType="NVarChar(50)")]
		public string InstallMent
		{
			get
			{
				return this._InstallMent;
			}
			set
			{
				if ((this._InstallMent != value))
				{
					this.OnInstallMentChanging(value);
					this.SendPropertyChanging();
					this._InstallMent = value;
					this.SendPropertyChanged("InstallMent");
					this.OnInstallMentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhabzCode", DbType="NVarChar(50)")]
		public string GhabzCode
		{
			get
			{
				return this._GhabzCode;
			}
			set
			{
				if ((this._GhabzCode != value))
				{
					this.OnGhabzCodeChanging(value);
					this.SendPropertyChanging();
					this._GhabzCode = value;
					this.SendPropertyChanged("GhabzCode");
					this.OnGhabzCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment", Storage="_Payments", ThisKey="ID", OtherKey="PayBackID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment", Storage="_Payment1", ThisKey="PayBackID", OtherKey="ID", IsForeignKey=true)]
		public Payment Payment1
		{
			get
			{
				return this._Payment1.Entity;
			}
			set
			{
				Payment previousValue = this._Payment1.Entity;
				if (((previousValue != value) 
							|| (this._Payment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment1.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Payment1.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PayBackID = value.ID;
					}
					else
					{
						this._PayBackID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Payment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Payment", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Payment", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Payment", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment1 = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dossier")]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _UniqID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _XInsuranceID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _NationalCode;
		
		private string _Date;
		
		private string _Time;
		
		private string _MedicalCenter;
		
		private bool _AdvancePaymentPayed;
		
		private decimal _AdvancePayment;
		
		private int _IOtype;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private System.Nullable<bool> _LockBilling;
		
		private string _SpicialCode;
		
		private System.Nullable<decimal> _AllPateintShare;
		
		private System.Nullable<decimal> _AllInsuranceShare;
		
		private System.Nullable<decimal> _AllPay;
		
		private bool _Editable;
		
		private System.Nullable<System.Guid> _StaffCure;
		
		private System.Nullable<bool> _SATASent;
		
		private string _SATAMessage;
		
		private System.Nullable<int> _InsuranceID2;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Discharge> _Discharge1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUniqIDChanging(System.Guid value);
    partial void OnUniqIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnXInsuranceIDChanging(System.Nullable<int> value);
    partial void OnXInsuranceIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnMedicalCenterChanging(string value);
    partial void OnMedicalCenterChanged();
    partial void OnAdvancePaymentPayedChanging(bool value);
    partial void OnAdvancePaymentPayedChanged();
    partial void OnAdvancePaymentChanging(decimal value);
    partial void OnAdvancePaymentChanged();
    partial void OnIOtypeChanging(int value);
    partial void OnIOtypeChanged();
    partial void OnTotalPayedChanging(bool value);
    partial void OnTotalPayedChanged();
    partial void OnDischargeChanging(bool value);
    partial void OnDischargeChanged();
    partial void OnLockBillingChanging(System.Nullable<bool> value);
    partial void OnLockBillingChanged();
    partial void OnSpicialCodeChanging(string value);
    partial void OnSpicialCodeChanged();
    partial void OnAllPateintShareChanging(System.Nullable<decimal> value);
    partial void OnAllPateintShareChanged();
    partial void OnAllInsuranceShareChanging(System.Nullable<decimal> value);
    partial void OnAllInsuranceShareChanged();
    partial void OnAllPayChanging(System.Nullable<decimal> value);
    partial void OnAllPayChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnStaffCureChanging(System.Nullable<System.Guid> value);
    partial void OnStaffCureChanged();
    partial void OnSATASentChanging(System.Nullable<bool> value);
    partial void OnSATASentChanged();
    partial void OnSATAMessageChanging(string value);
    partial void OnSATAMessageChanged();
    partial void OnInsuranceID2Changing(System.Nullable<int> value);
    partial void OnInsuranceID2Changed();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public Dossier()
		{
			this._Discharge1 = default(EntityRef<Discharge>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Department = default(EntityRef<Department>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid UniqID
		{
			get
			{
				return this._UniqID;
			}
			set
			{
				if ((this._UniqID != value))
				{
					this.OnUniqIDChanging(value);
					this.SendPropertyChanging();
					this._UniqID = value;
					this.SendPropertyChanged("UniqID");
					this.OnUniqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XInsuranceID", DbType="Int")]
		public System.Nullable<int> XInsuranceID
		{
			get
			{
				return this._XInsuranceID;
			}
			set
			{
				if ((this._XInsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._XInsuranceID = value;
					this.SendPropertyChanged("XInsuranceID");
					this.OnXInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(200)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this.OnMedicalCenterChanging(value);
					this.SendPropertyChanging();
					this._MedicalCenter = value;
					this.SendPropertyChanged("MedicalCenter");
					this.OnMedicalCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePaymentPayed", DbType="Bit NOT NULL")]
		public bool AdvancePaymentPayed
		{
			get
			{
				return this._AdvancePaymentPayed;
			}
			set
			{
				if ((this._AdvancePaymentPayed != value))
				{
					this.OnAdvancePaymentPayedChanging(value);
					this.SendPropertyChanging();
					this._AdvancePaymentPayed = value;
					this.SendPropertyChanged("AdvancePaymentPayed");
					this.OnAdvancePaymentPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money NOT NULL")]
		public decimal AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this.OnAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._AdvancePayment = value;
					this.SendPropertyChanged("AdvancePayment");
					this.OnAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this.OnIOtypeChanging(value);
					this.SendPropertyChanging();
					this._IOtype = value;
					this.SendPropertyChanged("IOtype");
					this.OnIOtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this.OnTotalPayedChanging(value);
					this.SendPropertyChanging();
					this._TotalPayed = value;
					this.SendPropertyChanged("TotalPayed");
					this.OnTotalPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this.OnDischargeChanging(value);
					this.SendPropertyChanging();
					this._Discharge = value;
					this.SendPropertyChanged("Discharge");
					this.OnDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockBilling", DbType="Bit")]
		public System.Nullable<bool> LockBilling
		{
			get
			{
				return this._LockBilling;
			}
			set
			{
				if ((this._LockBilling != value))
				{
					this.OnLockBillingChanging(value);
					this.SendPropertyChanging();
					this._LockBilling = value;
					this.SendPropertyChanged("LockBilling");
					this.OnLockBillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpicialCode", DbType="NVarChar(20)")]
		public string SpicialCode
		{
			get
			{
				return this._SpicialCode;
			}
			set
			{
				if ((this._SpicialCode != value))
				{
					this.OnSpicialCodeChanging(value);
					this.SendPropertyChanging();
					this._SpicialCode = value;
					this.SendPropertyChanged("SpicialCode");
					this.OnSpicialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPateintShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPateintShare
		{
			get
			{
				return this._AllPateintShare;
			}
			set
			{
				if ((this._AllPateintShare != value))
				{
					this.OnAllPateintShareChanging(value);
					this.SendPropertyChanging();
					this._AllPateintShare = value;
					this.SendPropertyChanged("AllPateintShare");
					this.OnAllPateintShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllInsuranceShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllInsuranceShare
		{
			get
			{
				return this._AllInsuranceShare;
			}
			set
			{
				if ((this._AllInsuranceShare != value))
				{
					this.OnAllInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._AllInsuranceShare = value;
					this.SendPropertyChanged("AllInsuranceShare");
					this.OnAllInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPay
		{
			get
			{
				return this._AllPay;
			}
			set
			{
				if ((this._AllPay != value))
				{
					this.OnAllPayChanging(value);
					this.SendPropertyChanging();
					this._AllPay = value;
					this.SendPropertyChanged("AllPay");
					this.OnAllPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._Editable;
			}
			set
			{
				if ((this._Editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._Editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCure", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffCure
		{
			get
			{
				return this._StaffCure;
			}
			set
			{
				if ((this._StaffCure != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffCureChanging(value);
					this.SendPropertyChanging();
					this._StaffCure = value;
					this.SendPropertyChanged("StaffCure");
					this.OnStaffCureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATASent", DbType="Bit")]
		public System.Nullable<bool> SATASent
		{
			get
			{
				return this._SATASent;
			}
			set
			{
				if ((this._SATASent != value))
				{
					this.OnSATASentChanging(value);
					this.SendPropertyChanging();
					this._SATASent = value;
					this.SendPropertyChanged("SATASent");
					this.OnSATASentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAMessage", DbType="NVarChar(500)")]
		public string SATAMessage
		{
			get
			{
				return this._SATAMessage;
			}
			set
			{
				if ((this._SATAMessage != value))
				{
					this.OnSATAMessageChanging(value);
					this.SendPropertyChanging();
					this._SATAMessage = value;
					this.SendPropertyChanged("SATAMessage");
					this.OnSATAMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID2", DbType="Int")]
		public System.Nullable<int> InsuranceID2
		{
			get
			{
				return this._InsuranceID2;
			}
			set
			{
				if ((this._InsuranceID2 != value))
				{
					this.OnInsuranceID2Changing(value);
					this.SendPropertyChanging();
					this._InsuranceID2 = value;
					this.SendPropertyChanged("InsuranceID2");
					this.OnInsuranceID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Discharge1", ThisKey="ID", OtherKey="DossierID", IsUnique=true, IsForeignKey=false)]
		public Discharge Discharge1
		{
			get
			{
				return this._Discharge1.Entity;
			}
			set
			{
				Discharge previousValue = this._Discharge1.Entity;
				if (((previousValue != value) 
							|| (this._Discharge1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discharge1.Entity = null;
						previousValue.Dossier = null;
					}
					this._Discharge1.Entity = value;
					if ((value != null))
					{
						value.Dossier = this;
					}
					this.SendPropertyChanged("Discharge1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Payment", Storage="_Payments", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Insurance", ThisKey="XInsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._XInsuranceID = value.ID;
					}
					else
					{
						this._XInsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Staff", ThisKey="StaffCure", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._StaffCure = value.ID;
					}
					else
					{
						this._StaffCure = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DossierBastari")]
	public partial class Vw_DossierBastari
	{
		
		private long _ID;
		
		private string _NationalCode;
		
		private int _IOtype;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _Date;
		
		private System.Nullable<int> _XInsuranceID;
		
		private string _depName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _InsurName;
		
		private string _CompanyType;
		
		private string _MedicalID;
		
		private string _DischargeDate;
		
		private string _AdmitDate;
		
		private string _SpicialCode;
		
		private decimal _AdvancePayment;
		
		private bool _AdvancePaymentPayed;
		
		private string _Time;
		
		private string _DischargeTime;
		
		private string _CreatorName;
		
		public Vw_DossierBastari()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XInsuranceID", DbType="Int")]
		public System.Nullable<int> XInsuranceID
		{
			get
			{
				return this._XInsuranceID;
			}
			set
			{
				if ((this._XInsuranceID != value))
				{
					this._XInsuranceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depName", DbType="NVarChar(100)")]
		public string depName
		{
			get
			{
				return this._depName;
			}
			set
			{
				if ((this._depName != value))
				{
					this._depName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InsurName
		{
			get
			{
				return this._InsurName;
			}
			set
			{
				if ((this._InsurName != value))
				{
					this._InsurName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this._CompanyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this._DischargeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpicialCode", DbType="NVarChar(20)")]
		public string SpicialCode
		{
			get
			{
				return this._SpicialCode;
			}
			set
			{
				if ((this._SpicialCode != value))
				{
					this._SpicialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money NOT NULL")]
		public decimal AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this._AdvancePayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePaymentPayed", DbType="Bit NOT NULL")]
		public bool AdvancePaymentPayed
		{
			get
			{
				return this._AdvancePaymentPayed;
			}
			set
			{
				if ((this._AdvancePaymentPayed != value))
				{
					this._AdvancePaymentPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this._DischargeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorName", DbType="NVarChar(102)")]
		public string CreatorName
		{
			get
			{
				return this._CreatorName;
			}
			set
			{
				if ((this._CreatorName != value))
				{
					this._CreatorName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_CashPay")]
	public partial class Vw_CashPay
	{
		
		private string _CompanyType;
		
		private string _Date;
		
		private string _DrFname;
		
		private string _DrLName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private long _ID;
		
		private int _IOtype;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _Expr1;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Insure;
		
		private string _PersonalCode;
		
		private string _DepName;
		
		private string _NationalCode;
		
		private string _Name;
		
		public Vw_CashPay()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this._CompanyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrFname", DbType="NVarChar(100)")]
		public string DrFname
		{
			get
			{
				return this._DrFname;
			}
			set
			{
				if ((this._DrFname != value))
				{
					this._DrFname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrLName", DbType="NVarChar(100)")]
		public string DrLName
		{
			get
			{
				return this._DrLName;
			}
			set
			{
				if ((this._DrLName != value))
				{
					this._DrLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insure", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Insure
		{
			get
			{
				return this._Insure;
			}
			set
			{
				if ((this._Insure != value))
				{
					this._Insure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepName", DbType="NVarChar(100)")]
		public string DepName
		{
			get
			{
				return this._DepName;
			}
			set
			{
				if ((this._DepName != value))
				{
					this._DepName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_OutDoorPatinetByInsurance")]
	public partial class Vw_OutDoorPatinetByInsurance
	{
		
		private string _Patinet;
		
		private long _DosID;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _Name;
		
		private string _Date;
		
		private System.Nullable<decimal> _Price;
		
		private string _Expr1;
		
		private string _ServiceName;
		
		public Vw_OutDoorPatinetByInsurance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patinet", DbType="NVarChar(201)")]
		public string Patinet
		{
			get
			{
				return this._Patinet;
			}
			set
			{
				if ((this._Patinet != value))
				{
					this._Patinet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosID", DbType="BigInt NOT NULL")]
		public long DosID
		{
			get
			{
				return this._DosID;
			}
			set
			{
				if ((this._DosID != value))
				{
					this._DosID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(100)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_FalateghareSarepaei")]
	public partial class View_FalateghareSarepaei
	{
		
		private string _InsuranceName;
		
		private System.Nullable<short> _IDCompany;
		
		private int _IOtype;
		
		private string _CatName;
		
		private string _Name;
		
		private System.Nullable<int> _IDPerson;
		
		private string _MedicalID;
		
		private string _PersonalNo;
		
		private System.Nullable<int> _RelationOrderNo;
		
		private int _ValidCenter;
		
		private string _VisitDate;
		
		private int _Shift;
		
		private int _MedicalService;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _RelationName;
		
		public View_FalateghareSarepaei()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompany", DbType="SmallInt")]
		public System.Nullable<short> IDCompany
		{
			get
			{
				return this._IDCompany;
			}
			set
			{
				if ((this._IDCompany != value))
				{
					this._IDCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="Int")]
		public System.Nullable<int> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="NVarChar(10)")]
		public string PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationOrderNo", DbType="Int")]
		public System.Nullable<int> RelationOrderNo
		{
			get
			{
				return this._RelationOrderNo;
			}
			set
			{
				if ((this._RelationOrderNo != value))
				{
					this._RelationOrderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidCenter", DbType="Int NOT NULL")]
		public int ValidCenter
		{
			get
			{
				return this._ValidCenter;
			}
			set
			{
				if ((this._ValidCenter != value))
				{
					this._ValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="NVarChar(10)")]
		public string VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this._VisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="Int NOT NULL")]
		public int Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this._Shift = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalService", DbType="Int NOT NULL")]
		public int MedicalService
		{
			get
			{
				return this._MedicalService;
			}
			set
			{
				if ((this._MedicalService != value))
				{
					this._MedicalService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20)")]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_AllInsureBastari")]
	public partial class View_AllInsureBastari
	{
		
		private string _InsuranceName;
		
		private System.Nullable<long> _DocumentID;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _DichargeDepName;
		
		private string _ResidentDate;
		
		private string _EndResidentDate;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MedicalID;
		
		private System.Nullable<int> _InsureID;
		
		private string _CityName;
		
		private string _Company;
		
		private string _SubCompany;
		
		private string _Management;
		
		private System.Nullable<byte> _IDRelation;
		
		private string _RelationName;
		
		public View_AllInsureBastari()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="BigInt")]
		public System.Nullable<long> DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this._DocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichargeDepName", DbType="NVarChar(50)")]
		public string DichargeDepName
		{
			get
			{
				return this._DichargeDepName;
			}
			set
			{
				if ((this._DichargeDepName != value))
				{
					this._DichargeDepName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentDate", DbType="NChar(10)")]
		public string ResidentDate
		{
			get
			{
				return this._ResidentDate;
			}
			set
			{
				if ((this._ResidentDate != value))
				{
					this._ResidentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndResidentDate", DbType="NChar(10)")]
		public string EndResidentDate
		{
			get
			{
				return this._EndResidentDate;
			}
			set
			{
				if ((this._EndResidentDate != value))
				{
					this._EndResidentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(50)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureID", DbType="Int")]
		public System.Nullable<int> InsureID
		{
			get
			{
				return this._InsureID;
			}
			set
			{
				if ((this._InsureID != value))
				{
					this._InsureID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(70)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCompany", DbType="NVarChar(60)")]
		public string SubCompany
		{
			get
			{
				return this._SubCompany;
			}
			set
			{
				if ((this._SubCompany != value))
				{
					this._SubCompany = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Management", DbType="NVarChar(50)")]
		public string Management
		{
			get
			{
				return this._Management;
			}
			set
			{
				if ((this._Management != value))
				{
					this._Management = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRelation", DbType="TinyInt")]
		public System.Nullable<byte> IDRelation
		{
			get
			{
				return this._IDRelation;
			}
			set
			{
				if ((this._IDRelation != value))
				{
					this._IDRelation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20)")]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_FalateghareSarepaei1")]
	public partial class View_FalateghareSarepaei1
	{
		
		private string _InsuranceName;
		
		private string _CatName;
		
		private string _MedicalID;
		
		private string _PersonalNo;
		
		private System.Nullable<int> _RelationOrderNo;
		
		private string _VisitDate;
		
		private System.Nullable<double> _PayMent;
		
		private string _RelationName;
		
		private System.Nullable<byte> _IDRelation;
		
		private System.Nullable<long> _DossierID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Guid _ID;
		
		public View_FalateghareSarepaei1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(MAX)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="NVarChar(10)")]
		public string PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this._PersonalNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationOrderNo", DbType="Int")]
		public System.Nullable<int> RelationOrderNo
		{
			get
			{
				return this._RelationOrderNo;
			}
			set
			{
				if ((this._RelationOrderNo != value))
				{
					this._RelationOrderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="NVarChar(10)")]
		public string VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this._VisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Float")]
		public System.Nullable<double> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20)")]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRelation", DbType="TinyInt")]
		public System.Nullable<byte> IDRelation
		{
			get
			{
				return this._IDRelation;
			}
			set
			{
				if ((this._IDRelation != value))
				{
					this._IDRelation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class ExtendedSearchResult
	{
		
		private System.Guid _ID;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FatherName;
		
		private string _IdentityNumber;
		
		private string _BirthDate;
		
		private string _Phone;
		
		private string _PersonalCode;
		
		public ExtendedSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this._IdentityNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
