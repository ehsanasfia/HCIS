#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCISSurgery.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCIS")]
	public partial class HCISSurgeryDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDiagnosticServiceDetail(DiagnosticServiceDetail instance);
    partial void UpdateDiagnosticServiceDetail(DiagnosticServiceDetail instance);
    partial void DeleteDiagnosticServiceDetail(DiagnosticServiceDetail instance);
    partial void InsertServiceCategory(ServiceCategory instance);
    partial void UpdateServiceCategory(ServiceCategory instance);
    partial void DeleteServiceCategory(ServiceCategory instance);
    partial void InsertTariff(Tariff instance);
    partial void UpdateTariff(Tariff instance);
    partial void DeleteTariff(Tariff instance);
    partial void InsertSampleAnswer(SampleAnswer instance);
    partial void UpdateSampleAnswer(SampleAnswer instance);
    partial void DeleteSampleAnswer(SampleAnswer instance);
    partial void InsertFactorD(FactorD instance);
    partial void UpdateFactorD(FactorD instance);
    partial void DeleteFactorD(FactorD instance);
    partial void InsertFactorM(FactorM instance);
    partial void UpdateFactorM(FactorM instance);
    partial void DeleteFactorM(FactorM instance);
    partial void InsertFavoriteService(FavoriteService instance);
    partial void UpdateFavoriteService(FavoriteService instance);
    partial void DeleteFavoriteService(FavoriteService instance);
    partial void InsertPatternD(PatternD instance);
    partial void UpdatePatternD(PatternD instance);
    partial void DeletePatternD(PatternD instance);
    partial void InsertPatternM(PatternM instance);
    partial void UpdatePatternM(PatternM instance);
    partial void DeletePatternM(PatternM instance);
    partial void InsertBed(Bed instance);
    partial void UpdateBed(Bed instance);
    partial void DeleteBed(Bed instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertAfterSurgeryReport(AfterSurgeryReport instance);
    partial void UpdateAfterSurgeryReport(AfterSurgeryReport instance);
    partial void DeleteAfterSurgeryReport(AfterSurgeryReport instance);
    partial void InsertAnesthesiaReport(AnesthesiaReport instance);
    partial void UpdateAnesthesiaReport(AnesthesiaReport instance);
    partial void DeleteAnesthesiaReport(AnesthesiaReport instance);
    partial void InsertModularService(ModularService instance);
    partial void UpdateModularService(ModularService instance);
    partial void DeleteModularService(ModularService instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertPresentation(Presentation instance);
    partial void UpdatePresentation(Presentation instance);
    partial void DeletePresentation(Presentation instance);
    partial void InsertDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void UpdateDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void DeleteDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertDischarge(Discharge instance);
    partial void UpdateDischarge(Discharge instance);
    partial void DeleteDischarge(Discharge instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertInsurance(Insurance instance);
    partial void UpdateInsurance(Insurance instance);
    partial void DeleteInsurance(Insurance instance);
    partial void InsertTadilArea(TadilArea instance);
    partial void UpdateTadilArea(TadilArea instance);
    partial void DeleteTadilArea(TadilArea instance);
    partial void InsertPharmacyDrug(PharmacyDrug instance);
    partial void UpdatePharmacyDrug(PharmacyDrug instance);
    partial void DeletePharmacyDrug(PharmacyDrug instance);
    partial void InsertGivenServiceM(GivenServiceM instance);
    partial void UpdateGivenServiceM(GivenServiceM instance);
    partial void DeleteGivenServiceM(GivenServiceM instance);
    partial void InsertRVU(RVU instance);
    partial void UpdateRVU(RVU instance);
    partial void DeleteRVU(RVU instance);
    partial void InsertGivenServiceD(GivenServiceD instance);
    partial void UpdateGivenServiceD(GivenServiceD instance);
    partial void DeleteGivenServiceD(GivenServiceD instance);
    partial void InsertSurgery(Surgery instance);
    partial void UpdateSurgery(Surgery instance);
    partial void DeleteSurgery(Surgery instance);
    #endregion
		
		public HCISSurgeryDataClassesDataContext() : 
				base(global::HCISSurgery.Properties.Settings.Default.HCISConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HCISSurgeryDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISSurgeryDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISSurgeryDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISSurgeryDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DiagnosticServiceDetail> DiagnosticServiceDetails
		{
			get
			{
				return this.GetTable<DiagnosticServiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCategory> ServiceCategories
		{
			get
			{
				return this.GetTable<ServiceCategory>();
			}
		}
		
		public System.Data.Linq.Table<Tariff> Tariffs
		{
			get
			{
				return this.GetTable<Tariff>();
			}
		}
		
		public System.Data.Linq.Table<SampleAnswer> SampleAnswers
		{
			get
			{
				return this.GetTable<SampleAnswer>();
			}
		}
		
		public System.Data.Linq.Table<FactorD> FactorDs
		{
			get
			{
				return this.GetTable<FactorD>();
			}
		}
		
		public System.Data.Linq.Table<FactorM> FactorMs
		{
			get
			{
				return this.GetTable<FactorM>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteService> FavoriteServices
		{
			get
			{
				return this.GetTable<FavoriteService>();
			}
		}
		
		public System.Data.Linq.Table<PatternD> PatternDs
		{
			get
			{
				return this.GetTable<PatternD>();
			}
		}
		
		public System.Data.Linq.Table<PatternM> PatternMs
		{
			get
			{
				return this.GetTable<PatternM>();
			}
		}
		
		public System.Data.Linq.Table<Bed> Beds
		{
			get
			{
				return this.GetTable<Bed>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<AfterSurgeryReport> AfterSurgeryReports
		{
			get
			{
				return this.GetTable<AfterSurgeryReport>();
			}
		}
		
		public System.Data.Linq.Table<AnesthesiaReport> AnesthesiaReports
		{
			get
			{
				return this.GetTable<AnesthesiaReport>();
			}
		}
		
		public System.Data.Linq.Table<ModularService> ModularServices
		{
			get
			{
				return this.GetTable<ModularService>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<Presentation> Presentations
		{
			get
			{
				return this.GetTable<Presentation>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosseirPayment> Vw_DosseirPayments
		{
			get
			{
				return this.GetTable<Vw_DosseirPayment>();
			}
		}
		
		public System.Data.Linq.Table<DrugFrequencyUsage> DrugFrequencyUsages
		{
			get
			{
				return this.GetTable<DrugFrequencyUsage>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Vw_DosFinance> Vw_DosFinances
		{
			get
			{
				return this.GetTable<Vw_DosFinance>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossiers
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<VwPersonsCompany> VwPersonsCompanies
		{
			get
			{
				return this.GetTable<VwPersonsCompany>();
			}
		}
		
		public System.Data.Linq.Table<Discharge> Discharges
		{
			get
			{
				return this.GetTable<Discharge>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Insurance> Insurances
		{
			get
			{
				return this.GetTable<Insurance>();
			}
		}
		
		public System.Data.Linq.Table<TadilArea> TadilAreas
		{
			get
			{
				return this.GetTable<TadilArea>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this.GetTable<PharmacyDrug>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this.GetTable<GivenServiceM>();
			}
		}
		
		public System.Data.Linq.Table<RVU> RVUs
		{
			get
			{
				return this.GetTable<RVU>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this.GetTable<GivenServiceD>();
			}
		}
		
		public System.Data.Linq.Table<Surgery> Surgeries
		{
			get
			{
				return this.GetTable<Surgery>();
			}
		}
		
		public System.Data.Linq.Table<VwDoctorInstraction> VwDoctorInstractions
		{
			get
			{
				return this.GetTable<VwDoctorInstraction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiagnosticServiceDetail")]
	public partial class DiagnosticServiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Code;
		
		private string _Description;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DiagnosticServiceDetail()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DiagnosticServiceDetail", Storage="_Service", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DiagnosticServiceDetail = null;
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DiagnosticServiceDetail = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCategory")]
	public partial class ServiceCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ServiceCategory()
		{
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_Services", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ServiceCategoryID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariff")]
	public partial class Tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<decimal> _FreePrice;
		
		private System.Nullable<decimal> _GovernmentalPrice;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private bool _Lock;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Insurance> _Insurance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPatientShareChanging(System.Nullable<decimal> value);
    partial void OnPatientShareChanged();
    partial void OnOrganizationShareChanging(System.Nullable<decimal> value);
    partial void OnOrganizationShareChanged();
    partial void OnFreePriceChanging(System.Nullable<decimal> value);
    partial void OnFreePriceChanged();
    partial void OnGovernmentalPriceChanging(System.Nullable<decimal> value);
    partial void OnGovernmentalPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    #endregion
		
		public Tariff()
		{
			this._Service = default(EntityRef<Service>);
			this._Insurance = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this.OnOrganizationShareChanging(value);
					this.SendPropertyChanging();
					this._OrganizationShare = value;
					this.SendPropertyChanged("OrganizationShare");
					this.OnOrganizationShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreePrice", DbType="Money")]
		public System.Nullable<decimal> FreePrice
		{
			get
			{
				return this._FreePrice;
			}
			set
			{
				if ((this._FreePrice != value))
				{
					this.OnFreePriceChanging(value);
					this.SendPropertyChanging();
					this._FreePrice = value;
					this.SendPropertyChanged("FreePrice");
					this.OnFreePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentalPrice", DbType="Money")]
		public System.Nullable<decimal> GovernmentalPrice
		{
			get
			{
				return this._GovernmentalPrice;
			}
			set
			{
				if ((this._GovernmentalPrice != value))
				{
					this.OnGovernmentalPriceChanging(value);
					this.SendPropertyChanging();
					this._GovernmentalPrice = value;
					this.SendPropertyChanged("GovernmentalPrice");
					this.OnGovernmentalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleAnswer")]
	public partial class SampleAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GroupServiceID;
		
		private string _Title;
		
		private string _Description;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGroupServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnGroupServiceIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SampleAnswer()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GroupServiceID
		{
			get
			{
				return this._GroupServiceID;
			}
			set
			{
				if ((this._GroupServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupServiceIDChanging(value);
					this.SendPropertyChanging();
					this._GroupServiceID = value;
					this.SendPropertyChanged("GroupServiceID");
					this.OnGroupServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SampleAnswer", Storage="_Service", ThisKey="GroupServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.SampleAnswers.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.SampleAnswers.Add(this);
						this._GroupServiceID = value.ID;
					}
					else
					{
						this._GroupServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactorD")]
	public partial class FactorD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _FactorMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<int> _AmountBuy;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ExpireDate;
		
		private System.Nullable<int> _NumPageProduct;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Tax;
		
		private string _Pack;
		
		private EntityRef<FactorM> _FactorM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFactorMIDChanging(System.Nullable<System.Guid> value);
    partial void OnFactorMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountBuyChanging(System.Nullable<int> value);
    partial void OnAmountBuyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnExpireDateChanging(string value);
    partial void OnExpireDateChanged();
    partial void OnNumPageProductChanging(System.Nullable<int> value);
    partial void OnNumPageProductChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnTaxChanging(System.Nullable<decimal> value);
    partial void OnTaxChanged();
    partial void OnPackChanging(string value);
    partial void OnPackChanged();
    #endregion
		
		public FactorD()
		{
			this._FactorM = default(EntityRef<FactorM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FactorMID
		{
			get
			{
				return this._FactorMID;
			}
			set
			{
				if ((this._FactorMID != value))
				{
					if (this._FactorM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactorMIDChanging(value);
					this.SendPropertyChanging();
					this._FactorMID = value;
					this.SendPropertyChanged("FactorMID");
					this.OnFactorMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBuy", DbType="Int")]
		public System.Nullable<int> AmountBuy
		{
			get
			{
				return this._AmountBuy;
			}
			set
			{
				if ((this._AmountBuy != value))
				{
					this.OnAmountBuyChanging(value);
					this.SendPropertyChanging();
					this._AmountBuy = value;
					this.SendPropertyChanged("AmountBuy");
					this.OnAmountBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="NVarChar(10)")]
		public string ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPageProduct", DbType="Int")]
		public System.Nullable<int> NumPageProduct
		{
			get
			{
				return this._NumPageProduct;
			}
			set
			{
				if ((this._NumPageProduct != value))
				{
					this.OnNumPageProductChanging(value);
					this.SendPropertyChanging();
					this._NumPageProduct = value;
					this.SendPropertyChanged("NumPageProduct");
					this.OnNumPageProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pack", DbType="NVarChar(100)")]
		public string Pack
		{
			get
			{
				return this._Pack;
			}
			set
			{
				if ((this._Pack != value))
				{
					this.OnPackChanging(value);
					this.SendPropertyChanging();
					this._Pack = value;
					this.SendPropertyChanged("Pack");
					this.OnPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactorM_FactorD", Storage="_FactorM", ThisKey="FactorMID", OtherKey="ID", IsForeignKey=true)]
		public FactorM FactorM
		{
			get
			{
				return this._FactorM.Entity;
			}
			set
			{
				FactorM previousValue = this._FactorM.Entity;
				if (((previousValue != value) 
							|| (this._FactorM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactorM.Entity = null;
						previousValue.FactorDs.Remove(this);
					}
					this._FactorM.Entity = value;
					if ((value != null))
					{
						value.FactorDs.Add(this);
						this._FactorMID = value.ID;
					}
					else
					{
						this._FactorMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("FactorM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FactorD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.FactorDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.FactorDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactorM")]
	public partial class FactorM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _CompanyID;
		
		private string _FactorNumber;
		
		private string _FactorDate;
		
		private string _ResponsibleSale;
		
		private string _Description;
		
		private System.Nullable<int> _Ordernum;
		
		private string _Barname;
		
		private string _DeliveryDate;
		
		private string _DeliveryTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<System.Guid> _Distributor;
		
		private EntitySet<FactorD> _FactorDs;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnCompanyIDChanged();
    partial void OnFactorNumberChanging(string value);
    partial void OnFactorNumberChanged();
    partial void OnFactorDateChanging(string value);
    partial void OnFactorDateChanged();
    partial void OnResponsibleSaleChanging(string value);
    partial void OnResponsibleSaleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOrdernumChanging(System.Nullable<int> value);
    partial void OnOrdernumChanged();
    partial void OnBarnameChanging(string value);
    partial void OnBarnameChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnDeliveryTimeChanging(string value);
    partial void OnDeliveryTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDistributorChanging(System.Nullable<System.Guid> value);
    partial void OnDistributorChanged();
    #endregion
		
		public FactorM()
		{
			this._FactorDs = new EntitySet<FactorD>(new Action<FactorD>(this.attach_FactorDs), new Action<FactorD>(this.detach_FactorDs));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorNumber", DbType="NVarChar(50)")]
		public string FactorNumber
		{
			get
			{
				return this._FactorNumber;
			}
			set
			{
				if ((this._FactorNumber != value))
				{
					this.OnFactorNumberChanging(value);
					this.SendPropertyChanging();
					this._FactorNumber = value;
					this.SendPropertyChanged("FactorNumber");
					this.OnFactorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorDate", DbType="NVarChar(10)")]
		public string FactorDate
		{
			get
			{
				return this._FactorDate;
			}
			set
			{
				if ((this._FactorDate != value))
				{
					this.OnFactorDateChanging(value);
					this.SendPropertyChanging();
					this._FactorDate = value;
					this.SendPropertyChanged("FactorDate");
					this.OnFactorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleSale", DbType="NVarChar(50)")]
		public string ResponsibleSale
		{
			get
			{
				return this._ResponsibleSale;
			}
			set
			{
				if ((this._ResponsibleSale != value))
				{
					this.OnResponsibleSaleChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleSale = value;
					this.SendPropertyChanged("ResponsibleSale");
					this.OnResponsibleSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordernum", DbType="Int")]
		public System.Nullable<int> Ordernum
		{
			get
			{
				return this._Ordernum;
			}
			set
			{
				if ((this._Ordernum != value))
				{
					this.OnOrdernumChanging(value);
					this.SendPropertyChanging();
					this._Ordernum = value;
					this.SendPropertyChanged("Ordernum");
					this.OnOrdernumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barname", DbType="NVarChar(100)")]
		public string Barname
		{
			get
			{
				return this._Barname;
			}
			set
			{
				if ((this._Barname != value))
				{
					this.OnBarnameChanging(value);
					this.SendPropertyChanging();
					this._Barname = value;
					this.SendPropertyChanged("Barname");
					this.OnBarnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(10)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="NVarChar(8)")]
		public string DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distributor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Distributor
		{
			get
			{
				return this._Distributor;
			}
			set
			{
				if ((this._Distributor != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistributorChanging(value);
					this.SendPropertyChanging();
					this._Distributor = value;
					this.SendPropertyChanged("Distributor");
					this.OnDistributorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactorM_FactorD", Storage="_FactorDs", ThisKey="ID", OtherKey="FactorMID")]
		public EntitySet<FactorD> FactorDs
		{
			get
			{
				return this._FactorDs;
			}
			set
			{
				this._FactorDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_FactorM", Storage="_Department", ThisKey="Distributor", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.FactorMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.FactorMs.Add(this);
						this._Distributor = value.ID;
					}
					else
					{
						this._Distributor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorDs(FactorD entity)
		{
			this.SendPropertyChanging();
			entity.FactorM = this;
		}
		
		private void detach_FactorDs(FactorD entity)
		{
			this.SendPropertyChanging();
			entity.FactorM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteService")]
	public partial class FavoriteService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public FavoriteService()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteService", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FavoriteServices.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FavoriteServices.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FavoriteService", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.FavoriteServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.FavoriteServices.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternD")]
	public partial class PatternD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PatternMID;
		
		private System.Nullable<System.Guid> _ServiceDID;
		
		private double _Amount;
		
		private EntityRef<PatternM> _PatternM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternMIDChanging(System.Nullable<int> value);
    partial void OnPatternMIDChanged();
    partial void OnServiceDIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceDIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public PatternD()
		{
			this._PatternM = default(EntityRef<PatternM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternMID", DbType="Int")]
		public System.Nullable<int> PatternMID
		{
			get
			{
				return this._PatternMID;
			}
			set
			{
				if ((this._PatternMID != value))
				{
					if (this._PatternM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternMIDChanging(value);
					this.SendPropertyChanging();
					this._PatternMID = value;
					this.SendPropertyChanged("PatternMID");
					this.OnPatternMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceDID
		{
			get
			{
				return this._ServiceDID;
			}
			set
			{
				if ((this._ServiceDID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceDIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceDID = value;
					this.SendPropertyChanged("ServiceDID");
					this.OnServiceDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternM", ThisKey="PatternMID", OtherKey="ID", IsForeignKey=true)]
		public PatternM PatternM
		{
			get
			{
				return this._PatternM.Entity;
			}
			set
			{
				PatternM previousValue = this._PatternM.Entity;
				if (((previousValue != value) 
							|| (this._PatternM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatternM.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._PatternM.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._PatternMID = value.ID;
					}
					else
					{
						this._PatternMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatternM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_Service", ThisKey="ServiceDID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._ServiceDID = value.ID;
					}
					else
					{
						this._ServiceDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternM")]
	public partial class PatternM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PatternNumber;
		
		private string _PatternName;
		
		private System.Nullable<System.Guid> _ServiceMID;
		
		private string _Date;
		
		private string _Time;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternNumberChanging(int value);
    partial void OnPatternNumberChanged();
    partial void OnPatternNameChanging(string value);
    partial void OnPatternNameChanged();
    partial void OnServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceMIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public PatternM()
		{
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternNumber", DbType="Int NOT NULL")]
		public int PatternNumber
		{
			get
			{
				return this._PatternNumber;
			}
			set
			{
				if ((this._PatternNumber != value))
				{
					this.OnPatternNumberChanging(value);
					this.SendPropertyChanging();
					this._PatternNumber = value;
					this.SendPropertyChanged("PatternNumber");
					this.OnPatternNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternName", DbType="NVarChar(100)")]
		public string PatternName
		{
			get
			{
				return this._PatternName;
			}
			set
			{
				if ((this._PatternName != value))
				{
					this.OnPatternNameChanging(value);
					this.SendPropertyChanging();
					this._PatternName = value;
					this.SendPropertyChanged("PatternName");
					this.OnPatternNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceMID
		{
			get
			{
				return this._ServiceMID;
			}
			set
			{
				if ((this._ServiceMID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceMID = value;
					this.SendPropertyChanged("ServiceMID");
					this.OnServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="PatternMID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_Service", ThisKey="ServiceMID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternMs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternMs.Add(this);
						this._ServiceMID = value.ID;
					}
					else
					{
						this._ServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bed")]
	public partial class Bed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Bed1;
		
		private System.Nullable<int> _BedNumber;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _Condition;
		
		private string _Type;
		
		private System.Nullable<int> _RoomNumber;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBed1Changing(System.Nullable<int> value);
    partial void OnBed1Changed();
    partial void OnBedNumberChanging(System.Nullable<int> value);
    partial void OnBedNumberChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    #endregion
		
		public Bed()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bed", Storage="_Bed1", DbType="Int")]
		public System.Nullable<int> Bed1
		{
			get
			{
				return this._Bed1;
			}
			set
			{
				if ((this._Bed1 != value))
				{
					this.OnBed1Changing(value);
					this.SendPropertyChanging();
					this._Bed1 = value;
					this.SendPropertyChanged("Bed1");
					this.OnBed1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedNumber", DbType="Int")]
		public System.Nullable<int> BedNumber
		{
			get
			{
				return this._BedNumber;
			}
			set
			{
				if ((this._BedNumber != value))
				{
					this.OnBedNumberChanging(value);
					this.SendPropertyChanging();
					this._BedNumber = value;
					this.SendPropertyChanged("BedNumber");
					this.OnBedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(50)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="BedID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Bed", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Beds.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Beds.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Bed = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Bed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private bool _Priority;
		
		private System.Nullable<System.Guid> _DestinationWard;
		
		private string _SuggestedDate;
		
		private string _SuggestedTime;
		
		private string _StartDateLicense;
		
		private string _EndDateLicense;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private int _AdmitDateCount;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnDestinationWardChanging(System.Nullable<System.Guid> value);
    partial void OnDestinationWardChanged();
    partial void OnSuggestedDateChanging(string value);
    partial void OnSuggestedDateChanged();
    partial void OnSuggestedTimeChanging(string value);
    partial void OnSuggestedTimeChanged();
    partial void OnStartDateLicenseChanging(string value);
    partial void OnStartDateLicenseChanged();
    partial void OnEndDateLicenseChanging(string value);
    partial void OnEndDateLicenseChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnAdmitDateCountChanging(int value);
    partial void OnAdmitDateCountChanged();
    #endregion
		
		public Reference()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Staff = default(EntityRef<Staff>);
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationWard", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DestinationWard
		{
			get
			{
				return this._DestinationWard;
			}
			set
			{
				if ((this._DestinationWard != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationWardChanging(value);
					this.SendPropertyChanging();
					this._DestinationWard = value;
					this.SendPropertyChanged("DestinationWard");
					this.OnDestinationWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedDate", DbType="NVarChar(10)")]
		public string SuggestedDate
		{
			get
			{
				return this._SuggestedDate;
			}
			set
			{
				if ((this._SuggestedDate != value))
				{
					this.OnSuggestedDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestedDate = value;
					this.SendPropertyChanged("SuggestedDate");
					this.OnSuggestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedTime", DbType="NVarChar(8)")]
		public string SuggestedTime
		{
			get
			{
				return this._SuggestedTime;
			}
			set
			{
				if ((this._SuggestedTime != value))
				{
					this.OnSuggestedTimeChanging(value);
					this.SendPropertyChanging();
					this._SuggestedTime = value;
					this.SendPropertyChanged("SuggestedTime");
					this.OnSuggestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateLicense", DbType="NVarChar(10)")]
		public string StartDateLicense
		{
			get
			{
				return this._StartDateLicense;
			}
			set
			{
				if ((this._StartDateLicense != value))
				{
					this.OnStartDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._StartDateLicense = value;
					this.SendPropertyChanged("StartDateLicense");
					this.OnStartDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateLicense", DbType="NVarChar(10)")]
		public string EndDateLicense
		{
			get
			{
				return this._EndDateLicense;
			}
			set
			{
				if ((this._EndDateLicense != value))
				{
					this.OnEndDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._EndDateLicense = value;
					this.SendPropertyChanged("EndDateLicense");
					this.OnEndDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDateCount", DbType="Int NOT NULL")]
		public int AdmitDateCount
		{
			get
			{
				return this._AdmitDateCount;
			}
			set
			{
				if ((this._AdmitDateCount != value))
				{
					this.OnAdmitDateCountChanging(value);
					this.SendPropertyChanging();
					this._AdmitDateCount = value;
					this.SendPropertyChanged("AdmitDateCount");
					this.OnAdmitDateCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RefrenceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_Department", ThisKey="DestinationWard", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._DestinationWard = value.ID;
					}
					else
					{
						this._DestinationWard = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_Department1", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.References1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.References1.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.References.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private string _RoomNumber;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private EntitySet<FavoriteService> _FavoriteServices;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs2;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Surgery> _Surgeries;
		
		private EntitySet<Surgery> _Surgeries1;
		
		private EntitySet<Surgery> _Surgeries2;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    #endregion
		
		public Staff()
		{
			this._FavoriteServices = new EntitySet<FavoriteService>(new Action<FavoriteService>(this.attach_FavoriteServices), new Action<FavoriteService>(this.detach_FavoriteServices));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._GivenServiceMs2 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs2), new Action<GivenServiceM>(this.detach_GivenServiceMs2));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Surgeries = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries), new Action<Surgery>(this.detach_Surgeries));
			this._Surgeries1 = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries1), new Action<Surgery>(this.detach_Surgeries1));
			this._Surgeries2 = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries2), new Action<Surgery>(this.detach_Surgeries2));
			this._Speciality = default(EntityRef<Speciality>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(200)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteService", Storage="_FavoriteServices", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<FavoriteService> FavoriteServices
		{
			get
			{
				return this._FavoriteServices;
			}
			set
			{
				this._FavoriteServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_References", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="StaffCure")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="DischargerStaffID")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_GivenServiceMs2", ThisKey="ID", OtherKey="TechnicianID")]
		public EntitySet<GivenServiceM> GivenServiceMs2
		{
			get
			{
				return this._GivenServiceMs2;
			}
			set
			{
				this._GivenServiceMs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery", Storage="_Surgeries", ThisKey="ID", OtherKey="SurgeryHelpStaff1")]
		public EntitySet<Surgery> Surgeries
		{
			get
			{
				return this._Surgeries;
			}
			set
			{
				this._Surgeries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery1", Storage="_Surgeries1", ThisKey="ID", OtherKey="SurgeryHelpStaff2")]
		public EntitySet<Surgery> Surgeries1
		{
			get
			{
				return this._Surgeries1;
			}
			set
			{
				this._Surgeries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery2", Storage="_Surgeries2", ThisKey="ID", OtherKey="SurgeryHelpStaff3")]
		public EntitySet<Surgery> Surgeries2
		{
			get
			{
				return this._Surgeries2;
			}
			set
			{
				this._Surgeries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Surgeries1(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_Surgeries1(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_Surgeries2(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_Surgeries2(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PeriodicCalenderID;
		
		private System.Guid _StaffID;
		
		private int _ShiftID;
		
		private string _Date;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _GivenCapacity;
		
		private System.Nullable<int> _InaccessibleCapacity;
		
		private System.Nullable<int> _GivenInaccessible;
		
		private System.Nullable<int> _GivenDispatch;
		
		private System.Nullable<int> _DispatchCapacity;
		
		private string _BeginTime;
		
		private string _EndTime;
		
		private string _Comment;
		
		private System.Guid _DepartmentID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPeriodicCalenderIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalenderIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnGivenCapacityChanging(System.Nullable<int> value);
    partial void OnGivenCapacityChanged();
    partial void OnInaccessibleCapacityChanging(System.Nullable<int> value);
    partial void OnInaccessibleCapacityChanged();
    partial void OnGivenInaccessibleChanging(System.Nullable<int> value);
    partial void OnGivenInaccessibleChanged();
    partial void OnGivenDispatchChanging(System.Nullable<int> value);
    partial void OnGivenDispatchChanged();
    partial void OnDispatchCapacityChanging(System.Nullable<int> value);
    partial void OnDispatchCapacityChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public Agenda()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Staff = default(EntityRef<Staff>);
			this._Department = default(EntityRef<Department>);
			this._Definition = default(EntityRef<Definition>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalenderID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalenderID
		{
			get
			{
				return this._PeriodicCalenderID;
			}
			set
			{
				if ((this._PeriodicCalenderID != value))
				{
					this.OnPeriodicCalenderIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalenderID = value;
					this.SendPropertyChanged("PeriodicCalenderID");
					this.OnPeriodicCalenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenCapacity", DbType="Int")]
		public System.Nullable<int> GivenCapacity
		{
			get
			{
				return this._GivenCapacity;
			}
			set
			{
				if ((this._GivenCapacity != value))
				{
					this.OnGivenCapacityChanging(value);
					this.SendPropertyChanging();
					this._GivenCapacity = value;
					this.SendPropertyChanged("GivenCapacity");
					this.OnGivenCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InaccessibleCapacity", DbType="Int")]
		public System.Nullable<int> InaccessibleCapacity
		{
			get
			{
				return this._InaccessibleCapacity;
			}
			set
			{
				if ((this._InaccessibleCapacity != value))
				{
					this.OnInaccessibleCapacityChanging(value);
					this.SendPropertyChanging();
					this._InaccessibleCapacity = value;
					this.SendPropertyChanged("InaccessibleCapacity");
					this.OnInaccessibleCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenInaccessible", DbType="Int")]
		public System.Nullable<int> GivenInaccessible
		{
			get
			{
				return this._GivenInaccessible;
			}
			set
			{
				if ((this._GivenInaccessible != value))
				{
					this.OnGivenInaccessibleChanging(value);
					this.SendPropertyChanging();
					this._GivenInaccessible = value;
					this.SendPropertyChanged("GivenInaccessible");
					this.OnGivenInaccessibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenDispatch", DbType="Int")]
		public System.Nullable<int> GivenDispatch
		{
			get
			{
				return this._GivenDispatch;
			}
			set
			{
				if ((this._GivenDispatch != value))
				{
					this.OnGivenDispatchChanging(value);
					this.SendPropertyChanging();
					this._GivenDispatch = value;
					this.SendPropertyChanged("GivenDispatch");
					this.OnGivenDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchCapacity", DbType="Int")]
		public System.Nullable<int> DispatchCapacity
		{
			get
			{
				return this._DispatchCapacity;
			}
			set
			{
				if ((this._DispatchCapacity != value))
				{
					this.OnDispatchCapacityChanging(value);
					this.SendPropertyChanging();
					this._DispatchCapacity = value;
					this.SendPropertyChanged("DispatchCapacity");
					this.OnDispatchCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="NChar(5)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="AgendaID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Agenda", Storage="_Definition", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(int);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _IDInt;
		
		private System.Nullable<int> _IDIntParent;
		
		private System.Nullable<System.Guid> _Parent;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private EntitySet<FactorM> _FactorMs;
		
		private EntitySet<Bed> _Beds;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Reference> _References1;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnIDIntParentChanging(System.Nullable<int> value);
    partial void OnIDIntParentChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    #endregion
		
		public Department()
		{
			this._FactorMs = new EntitySet<FactorM>(new Action<FactorM>(this.attach_FactorMs), new Action<FactorM>(this.detach_FactorMs));
			this._Beds = new EntitySet<Bed>(new Action<Bed>(this.attach_Beds), new Action<Bed>(this.detach_Beds));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._References1 = new EntitySet<Reference>(new Action<Reference>(this.attach_References1), new Action<Reference>(this.detach_References1));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department1 = default(EntityRef<Department>);
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntParent", DbType="Int")]
		public System.Nullable<int> IDIntParent
		{
			get
			{
				return this._IDIntParent;
			}
			set
			{
				if ((this._IDIntParent != value))
				{
					this.OnIDIntParentChanging(value);
					this.SendPropertyChanging();
					this._IDIntParent = value;
					this.SendPropertyChanged("IDIntParent");
					this.OnIDIntParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_FactorM", Storage="_FactorMs", ThisKey="ID", OtherKey="Distributor")]
		public EntitySet<FactorM> FactorMs
		{
			get
			{
				return this._FactorMs;
			}
			set
			{
				this._FactorMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Bed", Storage="_Beds", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Bed> Beds
		{
			get
			{
				return this._Beds;
			}
			set
			{
				this._Beds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_References", ThisKey="ID", OtherKey="DestinationWard")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_References1", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Reference> References1
		{
			get
			{
				return this._References1;
			}
			set
			{
				this._References1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="PharmacyID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Definition", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Beds(Bed entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Beds(Bed entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AfterSurgeryReport")]
	public partial class AfterSurgeryReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _INTime;
		
		private string _PreGeneralCondition;
		
		private string _PreWakeness;
		
		private string _PreBloodPressure;
		
		private string _PrePulse;
		
		private string _PreRespiration;
		
		private string _PreLocalCyanosis;
		
		private string _PreGeneralCyanosis;
		
		private string _PreSkinColor;
		
		private string _PreSkinTemperature;
		
		private string _EXITTime;
		
		private string _PastGeneralCondition;
		
		private string _PastWakeness;
		
		private string _PastBloodPressure;
		
		private string _PastPulse;
		
		private string _PastRespiration;
		
		private string _PastLocalCyanosis;
		
		private string _PastGeneralCyanosis;
		
		private string _PastSkinColor;
		
		private string _PastSkinTemperature;
		
		private string _IntravenousFluid;
		
		private string _Blood;
		
		private string _Plasma;
		
		private string _GlucoseAndCrystalloid;
		
		private string _ExcretedFluid;
		
		private string _FluidBalance;
		
		private string _ObservationAndTreatment;
		
		private string _Oxygen;
		
		private string _ArtificialRespiration;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnINTimeChanging(string value);
    partial void OnINTimeChanged();
    partial void OnPreGeneralConditionChanging(string value);
    partial void OnPreGeneralConditionChanged();
    partial void OnPreWakenessChanging(string value);
    partial void OnPreWakenessChanged();
    partial void OnPreBloodPressureChanging(string value);
    partial void OnPreBloodPressureChanged();
    partial void OnPrePulseChanging(string value);
    partial void OnPrePulseChanged();
    partial void OnPreRespirationChanging(string value);
    partial void OnPreRespirationChanged();
    partial void OnPreLocalCyanosisChanging(string value);
    partial void OnPreLocalCyanosisChanged();
    partial void OnPreGeneralCyanosisChanging(string value);
    partial void OnPreGeneralCyanosisChanged();
    partial void OnPreSkinColorChanging(string value);
    partial void OnPreSkinColorChanged();
    partial void OnPreSkinTemperatureChanging(string value);
    partial void OnPreSkinTemperatureChanged();
    partial void OnEXITTimeChanging(string value);
    partial void OnEXITTimeChanged();
    partial void OnPastGeneralConditionChanging(string value);
    partial void OnPastGeneralConditionChanged();
    partial void OnPastWakenessChanging(string value);
    partial void OnPastWakenessChanged();
    partial void OnPastBloodPressureChanging(string value);
    partial void OnPastBloodPressureChanged();
    partial void OnPastPulseChanging(string value);
    partial void OnPastPulseChanged();
    partial void OnPastRespirationChanging(string value);
    partial void OnPastRespirationChanged();
    partial void OnPastLocalCyanosisChanging(string value);
    partial void OnPastLocalCyanosisChanged();
    partial void OnPastGeneralCyanosisChanging(string value);
    partial void OnPastGeneralCyanosisChanged();
    partial void OnPastSkinColorChanging(string value);
    partial void OnPastSkinColorChanged();
    partial void OnPastSkinTemperatureChanging(string value);
    partial void OnPastSkinTemperatureChanged();
    partial void OnIntravenousFluidChanging(string value);
    partial void OnIntravenousFluidChanged();
    partial void OnBloodChanging(string value);
    partial void OnBloodChanged();
    partial void OnPlasmaChanging(string value);
    partial void OnPlasmaChanged();
    partial void OnGlucoseAndCrystalloidChanging(string value);
    partial void OnGlucoseAndCrystalloidChanged();
    partial void OnExcretedFluidChanging(string value);
    partial void OnExcretedFluidChanged();
    partial void OnFluidBalanceChanging(string value);
    partial void OnFluidBalanceChanged();
    partial void OnObservationAndTreatmentChanging(string value);
    partial void OnObservationAndTreatmentChanged();
    partial void OnOxygenChanging(string value);
    partial void OnOxygenChanged();
    partial void OnArtificialRespirationChanging(string value);
    partial void OnArtificialRespirationChanged();
    #endregion
		
		public AfterSurgeryReport()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTime", DbType="NVarChar(50)")]
		public string INTime
		{
			get
			{
				return this._INTime;
			}
			set
			{
				if ((this._INTime != value))
				{
					this.OnINTimeChanging(value);
					this.SendPropertyChanging();
					this._INTime = value;
					this.SendPropertyChanged("INTime");
					this.OnINTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreGeneralCondition", DbType="NVarChar(50)")]
		public string PreGeneralCondition
		{
			get
			{
				return this._PreGeneralCondition;
			}
			set
			{
				if ((this._PreGeneralCondition != value))
				{
					this.OnPreGeneralConditionChanging(value);
					this.SendPropertyChanging();
					this._PreGeneralCondition = value;
					this.SendPropertyChanged("PreGeneralCondition");
					this.OnPreGeneralConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreWakeness", DbType="NVarChar(50)")]
		public string PreWakeness
		{
			get
			{
				return this._PreWakeness;
			}
			set
			{
				if ((this._PreWakeness != value))
				{
					this.OnPreWakenessChanging(value);
					this.SendPropertyChanging();
					this._PreWakeness = value;
					this.SendPropertyChanged("PreWakeness");
					this.OnPreWakenessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreBloodPressure", DbType="NVarChar(50)")]
		public string PreBloodPressure
		{
			get
			{
				return this._PreBloodPressure;
			}
			set
			{
				if ((this._PreBloodPressure != value))
				{
					this.OnPreBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._PreBloodPressure = value;
					this.SendPropertyChanged("PreBloodPressure");
					this.OnPreBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrePulse", DbType="NVarChar(50)")]
		public string PrePulse
		{
			get
			{
				return this._PrePulse;
			}
			set
			{
				if ((this._PrePulse != value))
				{
					this.OnPrePulseChanging(value);
					this.SendPropertyChanging();
					this._PrePulse = value;
					this.SendPropertyChanged("PrePulse");
					this.OnPrePulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreRespiration", DbType="NVarChar(50)")]
		public string PreRespiration
		{
			get
			{
				return this._PreRespiration;
			}
			set
			{
				if ((this._PreRespiration != value))
				{
					this.OnPreRespirationChanging(value);
					this.SendPropertyChanging();
					this._PreRespiration = value;
					this.SendPropertyChanged("PreRespiration");
					this.OnPreRespirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreLocalCyanosis", DbType="NVarChar(50)")]
		public string PreLocalCyanosis
		{
			get
			{
				return this._PreLocalCyanosis;
			}
			set
			{
				if ((this._PreLocalCyanosis != value))
				{
					this.OnPreLocalCyanosisChanging(value);
					this.SendPropertyChanging();
					this._PreLocalCyanosis = value;
					this.SendPropertyChanged("PreLocalCyanosis");
					this.OnPreLocalCyanosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreGeneralCyanosis", DbType="NVarChar(50)")]
		public string PreGeneralCyanosis
		{
			get
			{
				return this._PreGeneralCyanosis;
			}
			set
			{
				if ((this._PreGeneralCyanosis != value))
				{
					this.OnPreGeneralCyanosisChanging(value);
					this.SendPropertyChanging();
					this._PreGeneralCyanosis = value;
					this.SendPropertyChanged("PreGeneralCyanosis");
					this.OnPreGeneralCyanosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreSkinColor", DbType="NVarChar(50)")]
		public string PreSkinColor
		{
			get
			{
				return this._PreSkinColor;
			}
			set
			{
				if ((this._PreSkinColor != value))
				{
					this.OnPreSkinColorChanging(value);
					this.SendPropertyChanging();
					this._PreSkinColor = value;
					this.SendPropertyChanged("PreSkinColor");
					this.OnPreSkinColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreSkinTemperature", DbType="NVarChar(50)")]
		public string PreSkinTemperature
		{
			get
			{
				return this._PreSkinTemperature;
			}
			set
			{
				if ((this._PreSkinTemperature != value))
				{
					this.OnPreSkinTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreSkinTemperature = value;
					this.SendPropertyChanged("PreSkinTemperature");
					this.OnPreSkinTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXITTime", DbType="NVarChar(50)")]
		public string EXITTime
		{
			get
			{
				return this._EXITTime;
			}
			set
			{
				if ((this._EXITTime != value))
				{
					this.OnEXITTimeChanging(value);
					this.SendPropertyChanging();
					this._EXITTime = value;
					this.SendPropertyChanged("EXITTime");
					this.OnEXITTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastGeneralCondition", DbType="NVarChar(50)")]
		public string PastGeneralCondition
		{
			get
			{
				return this._PastGeneralCondition;
			}
			set
			{
				if ((this._PastGeneralCondition != value))
				{
					this.OnPastGeneralConditionChanging(value);
					this.SendPropertyChanging();
					this._PastGeneralCondition = value;
					this.SendPropertyChanged("PastGeneralCondition");
					this.OnPastGeneralConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastWakeness", DbType="NVarChar(50)")]
		public string PastWakeness
		{
			get
			{
				return this._PastWakeness;
			}
			set
			{
				if ((this._PastWakeness != value))
				{
					this.OnPastWakenessChanging(value);
					this.SendPropertyChanging();
					this._PastWakeness = value;
					this.SendPropertyChanged("PastWakeness");
					this.OnPastWakenessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastBloodPressure", DbType="NVarChar(50)")]
		public string PastBloodPressure
		{
			get
			{
				return this._PastBloodPressure;
			}
			set
			{
				if ((this._PastBloodPressure != value))
				{
					this.OnPastBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._PastBloodPressure = value;
					this.SendPropertyChanged("PastBloodPressure");
					this.OnPastBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastPulse", DbType="NVarChar(50)")]
		public string PastPulse
		{
			get
			{
				return this._PastPulse;
			}
			set
			{
				if ((this._PastPulse != value))
				{
					this.OnPastPulseChanging(value);
					this.SendPropertyChanging();
					this._PastPulse = value;
					this.SendPropertyChanged("PastPulse");
					this.OnPastPulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastRespiration", DbType="NVarChar(50)")]
		public string PastRespiration
		{
			get
			{
				return this._PastRespiration;
			}
			set
			{
				if ((this._PastRespiration != value))
				{
					this.OnPastRespirationChanging(value);
					this.SendPropertyChanging();
					this._PastRespiration = value;
					this.SendPropertyChanged("PastRespiration");
					this.OnPastRespirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastLocalCyanosis", DbType="NVarChar(50)")]
		public string PastLocalCyanosis
		{
			get
			{
				return this._PastLocalCyanosis;
			}
			set
			{
				if ((this._PastLocalCyanosis != value))
				{
					this.OnPastLocalCyanosisChanging(value);
					this.SendPropertyChanging();
					this._PastLocalCyanosis = value;
					this.SendPropertyChanged("PastLocalCyanosis");
					this.OnPastLocalCyanosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastGeneralCyanosis", DbType="NVarChar(50)")]
		public string PastGeneralCyanosis
		{
			get
			{
				return this._PastGeneralCyanosis;
			}
			set
			{
				if ((this._PastGeneralCyanosis != value))
				{
					this.OnPastGeneralCyanosisChanging(value);
					this.SendPropertyChanging();
					this._PastGeneralCyanosis = value;
					this.SendPropertyChanged("PastGeneralCyanosis");
					this.OnPastGeneralCyanosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastSkinColor", DbType="NVarChar(50)")]
		public string PastSkinColor
		{
			get
			{
				return this._PastSkinColor;
			}
			set
			{
				if ((this._PastSkinColor != value))
				{
					this.OnPastSkinColorChanging(value);
					this.SendPropertyChanging();
					this._PastSkinColor = value;
					this.SendPropertyChanged("PastSkinColor");
					this.OnPastSkinColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastSkinTemperature", DbType="NVarChar(50)")]
		public string PastSkinTemperature
		{
			get
			{
				return this._PastSkinTemperature;
			}
			set
			{
				if ((this._PastSkinTemperature != value))
				{
					this.OnPastSkinTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PastSkinTemperature = value;
					this.SendPropertyChanged("PastSkinTemperature");
					this.OnPastSkinTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntravenousFluid", DbType="NVarChar(MAX)")]
		public string IntravenousFluid
		{
			get
			{
				return this._IntravenousFluid;
			}
			set
			{
				if ((this._IntravenousFluid != value))
				{
					this.OnIntravenousFluidChanging(value);
					this.SendPropertyChanging();
					this._IntravenousFluid = value;
					this.SendPropertyChanged("IntravenousFluid");
					this.OnIntravenousFluidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="NVarChar(MAX)")]
		public string Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plasma", DbType="NVarChar(MAX)")]
		public string Plasma
		{
			get
			{
				return this._Plasma;
			}
			set
			{
				if ((this._Plasma != value))
				{
					this.OnPlasmaChanging(value);
					this.SendPropertyChanging();
					this._Plasma = value;
					this.SendPropertyChanged("Plasma");
					this.OnPlasmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlucoseAndCrystalloid", DbType="NVarChar(MAX)")]
		public string GlucoseAndCrystalloid
		{
			get
			{
				return this._GlucoseAndCrystalloid;
			}
			set
			{
				if ((this._GlucoseAndCrystalloid != value))
				{
					this.OnGlucoseAndCrystalloidChanging(value);
					this.SendPropertyChanging();
					this._GlucoseAndCrystalloid = value;
					this.SendPropertyChanged("GlucoseAndCrystalloid");
					this.OnGlucoseAndCrystalloidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcretedFluid", DbType="NVarChar(MAX)")]
		public string ExcretedFluid
		{
			get
			{
				return this._ExcretedFluid;
			}
			set
			{
				if ((this._ExcretedFluid != value))
				{
					this.OnExcretedFluidChanging(value);
					this.SendPropertyChanging();
					this._ExcretedFluid = value;
					this.SendPropertyChanged("ExcretedFluid");
					this.OnExcretedFluidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FluidBalance", DbType="NVarChar(MAX)")]
		public string FluidBalance
		{
			get
			{
				return this._FluidBalance;
			}
			set
			{
				if ((this._FluidBalance != value))
				{
					this.OnFluidBalanceChanging(value);
					this.SendPropertyChanging();
					this._FluidBalance = value;
					this.SendPropertyChanged("FluidBalance");
					this.OnFluidBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObservationAndTreatment", DbType="NVarChar(MAX)")]
		public string ObservationAndTreatment
		{
			get
			{
				return this._ObservationAndTreatment;
			}
			set
			{
				if ((this._ObservationAndTreatment != value))
				{
					this.OnObservationAndTreatmentChanging(value);
					this.SendPropertyChanging();
					this._ObservationAndTreatment = value;
					this.SendPropertyChanged("ObservationAndTreatment");
					this.OnObservationAndTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oxygen", DbType="NVarChar(MAX)")]
		public string Oxygen
		{
			get
			{
				return this._Oxygen;
			}
			set
			{
				if ((this._Oxygen != value))
				{
					this.OnOxygenChanging(value);
					this.SendPropertyChanging();
					this._Oxygen = value;
					this.SendPropertyChanged("Oxygen");
					this.OnOxygenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArtificialRespiration", DbType="NVarChar(MAX)")]
		public string ArtificialRespiration
		{
			get
			{
				return this._ArtificialRespiration;
			}
			set
			{
				if ((this._ArtificialRespiration != value))
				{
					this.OnArtificialRespirationChanging(value);
					this.SendPropertyChanging();
					this._ArtificialRespiration = value;
					this.SendPropertyChanged("ArtificialRespiration");
					this.OnArtificialRespirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_AfterSurgeryReport", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.AfterSurgeryReport = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.AfterSurgeryReport = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnesthesiaReport")]
	public partial class AnesthesiaReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<bool> _GeneralAnesthesia;
		
		private System.Nullable<bool> _LocalAnesthesia;
		
		private string _Type;
		
		private string _Technique;
		
		private string _O2;
		
		private string _N2O;
		
		private string _Fluothane;
		
		private string _DTubo;
		
		private string _Succi;
		
		private string _NaPenthotal;
		
		private string _BloodPressure;
		
		private string _Pulse;
		
		private string _StartOfAnesthesia;
		
		private string _EndOfAnesthesia;
		
		private string _StartOfOperation;
		
		private string _Temperature;
		
		private string _Respiration;
		
		private string _Monitoring;
		
		private string _PatientStatus;
		
		private string _Pluids;
		
		private string _Blood;
		
		private string _D5W;
		
		private string _LR;
		
		private string _DrugSensitivity;
		
		private string _SteroidTherapy;
		
		private string _PreOPComplication;
		
		private string _DuringOPComplication;
		
		private string _PostOPComplication;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGeneralAnesthesiaChanging(System.Nullable<bool> value);
    partial void OnGeneralAnesthesiaChanged();
    partial void OnLocalAnesthesiaChanging(System.Nullable<bool> value);
    partial void OnLocalAnesthesiaChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTechniqueChanging(string value);
    partial void OnTechniqueChanged();
    partial void OnO2Changing(string value);
    partial void OnO2Changed();
    partial void OnN2OChanging(string value);
    partial void OnN2OChanged();
    partial void OnFluothaneChanging(string value);
    partial void OnFluothaneChanged();
    partial void OnDTuboChanging(string value);
    partial void OnDTuboChanged();
    partial void OnSucciChanging(string value);
    partial void OnSucciChanged();
    partial void OnNaPenthotalChanging(string value);
    partial void OnNaPenthotalChanged();
    partial void OnBloodPressureChanging(string value);
    partial void OnBloodPressureChanged();
    partial void OnPulseChanging(string value);
    partial void OnPulseChanged();
    partial void OnStartOfAnesthesiaChanging(string value);
    partial void OnStartOfAnesthesiaChanged();
    partial void OnEndOfAnesthesiaChanging(string value);
    partial void OnEndOfAnesthesiaChanged();
    partial void OnStartOfOperationChanging(string value);
    partial void OnStartOfOperationChanged();
    partial void OnTemperatureChanging(string value);
    partial void OnTemperatureChanged();
    partial void OnRespirationChanging(string value);
    partial void OnRespirationChanged();
    partial void OnMonitoringChanging(string value);
    partial void OnMonitoringChanged();
    partial void OnPatientStatusChanging(string value);
    partial void OnPatientStatusChanged();
    partial void OnPluidsChanging(string value);
    partial void OnPluidsChanged();
    partial void OnBloodChanging(string value);
    partial void OnBloodChanged();
    partial void OnD5WChanging(string value);
    partial void OnD5WChanged();
    partial void OnLRChanging(string value);
    partial void OnLRChanged();
    partial void OnDrugSensitivityChanging(string value);
    partial void OnDrugSensitivityChanged();
    partial void OnSteroidTherapyChanging(string value);
    partial void OnSteroidTherapyChanged();
    partial void OnPreOPComplicationChanging(string value);
    partial void OnPreOPComplicationChanged();
    partial void OnDuringOPComplicationChanging(string value);
    partial void OnDuringOPComplicationChanged();
    partial void OnPostOPComplicationChanging(string value);
    partial void OnPostOPComplicationChanged();
    #endregion
		
		public AnesthesiaReport()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralAnesthesia", DbType="Bit")]
		public System.Nullable<bool> GeneralAnesthesia
		{
			get
			{
				return this._GeneralAnesthesia;
			}
			set
			{
				if ((this._GeneralAnesthesia != value))
				{
					this.OnGeneralAnesthesiaChanging(value);
					this.SendPropertyChanging();
					this._GeneralAnesthesia = value;
					this.SendPropertyChanged("GeneralAnesthesia");
					this.OnGeneralAnesthesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalAnesthesia", DbType="Bit")]
		public System.Nullable<bool> LocalAnesthesia
		{
			get
			{
				return this._LocalAnesthesia;
			}
			set
			{
				if ((this._LocalAnesthesia != value))
				{
					this.OnLocalAnesthesiaChanging(value);
					this.SendPropertyChanging();
					this._LocalAnesthesia = value;
					this.SendPropertyChanged("LocalAnesthesia");
					this.OnLocalAnesthesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technique", DbType="NVarChar(100)")]
		public string Technique
		{
			get
			{
				return this._Technique;
			}
			set
			{
				if ((this._Technique != value))
				{
					this.OnTechniqueChanging(value);
					this.SendPropertyChanging();
					this._Technique = value;
					this.SendPropertyChanged("Technique");
					this.OnTechniqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O2", DbType="NVarChar(50)")]
		public string O2
		{
			get
			{
				return this._O2;
			}
			set
			{
				if ((this._O2 != value))
				{
					this.OnO2Changing(value);
					this.SendPropertyChanging();
					this._O2 = value;
					this.SendPropertyChanged("O2");
					this.OnO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N2O", DbType="NVarChar(50)")]
		public string N2O
		{
			get
			{
				return this._N2O;
			}
			set
			{
				if ((this._N2O != value))
				{
					this.OnN2OChanging(value);
					this.SendPropertyChanging();
					this._N2O = value;
					this.SendPropertyChanged("N2O");
					this.OnN2OChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fluothane", DbType="NVarChar(50)")]
		public string Fluothane
		{
			get
			{
				return this._Fluothane;
			}
			set
			{
				if ((this._Fluothane != value))
				{
					this.OnFluothaneChanging(value);
					this.SendPropertyChanging();
					this._Fluothane = value;
					this.SendPropertyChanged("Fluothane");
					this.OnFluothaneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTubo", DbType="NVarChar(50)")]
		public string DTubo
		{
			get
			{
				return this._DTubo;
			}
			set
			{
				if ((this._DTubo != value))
				{
					this.OnDTuboChanging(value);
					this.SendPropertyChanging();
					this._DTubo = value;
					this.SendPropertyChanged("DTubo");
					this.OnDTuboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Succi", DbType="NVarChar(50)")]
		public string Succi
		{
			get
			{
				return this._Succi;
			}
			set
			{
				if ((this._Succi != value))
				{
					this.OnSucciChanging(value);
					this.SendPropertyChanging();
					this._Succi = value;
					this.SendPropertyChanged("Succi");
					this.OnSucciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaPenthotal", DbType="NVarChar(50)")]
		public string NaPenthotal
		{
			get
			{
				return this._NaPenthotal;
			}
			set
			{
				if ((this._NaPenthotal != value))
				{
					this.OnNaPenthotalChanging(value);
					this.SendPropertyChanging();
					this._NaPenthotal = value;
					this.SendPropertyChanged("NaPenthotal");
					this.OnNaPenthotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodPressure", DbType="NVarChar(50)")]
		public string BloodPressure
		{
			get
			{
				return this._BloodPressure;
			}
			set
			{
				if ((this._BloodPressure != value))
				{
					this.OnBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._BloodPressure = value;
					this.SendPropertyChanged("BloodPressure");
					this.OnBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pulse", DbType="NVarChar(50)")]
		public string Pulse
		{
			get
			{
				return this._Pulse;
			}
			set
			{
				if ((this._Pulse != value))
				{
					this.OnPulseChanging(value);
					this.SendPropertyChanging();
					this._Pulse = value;
					this.SendPropertyChanged("Pulse");
					this.OnPulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOfAnesthesia", DbType="NVarChar(50)")]
		public string StartOfAnesthesia
		{
			get
			{
				return this._StartOfAnesthesia;
			}
			set
			{
				if ((this._StartOfAnesthesia != value))
				{
					this.OnStartOfAnesthesiaChanging(value);
					this.SendPropertyChanging();
					this._StartOfAnesthesia = value;
					this.SendPropertyChanged("StartOfAnesthesia");
					this.OnStartOfAnesthesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfAnesthesia", DbType="NVarChar(50)")]
		public string EndOfAnesthesia
		{
			get
			{
				return this._EndOfAnesthesia;
			}
			set
			{
				if ((this._EndOfAnesthesia != value))
				{
					this.OnEndOfAnesthesiaChanging(value);
					this.SendPropertyChanging();
					this._EndOfAnesthesia = value;
					this.SendPropertyChanged("EndOfAnesthesia");
					this.OnEndOfAnesthesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOfOperation", DbType="NVarChar(50)")]
		public string StartOfOperation
		{
			get
			{
				return this._StartOfOperation;
			}
			set
			{
				if ((this._StartOfOperation != value))
				{
					this.OnStartOfOperationChanging(value);
					this.SendPropertyChanging();
					this._StartOfOperation = value;
					this.SendPropertyChanged("StartOfOperation");
					this.OnStartOfOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperature", DbType="NVarChar(50)")]
		public string Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				if ((this._Temperature != value))
				{
					this.OnTemperatureChanging(value);
					this.SendPropertyChanging();
					this._Temperature = value;
					this.SendPropertyChanged("Temperature");
					this.OnTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respiration", DbType="NVarChar(50)")]
		public string Respiration
		{
			get
			{
				return this._Respiration;
			}
			set
			{
				if ((this._Respiration != value))
				{
					this.OnRespirationChanging(value);
					this.SendPropertyChanging();
					this._Respiration = value;
					this.SendPropertyChanged("Respiration");
					this.OnRespirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monitoring", DbType="NVarChar(MAX)")]
		public string Monitoring
		{
			get
			{
				return this._Monitoring;
			}
			set
			{
				if ((this._Monitoring != value))
				{
					this.OnMonitoringChanging(value);
					this.SendPropertyChanging();
					this._Monitoring = value;
					this.SendPropertyChanged("Monitoring");
					this.OnMonitoringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatus", DbType="NVarChar(MAX)")]
		public string PatientStatus
		{
			get
			{
				return this._PatientStatus;
			}
			set
			{
				if ((this._PatientStatus != value))
				{
					this.OnPatientStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientStatus = value;
					this.SendPropertyChanged("PatientStatus");
					this.OnPatientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pluids", DbType="NVarChar(100)")]
		public string Pluids
		{
			get
			{
				return this._Pluids;
			}
			set
			{
				if ((this._Pluids != value))
				{
					this.OnPluidsChanging(value);
					this.SendPropertyChanging();
					this._Pluids = value;
					this.SendPropertyChanged("Pluids");
					this.OnPluidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="NVarChar(100)")]
		public string Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D5W", DbType="NVarChar(100)")]
		public string D5W
		{
			get
			{
				return this._D5W;
			}
			set
			{
				if ((this._D5W != value))
				{
					this.OnD5WChanging(value);
					this.SendPropertyChanging();
					this._D5W = value;
					this.SendPropertyChanged("D5W");
					this.OnD5WChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LR", DbType="NVarChar(100)")]
		public string LR
		{
			get
			{
				return this._LR;
			}
			set
			{
				if ((this._LR != value))
				{
					this.OnLRChanging(value);
					this.SendPropertyChanging();
					this._LR = value;
					this.SendPropertyChanged("LR");
					this.OnLRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugSensitivity", DbType="NVarChar(MAX)")]
		public string DrugSensitivity
		{
			get
			{
				return this._DrugSensitivity;
			}
			set
			{
				if ((this._DrugSensitivity != value))
				{
					this.OnDrugSensitivityChanging(value);
					this.SendPropertyChanging();
					this._DrugSensitivity = value;
					this.SendPropertyChanged("DrugSensitivity");
					this.OnDrugSensitivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteroidTherapy", DbType="NVarChar(MAX)")]
		public string SteroidTherapy
		{
			get
			{
				return this._SteroidTherapy;
			}
			set
			{
				if ((this._SteroidTherapy != value))
				{
					this.OnSteroidTherapyChanging(value);
					this.SendPropertyChanging();
					this._SteroidTherapy = value;
					this.SendPropertyChanged("SteroidTherapy");
					this.OnSteroidTherapyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreOPComplication", DbType="NVarChar(MAX)")]
		public string PreOPComplication
		{
			get
			{
				return this._PreOPComplication;
			}
			set
			{
				if ((this._PreOPComplication != value))
				{
					this.OnPreOPComplicationChanging(value);
					this.SendPropertyChanging();
					this._PreOPComplication = value;
					this.SendPropertyChanged("PreOPComplication");
					this.OnPreOPComplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuringOPComplication", DbType="NVarChar(MAX)")]
		public string DuringOPComplication
		{
			get
			{
				return this._DuringOPComplication;
			}
			set
			{
				if ((this._DuringOPComplication != value))
				{
					this.OnDuringOPComplicationChanging(value);
					this.SendPropertyChanging();
					this._DuringOPComplication = value;
					this.SendPropertyChanged("DuringOPComplication");
					this.OnDuringOPComplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostOPComplication", DbType="NVarChar(MAX)")]
		public string PostOPComplication
		{
			get
			{
				return this._PostOPComplication;
			}
			set
			{
				if ((this._PostOPComplication != value))
				{
					this.OnPostOPComplicationChanging(value);
					this.SendPropertyChanging();
					this._PostOPComplication = value;
					this.SendPropertyChanged("PostOPComplication");
					this.OnPostOPComplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_AnesthesiaReport", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.AnesthesiaReport = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.AnesthesiaReport = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModularServices")]
	public partial class ModularService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GsdID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<double> _K;
		
		private string _Name;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsdIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsdIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public ModularService()
		{
			this._Service = default(EntityRef<Service>);
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsdID
		{
			get
			{
				return this._GsdID;
			}
			set
			{
				if ((this._GsdID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsdIDChanging(value);
					this.SendPropertyChanging();
					this._GsdID = value;
					this.SendPropertyChanged("GsdID");
					this.OnGsdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ModularService", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ModularServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ModularServices.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_ModularService", Storage="_GivenServiceD", ThisKey="GsdID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.ModularServices.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.ModularServices.Add(this);
						this._GsdID = value.ID;
					}
					else
					{
						this._GsdID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Speciality1;
		
		private System.Nullable<int> _HeadUserID;
		
		private System.Nullable<int> _SepasID;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    partial void OnHeadUserIDChanging(System.Nullable<int> value);
    partial void OnHeadUserIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    #endregion
		
		public Speciality()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadUserID", DbType="Int")]
		public System.Nullable<int> HeadUserID
		{
			get
			{
				return this._HeadUserID;
			}
			set
			{
				if ((this._HeadUserID != value))
				{
					this.OnHeadUserIDChanging(value);
					this.SendPropertyChanging();
					this._HeadUserID = value;
					this.SendPropertyChanged("HeadUserID");
					this.OnHeadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Services", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Parent;
		
		private string _Name;
		
		private System.Nullable<int> _SepasID;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Definition> _Definitions;
		
		private EntitySet<Presentation> _Presentations;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    #endregion
		
		public Definition()
		{
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._Presentations = new EntitySet<Presentation>(new Action<Presentation>(this.attach_Presentations), new Action<Presentation>(this.detach_Presentations));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Departments", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Presentation", Storage="_Presentations", ThisKey="ID", OtherKey="PatientCondition")]
		public EntitySet<Presentation> Presentations
		{
			get
			{
				return this._Presentations;
			}
			set
			{
				this._Presentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="PatientStatus")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="VisitType")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Presentations(Presentation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Presentations(Presentation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Presentation")]
	public partial class Presentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _PatientCondition;
		
		private string _PresentationDescribed;
		
		private string _Symptomatic;
		
		private string _historyOfCurrentDiseases;
		
		private string _HistoryOfPastDiseases;
		
		private string _UsingDrug;
		
		private string _Allergy;
		
		private string _FamilyHistory;
		
		private string _Summery;
		
		private string _PrimDiag;
		
		private System.Nullable<bool> _EyeCheck;
		
		private string _Eye;
		
		private System.Nullable<bool> _NoseCheck;
		
		private string _Nose;
		
		private System.Nullable<bool> _MouthCheck;
		
		private string _Mouth;
		
		private System.Nullable<bool> _ThroatCheck;
		
		private string _Throat;
		
		private System.Nullable<bool> _LymphaticNodesCheck;
		
		private string _LymphaticNodes;
		
		private System.Nullable<bool> _ChestCheck;
		
		private string _Chest;
		
		private System.Nullable<bool> _BreastCheck;
		
		private string _Breast;
		
		private System.Nullable<bool> _HeartCheck;
		
		private string _Heart;
		
		private System.Nullable<bool> _LungCkeck;
		
		private string _Lung;
		
		private System.Nullable<bool> _VesslesCheck;
		
		private string _Vessles;
		
		private System.Nullable<bool> _AbdomenCheck;
		
		private string _Abdomen;
		
		private System.Nullable<bool> _GenitalOrgansMaleCheck;
		
		private string _GenitalOrgansMale;
		
		private System.Nullable<bool> _GenitalOrgansFmaleCheck;
		
		private string _GenitalOrgansFmale;
		
		private System.Nullable<bool> _RectumCheck;
		
		private string _Rectum;
		
		private System.Nullable<bool> _NervousSystemCheck;
		
		private string _NervousSystem;
		
		private System.Nullable<bool> _ExtermititiesCheck;
		
		private string _Extermitities;
		
		private System.Nullable<bool> _BoneJointsMuscelesCheck;
		
		private string _BoneJointsMusceles;
		
		private System.Nullable<bool> _NeckCheck;
		
		private string _Neck;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPatientConditionChanging(System.Nullable<int> value);
    partial void OnPatientConditionChanged();
    partial void OnPresentationDescribedChanging(string value);
    partial void OnPresentationDescribedChanged();
    partial void OnSymptomaticChanging(string value);
    partial void OnSymptomaticChanged();
    partial void OnhistoryOfCurrentDiseasesChanging(string value);
    partial void OnhistoryOfCurrentDiseasesChanged();
    partial void OnHistoryOfPastDiseasesChanging(string value);
    partial void OnHistoryOfPastDiseasesChanged();
    partial void OnUsingDrugChanging(string value);
    partial void OnUsingDrugChanged();
    partial void OnAllergyChanging(string value);
    partial void OnAllergyChanged();
    partial void OnFamilyHistoryChanging(string value);
    partial void OnFamilyHistoryChanged();
    partial void OnSummeryChanging(string value);
    partial void OnSummeryChanged();
    partial void OnPrimDiagChanging(string value);
    partial void OnPrimDiagChanged();
    partial void OnEyeCheckChanging(System.Nullable<bool> value);
    partial void OnEyeCheckChanged();
    partial void OnEyeChanging(string value);
    partial void OnEyeChanged();
    partial void OnNoseCheckChanging(System.Nullable<bool> value);
    partial void OnNoseCheckChanged();
    partial void OnNoseChanging(string value);
    partial void OnNoseChanged();
    partial void OnMouthCheckChanging(System.Nullable<bool> value);
    partial void OnMouthCheckChanged();
    partial void OnMouthChanging(string value);
    partial void OnMouthChanged();
    partial void OnThroatCheckChanging(System.Nullable<bool> value);
    partial void OnThroatCheckChanged();
    partial void OnThroatChanging(string value);
    partial void OnThroatChanged();
    partial void OnLymphaticNodesCheckChanging(System.Nullable<bool> value);
    partial void OnLymphaticNodesCheckChanged();
    partial void OnLymphaticNodesChanging(string value);
    partial void OnLymphaticNodesChanged();
    partial void OnChestCheckChanging(System.Nullable<bool> value);
    partial void OnChestCheckChanged();
    partial void OnChestChanging(string value);
    partial void OnChestChanged();
    partial void OnBreastCheckChanging(System.Nullable<bool> value);
    partial void OnBreastCheckChanged();
    partial void OnBreastChanging(string value);
    partial void OnBreastChanged();
    partial void OnHeartCheckChanging(System.Nullable<bool> value);
    partial void OnHeartCheckChanged();
    partial void OnHeartChanging(string value);
    partial void OnHeartChanged();
    partial void OnLungCkeckChanging(System.Nullable<bool> value);
    partial void OnLungCkeckChanged();
    partial void OnLungChanging(string value);
    partial void OnLungChanged();
    partial void OnVesslesCheckChanging(System.Nullable<bool> value);
    partial void OnVesslesCheckChanged();
    partial void OnVesslesChanging(string value);
    partial void OnVesslesChanged();
    partial void OnAbdomenCheckChanging(System.Nullable<bool> value);
    partial void OnAbdomenCheckChanged();
    partial void OnAbdomenChanging(string value);
    partial void OnAbdomenChanged();
    partial void OnGenitalOrgansMaleCheckChanging(System.Nullable<bool> value);
    partial void OnGenitalOrgansMaleCheckChanged();
    partial void OnGenitalOrgansMaleChanging(string value);
    partial void OnGenitalOrgansMaleChanged();
    partial void OnGenitalOrgansFmaleCheckChanging(System.Nullable<bool> value);
    partial void OnGenitalOrgansFmaleCheckChanged();
    partial void OnGenitalOrgansFmaleChanging(string value);
    partial void OnGenitalOrgansFmaleChanged();
    partial void OnRectumCheckChanging(System.Nullable<bool> value);
    partial void OnRectumCheckChanged();
    partial void OnRectumChanging(string value);
    partial void OnRectumChanged();
    partial void OnNervousSystemCheckChanging(System.Nullable<bool> value);
    partial void OnNervousSystemCheckChanged();
    partial void OnNervousSystemChanging(string value);
    partial void OnNervousSystemChanged();
    partial void OnExtermititiesCheckChanging(System.Nullable<bool> value);
    partial void OnExtermititiesCheckChanged();
    partial void OnExtermititiesChanging(string value);
    partial void OnExtermititiesChanged();
    partial void OnBoneJointsMuscelesCheckChanging(System.Nullable<bool> value);
    partial void OnBoneJointsMuscelesCheckChanged();
    partial void OnBoneJointsMuscelesChanging(string value);
    partial void OnBoneJointsMuscelesChanged();
    partial void OnNeckCheckChanging(System.Nullable<bool> value);
    partial void OnNeckCheckChanged();
    partial void OnNeckChanging(string value);
    partial void OnNeckChanged();
    #endregion
		
		public Presentation()
		{
			this._Definition = default(EntityRef<Definition>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCondition", DbType="Int")]
		public System.Nullable<int> PatientCondition
		{
			get
			{
				return this._PatientCondition;
			}
			set
			{
				if ((this._PatientCondition != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientConditionChanging(value);
					this.SendPropertyChanging();
					this._PatientCondition = value;
					this.SendPropertyChanged("PatientCondition");
					this.OnPatientConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentationDescribed", DbType="NVarChar(50)")]
		public string PresentationDescribed
		{
			get
			{
				return this._PresentationDescribed;
			}
			set
			{
				if ((this._PresentationDescribed != value))
				{
					this.OnPresentationDescribedChanging(value);
					this.SendPropertyChanging();
					this._PresentationDescribed = value;
					this.SendPropertyChanged("PresentationDescribed");
					this.OnPresentationDescribedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symptomatic", DbType="NVarChar(100)")]
		public string Symptomatic
		{
			get
			{
				return this._Symptomatic;
			}
			set
			{
				if ((this._Symptomatic != value))
				{
					this.OnSymptomaticChanging(value);
					this.SendPropertyChanging();
					this._Symptomatic = value;
					this.SendPropertyChanged("Symptomatic");
					this.OnSymptomaticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_historyOfCurrentDiseases", DbType="NVarChar(100)")]
		public string historyOfCurrentDiseases
		{
			get
			{
				return this._historyOfCurrentDiseases;
			}
			set
			{
				if ((this._historyOfCurrentDiseases != value))
				{
					this.OnhistoryOfCurrentDiseasesChanging(value);
					this.SendPropertyChanging();
					this._historyOfCurrentDiseases = value;
					this.SendPropertyChanged("historyOfCurrentDiseases");
					this.OnhistoryOfCurrentDiseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryOfPastDiseases", DbType="NVarChar(100)")]
		public string HistoryOfPastDiseases
		{
			get
			{
				return this._HistoryOfPastDiseases;
			}
			set
			{
				if ((this._HistoryOfPastDiseases != value))
				{
					this.OnHistoryOfPastDiseasesChanging(value);
					this.SendPropertyChanging();
					this._HistoryOfPastDiseases = value;
					this.SendPropertyChanged("HistoryOfPastDiseases");
					this.OnHistoryOfPastDiseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingDrug", DbType="NVarChar(500)")]
		public string UsingDrug
		{
			get
			{
				return this._UsingDrug;
			}
			set
			{
				if ((this._UsingDrug != value))
				{
					this.OnUsingDrugChanging(value);
					this.SendPropertyChanging();
					this._UsingDrug = value;
					this.SendPropertyChanged("UsingDrug");
					this.OnUsingDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allergy", DbType="NVarChar(100)")]
		public string Allergy
		{
			get
			{
				return this._Allergy;
			}
			set
			{
				if ((this._Allergy != value))
				{
					this.OnAllergyChanging(value);
					this.SendPropertyChanging();
					this._Allergy = value;
					this.SendPropertyChanged("Allergy");
					this.OnAllergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyHistory", DbType="NVarChar(100)")]
		public string FamilyHistory
		{
			get
			{
				return this._FamilyHistory;
			}
			set
			{
				if ((this._FamilyHistory != value))
				{
					this.OnFamilyHistoryChanging(value);
					this.SendPropertyChanging();
					this._FamilyHistory = value;
					this.SendPropertyChanged("FamilyHistory");
					this.OnFamilyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summery", DbType="NVarChar(4000)")]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this.OnSummeryChanging(value);
					this.SendPropertyChanging();
					this._Summery = value;
					this.SendPropertyChanged("Summery");
					this.OnSummeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimDiag", DbType="NVarChar(100)")]
		public string PrimDiag
		{
			get
			{
				return this._PrimDiag;
			}
			set
			{
				if ((this._PrimDiag != value))
				{
					this.OnPrimDiagChanging(value);
					this.SendPropertyChanging();
					this._PrimDiag = value;
					this.SendPropertyChanged("PrimDiag");
					this.OnPrimDiagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeCheck", DbType="Bit")]
		public System.Nullable<bool> EyeCheck
		{
			get
			{
				return this._EyeCheck;
			}
			set
			{
				if ((this._EyeCheck != value))
				{
					this.OnEyeCheckChanging(value);
					this.SendPropertyChanging();
					this._EyeCheck = value;
					this.SendPropertyChanged("EyeCheck");
					this.OnEyeCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="NVarChar(100)")]
		public string Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this.OnEyeChanging(value);
					this.SendPropertyChanging();
					this._Eye = value;
					this.SendPropertyChanged("Eye");
					this.OnEyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoseCheck", DbType="Bit")]
		public System.Nullable<bool> NoseCheck
		{
			get
			{
				return this._NoseCheck;
			}
			set
			{
				if ((this._NoseCheck != value))
				{
					this.OnNoseCheckChanging(value);
					this.SendPropertyChanging();
					this._NoseCheck = value;
					this.SendPropertyChanged("NoseCheck");
					this.OnNoseCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nose", DbType="NVarChar(100)")]
		public string Nose
		{
			get
			{
				return this._Nose;
			}
			set
			{
				if ((this._Nose != value))
				{
					this.OnNoseChanging(value);
					this.SendPropertyChanging();
					this._Nose = value;
					this.SendPropertyChanged("Nose");
					this.OnNoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MouthCheck", DbType="Bit")]
		public System.Nullable<bool> MouthCheck
		{
			get
			{
				return this._MouthCheck;
			}
			set
			{
				if ((this._MouthCheck != value))
				{
					this.OnMouthCheckChanging(value);
					this.SendPropertyChanging();
					this._MouthCheck = value;
					this.SendPropertyChanged("MouthCheck");
					this.OnMouthCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mouth", DbType="NVarChar(100)")]
		public string Mouth
		{
			get
			{
				return this._Mouth;
			}
			set
			{
				if ((this._Mouth != value))
				{
					this.OnMouthChanging(value);
					this.SendPropertyChanging();
					this._Mouth = value;
					this.SendPropertyChanged("Mouth");
					this.OnMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThroatCheck", DbType="Bit")]
		public System.Nullable<bool> ThroatCheck
		{
			get
			{
				return this._ThroatCheck;
			}
			set
			{
				if ((this._ThroatCheck != value))
				{
					this.OnThroatCheckChanging(value);
					this.SendPropertyChanging();
					this._ThroatCheck = value;
					this.SendPropertyChanged("ThroatCheck");
					this.OnThroatCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Throat", DbType="NVarChar(100)")]
		public string Throat
		{
			get
			{
				return this._Throat;
			}
			set
			{
				if ((this._Throat != value))
				{
					this.OnThroatChanging(value);
					this.SendPropertyChanging();
					this._Throat = value;
					this.SendPropertyChanged("Throat");
					this.OnThroatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LymphaticNodesCheck", DbType="Bit")]
		public System.Nullable<bool> LymphaticNodesCheck
		{
			get
			{
				return this._LymphaticNodesCheck;
			}
			set
			{
				if ((this._LymphaticNodesCheck != value))
				{
					this.OnLymphaticNodesCheckChanging(value);
					this.SendPropertyChanging();
					this._LymphaticNodesCheck = value;
					this.SendPropertyChanged("LymphaticNodesCheck");
					this.OnLymphaticNodesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LymphaticNodes", DbType="NVarChar(100)")]
		public string LymphaticNodes
		{
			get
			{
				return this._LymphaticNodes;
			}
			set
			{
				if ((this._LymphaticNodes != value))
				{
					this.OnLymphaticNodesChanging(value);
					this.SendPropertyChanging();
					this._LymphaticNodes = value;
					this.SendPropertyChanged("LymphaticNodes");
					this.OnLymphaticNodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChestCheck", DbType="Bit")]
		public System.Nullable<bool> ChestCheck
		{
			get
			{
				return this._ChestCheck;
			}
			set
			{
				if ((this._ChestCheck != value))
				{
					this.OnChestCheckChanging(value);
					this.SendPropertyChanging();
					this._ChestCheck = value;
					this.SendPropertyChanged("ChestCheck");
					this.OnChestCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chest", DbType="NVarChar(100)")]
		public string Chest
		{
			get
			{
				return this._Chest;
			}
			set
			{
				if ((this._Chest != value))
				{
					this.OnChestChanging(value);
					this.SendPropertyChanging();
					this._Chest = value;
					this.SendPropertyChanged("Chest");
					this.OnChestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreastCheck", DbType="Bit")]
		public System.Nullable<bool> BreastCheck
		{
			get
			{
				return this._BreastCheck;
			}
			set
			{
				if ((this._BreastCheck != value))
				{
					this.OnBreastCheckChanging(value);
					this.SendPropertyChanging();
					this._BreastCheck = value;
					this.SendPropertyChanged("BreastCheck");
					this.OnBreastCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breast", DbType="NVarChar(100)")]
		public string Breast
		{
			get
			{
				return this._Breast;
			}
			set
			{
				if ((this._Breast != value))
				{
					this.OnBreastChanging(value);
					this.SendPropertyChanging();
					this._Breast = value;
					this.SendPropertyChanged("Breast");
					this.OnBreastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartCheck", DbType="Bit")]
		public System.Nullable<bool> HeartCheck
		{
			get
			{
				return this._HeartCheck;
			}
			set
			{
				if ((this._HeartCheck != value))
				{
					this.OnHeartCheckChanging(value);
					this.SendPropertyChanging();
					this._HeartCheck = value;
					this.SendPropertyChanged("HeartCheck");
					this.OnHeartCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heart", DbType="NVarChar(100)")]
		public string Heart
		{
			get
			{
				return this._Heart;
			}
			set
			{
				if ((this._Heart != value))
				{
					this.OnHeartChanging(value);
					this.SendPropertyChanging();
					this._Heart = value;
					this.SendPropertyChanged("Heart");
					this.OnHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LungCkeck", DbType="Bit")]
		public System.Nullable<bool> LungCkeck
		{
			get
			{
				return this._LungCkeck;
			}
			set
			{
				if ((this._LungCkeck != value))
				{
					this.OnLungCkeckChanging(value);
					this.SendPropertyChanging();
					this._LungCkeck = value;
					this.SendPropertyChanged("LungCkeck");
					this.OnLungCkeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lung", DbType="NVarChar(100)")]
		public string Lung
		{
			get
			{
				return this._Lung;
			}
			set
			{
				if ((this._Lung != value))
				{
					this.OnLungChanging(value);
					this.SendPropertyChanging();
					this._Lung = value;
					this.SendPropertyChanged("Lung");
					this.OnLungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VesslesCheck", DbType="Bit")]
		public System.Nullable<bool> VesslesCheck
		{
			get
			{
				return this._VesslesCheck;
			}
			set
			{
				if ((this._VesslesCheck != value))
				{
					this.OnVesslesCheckChanging(value);
					this.SendPropertyChanging();
					this._VesslesCheck = value;
					this.SendPropertyChanged("VesslesCheck");
					this.OnVesslesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vessles", DbType="NVarChar(100)")]
		public string Vessles
		{
			get
			{
				return this._Vessles;
			}
			set
			{
				if ((this._Vessles != value))
				{
					this.OnVesslesChanging(value);
					this.SendPropertyChanging();
					this._Vessles = value;
					this.SendPropertyChanged("Vessles");
					this.OnVesslesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbdomenCheck", DbType="Bit")]
		public System.Nullable<bool> AbdomenCheck
		{
			get
			{
				return this._AbdomenCheck;
			}
			set
			{
				if ((this._AbdomenCheck != value))
				{
					this.OnAbdomenCheckChanging(value);
					this.SendPropertyChanging();
					this._AbdomenCheck = value;
					this.SendPropertyChanged("AbdomenCheck");
					this.OnAbdomenCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abdomen", DbType="NVarChar(100)")]
		public string Abdomen
		{
			get
			{
				return this._Abdomen;
			}
			set
			{
				if ((this._Abdomen != value))
				{
					this.OnAbdomenChanging(value);
					this.SendPropertyChanging();
					this._Abdomen = value;
					this.SendPropertyChanged("Abdomen");
					this.OnAbdomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansMaleCheck", DbType="Bit")]
		public System.Nullable<bool> GenitalOrgansMaleCheck
		{
			get
			{
				return this._GenitalOrgansMaleCheck;
			}
			set
			{
				if ((this._GenitalOrgansMaleCheck != value))
				{
					this.OnGenitalOrgansMaleCheckChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansMaleCheck = value;
					this.SendPropertyChanged("GenitalOrgansMaleCheck");
					this.OnGenitalOrgansMaleCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansMale", DbType="NVarChar(100)")]
		public string GenitalOrgansMale
		{
			get
			{
				return this._GenitalOrgansMale;
			}
			set
			{
				if ((this._GenitalOrgansMale != value))
				{
					this.OnGenitalOrgansMaleChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansMale = value;
					this.SendPropertyChanged("GenitalOrgansMale");
					this.OnGenitalOrgansMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansFmaleCheck", DbType="Bit")]
		public System.Nullable<bool> GenitalOrgansFmaleCheck
		{
			get
			{
				return this._GenitalOrgansFmaleCheck;
			}
			set
			{
				if ((this._GenitalOrgansFmaleCheck != value))
				{
					this.OnGenitalOrgansFmaleCheckChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansFmaleCheck = value;
					this.SendPropertyChanged("GenitalOrgansFmaleCheck");
					this.OnGenitalOrgansFmaleCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansFmale", DbType="NVarChar(100)")]
		public string GenitalOrgansFmale
		{
			get
			{
				return this._GenitalOrgansFmale;
			}
			set
			{
				if ((this._GenitalOrgansFmale != value))
				{
					this.OnGenitalOrgansFmaleChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansFmale = value;
					this.SendPropertyChanged("GenitalOrgansFmale");
					this.OnGenitalOrgansFmaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectumCheck", DbType="Bit")]
		public System.Nullable<bool> RectumCheck
		{
			get
			{
				return this._RectumCheck;
			}
			set
			{
				if ((this._RectumCheck != value))
				{
					this.OnRectumCheckChanging(value);
					this.SendPropertyChanging();
					this._RectumCheck = value;
					this.SendPropertyChanged("RectumCheck");
					this.OnRectumCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectum", DbType="NVarChar(100)")]
		public string Rectum
		{
			get
			{
				return this._Rectum;
			}
			set
			{
				if ((this._Rectum != value))
				{
					this.OnRectumChanging(value);
					this.SendPropertyChanging();
					this._Rectum = value;
					this.SendPropertyChanged("Rectum");
					this.OnRectumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSystemCheck", DbType="Bit")]
		public System.Nullable<bool> NervousSystemCheck
		{
			get
			{
				return this._NervousSystemCheck;
			}
			set
			{
				if ((this._NervousSystemCheck != value))
				{
					this.OnNervousSystemCheckChanging(value);
					this.SendPropertyChanging();
					this._NervousSystemCheck = value;
					this.SendPropertyChanged("NervousSystemCheck");
					this.OnNervousSystemCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSystem", DbType="NVarChar(100)")]
		public string NervousSystem
		{
			get
			{
				return this._NervousSystem;
			}
			set
			{
				if ((this._NervousSystem != value))
				{
					this.OnNervousSystemChanging(value);
					this.SendPropertyChanging();
					this._NervousSystem = value;
					this.SendPropertyChanged("NervousSystem");
					this.OnNervousSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtermititiesCheck", DbType="Bit")]
		public System.Nullable<bool> ExtermititiesCheck
		{
			get
			{
				return this._ExtermititiesCheck;
			}
			set
			{
				if ((this._ExtermititiesCheck != value))
				{
					this.OnExtermititiesCheckChanging(value);
					this.SendPropertyChanging();
					this._ExtermititiesCheck = value;
					this.SendPropertyChanged("ExtermititiesCheck");
					this.OnExtermititiesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extermitities", DbType="NVarChar(100)")]
		public string Extermitities
		{
			get
			{
				return this._Extermitities;
			}
			set
			{
				if ((this._Extermitities != value))
				{
					this.OnExtermititiesChanging(value);
					this.SendPropertyChanging();
					this._Extermitities = value;
					this.SendPropertyChanged("Extermitities");
					this.OnExtermititiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneJointsMuscelesCheck", DbType="Bit")]
		public System.Nullable<bool> BoneJointsMuscelesCheck
		{
			get
			{
				return this._BoneJointsMuscelesCheck;
			}
			set
			{
				if ((this._BoneJointsMuscelesCheck != value))
				{
					this.OnBoneJointsMuscelesCheckChanging(value);
					this.SendPropertyChanging();
					this._BoneJointsMuscelesCheck = value;
					this.SendPropertyChanged("BoneJointsMuscelesCheck");
					this.OnBoneJointsMuscelesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneJointsMusceles", DbType="NVarChar(100)")]
		public string BoneJointsMusceles
		{
			get
			{
				return this._BoneJointsMusceles;
			}
			set
			{
				if ((this._BoneJointsMusceles != value))
				{
					this.OnBoneJointsMuscelesChanging(value);
					this.SendPropertyChanging();
					this._BoneJointsMusceles = value;
					this.SendPropertyChanged("BoneJointsMusceles");
					this.OnBoneJointsMuscelesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeckCheck", DbType="Bit")]
		public System.Nullable<bool> NeckCheck
		{
			get
			{
				return this._NeckCheck;
			}
			set
			{
				if ((this._NeckCheck != value))
				{
					this.OnNeckCheckChanging(value);
					this.SendPropertyChanging();
					this._NeckCheck = value;
					this.SendPropertyChanged("NeckCheck");
					this.OnNeckCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neck", DbType="NVarChar(100)")]
		public string Neck
		{
			get
			{
				return this._Neck;
			}
			set
			{
				if ((this._Neck != value))
				{
					this.OnNeckChanging(value);
					this.SendPropertyChanging();
					this._Neck = value;
					this.SendPropertyChanged("Neck");
					this.OnNeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Presentation", Storage="_Definition", ThisKey="PatientCondition", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Presentations.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Presentations.Add(this);
						this._PatientCondition = value.ID;
					}
					else
					{
						this._PatientCondition = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Presentation", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Presentation = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Presentation = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosseirPayment")]
	public partial class Vw_DosseirPayment
	{
		
		private long _ID;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private int _IOtype;
		
		private decimal _Price;
		
		private string _Date;
		
		private string _Type;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private bool _PayBack;
		
		private string _Description;
		
		private string _Time;
		
		private string _TransactionID;
		
		private string _CreatorFullName;
		
		private System.Nullable<System.Guid> _PayBackID;
		
		private string _ModificatorFullName;
		
		private int _SerialNumber;
		
		private string _PayBackType;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _InstallMent;
		
		public Vw_DosseirPayment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBack", DbType="Bit NOT NULL")]
		public bool PayBack
		{
			get
			{
				return this._PayBack;
			}
			set
			{
				if ((this._PayBack != value))
				{
					this._PayBack = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this._TransactionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorFullName", DbType="NVarChar(100)")]
		public string CreatorFullName
		{
			get
			{
				return this._CreatorFullName;
			}
			set
			{
				if ((this._CreatorFullName != value))
				{
					this._CreatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayBackID
		{
			get
			{
				return this._PayBackID;
			}
			set
			{
				if ((this._PayBackID != value))
				{
					this._PayBackID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorFullName", DbType="NVarChar(100)")]
		public string ModificatorFullName
		{
			get
			{
				return this._ModificatorFullName;
			}
			set
			{
				if ((this._ModificatorFullName != value))
				{
					this._ModificatorFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int NOT NULL")]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackType", DbType="NVarChar(20)")]
		public string PayBackType
		{
			get
			{
				return this._PayBackType;
			}
			set
			{
				if ((this._PayBackType != value))
				{
					this._PayBackType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this._CaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMent", DbType="NVarChar(50)")]
		public string InstallMent
		{
			get
			{
				return this._InstallMent;
			}
			set
			{
				if ((this._InstallMent != value))
				{
					this._InstallMent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugFrequencyUsage")]
	public partial class DrugFrequencyUsage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _EName;
		
		private string _Code;
		
		private string _Equivalent;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEquivalentChanging(string value);
    partial void OnEquivalentChanged();
    #endregion
		
		public DrugFrequencyUsage()
		{
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(1000)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(1000)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this.OnENameChanging(value);
					this.SendPropertyChanging();
					this._EName = value;
					this.SendPropertyChanged("EName");
					this.OnENameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equivalent", DbType="NVarChar(100)")]
		public string Equivalent
		{
			get
			{
				return this._Equivalent;
			}
			set
			{
				if ((this._Equivalent != value))
				{
					this.OnEquivalentChanging(value);
					this.SendPropertyChanging();
					this._Equivalent = value;
					this.SendPropertyChanged("Equivalent");
					this.OnEquivalentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="HIXCode")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _OldParentID;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Name_En;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Shape;
		
		private string _MESCCode_No;
		
		private System.Nullable<bool> _NIS;
		
		private bool _EmergencyFav;
		
		private string _HIXCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _BasicK;
		
		private System.Nullable<double> _SupplementBasicK;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _ResultType;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private EntityRef<DiagnosticServiceDetail> _DiagnosticServiceDetail;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<SampleAnswer> _SampleAnswers;
		
		private EntitySet<FactorD> _FactorDs;
		
		private EntitySet<FavoriteService> _FavoriteServices;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntitySet<PatternM> _PatternMs;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntitySet<ModularService> _ModularServices;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Surgery> _Surgeries;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnOldParentIDChanging(System.Nullable<int> value);
    partial void OnOldParentIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnName_EnChanging(string value);
    partial void OnName_EnChanged();
    partial void OnCaliforniaCodeChanging(string value);
    partial void OnCaliforniaCodeChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShapeChanging(string value);
    partial void OnShapeChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnEmergencyFavChanging(bool value);
    partial void OnEmergencyFavChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnBasicKChanging(System.Nullable<double> value);
    partial void OnBasicKChanged();
    partial void OnSupplementBasicKChanging(System.Nullable<double> value);
    partial void OnSupplementBasicKChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    #endregion
		
		public Service()
		{
			this._DiagnosticServiceDetail = default(EntityRef<DiagnosticServiceDetail>);
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._SampleAnswers = new EntitySet<SampleAnswer>(new Action<SampleAnswer>(this.attach_SampleAnswers), new Action<SampleAnswer>(this.detach_SampleAnswers));
			this._FactorDs = new EntitySet<FactorD>(new Action<FactorD>(this.attach_FactorDs), new Action<FactorD>(this.detach_FactorDs));
			this._FavoriteServices = new EntitySet<FavoriteService>(new Action<FavoriteService>(this.attach_FavoriteServices), new Action<FavoriteService>(this.detach_FavoriteServices));
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._PatternMs = new EntitySet<PatternM>(new Action<PatternM>(this.attach_PatternMs), new Action<PatternM>(this.detach_PatternMs));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._ModularServices = new EntitySet<ModularService>(new Action<ModularService>(this.attach_ModularServices), new Action<ModularService>(this.detach_ModularServices));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Surgeries = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries), new Action<Surgery>(this.detach_Surgeries));
			this._Service1 = default(EntityRef<Service>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldParentID", DbType="Int")]
		public System.Nullable<int> OldParentID
		{
			get
			{
				return this._OldParentID;
			}
			set
			{
				if ((this._OldParentID != value))
				{
					this.OnOldParentIDChanging(value);
					this.SendPropertyChanging();
					this._OldParentID = value;
					this.SendPropertyChanged("OldParentID");
					this.OnOldParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_En", DbType="NVarChar(MAX)")]
		public string Name_En
		{
			get
			{
				return this._Name_En;
			}
			set
			{
				if ((this._Name_En != value))
				{
					this.OnName_EnChanging(value);
					this.SendPropertyChanging();
					this._Name_En = value;
					this.SendPropertyChanged("Name_En");
					this.OnName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this.OnCaliforniaCodeChanging(value);
					this.SendPropertyChanging();
					this._CaliforniaCode = value;
					this.SendPropertyChanged("CaliforniaCode");
					this.OnCaliforniaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this.OnShapeChanging(value);
					this.SendPropertyChanging();
					this._Shape = value;
					this.SendPropertyChanged("Shape");
					this.OnShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFav", DbType="Bit NOT NULL")]
		public bool EmergencyFav
		{
			get
			{
				return this._EmergencyFav;
			}
			set
			{
				if ((this._EmergencyFav != value))
				{
					this.OnEmergencyFavChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFav = value;
					this.SendPropertyChanged("EmergencyFav");
					this.OnEmergencyFavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicK", DbType="Float")]
		public System.Nullable<double> BasicK
		{
			get
			{
				return this._BasicK;
			}
			set
			{
				if ((this._BasicK != value))
				{
					this.OnBasicKChanging(value);
					this.SendPropertyChanging();
					this._BasicK = value;
					this.SendPropertyChanged("BasicK");
					this.OnBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementBasicK", DbType="Float")]
		public System.Nullable<double> SupplementBasicK
		{
			get
			{
				return this._SupplementBasicK;
			}
			set
			{
				if ((this._SupplementBasicK != value))
				{
					this.OnSupplementBasicKChanging(value);
					this.SendPropertyChanging();
					this._SupplementBasicK = value;
					this.SendPropertyChanged("SupplementBasicK");
					this.OnSupplementBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DiagnosticServiceDetail", Storage="_DiagnosticServiceDetail", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public DiagnosticServiceDetail DiagnosticServiceDetail
		{
			get
			{
				return this._DiagnosticServiceDetail.Entity;
			}
			set
			{
				DiagnosticServiceDetail previousValue = this._DiagnosticServiceDetail.Entity;
				if (((previousValue != value) 
							|| (this._DiagnosticServiceDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiagnosticServiceDetail.Entity = null;
						previousValue.Service = null;
					}
					this._DiagnosticServiceDetail.Entity = value;
					if ((value != null))
					{
						value.Service = this;
					}
					this.SendPropertyChanged("DiagnosticServiceDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SampleAnswer", Storage="_SampleAnswers", ThisKey="ID", OtherKey="GroupServiceID")]
		public EntitySet<SampleAnswer> SampleAnswers
		{
			get
			{
				return this._SampleAnswers;
			}
			set
			{
				this._SampleAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FactorD", Storage="_FactorDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<FactorD> FactorDs
		{
			get
			{
				return this._FactorDs;
			}
			set
			{
				this._FactorDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FavoriteService", Storage="_FavoriteServices", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<FavoriteService> FavoriteServices
		{
			get
			{
				return this._FavoriteServices;
			}
			set
			{
				this._FavoriteServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="ServiceDID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_PatternMs", ThisKey="ID", OtherKey="ServiceMID")]
		public EntitySet<PatternM> PatternMs
		{
			get
			{
				return this._PatternMs;
			}
			set
			{
				this._PatternMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ModularService", Storage="_ModularServices", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<ModularService> ModularServices
		{
			get
			{
				return this._ModularServices;
			}
			set
			{
				this._ModularServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Services", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Surgery", Storage="_Surgeries", ThisKey="ID", OtherKey="ConfirmServiceID")]
		public EntitySet<Surgery> Surgeries
		{
			get
			{
				return this._Surgeries;
			}
			set
			{
				this._Surgeries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_ServiceCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_SampleAnswers(SampleAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_SampleAnswers(SampleAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_FactorDs(FactorD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_FactorDs(FactorD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_DosFinance")]
	public partial class Vw_DosFinance
	{
		
		private long _DossierNO;
		
		private int _IOtype;
		
		private string _Speciality;
		
		private string _Dep;
		
		private string _DoctorLastName;
		
		private string _DoctorFirstname;
		
		private string _NationalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Date;
		
		private string _CatName;
		
		private int _ID;
		
		private string _ParentName;
		
		private string _Name;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private bool _Confirm;
		
		private string _GsdDate;
		
		private string _Time;
		
		private bool _NoTake;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private bool _Payed;
		
		private string _PersonInsure;
		
		private string _GsmInsure;
		
		private string _Company;
		
		private string _Relation;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _BirthDate;
		
		private string _PersonalCode;
		
		private bool _Discharge;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private string _DischargeStatus;
		
		private bool _TotalPayed;
		
		private System.Guid _GSDID;
		
		private System.Nullable<int> _SortCol;
		
		private System.Nullable<int> _ServiceOldID;
		
		private System.Nullable<int> _ServiceOldParentID;
		
		private string _Sarfasl_Khedmati;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<double> _UnitPrice;
		
		private string _WardParent;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private string _FunctorFName;
		
		private string _FunctorLName;
		
		private bool _Admitted;
		
		public Vw_DosFinance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNO", DbType="BigInt NOT NULL")]
		public long DossierNO
		{
			get
			{
				return this._DossierNO;
			}
			set
			{
				if ((this._DossierNO != value))
				{
					this._DossierNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this._IOtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Speciality", DbType="NVarChar(50)")]
		public string Speciality
		{
			get
			{
				return this._Speciality;
			}
			set
			{
				if ((this._Speciality != value))
				{
					this._Speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="NVarChar(100)")]
		public string Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this._Dep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(100)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstname", DbType="NVarChar(100)")]
		public string DoctorFirstname
		{
			get
			{
				return this._DoctorFirstname;
			}
			set
			{
				if ((this._DoctorFirstname != value))
				{
					this._DoctorFirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(MAX)")]
		public string ParentName
		{
			get
			{
				return this._ParentName;
			}
			set
			{
				if ((this._ParentName != value))
				{
					this._ParentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this._GivenAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this._Confirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdDate", DbType="NVarChar(10)")]
		public string GsdDate
		{
			get
			{
				return this._GsdDate;
			}
			set
			{
				if ((this._GsdDate != value))
				{
					this._GsdDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this._NoTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this._PayedPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this._PaymentPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this._Payed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInsure", DbType="NVarChar(50)")]
		public string PersonInsure
		{
			get
			{
				return this._PersonInsure;
			}
			set
			{
				if ((this._PersonInsure != value))
				{
					this._PersonInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmInsure", DbType="NVarChar(100)")]
		public string GsmInsure
		{
			get
			{
				return this._GsmInsure;
			}
			set
			{
				if ((this._GsmInsure != value))
				{
					this._GsmInsure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(80)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(20)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this._Relation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this._DischargeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this._DischargeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this._Discharge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this._AdmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this._AdmitTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeStatus", DbType="NVarChar(50)")]
		public string DischargeStatus
		{
			get
			{
				return this._DischargeStatus;
			}
			set
			{
				if ((this._DischargeStatus != value))
				{
					this._DischargeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this._TotalPayed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GSDID
		{
			get
			{
				return this._GSDID;
			}
			set
			{
				if ((this._GSDID != value))
				{
					this._GSDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this._SortCol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldID", DbType="Int")]
		public System.Nullable<int> ServiceOldID
		{
			get
			{
				return this._ServiceOldID;
			}
			set
			{
				if ((this._ServiceOldID != value))
				{
					this._ServiceOldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOldParentID", DbType="Int")]
		public System.Nullable<int> ServiceOldParentID
		{
			get
			{
				return this._ServiceOldParentID;
			}
			set
			{
				if ((this._ServiceOldParentID != value))
				{
					this._ServiceOldParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sarfasl_Khedmati", DbType="NVarChar(255)")]
		public string Sarfasl_Khedmati
		{
			get
			{
				return this._Sarfasl_Khedmati;
			}
			set
			{
				if ((this._Sarfasl_Khedmati != value))
				{
					this._Sarfasl_Khedmati = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardParent", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WardParent
		{
			get
			{
				return this._WardParent;
			}
			set
			{
				if ((this._WardParent != value))
				{
					this._WardParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					this._FunctorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorFName", DbType="NVarChar(100)")]
		public string FunctorFName
		{
			get
			{
				return this._FunctorFName;
			}
			set
			{
				if ((this._FunctorFName != value))
				{
					this._FunctorFName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorLName", DbType="NVarChar(100)")]
		public string FunctorLName
		{
			get
			{
				return this._FunctorLName;
			}
			set
			{
				if ((this._FunctorLName != value))
				{
					this._FunctorLName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this._Admitted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dossier")]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _UniqID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _NationalCode;
		
		private string _Date;
		
		private string _Time;
		
		private string _MedicalCenter;
		
		private bool _AdvancePaymentPayed;
		
		private decimal _AdvancePayment;
		
		private int _IOtype;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private System.Nullable<bool> _LockBilling;
		
		private string _SpicialCode;
		
		private System.Nullable<decimal> _AllPateintShare;
		
		private System.Nullable<decimal> _AllInsuranceShare;
		
		private System.Nullable<decimal> _AllPay;
		
		private bool _Editable;
		
		private System.Nullable<System.Guid> _StaffCure;
		
		private EntityRef<Discharge> _Discharge1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUniqIDChanging(System.Guid value);
    partial void OnUniqIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnMedicalCenterChanging(string value);
    partial void OnMedicalCenterChanged();
    partial void OnAdvancePaymentPayedChanging(bool value);
    partial void OnAdvancePaymentPayedChanged();
    partial void OnAdvancePaymentChanging(decimal value);
    partial void OnAdvancePaymentChanged();
    partial void OnIOtypeChanging(int value);
    partial void OnIOtypeChanged();
    partial void OnTotalPayedChanging(bool value);
    partial void OnTotalPayedChanged();
    partial void OnDischargeChanging(bool value);
    partial void OnDischargeChanged();
    partial void OnLockBillingChanging(System.Nullable<bool> value);
    partial void OnLockBillingChanged();
    partial void OnSpicialCodeChanging(string value);
    partial void OnSpicialCodeChanged();
    partial void OnAllPateintShareChanging(System.Nullable<decimal> value);
    partial void OnAllPateintShareChanged();
    partial void OnAllInsuranceShareChanging(System.Nullable<decimal> value);
    partial void OnAllInsuranceShareChanged();
    partial void OnAllPayChanging(System.Nullable<decimal> value);
    partial void OnAllPayChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnStaffCureChanging(System.Nullable<System.Guid> value);
    partial void OnStaffCureChanged();
    #endregion
		
		public Dossier()
		{
			this._Discharge1 = default(EntityRef<Discharge>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			this._Staff = default(EntityRef<Staff>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsDbGenerated=true)]
		public System.Guid UniqID
		{
			get
			{
				return this._UniqID;
			}
			set
			{
				if ((this._UniqID != value))
				{
					this.OnUniqIDChanging(value);
					this.SendPropertyChanging();
					this._UniqID = value;
					this.SendPropertyChanged("UniqID");
					this.OnUniqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(200)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this.OnMedicalCenterChanging(value);
					this.SendPropertyChanging();
					this._MedicalCenter = value;
					this.SendPropertyChanged("MedicalCenter");
					this.OnMedicalCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePaymentPayed", DbType="Bit NOT NULL")]
		public bool AdvancePaymentPayed
		{
			get
			{
				return this._AdvancePaymentPayed;
			}
			set
			{
				if ((this._AdvancePaymentPayed != value))
				{
					this.OnAdvancePaymentPayedChanging(value);
					this.SendPropertyChanging();
					this._AdvancePaymentPayed = value;
					this.SendPropertyChanged("AdvancePaymentPayed");
					this.OnAdvancePaymentPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money NOT NULL")]
		public decimal AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this.OnAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._AdvancePayment = value;
					this.SendPropertyChanged("AdvancePayment");
					this.OnAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this.OnIOtypeChanging(value);
					this.SendPropertyChanging();
					this._IOtype = value;
					this.SendPropertyChanged("IOtype");
					this.OnIOtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this.OnTotalPayedChanging(value);
					this.SendPropertyChanging();
					this._TotalPayed = value;
					this.SendPropertyChanged("TotalPayed");
					this.OnTotalPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this.OnDischargeChanging(value);
					this.SendPropertyChanging();
					this._Discharge = value;
					this.SendPropertyChanged("Discharge");
					this.OnDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockBilling", DbType="Bit")]
		public System.Nullable<bool> LockBilling
		{
			get
			{
				return this._LockBilling;
			}
			set
			{
				if ((this._LockBilling != value))
				{
					this.OnLockBillingChanging(value);
					this.SendPropertyChanging();
					this._LockBilling = value;
					this.SendPropertyChanged("LockBilling");
					this.OnLockBillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpicialCode", DbType="NVarChar(20)")]
		public string SpicialCode
		{
			get
			{
				return this._SpicialCode;
			}
			set
			{
				if ((this._SpicialCode != value))
				{
					this.OnSpicialCodeChanging(value);
					this.SendPropertyChanging();
					this._SpicialCode = value;
					this.SendPropertyChanged("SpicialCode");
					this.OnSpicialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPateintShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPateintShare
		{
			get
			{
				return this._AllPateintShare;
			}
			set
			{
				if ((this._AllPateintShare != value))
				{
					this.OnAllPateintShareChanging(value);
					this.SendPropertyChanging();
					this._AllPateintShare = value;
					this.SendPropertyChanged("AllPateintShare");
					this.OnAllPateintShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllInsuranceShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllInsuranceShare
		{
			get
			{
				return this._AllInsuranceShare;
			}
			set
			{
				if ((this._AllInsuranceShare != value))
				{
					this.OnAllInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._AllInsuranceShare = value;
					this.SendPropertyChanged("AllInsuranceShare");
					this.OnAllInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPay
		{
			get
			{
				return this._AllPay;
			}
			set
			{
				if ((this._AllPay != value))
				{
					this.OnAllPayChanging(value);
					this.SendPropertyChanging();
					this._AllPay = value;
					this.SendPropertyChanged("AllPay");
					this.OnAllPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._Editable;
			}
			set
			{
				if ((this._Editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._Editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCure", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffCure
		{
			get
			{
				return this._StaffCure;
			}
			set
			{
				if ((this._StaffCure != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffCureChanging(value);
					this.SendPropertyChanging();
					this._StaffCure = value;
					this.SendPropertyChanged("StaffCure");
					this.OnStaffCureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Discharge1", ThisKey="ID", OtherKey="DossierID", IsUnique=true, IsForeignKey=false)]
		public Discharge Discharge1
		{
			get
			{
				return this._Discharge1.Entity;
			}
			set
			{
				Discharge previousValue = this._Discharge1.Entity;
				if (((previousValue != value) 
							|| (this._Discharge1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discharge1.Entity = null;
						previousValue.Dossier = null;
					}
					this._Discharge1.Entity = value;
					if ((value != null))
					{
						value.Dossier = this;
					}
					this.SendPropertyChanged("Discharge1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Staff", ThisKey="StaffCure", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._StaffCure = value.ID;
					}
					else
					{
						this._StaffCure = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwPersonsCompany")]
	public partial class VwPersonsCompany
	{
		
		private string _MedicalID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _Name;
		
		private System.Guid _ID;
		
		private string _PersonalCode;
		
		private string _FatherName;
		
		private string _BirthPlace;
		
		private string _BirthDate;
		
		private string _IdentityPlace;
		
		private string _IdentityNumber;
		
		private string _Expr1;
		
		private string _InsuranceNo;
		
		private string _InsuranceName;
		
		private string _HomeAddress;
		
		private string _WorkCountry;
		
		private string _RelationName;
		
		public VwPersonsCompany()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13) NOT NULL", CanBeNull=false)]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this._FatherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this._IdentityPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this._IdentityNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(13)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this._InsuranceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this._InsuranceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(128)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this._HomeAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCountry", DbType="NVarChar(20)")]
		public string WorkCountry
		{
			get
			{
				return this._WorkCountry;
			}
			set
			{
				if ((this._WorkCountry != value))
				{
					this._WorkCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationName", DbType="NVarChar(20)")]
		public string RelationName
		{
			get
			{
				return this._RelationName;
			}
			set
			{
				if ((this._RelationName != value))
				{
					this._RelationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discharge")]
	public partial class Discharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DossierID;
		
		private System.Nullable<int> _PatientStatus;
		
		private string _FinalDiagnosis;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private System.Nullable<System.Guid> _DischargerStaffID;
		
		private string _DischargeAdvance;
		
		private string _DeathReasone;
		
		private string _DeathPlace;
		
		private System.Nullable<int> _DeathPlaceSepasID;
		
		private string _DischargerUserID;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDossierIDChanging(long value);
    partial void OnDossierIDChanged();
    partial void OnPatientStatusChanging(System.Nullable<int> value);
    partial void OnPatientStatusChanged();
    partial void OnFinalDiagnosisChanging(string value);
    partial void OnFinalDiagnosisChanged();
    partial void OnDischargeTimeChanging(string value);
    partial void OnDischargeTimeChanged();
    partial void OnDischargeDateChanging(string value);
    partial void OnDischargeDateChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDischargerStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnDischargerStaffIDChanged();
    partial void OnDischargeAdvanceChanging(string value);
    partial void OnDischargeAdvanceChanged();
    partial void OnDeathReasoneChanging(string value);
    partial void OnDeathReasoneChanged();
    partial void OnDeathPlaceChanging(string value);
    partial void OnDeathPlaceChanged();
    partial void OnDeathPlaceSepasIDChanging(System.Nullable<int> value);
    partial void OnDeathPlaceSepasIDChanged();
    partial void OnDischargerUserIDChanging(string value);
    partial void OnDischargerUserIDChanged();
    #endregion
		
		public Discharge()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Dossier = default(EntityRef<Dossier>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatus", DbType="Int")]
		public System.Nullable<int> PatientStatus
		{
			get
			{
				return this._PatientStatus;
			}
			set
			{
				if ((this._PatientStatus != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientStatus = value;
					this.SendPropertyChanged("PatientStatus");
					this.OnPatientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDiagnosis", DbType="NVarChar(2000)")]
		public string FinalDiagnosis
		{
			get
			{
				return this._FinalDiagnosis;
			}
			set
			{
				if ((this._FinalDiagnosis != value))
				{
					this.OnFinalDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._FinalDiagnosis = value;
					this.SendPropertyChanged("FinalDiagnosis");
					this.OnFinalDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this.OnDischargeTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeTime = value;
					this.SendPropertyChanged("DischargeTime");
					this.OnDischargeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NChar(10)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DischargerStaffID
		{
			get
			{
				return this._DischargerStaffID;
			}
			set
			{
				if ((this._DischargerStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDischargerStaffIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerStaffID = value;
					this.SendPropertyChanged("DischargerStaffID");
					this.OnDischargerStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeAdvance", DbType="NVarChar(MAX)")]
		public string DischargeAdvance
		{
			get
			{
				return this._DischargeAdvance;
			}
			set
			{
				if ((this._DischargeAdvance != value))
				{
					this.OnDischargeAdvanceChanging(value);
					this.SendPropertyChanging();
					this._DischargeAdvance = value;
					this.SendPropertyChanged("DischargeAdvance");
					this.OnDischargeAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathReasone", DbType="NVarChar(MAX)")]
		public string DeathReasone
		{
			get
			{
				return this._DeathReasone;
			}
			set
			{
				if ((this._DeathReasone != value))
				{
					this.OnDeathReasoneChanging(value);
					this.SendPropertyChanging();
					this._DeathReasone = value;
					this.SendPropertyChanged("DeathReasone");
					this.OnDeathReasoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlace", DbType="NVarChar(50)")]
		public string DeathPlace
		{
			get
			{
				return this._DeathPlace;
			}
			set
			{
				if ((this._DeathPlace != value))
				{
					this.OnDeathPlaceChanging(value);
					this.SendPropertyChanging();
					this._DeathPlace = value;
					this.SendPropertyChanged("DeathPlace");
					this.OnDeathPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlaceSepasID", DbType="Int")]
		public System.Nullable<int> DeathPlaceSepasID
		{
			get
			{
				return this._DeathPlaceSepasID;
			}
			set
			{
				if ((this._DeathPlaceSepasID != value))
				{
					this.OnDeathPlaceSepasIDChanging(value);
					this.SendPropertyChanging();
					this._DeathPlaceSepasID = value;
					this.SendPropertyChanged("DeathPlaceSepasID");
					this.OnDeathPlaceSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerUserID", DbType="NVarChar(100)")]
		public string DischargerUserID
		{
			get
			{
				return this._DischargerUserID;
			}
			set
			{
				if ((this._DischargerUserID != value))
				{
					this.OnDischargerUserIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerUserID = value;
					this.SendPropertyChanged("DischargerUserID");
					this.OnDischargerUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Discharge", Storage="_Definition", ThisKey="PatientStatus", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._PatientStatus = value.ID;
					}
					else
					{
						this._PatientStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Discharge1 = null;
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Discharge1 = this;
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(long);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Staff", ThisKey="DischargerStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._DischargerStaffID = value.ID;
					}
					else
					{
						this._DischargerStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MedicalID;
		
		private string _FamilyNumber;
		
		private System.Nullable<System.Guid> _FamilyDoctor;
		
		private System.Nullable<System.Guid> _FamilyNurse;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _IdentityNumber;
		
		private string _IdentityPlace;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _BirthPlace;
		
		private string _Phone;
		
		private string _CellularPhone;
		
		private string _WorkPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Address;
		
		private string _WorkAddress;
		
		private string _InsuranceName;
		
		private string _InsuranceNo;
		
		private string _Education;
		
		private string _Comment;
		
		private string _MaritalStatus;
		
		private string _Religion;
		
		private string _CurrentJob;
		
		private string _BloodType;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _Barcode;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _BookletExpireDate;
		
		private bool _AllowInstallment;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		private bool _Death;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private string _DialectLanguage;
		
		private bool _Forieng;
		
		private string _Nationality;
		
		private string _PassportNumber;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Person> _Person1;
		
		private EntityRef<Person> _Person2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFamilyNumberChanging(string value);
    partial void OnFamilyNumberChanged();
    partial void OnFamilyDoctorChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyDoctorChanged();
    partial void OnFamilyNurseChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyNurseChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnPersonalCodeChanging(string value);
    partial void OnPersonalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnIdentityPlaceChanging(string value);
    partial void OnIdentityPlaceChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellularPhoneChanging(string value);
    partial void OnCellularPhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkAddressChanging(string value);
    partial void OnWorkAddressChanged();
    partial void OnInsuranceNameChanging(string value);
    partial void OnInsuranceNameChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnBarcodeChanging(System.Nullable<int> value);
    partial void OnBarcodeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAllowInstallmentChanging(bool value);
    partial void OnAllowInstallmentChanged();
    partial void OnNotUseChanging(bool value);
    partial void OnNotUseChanged();
    partial void OnVisibelChanging(bool value);
    partial void OnVisibelChanged();
    partial void OnDeathChanging(bool value);
    partial void OnDeathChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDialectLanguageChanging(string value);
    partial void OnDialectLanguageChanged();
    partial void OnForiengChanging(bool value);
    partial void OnForiengChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    #endregion
		
		public Person()
		{
			this._Staff = default(EntityRef<Staff>);
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Person1 = default(EntityRef<Person>);
			this._Person2 = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNumber", DbType="NVarChar(10)")]
		public string FamilyNumber
		{
			get
			{
				return this._FamilyNumber;
			}
			set
			{
				if ((this._FamilyNumber != value))
				{
					this.OnFamilyNumberChanging(value);
					this.SendPropertyChanging();
					this._FamilyNumber = value;
					this.SendPropertyChanged("FamilyNumber");
					this.OnFamilyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDoctor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyDoctor
		{
			get
			{
				return this._FamilyDoctor;
			}
			set
			{
				if ((this._FamilyDoctor != value))
				{
					if (this._Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyDoctorChanging(value);
					this.SendPropertyChanging();
					this._FamilyDoctor = value;
					this.SendPropertyChanged("FamilyDoctor");
					this.OnFamilyDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNurse", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyNurse
		{
			get
			{
				return this._FamilyNurse;
			}
			set
			{
				if ((this._FamilyNurse != value))
				{
					if (this._Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyNurse = value;
					this.SendPropertyChanged("FamilyNurse");
					this.OnFamilyNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this.OnPersonalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonalCode = value;
					this.SendPropertyChanged("PersonalCode");
					this.OnPersonalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this.OnIdentityPlaceChanging(value);
					this.SendPropertyChanging();
					this._IdentityPlace = value;
					this.SendPropertyChanged("IdentityPlace");
					this.OnIdentityPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellularPhone", DbType="NVarChar(25)")]
		public string CellularPhone
		{
			get
			{
				return this._CellularPhone;
			}
			set
			{
				if ((this._CellularPhone != value))
				{
					this.OnCellularPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellularPhone = value;
					this.SendPropertyChanged("CellularPhone");
					this.OnCellularPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAddress", DbType="NVarChar(300)")]
		public string WorkAddress
		{
			get
			{
				return this._WorkAddress;
			}
			set
			{
				if ((this._WorkAddress != value))
				{
					this.OnWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkAddress = value;
					this.SendPropertyChanged("WorkAddress");
					this.OnWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this.OnInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._InsuranceName = value;
					this.SendPropertyChanged("InsuranceName");
					this.OnInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(100)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(500)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(20)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Int")]
		public System.Nullable<int> Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInstallment", DbType="Bit NOT NULL")]
		public bool AllowInstallment
		{
			get
			{
				return this._AllowInstallment;
			}
			set
			{
				if ((this._AllowInstallment != value))
				{
					this.OnAllowInstallmentChanging(value);
					this.SendPropertyChanging();
					this._AllowInstallment = value;
					this.SendPropertyChanged("AllowInstallment");
					this.OnAllowInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this.OnNotUseChanging(value);
					this.SendPropertyChanging();
					this._NotUse = value;
					this.SendPropertyChanged("NotUse");
					this.OnNotUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this.OnVisibelChanging(value);
					this.SendPropertyChanging();
					this._Visibel = value;
					this.SendPropertyChanged("Visibel");
					this.OnVisibelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Death", DbType="Bit NOT NULL")]
		public bool Death
		{
			get
			{
				return this._Death;
			}
			set
			{
				if ((this._Death != value))
				{
					this.OnDeathChanging(value);
					this.SendPropertyChanging();
					this._Death = value;
					this.SendPropertyChanged("Death");
					this.OnDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NVarChar(8)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NVarChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectLanguage", DbType="NVarChar(50)")]
		public string DialectLanguage
		{
			get
			{
				return this._DialectLanguage;
			}
			set
			{
				if ((this._DialectLanguage != value))
				{
					this.OnDialectLanguageChanging(value);
					this.SendPropertyChanging();
					this._DialectLanguage = value;
					this.SendPropertyChanged("DialectLanguage");
					this.OnDialectLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forieng", DbType="Bit NOT NULL")]
		public bool Forieng
		{
			get
			{
				return this._Forieng;
			}
			set
			{
				if ((this._Forieng != value))
				{
					this.OnForiengChanging(value);
					this.SendPropertyChanging();
					this._Forieng = value;
					this.SendPropertyChanged("Forieng");
					this.OnForiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(50)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Persons", ThisKey="ID", OtherKey="FamilyDoctor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="FamilyNurse")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Person1", ThisKey="FamilyDoctor", OtherKey="ID", IsForeignKey=true)]
		public Person Person1
		{
			get
			{
				return this._Person1.Entity;
			}
			set
			{
				Person previousValue = this._Person1.Entity;
				if (((previousValue != value) 
							|| (this._Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person1.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Person1.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FamilyDoctor = value.ID;
					}
					else
					{
						this._FamilyDoctor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Person2", ThisKey="FamilyNurse", OtherKey="ID", IsForeignKey=true)]
		public Person Person2
		{
			get
			{
				return this._Person2.Entity;
			}
			set
			{
				Person previousValue = this._Person2.Entity;
				if (((previousValue != value) 
							|| (this._Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person2.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._Person2.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._FamilyNurse = value.ID;
					}
					else
					{
						this._FamilyNurse = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurance")]
	public partial class Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Name;
		
		private System.Nullable<bool> _HasContract;
		
		private System.Nullable<int> _SepasID;
		
		private string _CompanyType;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasContractChanging(System.Nullable<bool> value);
    partial void OnHasContractChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    #endregion
		
		public Insurance()
		{
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContract", DbType="Bit")]
		public System.Nullable<bool> HasContract
		{
			get
			{
				return this._HasContract;
			}
			set
			{
				if ((this._HasContract != value))
				{
					this.OnHasContractChanging(value);
					this.SendPropertyChanging();
					this._HasContract = value;
					this.SendPropertyChanged("HasContract");
					this.OnHasContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TadilArea")]
	public partial class TadilArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTadilPercent;
		
		private string _TadilPercentNAme;
		
		private System.Nullable<int> _TadilpercentValue;
		
		private System.Nullable<int> _SurgeryNo;
		
		private System.Nullable<int> _SortColumn;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Surgery> _Surgeries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTadilPercentChanging(int value);
    partial void OnIDTadilPercentChanged();
    partial void OnTadilPercentNAmeChanging(string value);
    partial void OnTadilPercentNAmeChanged();
    partial void OnTadilpercentValueChanging(System.Nullable<int> value);
    partial void OnTadilpercentValueChanged();
    partial void OnSurgeryNoChanging(System.Nullable<int> value);
    partial void OnSurgeryNoChanged();
    partial void OnSortColumnChanging(System.Nullable<int> value);
    partial void OnSortColumnChanged();
    #endregion
		
		public TadilArea()
		{
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Surgeries = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries), new Action<Surgery>(this.detach_Surgeries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTadilPercent", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTadilPercent
		{
			get
			{
				return this._IDTadilPercent;
			}
			set
			{
				if ((this._IDTadilPercent != value))
				{
					this.OnIDTadilPercentChanging(value);
					this.SendPropertyChanging();
					this._IDTadilPercent = value;
					this.SendPropertyChanged("IDTadilPercent");
					this.OnIDTadilPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilPercentNAme", DbType="NVarChar(200)")]
		public string TadilPercentNAme
		{
			get
			{
				return this._TadilPercentNAme;
			}
			set
			{
				if ((this._TadilPercentNAme != value))
				{
					this.OnTadilPercentNAmeChanging(value);
					this.SendPropertyChanging();
					this._TadilPercentNAme = value;
					this.SendPropertyChanged("TadilPercentNAme");
					this.OnTadilPercentNAmeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilpercentValue", DbType="Int")]
		public System.Nullable<int> TadilpercentValue
		{
			get
			{
				return this._TadilpercentValue;
			}
			set
			{
				if ((this._TadilpercentValue != value))
				{
					this.OnTadilpercentValueChanging(value);
					this.SendPropertyChanging();
					this._TadilpercentValue = value;
					this.SendPropertyChanged("TadilpercentValue");
					this.OnTadilpercentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryNo", DbType="Int")]
		public System.Nullable<int> SurgeryNo
		{
			get
			{
				return this._SurgeryNo;
			}
			set
			{
				if ((this._SurgeryNo != value))
				{
					this.OnSurgeryNoChanging(value);
					this.SendPropertyChanging();
					this._SurgeryNo = value;
					this.SendPropertyChanged("SurgeryNo");
					this.OnSurgeryNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortColumn", DbType="Int")]
		public System.Nullable<int> SortColumn
		{
			get
			{
				return this._SortColumn;
			}
			set
			{
				if ((this._SortColumn != value))
				{
					this.OnSortColumnChanging(value);
					this.SendPropertyChanging();
					this._SortColumn = value;
					this.SendPropertyChanged("SortColumn");
					this.OnSortColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_GivenServiceD", Storage="_GivenServiceDs", ThisKey="IDTadilPercent", OtherKey="TadilAreaID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_Surgery", Storage="_Surgeries", ThisKey="IDTadilPercent", OtherKey="ConfirmTadilAreaID")]
		public EntitySet<Surgery> Surgeries
		{
			get
			{
				return this._Surgeries;
			}
			set
			{
				this._Surgeries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = null;
		}
		
		private void attach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = this;
		}
		
		private void detach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PharmacyDrug")]
	public partial class PharmacyDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PharmacyID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private bool _NIS;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _NISDate;
		
		private string _NISTime;
		
		private System.Nullable<int> _NISUserID;
		
		private string _NISUserIFullName;
		
		private System.Nullable<int> _NISLastModificator;
		
		private string _NISLastModificationDate;
		
		private string _NISLastModificationTime;
		
		private string _NISLastMUserIFullName;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPharmacyIDChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnNISChanging(bool value);
    partial void OnNISChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnNISDateChanging(string value);
    partial void OnNISDateChanged();
    partial void OnNISTimeChanging(string value);
    partial void OnNISTimeChanged();
    partial void OnNISUserIDChanging(System.Nullable<int> value);
    partial void OnNISUserIDChanged();
    partial void OnNISUserIFullNameChanging(string value);
    partial void OnNISUserIFullNameChanged();
    partial void OnNISLastModificatorChanging(System.Nullable<int> value);
    partial void OnNISLastModificatorChanged();
    partial void OnNISLastModificationDateChanging(string value);
    partial void OnNISLastModificationDateChanged();
    partial void OnNISLastModificationTimeChanging(string value);
    partial void OnNISLastModificationTimeChanged();
    partial void OnNISLastMUserIFullNameChanging(string value);
    partial void OnNISLastMUserIFullNameChanged();
    #endregion
		
		public PharmacyDrug()
		{
			this._Department = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyID
		{
			get
			{
				return this._PharmacyID;
			}
			set
			{
				if ((this._PharmacyID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPharmacyIDChanging(value);
					this.SendPropertyChanging();
					this._PharmacyID = value;
					this.SendPropertyChanged("PharmacyID");
					this.OnPharmacyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit NOT NULL")]
		public bool NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISDate", DbType="NVarChar(10)")]
		public string NISDate
		{
			get
			{
				return this._NISDate;
			}
			set
			{
				if ((this._NISDate != value))
				{
					this.OnNISDateChanging(value);
					this.SendPropertyChanging();
					this._NISDate = value;
					this.SendPropertyChanged("NISDate");
					this.OnNISDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISTime", DbType="NVarChar(8)")]
		public string NISTime
		{
			get
			{
				return this._NISTime;
			}
			set
			{
				if ((this._NISTime != value))
				{
					this.OnNISTimeChanging(value);
					this.SendPropertyChanging();
					this._NISTime = value;
					this.SendPropertyChanged("NISTime");
					this.OnNISTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISUserID", DbType="Int")]
		public System.Nullable<int> NISUserID
		{
			get
			{
				return this._NISUserID;
			}
			set
			{
				if ((this._NISUserID != value))
				{
					this.OnNISUserIDChanging(value);
					this.SendPropertyChanging();
					this._NISUserID = value;
					this.SendPropertyChanged("NISUserID");
					this.OnNISUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISUserIFullName", DbType="NVarChar(50)")]
		public string NISUserIFullName
		{
			get
			{
				return this._NISUserIFullName;
			}
			set
			{
				if ((this._NISUserIFullName != value))
				{
					this.OnNISUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._NISUserIFullName = value;
					this.SendPropertyChanged("NISUserIFullName");
					this.OnNISUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastModificator", DbType="Int")]
		public System.Nullable<int> NISLastModificator
		{
			get
			{
				return this._NISLastModificator;
			}
			set
			{
				if ((this._NISLastModificator != value))
				{
					this.OnNISLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._NISLastModificator = value;
					this.SendPropertyChanged("NISLastModificator");
					this.OnNISLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastModificationDate", DbType="NVarChar(10)")]
		public string NISLastModificationDate
		{
			get
			{
				return this._NISLastModificationDate;
			}
			set
			{
				if ((this._NISLastModificationDate != value))
				{
					this.OnNISLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._NISLastModificationDate = value;
					this.SendPropertyChanged("NISLastModificationDate");
					this.OnNISLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastModificationTime", DbType="NVarChar(8)")]
		public string NISLastModificationTime
		{
			get
			{
				return this._NISLastModificationTime;
			}
			set
			{
				if ((this._NISLastModificationTime != value))
				{
					this.OnNISLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._NISLastModificationTime = value;
					this.SendPropertyChanged("NISLastModificationTime");
					this.OnNISLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastMUserIFullName", DbType="NVarChar(50)")]
		public string NISLastMUserIFullName
		{
			get
			{
				return this._NISLastMUserIFullName;
			}
			set
			{
				if ((this._NISLastMUserIFullName != value))
				{
					this.OnNISLastMUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._NISLastMUserIFullName = value;
					this.SendPropertyChanged("NISLastMUserIFullName");
					this.OnNISLastMUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_Department", ThisKey="PharmacyID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._PharmacyID = value.ID;
					}
					else
					{
						this._PharmacyID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceM")]
	public partial class GivenServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private System.Nullable<System.Guid> _PaymentID;
		
		private System.Nullable<int> _AdmitUserID;
		
		private string _CreatorUserFullname;
		
		private System.Nullable<bool> _HasImage;
		
		private System.Nullable<System.DateTime> _CheckImage;
		
		private bool _WardEdit;
		
		private EntitySet<Reference> _References;
		
		private EntityRef<Presentation> _Presentation;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntityRef<Agenda> _Agenda;
		
		private EntityRef<Bed> _Bed;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<GivenServiceM> _GivenServiceM1;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Reference> _Reference;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnAgendaIDChanging(System.Nullable<System.Guid> value);
    partial void OnAgendaIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnPeriodicCalendeIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalendeIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnTechnicianIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicianIDChanged();
    partial void OnPhysioOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysioOrderMIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnBookletTypeChanging(string value);
    partial void OnBookletTypeChanged();
    partial void OnBookletDateChanging(string value);
    partial void OnBookletDateChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnTurningDateChanging(string value);
    partial void OnTurningDateChanged();
    partial void OnTurningTimeChanging(string value);
    partial void OnTurningTimeChanged();
    partial void OnBookletSerialNumberChanging(string value);
    partial void OnBookletSerialNumberChanged();
    partial void OnBookletPageNumberChanging(string value);
    partial void OnBookletPageNumberChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnSendToDrTimeChanging(string value);
    partial void OnSendToDrTimeChanged();
    partial void OnSendToDrChanging(bool value);
    partial void OnSendToDrChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnRemissionStatusChanging(bool value);
    partial void OnRemissionStatusChanged();
    partial void OnScreeningChanging(bool value);
    partial void OnScreeningChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDailySNChanging(System.Nullable<int> value);
    partial void OnDailySNChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnComplementInsuranceChanging(string value);
    partial void OnComplementInsuranceChanged();
    partial void OnComplementInsuranceNOChanging(string value);
    partial void OnComplementInsuranceNOChanged();
    partial void OnRefrenceIDChanging(System.Nullable<System.Guid> value);
    partial void OnRefrenceIDChanged();
    partial void OnPortableChanging(bool value);
    partial void OnPortableChanged();
    partial void OnConfirmFinanceSumKChanging(System.Nullable<double> value);
    partial void OnConfirmFinanceSumKChanged();
    partial void OnAdmissionTypeChanging(string value);
    partial void OnAdmissionTypeChanged();
    partial void OnPaymentIDChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentIDChanged();
    partial void OnAdmitUserIDChanging(System.Nullable<int> value);
    partial void OnAdmitUserIDChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnHasImageChanging(System.Nullable<bool> value);
    partial void OnHasImageChanged();
    partial void OnCheckImageChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckImageChanged();
    partial void OnWardEditChanging(bool value);
    partial void OnWardEditChanged();
    #endregion
		
		public GivenServiceM()
		{
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Presentation = default(EntityRef<Presentation>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Agenda = default(EntityRef<Agenda>);
			this._Bed = default(EntityRef<Bed>);
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._Department = default(EntityRef<Department>);
			this._Dossier = default(EntityRef<Dossier>);
			this._GivenServiceM1 = default(EntityRef<GivenServiceM>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Person = default(EntityRef<Person>);
			this._Reference = default(EntityRef<Reference>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenServiceM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					if (this._Agenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgendaIDChanging(value);
					this.SendPropertyChanging();
					this._AgendaID = value;
					this.SendPropertyChanged("AgendaID");
					this.OnAgendaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					this.OnPeriodicCalendeIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalendeID = value;
					this.SendPropertyChanged("PeriodicCalendeID");
					this.OnPeriodicCalendeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicianIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicianID = value;
					this.SendPropertyChanged("TechnicianID");
					this.OnTechnicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					this.OnPhysioOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysioOrderMID = value;
					this.SendPropertyChanged("PhysioOrderMID");
					this.OnPhysioOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					if (this._Bed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)")]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this.OnBookletTypeChanging(value);
					this.SendPropertyChanging();
					this._BookletType = value;
					this.SendPropertyChanged("BookletType");
					this.OnBookletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)")]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this.OnBookletDateChanging(value);
					this.SendPropertyChanging();
					this._BookletDate = value;
					this.SendPropertyChanged("BookletDate");
					this.OnBookletDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)")]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this.OnTurningDateChanging(value);
					this.SendPropertyChanging();
					this._TurningDate = value;
					this.SendPropertyChanged("TurningDate");
					this.OnTurningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)")]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this.OnTurningTimeChanging(value);
					this.SendPropertyChanging();
					this._TurningTime = value;
					this.SendPropertyChanged("TurningTime");
					this.OnTurningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)")]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this.OnBookletSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletSerialNumber = value;
					this.SendPropertyChanged("BookletSerialNumber");
					this.OnBookletSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)")]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this.OnBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletPageNumber = value;
					this.SendPropertyChanged("BookletPageNumber");
					this.OnBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)")]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this.OnSendToDrTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToDrTime = value;
					this.SendPropertyChanged("SendToDrTime");
					this.OnSendToDrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL")]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this.OnSendToDrChanging(value);
					this.SendPropertyChanging();
					this._SendToDr = value;
					this.SendPropertyChanged("SendToDr");
					this.OnSendToDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL")]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this.OnRemissionStatusChanging(value);
					this.SendPropertyChanging();
					this._RemissionStatus = value;
					this.SendPropertyChanged("RemissionStatus");
					this.OnRemissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL")]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this.OnScreeningChanging(value);
					this.SendPropertyChanging();
					this._Screening = value;
					this.SendPropertyChanged("Screening");
					this.OnScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int")]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this.OnDailySNChanging(value);
					this.SendPropertyChanging();
					this._DailySN = value;
					this.SendPropertyChanged("DailySN");
					this.OnDailySNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)")]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this.OnComplementInsuranceChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsurance = value;
					this.SendPropertyChanged("ComplementInsurance");
					this.OnComplementInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)")]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this.OnComplementInsuranceNOChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsuranceNO = value;
					this.SendPropertyChanged("ComplementInsuranceNO");
					this.OnComplementInsuranceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					if (this._Reference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RefrenceID = value;
					this.SendPropertyChanged("RefrenceID");
					this.OnRefrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL")]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this.OnPortableChanging(value);
					this.SendPropertyChanging();
					this._Portable = value;
					this.SendPropertyChanged("Portable");
					this.OnPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float")]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this.OnConfirmFinanceSumKChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinanceSumK = value;
					this.SendPropertyChanged("ConfirmFinanceSumK");
					this.OnConfirmFinanceSumKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)")]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUserID", DbType="Int")]
		public System.Nullable<int> AdmitUserID
		{
			get
			{
				return this._AdmitUserID;
			}
			set
			{
				if ((this._AdmitUserID != value))
				{
					this.OnAdmitUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdmitUserID = value;
					this.SendPropertyChanged("AdmitUserID");
					this.OnAdmitUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasImage", DbType="Bit")]
		public System.Nullable<bool> HasImage
		{
			get
			{
				return this._HasImage;
			}
			set
			{
				if ((this._HasImage != value))
				{
					this.OnHasImageChanging(value);
					this.SendPropertyChanging();
					this._HasImage = value;
					this.SendPropertyChanged("HasImage");
					this.OnHasImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckImage", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CheckImage
		{
			get
			{
				return this._CheckImage;
			}
			set
			{
				if ((this._CheckImage != value))
				{
					this.OnCheckImageChanging(value);
					this.SendPropertyChanging();
					this._CheckImage = value;
					this.SendPropertyChanged("CheckImage");
					this.OnCheckImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardEdit", DbType="Bit NOT NULL")]
		public bool WardEdit
		{
			get
			{
				return this._WardEdit;
			}
			set
			{
				if ((this._WardEdit != value))
				{
					this.OnWardEditChanging(value);
					this.SendPropertyChanging();
					this._WardEdit = value;
					this.SendPropertyChanged("WardEdit");
					this.OnWardEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_References", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Presentation", Storage="_Presentation", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Presentation Presentation
		{
			get
			{
				return this._Presentation.Entity;
			}
			set
			{
				Presentation previousValue = this._Presentation.Entity;
				if (((previousValue != value) 
							|| (this._Presentation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Presentation.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Presentation.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Presentation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_Agenda", ThisKey="AgendaID", OtherKey="ID", IsForeignKey=true)]
		public Agenda Agenda
		{
			get
			{
				return this._Agenda.Entity;
			}
			set
			{
				Agenda previousValue = this._Agenda.Entity;
				if (((previousValue != value) 
							|| (this._Agenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agenda.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Agenda.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._AgendaID = value.ID;
					}
					else
					{
						this._AgendaID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Agenda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_GivenServiceM", Storage="_Bed", ThisKey="BedID", OtherKey="ID", IsForeignKey=true)]
		public Bed Bed
		{
			get
			{
				return this._Bed.Entity;
			}
			set
			{
				Bed previousValue = this._Bed.Entity;
				if (((previousValue != value) 
							|| (this._Bed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bed.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Bed.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._BedID = value.ID;
					}
					else
					{
						this._BedID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Bed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM", Storage="_Definition", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM1", Storage="_Definition1", ThisKey="VisitType", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._VisitType = value.ID;
					}
					else
					{
						this._VisitType = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceM1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM1
		{
			get
			{
				return this._GivenServiceM1.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM1.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._GivenServiceM1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_Reference", ThisKey="RefrenceID", OtherKey="ID", IsForeignKey=true)]
		public Reference Reference
		{
			get
			{
				return this._Reference.Entity;
			}
			set
			{
				Reference previousValue = this._Reference.Entity;
				if (((previousValue != value) 
							|| (this._Reference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reference.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Reference.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RefrenceID = value.ID;
					}
					else
					{
						this._RefrenceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Reference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_ServiceCategory", ThisKey="ServiceCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ServiceCategoryID = value.ID;
					}
					else
					{
						this._ServiceCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_Staff1", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_Staff2", ThisKey="TechnicianID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.GivenServiceMs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs2.Add(this);
						this._TechnicianID = value.ID;
					}
					else
					{
						this._TechnicianID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVU")]
	public partial class RVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Dastgah;
		
		private string _Sarfasl_Khedmati;
		
		private string _Gorooh_Khedmati;
		
		private string _Khosoosiat_Code;
		
		private System.Nullable<double> _Code_Melli;
		
		private System.Nullable<double> _Code_Namayande;
		
		private System.Nullable<double> _Sayer_Codaye_Tajmi_Shode;
		
		private string _Sharhe_Codaye_Tajmi_Shode;
		
		private System.Nullable<double> _Arzesh_Nesbi;
		
		private System.Nullable<double> _Joze_Herfeyi_26;
		
		private System.Nullable<double> _Joze_Fanni_27;
		
		private System.Nullable<double> _Arzesh_Paye_Bihooshi;
		
		private string _NationalID;
		
		private string _Comment;
		
		private System.Nullable<double> _RelativeValue;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<double> _Version;
		
		private bool _Deleted;
		
		private string _TerminologyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDastgahChanging(string value);
    partial void OnDastgahChanged();
    partial void OnSarfasl_KhedmatiChanging(string value);
    partial void OnSarfasl_KhedmatiChanged();
    partial void OnGorooh_KhedmatiChanging(string value);
    partial void OnGorooh_KhedmatiChanged();
    partial void OnKhosoosiat_CodeChanging(string value);
    partial void OnKhosoosiat_CodeChanged();
    partial void OnCode_MelliChanging(System.Nullable<double> value);
    partial void OnCode_MelliChanged();
    partial void OnCode_NamayandeChanging(System.Nullable<double> value);
    partial void OnCode_NamayandeChanged();
    partial void OnSayer_Codaye_Tajmi_ShodeChanging(System.Nullable<double> value);
    partial void OnSayer_Codaye_Tajmi_ShodeChanged();
    partial void OnSharhe_Codaye_Tajmi_ShodeChanging(string value);
    partial void OnSharhe_Codaye_Tajmi_ShodeChanged();
    partial void OnArzesh_NesbiChanging(System.Nullable<double> value);
    partial void OnArzesh_NesbiChanged();
    partial void OnJoze_Herfeyi_26Changing(System.Nullable<double> value);
    partial void OnJoze_Herfeyi_26Changed();
    partial void OnJoze_Fanni_27Changing(System.Nullable<double> value);
    partial void OnJoze_Fanni_27Changed();
    partial void OnArzesh_Paye_BihooshiChanging(System.Nullable<double> value);
    partial void OnArzesh_Paye_BihooshiChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRelativeValueChanging(System.Nullable<double> value);
    partial void OnRelativeValueChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnVersionChanging(System.Nullable<double> value);
    partial void OnVersionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnTerminologyIdChanging(string value);
    partial void OnTerminologyIdChanged();
    #endregion
		
		public RVU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dastgah", DbType="NVarChar(255)")]
		public string Dastgah
		{
			get
			{
				return this._Dastgah;
			}
			set
			{
				if ((this._Dastgah != value))
				{
					this.OnDastgahChanging(value);
					this.SendPropertyChanging();
					this._Dastgah = value;
					this.SendPropertyChanged("Dastgah");
					this.OnDastgahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sarfasl_Khedmati", DbType="NVarChar(255)")]
		public string Sarfasl_Khedmati
		{
			get
			{
				return this._Sarfasl_Khedmati;
			}
			set
			{
				if ((this._Sarfasl_Khedmati != value))
				{
					this.OnSarfasl_KhedmatiChanging(value);
					this.SendPropertyChanging();
					this._Sarfasl_Khedmati = value;
					this.SendPropertyChanged("Sarfasl_Khedmati");
					this.OnSarfasl_KhedmatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gorooh_Khedmati", DbType="NVarChar(255)")]
		public string Gorooh_Khedmati
		{
			get
			{
				return this._Gorooh_Khedmati;
			}
			set
			{
				if ((this._Gorooh_Khedmati != value))
				{
					this.OnGorooh_KhedmatiChanging(value);
					this.SendPropertyChanging();
					this._Gorooh_Khedmati = value;
					this.SendPropertyChanged("Gorooh_Khedmati");
					this.OnGorooh_KhedmatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khosoosiat_Code", DbType="NVarChar(255)")]
		public string Khosoosiat_Code
		{
			get
			{
				return this._Khosoosiat_Code;
			}
			set
			{
				if ((this._Khosoosiat_Code != value))
				{
					this.OnKhosoosiat_CodeChanging(value);
					this.SendPropertyChanging();
					this._Khosoosiat_Code = value;
					this.SendPropertyChanged("Khosoosiat_Code");
					this.OnKhosoosiat_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_Melli", DbType="Float")]
		public System.Nullable<double> Code_Melli
		{
			get
			{
				return this._Code_Melli;
			}
			set
			{
				if ((this._Code_Melli != value))
				{
					this.OnCode_MelliChanging(value);
					this.SendPropertyChanging();
					this._Code_Melli = value;
					this.SendPropertyChanged("Code_Melli");
					this.OnCode_MelliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_Namayande", DbType="Float")]
		public System.Nullable<double> Code_Namayande
		{
			get
			{
				return this._Code_Namayande;
			}
			set
			{
				if ((this._Code_Namayande != value))
				{
					this.OnCode_NamayandeChanging(value);
					this.SendPropertyChanging();
					this._Code_Namayande = value;
					this.SendPropertyChanged("Code_Namayande");
					this.OnCode_NamayandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sayer_Codaye_Tajmi_Shode", DbType="Float")]
		public System.Nullable<double> Sayer_Codaye_Tajmi_Shode
		{
			get
			{
				return this._Sayer_Codaye_Tajmi_Shode;
			}
			set
			{
				if ((this._Sayer_Codaye_Tajmi_Shode != value))
				{
					this.OnSayer_Codaye_Tajmi_ShodeChanging(value);
					this.SendPropertyChanging();
					this._Sayer_Codaye_Tajmi_Shode = value;
					this.SendPropertyChanged("Sayer_Codaye_Tajmi_Shode");
					this.OnSayer_Codaye_Tajmi_ShodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sharhe_Codaye_Tajmi_Shode", DbType="NVarChar(MAX)")]
		public string Sharhe_Codaye_Tajmi_Shode
		{
			get
			{
				return this._Sharhe_Codaye_Tajmi_Shode;
			}
			set
			{
				if ((this._Sharhe_Codaye_Tajmi_Shode != value))
				{
					this.OnSharhe_Codaye_Tajmi_ShodeChanging(value);
					this.SendPropertyChanging();
					this._Sharhe_Codaye_Tajmi_Shode = value;
					this.SendPropertyChanged("Sharhe_Codaye_Tajmi_Shode");
					this.OnSharhe_Codaye_Tajmi_ShodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arzesh_Nesbi", DbType="Float")]
		public System.Nullable<double> Arzesh_Nesbi
		{
			get
			{
				return this._Arzesh_Nesbi;
			}
			set
			{
				if ((this._Arzesh_Nesbi != value))
				{
					this.OnArzesh_NesbiChanging(value);
					this.SendPropertyChanging();
					this._Arzesh_Nesbi = value;
					this.SendPropertyChanged("Arzesh_Nesbi");
					this.OnArzesh_NesbiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfeyi_26", DbType="Float")]
		public System.Nullable<double> Joze_Herfeyi_26
		{
			get
			{
				return this._Joze_Herfeyi_26;
			}
			set
			{
				if ((this._Joze_Herfeyi_26 != value))
				{
					this.OnJoze_Herfeyi_26Changing(value);
					this.SendPropertyChanging();
					this._Joze_Herfeyi_26 = value;
					this.SendPropertyChanged("Joze_Herfeyi_26");
					this.OnJoze_Herfeyi_26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni_27", DbType="Float")]
		public System.Nullable<double> Joze_Fanni_27
		{
			get
			{
				return this._Joze_Fanni_27;
			}
			set
			{
				if ((this._Joze_Fanni_27 != value))
				{
					this.OnJoze_Fanni_27Changing(value);
					this.SendPropertyChanging();
					this._Joze_Fanni_27 = value;
					this.SendPropertyChanged("Joze_Fanni_27");
					this.OnJoze_Fanni_27Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arzesh_Paye_Bihooshi", DbType="Float")]
		public System.Nullable<double> Arzesh_Paye_Bihooshi
		{
			get
			{
				return this._Arzesh_Paye_Bihooshi;
			}
			set
			{
				if ((this._Arzesh_Paye_Bihooshi != value))
				{
					this.OnArzesh_Paye_BihooshiChanging(value);
					this.SendPropertyChanging();
					this._Arzesh_Paye_Bihooshi = value;
					this.SendPropertyChanged("Arzesh_Paye_Bihooshi");
					this.OnArzesh_Paye_BihooshiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(15)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeValue", DbType="Float")]
		public System.Nullable<double> RelativeValue
		{
			get
			{
				return this._RelativeValue;
			}
			set
			{
				if ((this._RelativeValue != value))
				{
					this.OnRelativeValueChanging(value);
					this.SendPropertyChanging();
					this._RelativeValue = value;
					this.SendPropertyChanged("RelativeValue");
					this.OnRelativeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(5)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(5)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Float")]
		public System.Nullable<double> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminologyId", DbType="NVarChar(255)")]
		public string TerminologyId
		{
			get
			{
				return this._TerminologyId;
			}
			set
			{
				if ((this._TerminologyId != value))
				{
					this.OnTerminologyIdChanging(value);
					this.SendPropertyChanging();
					this._TerminologyId = value;
					this.SendPropertyChanged("TerminologyId");
					this.OnTerminologyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceD")]
	public partial class GivenServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private System.Nullable<System.Guid> _TariffID;
		
		private System.Nullable<int> _TadilAreaID;
		
		private decimal _TotalPrice;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private bool _Payed;
		
		private decimal _PaymentPrice;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private bool _Confirm;
		
		private bool _Reflected;
		
		private System.Nullable<int> _HIXCode;
		
		private string _Position;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _Date;
		
		private string _Time;
		
		private bool _NoTake;
		
		private bool _Normal;
		
		private System.Nullable<bool> _NIS;
		
		private System.Nullable<System.DateTime> _TS;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private string _CreatorUserFullname;
		
		private string _Category;
		
		private System.Nullable<System.Guid> _xParentID;
		
		private EntityRef<AfterSurgeryReport> _AfterSurgeryReport;
		
		private EntityRef<AnesthesiaReport> _AnesthesiaReport;
		
		private EntitySet<ModularService> _ModularServices;
		
		private EntityRef<Surgery> _Surgery;
		
		private EntityRef<DrugFrequencyUsage> _DrugFrequencyUsage;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<TadilArea> _TadilArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnGivenAmountChanging(double value);
    partial void OnGivenAmountChanged();
    partial void OnTariffIDChanging(System.Nullable<System.Guid> value);
    partial void OnTariffIDChanged();
    partial void OnTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnTadilAreaIDChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnPatientShareChanging(decimal value);
    partial void OnPatientShareChanged();
    partial void OnInsuranceShareChanging(decimal value);
    partial void OnInsuranceShareChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnHIXCodeChanging(System.Nullable<int> value);
    partial void OnHIXCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnNoTakeChanging(bool value);
    partial void OnNoTakeChanged();
    partial void OnNormalChanging(bool value);
    partial void OnNormalChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnTSChanging(System.Nullable<System.DateTime> value);
    partial void OnTSChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnxParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnxParentIDChanged();
    #endregion
		
		public GivenServiceD()
		{
			this._AfterSurgeryReport = default(EntityRef<AfterSurgeryReport>);
			this._AnesthesiaReport = default(EntityRef<AnesthesiaReport>);
			this._ModularServices = new EntitySet<ModularService>(new Action<ModularService>(this.attach_ModularServices), new Action<ModularService>(this.detach_ModularServices));
			this._Surgery = default(EntityRef<Surgery>);
			this._DrugFrequencyUsage = default(EntityRef<DrugFrequencyUsage>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			this._TadilArea = default(EntityRef<TadilArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this.OnGivenAmountChanging(value);
					this.SendPropertyChanging();
					this._GivenAmount = value;
					this.SendPropertyChanged("GivenAmount");
					this.OnGivenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilAreaID", DbType="Int")]
		public System.Nullable<int> TadilAreaID
		{
			get
			{
				return this._TadilAreaID;
			}
			set
			{
				if ((this._TadilAreaID != value))
				{
					if (this._TadilArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._TadilAreaID = value;
					this.SendPropertyChanged("TadilAreaID");
					this.OnTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this.OnInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._InsuranceShare = value;
					this.SendPropertyChanged("InsuranceShare");
					this.OnInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="Int")]
		public System.Nullable<int> HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					if (this._DrugFrequencyUsage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this.OnNoTakeChanging(value);
					this.SendPropertyChanging();
					this._NoTake = value;
					this.SendPropertyChanged("NoTake");
					this.OnNoTakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Bit NOT NULL")]
		public bool Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> xParentID
		{
			get
			{
				return this._xParentID;
			}
			set
			{
				if ((this._xParentID != value))
				{
					this.OnxParentIDChanging(value);
					this.SendPropertyChanging();
					this._xParentID = value;
					this.SendPropertyChanged("xParentID");
					this.OnxParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_AfterSurgeryReport", Storage="_AfterSurgeryReport", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public AfterSurgeryReport AfterSurgeryReport
		{
			get
			{
				return this._AfterSurgeryReport.Entity;
			}
			set
			{
				AfterSurgeryReport previousValue = this._AfterSurgeryReport.Entity;
				if (((previousValue != value) 
							|| (this._AfterSurgeryReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AfterSurgeryReport.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._AfterSurgeryReport.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("AfterSurgeryReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_AnesthesiaReport", Storage="_AnesthesiaReport", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public AnesthesiaReport AnesthesiaReport
		{
			get
			{
				return this._AnesthesiaReport.Entity;
			}
			set
			{
				AnesthesiaReport previousValue = this._AnesthesiaReport.Entity;
				if (((previousValue != value) 
							|| (this._AnesthesiaReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnesthesiaReport.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._AnesthesiaReport.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("AnesthesiaReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_ModularService", Storage="_ModularServices", ThisKey="ID", OtherKey="GsdID")]
		public EntitySet<ModularService> ModularServices
		{
			get
			{
				return this._ModularServices;
			}
			set
			{
				this._ModularServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Surgery", Storage="_Surgery", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Surgery Surgery
		{
			get
			{
				return this._Surgery.Entity;
			}
			set
			{
				Surgery previousValue = this._Surgery.Entity;
				if (((previousValue != value) 
							|| (this._Surgery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Surgery.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._Surgery.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("Surgery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_GivenServiceD", Storage="_DrugFrequencyUsage", ThisKey="HIXCode", OtherKey="ID", IsForeignKey=true)]
		public DrugFrequencyUsage DrugFrequencyUsage
		{
			get
			{
				return this._DrugFrequencyUsage.Entity;
			}
			set
			{
				DrugFrequencyUsage previousValue = this._DrugFrequencyUsage.Entity;
				if (((previousValue != value) 
							|| (this._DrugFrequencyUsage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DrugFrequencyUsage.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._DrugFrequencyUsage.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._HIXCode = value.ID;
					}
					else
					{
						this._HIXCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("DrugFrequencyUsage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_GivenServiceD", Storage="_TadilArea", ThisKey="TadilAreaID", OtherKey="IDTadilPercent", IsForeignKey=true)]
		public TadilArea TadilArea
		{
			get
			{
				return this._TadilArea.Entity;
			}
			set
			{
				TadilArea previousValue = this._TadilArea.Entity;
				if (((previousValue != value) 
							|| (this._TadilArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TadilArea.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._TadilArea.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._TadilAreaID = value.IDTadilPercent;
					}
					else
					{
						this._TadilAreaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TadilArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surgery")]
	public partial class Surgery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<double> _BasicSurgicalUnit;
		
		private System.Nullable<double> _SupplementaryUnit;
		
		private System.Nullable<double> _Other;
		
		private System.Nullable<double> _ConfirmOther;
		
		private System.Nullable<double> _UltimateSurgicalUnit;
		
		private System.Nullable<double> _FinalSupplementalUnit;
		
		private System.Nullable<double> _ConfirmUltimateSurgicalUnit;
		
		private System.Nullable<double> _ConfirmFinalSupplementalUnit;
		
		private System.Nullable<double> _ConfirmBasicSurgicalUnit;
		
		private System.Nullable<double> _ConfirmSupplementaryUnit;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private string _SurgeryTime;
		
		private System.Nullable<bool> _KindOfOperation;
		
		private string _PreOPDiagnosis;
		
		private string _PastOPDiagnosis;
		
		private string _TypeOfOperation;
		
		private string _Specimen;
		
		private string _SpecimenYes;
		
		private string _SpecimenNo;
		
		private string _SpecimenAmount;
		
		private string _ProcedureAndFinding;
		
		private System.Nullable<bool> _CountOfSwab;
		
		private System.Nullable<bool> _SentToLaboratory;
		
		private bool _FinanceConfirm;
		
		private System.Nullable<System.Guid> _ConfirmServiceID;
		
		private System.Nullable<int> _ConfirmTadilAreaID;
		
		private System.Nullable<System.Guid> _SurgeryHelpStaff1;
		
		private System.Nullable<System.Guid> _SurgeryHelpStaff2;
		
		private System.Nullable<System.Guid> _SurgeryHelpStaff3;
		
		private System.Nullable<double> _Joze_Fanni;
		
		private System.Nullable<double> _Joze_Herfei;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<TadilArea> _TadilArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBasicSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnBasicSurgicalUnitChanged();
    partial void OnSupplementaryUnitChanging(System.Nullable<double> value);
    partial void OnSupplementaryUnitChanged();
    partial void OnOtherChanging(System.Nullable<double> value);
    partial void OnOtherChanged();
    partial void OnConfirmOtherChanging(System.Nullable<double> value);
    partial void OnConfirmOtherChanged();
    partial void OnUltimateSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnUltimateSurgicalUnitChanged();
    partial void OnFinalSupplementalUnitChanging(System.Nullable<double> value);
    partial void OnFinalSupplementalUnitChanged();
    partial void OnConfirmUltimateSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnConfirmUltimateSurgicalUnitChanged();
    partial void OnConfirmFinalSupplementalUnitChanging(System.Nullable<double> value);
    partial void OnConfirmFinalSupplementalUnitChanged();
    partial void OnConfirmBasicSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnConfirmBasicSurgicalUnitChanged();
    partial void OnConfirmSupplementaryUnitChanging(System.Nullable<double> value);
    partial void OnConfirmSupplementaryUnitChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnSurgeryTimeChanging(string value);
    partial void OnSurgeryTimeChanged();
    partial void OnKindOfOperationChanging(System.Nullable<bool> value);
    partial void OnKindOfOperationChanged();
    partial void OnPreOPDiagnosisChanging(string value);
    partial void OnPreOPDiagnosisChanged();
    partial void OnPastOPDiagnosisChanging(string value);
    partial void OnPastOPDiagnosisChanged();
    partial void OnTypeOfOperationChanging(string value);
    partial void OnTypeOfOperationChanged();
    partial void OnSpecimenChanging(string value);
    partial void OnSpecimenChanged();
    partial void OnSpecimenYesChanging(string value);
    partial void OnSpecimenYesChanged();
    partial void OnSpecimenNoChanging(string value);
    partial void OnSpecimenNoChanged();
    partial void OnSpecimenAmountChanging(string value);
    partial void OnSpecimenAmountChanged();
    partial void OnProcedureAndFindingChanging(string value);
    partial void OnProcedureAndFindingChanged();
    partial void OnCountOfSwabChanging(System.Nullable<bool> value);
    partial void OnCountOfSwabChanged();
    partial void OnSentToLaboratoryChanging(System.Nullable<bool> value);
    partial void OnSentToLaboratoryChanged();
    partial void OnFinanceConfirmChanging(bool value);
    partial void OnFinanceConfirmChanged();
    partial void OnConfirmServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnConfirmServiceIDChanged();
    partial void OnConfirmTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnConfirmTadilAreaIDChanged();
    partial void OnSurgeryHelpStaff1Changing(System.Nullable<System.Guid> value);
    partial void OnSurgeryHelpStaff1Changed();
    partial void OnSurgeryHelpStaff2Changing(System.Nullable<System.Guid> value);
    partial void OnSurgeryHelpStaff2Changed();
    partial void OnSurgeryHelpStaff3Changing(System.Nullable<System.Guid> value);
    partial void OnSurgeryHelpStaff3Changed();
    partial void OnJoze_FanniChanging(System.Nullable<double> value);
    partial void OnJoze_FanniChanged();
    partial void OnJoze_HerfeiChanging(System.Nullable<double> value);
    partial void OnJoze_HerfeiChanged();
    #endregion
		
		public Surgery()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._TadilArea = default(EntityRef<TadilArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSurgicalUnit", DbType="Float")]
		public System.Nullable<double> BasicSurgicalUnit
		{
			get
			{
				return this._BasicSurgicalUnit;
			}
			set
			{
				if ((this._BasicSurgicalUnit != value))
				{
					this.OnBasicSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._BasicSurgicalUnit = value;
					this.SendPropertyChanged("BasicSurgicalUnit");
					this.OnBasicSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementaryUnit", DbType="Float")]
		public System.Nullable<double> SupplementaryUnit
		{
			get
			{
				return this._SupplementaryUnit;
			}
			set
			{
				if ((this._SupplementaryUnit != value))
				{
					this.OnSupplementaryUnitChanging(value);
					this.SendPropertyChanging();
					this._SupplementaryUnit = value;
					this.SendPropertyChanged("SupplementaryUnit");
					this.OnSupplementaryUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="Float")]
		public System.Nullable<double> Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmOther", DbType="Float")]
		public System.Nullable<double> ConfirmOther
		{
			get
			{
				return this._ConfirmOther;
			}
			set
			{
				if ((this._ConfirmOther != value))
				{
					this.OnConfirmOtherChanging(value);
					this.SendPropertyChanging();
					this._ConfirmOther = value;
					this.SendPropertyChanged("ConfirmOther");
					this.OnConfirmOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateSurgicalUnit", DbType="Float")]
		public System.Nullable<double> UltimateSurgicalUnit
		{
			get
			{
				return this._UltimateSurgicalUnit;
			}
			set
			{
				if ((this._UltimateSurgicalUnit != value))
				{
					this.OnUltimateSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._UltimateSurgicalUnit = value;
					this.SendPropertyChanged("UltimateSurgicalUnit");
					this.OnUltimateSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalSupplementalUnit", DbType="Float")]
		public System.Nullable<double> FinalSupplementalUnit
		{
			get
			{
				return this._FinalSupplementalUnit;
			}
			set
			{
				if ((this._FinalSupplementalUnit != value))
				{
					this.OnFinalSupplementalUnitChanging(value);
					this.SendPropertyChanging();
					this._FinalSupplementalUnit = value;
					this.SendPropertyChanged("FinalSupplementalUnit");
					this.OnFinalSupplementalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmUltimateSurgicalUnit", DbType="Float")]
		public System.Nullable<double> ConfirmUltimateSurgicalUnit
		{
			get
			{
				return this._ConfirmUltimateSurgicalUnit;
			}
			set
			{
				if ((this._ConfirmUltimateSurgicalUnit != value))
				{
					this.OnConfirmUltimateSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmUltimateSurgicalUnit = value;
					this.SendPropertyChanged("ConfirmUltimateSurgicalUnit");
					this.OnConfirmUltimateSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinalSupplementalUnit", DbType="Float")]
		public System.Nullable<double> ConfirmFinalSupplementalUnit
		{
			get
			{
				return this._ConfirmFinalSupplementalUnit;
			}
			set
			{
				if ((this._ConfirmFinalSupplementalUnit != value))
				{
					this.OnConfirmFinalSupplementalUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinalSupplementalUnit = value;
					this.SendPropertyChanged("ConfirmFinalSupplementalUnit");
					this.OnConfirmFinalSupplementalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmBasicSurgicalUnit", DbType="Float")]
		public System.Nullable<double> ConfirmBasicSurgicalUnit
		{
			get
			{
				return this._ConfirmBasicSurgicalUnit;
			}
			set
			{
				if ((this._ConfirmBasicSurgicalUnit != value))
				{
					this.OnConfirmBasicSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmBasicSurgicalUnit = value;
					this.SendPropertyChanged("ConfirmBasicSurgicalUnit");
					this.OnConfirmBasicSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmSupplementaryUnit", DbType="Float")]
		public System.Nullable<double> ConfirmSupplementaryUnit
		{
			get
			{
				return this._ConfirmSupplementaryUnit;
			}
			set
			{
				if ((this._ConfirmSupplementaryUnit != value))
				{
					this.OnConfirmSupplementaryUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmSupplementaryUnit = value;
					this.SendPropertyChanged("ConfirmSupplementaryUnit");
					this.OnConfirmSupplementaryUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(8)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NVarChar(8)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryTime", DbType="NVarChar(8)")]
		public string SurgeryTime
		{
			get
			{
				return this._SurgeryTime;
			}
			set
			{
				if ((this._SurgeryTime != value))
				{
					this.OnSurgeryTimeChanging(value);
					this.SendPropertyChanging();
					this._SurgeryTime = value;
					this.SendPropertyChanged("SurgeryTime");
					this.OnSurgeryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindOfOperation", DbType="Bit")]
		public System.Nullable<bool> KindOfOperation
		{
			get
			{
				return this._KindOfOperation;
			}
			set
			{
				if ((this._KindOfOperation != value))
				{
					this.OnKindOfOperationChanging(value);
					this.SendPropertyChanging();
					this._KindOfOperation = value;
					this.SendPropertyChanged("KindOfOperation");
					this.OnKindOfOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreOPDiagnosis", DbType="NVarChar(MAX)")]
		public string PreOPDiagnosis
		{
			get
			{
				return this._PreOPDiagnosis;
			}
			set
			{
				if ((this._PreOPDiagnosis != value))
				{
					this.OnPreOPDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._PreOPDiagnosis = value;
					this.SendPropertyChanged("PreOPDiagnosis");
					this.OnPreOPDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastOPDiagnosis", DbType="NVarChar(MAX)")]
		public string PastOPDiagnosis
		{
			get
			{
				return this._PastOPDiagnosis;
			}
			set
			{
				if ((this._PastOPDiagnosis != value))
				{
					this.OnPastOPDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._PastOPDiagnosis = value;
					this.SendPropertyChanged("PastOPDiagnosis");
					this.OnPastOPDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfOperation", DbType="NVarChar(MAX)")]
		public string TypeOfOperation
		{
			get
			{
				return this._TypeOfOperation;
			}
			set
			{
				if ((this._TypeOfOperation != value))
				{
					this.OnTypeOfOperationChanging(value);
					this.SendPropertyChanging();
					this._TypeOfOperation = value;
					this.SendPropertyChanged("TypeOfOperation");
					this.OnTypeOfOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specimen", DbType="NVarChar(MAX)")]
		public string Specimen
		{
			get
			{
				return this._Specimen;
			}
			set
			{
				if ((this._Specimen != value))
				{
					this.OnSpecimenChanging(value);
					this.SendPropertyChanging();
					this._Specimen = value;
					this.SendPropertyChanged("Specimen");
					this.OnSpecimenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenYes", DbType="NVarChar(100)")]
		public string SpecimenYes
		{
			get
			{
				return this._SpecimenYes;
			}
			set
			{
				if ((this._SpecimenYes != value))
				{
					this.OnSpecimenYesChanging(value);
					this.SendPropertyChanging();
					this._SpecimenYes = value;
					this.SendPropertyChanged("SpecimenYes");
					this.OnSpecimenYesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenNo", DbType="NVarChar(100)")]
		public string SpecimenNo
		{
			get
			{
				return this._SpecimenNo;
			}
			set
			{
				if ((this._SpecimenNo != value))
				{
					this.OnSpecimenNoChanging(value);
					this.SendPropertyChanging();
					this._SpecimenNo = value;
					this.SendPropertyChanged("SpecimenNo");
					this.OnSpecimenNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenAmount", DbType="NVarChar(100)")]
		public string SpecimenAmount
		{
			get
			{
				return this._SpecimenAmount;
			}
			set
			{
				if ((this._SpecimenAmount != value))
				{
					this.OnSpecimenAmountChanging(value);
					this.SendPropertyChanging();
					this._SpecimenAmount = value;
					this.SendPropertyChanged("SpecimenAmount");
					this.OnSpecimenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureAndFinding", DbType="NVarChar(MAX)")]
		public string ProcedureAndFinding
		{
			get
			{
				return this._ProcedureAndFinding;
			}
			set
			{
				if ((this._ProcedureAndFinding != value))
				{
					this.OnProcedureAndFindingChanging(value);
					this.SendPropertyChanging();
					this._ProcedureAndFinding = value;
					this.SendPropertyChanged("ProcedureAndFinding");
					this.OnProcedureAndFindingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOfSwab", DbType="Bit")]
		public System.Nullable<bool> CountOfSwab
		{
			get
			{
				return this._CountOfSwab;
			}
			set
			{
				if ((this._CountOfSwab != value))
				{
					this.OnCountOfSwabChanging(value);
					this.SendPropertyChanging();
					this._CountOfSwab = value;
					this.SendPropertyChanged("CountOfSwab");
					this.OnCountOfSwabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentToLaboratory", DbType="Bit")]
		public System.Nullable<bool> SentToLaboratory
		{
			get
			{
				return this._SentToLaboratory;
			}
			set
			{
				if ((this._SentToLaboratory != value))
				{
					this.OnSentToLaboratoryChanging(value);
					this.SendPropertyChanging();
					this._SentToLaboratory = value;
					this.SendPropertyChanged("SentToLaboratory");
					this.OnSentToLaboratoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit NOT NULL")]
		public bool FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ConfirmServiceID
		{
			get
			{
				return this._ConfirmServiceID;
			}
			set
			{
				if ((this._ConfirmServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmServiceID = value;
					this.SendPropertyChanged("ConfirmServiceID");
					this.OnConfirmServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTadilAreaID", DbType="Int")]
		public System.Nullable<int> ConfirmTadilAreaID
		{
			get
			{
				return this._ConfirmTadilAreaID;
			}
			set
			{
				if ((this._ConfirmTadilAreaID != value))
				{
					if (this._TadilArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTadilAreaID = value;
					this.SendPropertyChanged("ConfirmTadilAreaID");
					this.OnConfirmTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryHelpStaff1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurgeryHelpStaff1
		{
			get
			{
				return this._SurgeryHelpStaff1;
			}
			set
			{
				if ((this._SurgeryHelpStaff1 != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryHelpStaff1Changing(value);
					this.SendPropertyChanging();
					this._SurgeryHelpStaff1 = value;
					this.SendPropertyChanged("SurgeryHelpStaff1");
					this.OnSurgeryHelpStaff1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryHelpStaff2", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurgeryHelpStaff2
		{
			get
			{
				return this._SurgeryHelpStaff2;
			}
			set
			{
				if ((this._SurgeryHelpStaff2 != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryHelpStaff2Changing(value);
					this.SendPropertyChanging();
					this._SurgeryHelpStaff2 = value;
					this.SendPropertyChanged("SurgeryHelpStaff2");
					this.OnSurgeryHelpStaff2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryHelpStaff3", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurgeryHelpStaff3
		{
			get
			{
				return this._SurgeryHelpStaff3;
			}
			set
			{
				if ((this._SurgeryHelpStaff3 != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryHelpStaff3Changing(value);
					this.SendPropertyChanging();
					this._SurgeryHelpStaff3 = value;
					this.SendPropertyChanged("SurgeryHelpStaff3");
					this.OnSurgeryHelpStaff3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni", DbType="Float")]
		public System.Nullable<double> Joze_Fanni
		{
			get
			{
				return this._Joze_Fanni;
			}
			set
			{
				if ((this._Joze_Fanni != value))
				{
					this.OnJoze_FanniChanging(value);
					this.SendPropertyChanging();
					this._Joze_Fanni = value;
					this.SendPropertyChanged("Joze_Fanni");
					this.OnJoze_FanniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfei", DbType="Float")]
		public System.Nullable<double> Joze_Herfei
		{
			get
			{
				return this._Joze_Herfei;
			}
			set
			{
				if ((this._Joze_Herfei != value))
				{
					this.OnJoze_HerfeiChanging(value);
					this.SendPropertyChanging();
					this._Joze_Herfei = value;
					this.SendPropertyChanged("Joze_Herfei");
					this.OnJoze_HerfeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Surgery", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.Surgery = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.Surgery = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Surgery", Storage="_Service", ThisKey="ConfirmServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Surgeries.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Surgeries.Add(this);
						this._ConfirmServiceID = value.ID;
					}
					else
					{
						this._ConfirmServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery", Storage="_Staff", ThisKey="SurgeryHelpStaff1", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Surgeries.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Surgeries.Add(this);
						this._SurgeryHelpStaff1 = value.ID;
					}
					else
					{
						this._SurgeryHelpStaff1 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery1", Storage="_Staff1", ThisKey="SurgeryHelpStaff2", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.Surgeries1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.Surgeries1.Add(this);
						this._SurgeryHelpStaff2 = value.ID;
					}
					else
					{
						this._SurgeryHelpStaff2 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery2", Storage="_Staff2", ThisKey="SurgeryHelpStaff3", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.Surgeries2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.Surgeries2.Add(this);
						this._SurgeryHelpStaff3 = value.ID;
					}
					else
					{
						this._SurgeryHelpStaff3 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_Surgery", Storage="_TadilArea", ThisKey="ConfirmTadilAreaID", OtherKey="IDTadilPercent", IsForeignKey=true)]
		public TadilArea TadilArea
		{
			get
			{
				return this._TadilArea.Entity;
			}
			set
			{
				TadilArea previousValue = this._TadilArea.Entity;
				if (((previousValue != value) 
							|| (this._TadilArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TadilArea.Entity = null;
						previousValue.Surgeries.Remove(this);
					}
					this._TadilArea.Entity = value;
					if ((value != null))
					{
						value.Surgeries.Add(this);
						this._ConfirmTadilAreaID = value.IDTadilPercent;
					}
					else
					{
						this._ConfirmTadilAreaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TadilArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwDoctorInstraction")]
	public partial class VwDoctorInstraction
	{
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private string _CatName;
		
		private string _ServiceName;
		
		private string _FullCategoryName;
		
		private string _FullServiceName;
		
		private System.Nullable<double> _Amount;
		
		private string _Date;
		
		private string _Time;
		
		private string _Result;
		
		private string _NormalRange;
		
		private System.Nullable<int> _SerialNumber;
		
		private System.Nullable<System.Guid> _ID;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _InsuranceShare;
		
		private System.Nullable<System.Guid> _GSDID;
		
		private string _gsdComment;
		
		private string _RequestedDoctor;
		
		private System.Nullable<int> _DepartmentTypeID;
		
		public VwDoctorInstraction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this._DossierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this._ServiceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(MAX)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(MAX)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullCategoryName", DbType="NVarChar(100)")]
		public string FullCategoryName
		{
			get
			{
				return this._FullCategoryName;
			}
			set
			{
				if ((this._FullCategoryName != value))
				{
					this._FullCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullServiceName", DbType="NVarChar(MAX)")]
		public string FullServiceName
		{
			get
			{
				return this._FullServiceName;
			}
			set
			{
				if ((this._FullServiceName != value))
				{
					this._FullServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this._NormalRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int")]
		public System.Nullable<int> SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this._PatientShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money")]
		public System.Nullable<decimal> InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this._InsuranceShare = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSDID
		{
			get
			{
				return this._GSDID;
			}
			set
			{
				if ((this._GSDID != value))
				{
					this._GSDID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gsdComment", DbType="NVarChar(MAX)")]
		public string gsdComment
		{
			get
			{
				return this._gsdComment;
			}
			set
			{
				if ((this._gsdComment != value))
				{
					this._gsdComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedDoctor", DbType="NVarChar(201)")]
		public string RequestedDoctor
		{
			get
			{
				return this._RequestedDoctor;
			}
			set
			{
				if ((this._RequestedDoctor != value))
				{
					this._RequestedDoctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentTypeID", DbType="Int")]
		public System.Nullable<int> DepartmentTypeID
		{
			get
			{
				return this._DepartmentTypeID;
			}
			set
			{
				if ((this._DepartmentTypeID != value))
				{
					this._DepartmentTypeID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
