#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCISReport.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCIS")]
	public partial class HCISDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVitalSign(VitalSign instance);
    partial void UpdateVitalSign(VitalSign instance);
    partial void DeleteVitalSign(VitalSign instance);
    partial void InsertBed(Bed instance);
    partial void UpdateBed(Bed instance);
    partial void DeleteBed(Bed instance);
    partial void InsertBedReservation(BedReservation instance);
    partial void UpdateBedReservation(BedReservation instance);
    partial void DeleteBedReservation(BedReservation instance);
    partial void InsertBilling(Billing instance);
    partial void UpdateBilling(Billing instance);
    partial void DeleteBilling(Billing instance);
    partial void InsertBreastExamination(BreastExamination instance);
    partial void UpdateBreastExamination(BreastExamination instance);
    partial void DeleteBreastExamination(BreastExamination instance);
    partial void InsertBreastVisit(BreastVisit instance);
    partial void UpdateBreastVisit(BreastVisit instance);
    partial void DeleteBreastVisit(BreastVisit instance);
    partial void InsertClientApp(ClientApp instance);
    partial void UpdateClientApp(ClientApp instance);
    partial void DeleteClientApp(ClientApp instance);
    partial void InsertClientConfig(ClientConfig instance);
    partial void UpdateClientConfig(ClientConfig instance);
    partial void DeleteClientConfig(ClientConfig instance);
    partial void InsertCommentAndRequest(CommentAndRequest instance);
    partial void UpdateCommentAndRequest(CommentAndRequest instance);
    partial void DeleteCommentAndRequest(CommentAndRequest instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertComplicationsBB(ComplicationsBB instance);
    partial void UpdateComplicationsBB(ComplicationsBB instance);
    partial void DeleteComplicationsBB(ComplicationsBB instance);
    partial void InsertConsultant(Consultant instance);
    partial void UpdateConsultant(Consultant instance);
    partial void DeleteConsultant(Consultant instance);
    partial void InsertCostsAndIncome(CostsAndIncome instance);
    partial void UpdateCostsAndIncome(CostsAndIncome instance);
    partial void DeleteCostsAndIncome(CostsAndIncome instance);
    partial void InsertCostType(CostType instance);
    partial void UpdateCostType(CostType instance);
    partial void DeleteCostType(CostType instance);
    partial void InsertCPR(CPR instance);
    partial void UpdateCPR(CPR instance);
    partial void DeleteCPR(CPR instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertDenote(Denote instance);
    partial void UpdateDenote(Denote instance);
    partial void DeleteDenote(Denote instance);
    partial void InsertDenoteDailyResult(DenoteDailyResult instance);
    partial void UpdateDenoteDailyResult(DenoteDailyResult instance);
    partial void DeleteDenoteDailyResult(DenoteDailyResult instance);
    partial void InsertDenoteDetail(DenoteDetail instance);
    partial void UpdateDenoteDetail(DenoteDetail instance);
    partial void DeleteDenoteDetail(DenoteDetail instance);
    partial void InsertDepAdvancePayment(DepAdvancePayment instance);
    partial void UpdateDepAdvancePayment(DepAdvancePayment instance);
    partial void DeleteDepAdvancePayment(DepAdvancePayment instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertDiagnosticServiceDetail(DiagnosticServiceDetail instance);
    partial void UpdateDiagnosticServiceDetail(DiagnosticServiceDetail instance);
    partial void DeleteDiagnosticServiceDetail(DiagnosticServiceDetail instance);
    partial void InsertDiet(Diet instance);
    partial void UpdateDiet(Diet instance);
    partial void DeleteDiet(Diet instance);
    partial void InsertDischarge(Discharge instance);
    partial void UpdateDischarge(Discharge instance);
    partial void DeleteDischarge(Discharge instance);
    partial void InsertDispatch(Dispatch instance);
    partial void UpdateDispatch(Dispatch instance);
    partial void DeleteDispatch(Dispatch instance);
    partial void InsertDispatchReason(DispatchReason instance);
    partial void UpdateDispatchReason(DispatchReason instance);
    partial void DeleteDispatchReason(DispatchReason instance);
    partial void InsertDoctorComment(DoctorComment instance);
    partial void UpdateDoctorComment(DoctorComment instance);
    partial void DeleteDoctorComment(DoctorComment instance);
    partial void InsertDoctorContract(DoctorContract instance);
    partial void UpdateDoctorContract(DoctorContract instance);
    partial void DeleteDoctorContract(DoctorContract instance);
    partial void InsertDoctorContractD(DoctorContractD instance);
    partial void UpdateDoctorContractD(DoctorContractD instance);
    partial void DeleteDoctorContractD(DoctorContractD instance);
    partial void InsertDoctorContractM(DoctorContractM instance);
    partial void UpdateDoctorContractM(DoctorContractM instance);
    partial void DeleteDoctorContractM(DoctorContractM instance);
    partial void InsertDoctorFunction(DoctorFunction instance);
    partial void UpdateDoctorFunction(DoctorFunction instance);
    partial void DeleteDoctorFunction(DoctorFunction instance);
    partial void InsertDoctorInsurance(DoctorInsurance instance);
    partial void UpdateDoctorInsurance(DoctorInsurance instance);
    partial void DeleteDoctorInsurance(DoctorInsurance instance);
    partial void InsertDoctorPaymentCategory(DoctorPaymentCategory instance);
    partial void UpdateDoctorPaymentCategory(DoctorPaymentCategory instance);
    partial void DeleteDoctorPaymentCategory(DoctorPaymentCategory instance);
    partial void InsertDoctorPaymentsAndDeduction(DoctorPaymentsAndDeduction instance);
    partial void UpdateDoctorPaymentsAndDeduction(DoctorPaymentsAndDeduction instance);
    partial void DeleteDoctorPaymentsAndDeduction(DoctorPaymentsAndDeduction instance);
    partial void InsertDoctorSalaryAdditionalItem(DoctorSalaryAdditionalItem instance);
    partial void UpdateDoctorSalaryAdditionalItem(DoctorSalaryAdditionalItem instance);
    partial void DeleteDoctorSalaryAdditionalItem(DoctorSalaryAdditionalItem instance);
    partial void InsertDoctorSalaryParam(DoctorSalaryParam instance);
    partial void UpdateDoctorSalaryParam(DoctorSalaryParam instance);
    partial void DeleteDoctorSalaryParam(DoctorSalaryParam instance);
    partial void InsertDoctorServiceCategoryTariff(DoctorServiceCategoryTariff instance);
    partial void UpdateDoctorServiceCategoryTariff(DoctorServiceCategoryTariff instance);
    partial void DeleteDoctorServiceCategoryTariff(DoctorServiceCategoryTariff instance);
    partial void InsertDossier(Dossier instance);
    partial void UpdateDossier(Dossier instance);
    partial void DeleteDossier(Dossier instance);
    partial void InsertDrugAllergy(DrugAllergy instance);
    partial void UpdateDrugAllergy(DrugAllergy instance);
    partial void DeleteDrugAllergy(DrugAllergy instance);
    partial void InsertDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void UpdateDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void DeleteDrugFrequencyUsage(DrugFrequencyUsage instance);
    partial void InsertDrugHistory(DrugHistory instance);
    partial void UpdateDrugHistory(DrugHistory instance);
    partial void DeleteDrugHistory(DrugHistory instance);
    partial void InsertDrugTempelateForWard(DrugTempelateForWard instance);
    partial void UpdateDrugTempelateForWard(DrugTempelateForWard instance);
    partial void DeleteDrugTempelateForWard(DrugTempelateForWard instance);
    partial void InsertDrugTransferee(DrugTransferee instance);
    partial void UpdateDrugTransferee(DrugTransferee instance);
    partial void DeleteDrugTransferee(DrugTransferee instance);
    partial void InsertDS_Category(DS_Category instance);
    partial void UpdateDS_Category(DS_Category instance);
    partial void DeleteDS_Category(DS_Category instance);
    partial void InsertExeption(Exeption instance);
    partial void UpdateExeption(Exeption instance);
    partial void DeleteExeption(Exeption instance);
    partial void InsertFactorD(FactorD instance);
    partial void UpdateFactorD(FactorD instance);
    partial void DeleteFactorD(FactorD instance);
    partial void InsertFactorM(FactorM instance);
    partial void UpdateFactorM(FactorM instance);
    partial void DeleteFactorM(FactorM instance);
    partial void InsertFavoriteICD10(FavoriteICD10 instance);
    partial void UpdateFavoriteICD10(FavoriteICD10 instance);
    partial void DeleteFavoriteICD10(FavoriteICD10 instance);
    partial void InsertFavoriteService(FavoriteService instance);
    partial void UpdateFavoriteService(FavoriteService instance);
    partial void DeleteFavoriteService(FavoriteService instance);
    partial void InsertForm20(Form20 instance);
    partial void UpdateForm20(Form20 instance);
    partial void DeleteForm20(Form20 instance);
    partial void InsertGivenDiagnosticServiceD(GivenDiagnosticServiceD instance);
    partial void UpdateGivenDiagnosticServiceD(GivenDiagnosticServiceD instance);
    partial void DeleteGivenDiagnosticServiceD(GivenDiagnosticServiceD instance);
    partial void InsertGivenDiagnosticServiceM(GivenDiagnosticServiceM instance);
    partial void UpdateGivenDiagnosticServiceM(GivenDiagnosticServiceM instance);
    partial void DeleteGivenDiagnosticServiceM(GivenDiagnosticServiceM instance);
    partial void InsertGivenDrug(GivenDrug instance);
    partial void UpdateGivenDrug(GivenDrug instance);
    partial void DeleteGivenDrug(GivenDrug instance);
    partial void InsertGivenLaboratoryServiceD(GivenLaboratoryServiceD instance);
    partial void UpdateGivenLaboratoryServiceD(GivenLaboratoryServiceD instance);
    partial void DeleteGivenLaboratoryServiceD(GivenLaboratoryServiceD instance);
    partial void InsertGivenServiceD(GivenServiceD instance);
    partial void UpdateGivenServiceD(GivenServiceD instance);
    partial void DeleteGivenServiceD(GivenServiceD instance);
    partial void InsertGivenServiceM(GivenServiceM instance);
    partial void UpdateGivenServiceM(GivenServiceM instance);
    partial void DeleteGivenServiceM(GivenServiceM instance);
    partial void InsertHealthDailyResultbyFunc(HealthDailyResultbyFunc instance);
    partial void UpdateHealthDailyResultbyFunc(HealthDailyResultbyFunc instance);
    partial void DeleteHealthDailyResultbyFunc(HealthDailyResultbyFunc instance);
    partial void InsertHealthSoratDetail(HealthSoratDetail instance);
    partial void UpdateHealthSoratDetail(HealthSoratDetail instance);
    partial void DeleteHealthSoratDetail(HealthSoratDetail instance);
    partial void InsertHoliday(Holiday instance);
    partial void UpdateHoliday(Holiday instance);
    partial void DeleteHoliday(Holiday instance);
    partial void InsertICD10(ICD10 instance);
    partial void UpdateICD10(ICD10 instance);
    partial void DeleteICD10(ICD10 instance);
    partial void InsertIndexDetail(IndexDetail instance);
    partial void UpdateIndexDetail(IndexDetail instance);
    partial void DeleteIndexDetail(IndexDetail instance);
    partial void InsertIndexTeh(IndexTeh instance);
    partial void UpdateIndexTeh(IndexTeh instance);
    partial void DeleteIndexTeh(IndexTeh instance);
    partial void InsertInsurance(Insurance instance);
    partial void UpdateInsurance(Insurance instance);
    partial void DeleteInsurance(Insurance instance);
    partial void InsertLabAntiBiogram(LabAntiBiogram instance);
    partial void UpdateLabAntiBiogram(LabAntiBiogram instance);
    partial void DeleteLabAntiBiogram(LabAntiBiogram instance);
    partial void InsertLabGroup(LabGroup instance);
    partial void UpdateLabGroup(LabGroup instance);
    partial void DeleteLabGroup(LabGroup instance);
    partial void InsertLaboratoryServiceDetail(LaboratoryServiceDetail instance);
    partial void UpdateLaboratoryServiceDetail(LaboratoryServiceDetail instance);
    partial void DeleteLaboratoryServiceDetail(LaboratoryServiceDetail instance);
    partial void InsertLabSubGroup(LabSubGroup instance);
    partial void UpdateLabSubGroup(LabSubGroup instance);
    partial void DeleteLabSubGroup(LabSubGroup instance);
    partial void InsertLabTerm(LabTerm instance);
    partial void UpdateLabTerm(LabTerm instance);
    partial void DeleteLabTerm(LabTerm instance);
    partial void InsertLabTestGroup(LabTestGroup instance);
    partial void UpdateLabTestGroup(LabTestGroup instance);
    partial void DeleteLabTestGroup(LabTestGroup instance);
    partial void InsertLabWorksheet(LabWorksheet instance);
    partial void UpdateLabWorksheet(LabWorksheet instance);
    partial void DeleteLabWorksheet(LabWorksheet instance);
    partial void InsertLabWorksheetService(LabWorksheetService instance);
    partial void UpdateLabWorksheetService(LabWorksheetService instance);
    partial void DeleteLabWorksheetService(LabWorksheetService instance);
    partial void InsertLaundry(Laundry instance);
    partial void UpdateLaundry(Laundry instance);
    partial void DeleteLaundry(Laundry instance);
    partial void InsertMeasurementDefinition(MeasurementDefinition instance);
    partial void UpdateMeasurementDefinition(MeasurementDefinition instance);
    partial void DeleteMeasurementDefinition(MeasurementDefinition instance);
    partial void InsertMedicalRecord(MedicalRecord instance);
    partial void UpdateMedicalRecord(MedicalRecord instance);
    partial void DeleteMedicalRecord(MedicalRecord instance);
    partial void InsertMentalHealthHistory(MentalHealthHistory instance);
    partial void UpdateMentalHealthHistory(MentalHealthHistory instance);
    partial void DeleteMentalHealthHistory(MentalHealthHistory instance);
    partial void InsertModularService(ModularService instance);
    partial void UpdateModularService(ModularService instance);
    partial void DeleteModularService(ModularService instance);
    partial void InsertNutritionHistory(NutritionHistory instance);
    partial void UpdateNutritionHistory(NutritionHistory instance);
    partial void DeleteNutritionHistory(NutritionHistory instance);
    partial void InsertONcall(ONcall instance);
    partial void UpdateONcall(ONcall instance);
    partial void DeleteONcall(ONcall instance);
    partial void InsertOptometry(Optometry instance);
    partial void UpdateOptometry(Optometry instance);
    partial void DeleteOptometry(Optometry instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrgan(Organ instance);
    partial void UpdateOrgan(Organ instance);
    partial void DeleteOrgan(Organ instance);
    partial void InsertPacsDateCheck(PacsDateCheck instance);
    partial void UpdatePacsDateCheck(PacsDateCheck instance);
    partial void DeletePacsDateCheck(PacsDateCheck instance);
    partial void InsertParaClinicServiceHistory(ParaClinicServiceHistory instance);
    partial void UpdateParaClinicServiceHistory(ParaClinicServiceHistory instance);
    partial void DeleteParaClinicServiceHistory(ParaClinicServiceHistory instance);
    partial void InsertPatternD(PatternD instance);
    partial void UpdatePatternD(PatternD instance);
    partial void DeletePatternD(PatternD instance);
    partial void InsertPatternM(PatternM instance);
    partial void UpdatePatternM(PatternM instance);
    partial void DeletePatternM(PatternM instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertPeriod(Period instance);
    partial void UpdatePeriod(Period instance);
    partial void DeletePeriod(Period instance);
    partial void InsertPeriodicCalender(PeriodicCalender instance);
    partial void UpdatePeriodicCalender(PeriodicCalender instance);
    partial void DeletePeriodicCalender(PeriodicCalender instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPersonDisease(PersonDisease instance);
    partial void UpdatePersonDisease(PersonDisease instance);
    partial void DeletePersonDisease(PersonDisease instance);
    partial void InsertPharmacy(Pharmacy instance);
    partial void UpdatePharmacy(Pharmacy instance);
    partial void DeletePharmacy(Pharmacy instance);
    partial void InsertPharmacyDrug(PharmacyDrug instance);
    partial void UpdatePharmacyDrug(PharmacyDrug instance);
    partial void DeletePharmacyDrug(PharmacyDrug instance);
    partial void InsertPhysiotherapyOrderD(PhysiotherapyOrderD instance);
    partial void UpdatePhysiotherapyOrderD(PhysiotherapyOrderD instance);
    partial void DeletePhysiotherapyOrderD(PhysiotherapyOrderD instance);
    partial void InsertPhysiotherapyOrderM(PhysiotherapyOrderM instance);
    partial void UpdatePhysiotherapyOrderM(PhysiotherapyOrderM instance);
    partial void DeletePhysiotherapyOrderM(PhysiotherapyOrderM instance);
    partial void InsertPresentation(Presentation instance);
    partial void UpdatePresentation(Presentation instance);
    partial void DeletePresentation(Presentation instance);
    partial void InsertPreventingDeviceRecive(PreventingDeviceRecive instance);
    partial void UpdatePreventingDeviceRecive(PreventingDeviceRecive instance);
    partial void DeletePreventingDeviceRecive(PreventingDeviceRecive instance);
    partial void InsertPreventingStartAndEnd(PreventingStartAndEnd instance);
    partial void UpdatePreventingStartAndEnd(PreventingStartAndEnd instance);
    partial void DeletePreventingStartAndEnd(PreventingStartAndEnd instance);
    partial void InsertQA(QA instance);
    partial void UpdateQA(QA instance);
    partial void DeleteQA(QA instance);
    partial void InsertQAPlus(QAPlus instance);
    partial void UpdateQAPlus(QAPlus instance);
    partial void DeleteQAPlus(QAPlus instance);
    partial void InsertQualitativePoint(QualitativePoint instance);
    partial void UpdateQualitativePoint(QualitativePoint instance);
    partial void DeleteQualitativePoint(QualitativePoint instance);
    partial void InsertQuestionnaire(Questionnaire instance);
    partial void UpdateQuestionnaire(Questionnaire instance);
    partial void DeleteQuestionnaire(Questionnaire instance);
    partial void InsertQuestionnaireGroup(QuestionnaireGroup instance);
    partial void UpdateQuestionnaireGroup(QuestionnaireGroup instance);
    partial void DeleteQuestionnaireGroup(QuestionnaireGroup instance);
    partial void InsertRecall(Recall instance);
    partial void UpdateRecall(Recall instance);
    partial void DeleteRecall(Recall instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertRefResult(RefResult instance);
    partial void UpdateRefResult(RefResult instance);
    partial void DeleteRefResult(RefResult instance);
    partial void InsertRequestD(RequestD instance);
    partial void UpdateRequestD(RequestD instance);
    partial void DeleteRequestD(RequestD instance);
    partial void InsertRequestM(RequestM instance);
    partial void UpdateRequestM(RequestM instance);
    partial void DeleteRequestM(RequestM instance);
    partial void InsertRequestPermission(RequestPermission instance);
    partial void UpdateRequestPermission(RequestPermission instance);
    partial void DeleteRequestPermission(RequestPermission instance);
    partial void InsertRest(Rest instance);
    partial void UpdateRest(Rest instance);
    partial void DeleteRest(Rest instance);
    partial void InsertRiskFactorHistory(RiskFactorHistory instance);
    partial void UpdateRiskFactorHistory(RiskFactorHistory instance);
    partial void DeleteRiskFactorHistory(RiskFactorHistory instance);
    partial void InsertRVCauseOfReferral(RVCauseOfReferral instance);
    partial void UpdateRVCauseOfReferral(RVCauseOfReferral instance);
    partial void DeleteRVCauseOfReferral(RVCauseOfReferral instance);
    partial void InsertRVInitialInterview(RVInitialInterview instance);
    partial void UpdateRVInitialInterview(RVInitialInterview instance);
    partial void DeleteRVInitialInterview(RVInitialInterview instance);
    partial void InsertRVPersonalInformation(RVPersonalInformation instance);
    partial void UpdateRVPersonalInformation(RVPersonalInformation instance);
    partial void DeleteRVPersonalInformation(RVPersonalInformation instance);
    partial void InsertRVPsychiatricIntervention(RVPsychiatricIntervention instance);
    partial void UpdateRVPsychiatricIntervention(RVPsychiatricIntervention instance);
    partial void DeleteRVPsychiatricIntervention(RVPsychiatricIntervention instance);
    partial void InsertRVPsychometricRecord(RVPsychometricRecord instance);
    partial void UpdateRVPsychometricRecord(RVPsychometricRecord instance);
    partial void DeleteRVPsychometricRecord(RVPsychometricRecord instance);
    partial void InsertRVRecordsOfIntervention(RVRecordsOfIntervention instance);
    partial void UpdateRVRecordsOfIntervention(RVRecordsOfIntervention instance);
    partial void DeleteRVRecordsOfIntervention(RVRecordsOfIntervention instance);
    partial void InsertRVU(RVU instance);
    partial void UpdateRVU(RVU instance);
    partial void DeleteRVU(RVU instance);
    partial void InsertSampleAnswer(SampleAnswer instance);
    partial void UpdateSampleAnswer(SampleAnswer instance);
    partial void DeleteSampleAnswer(SampleAnswer instance);
    partial void InsertScreening(Screening instance);
    partial void UpdateScreening(Screening instance);
    partial void DeleteScreening(Screening instance);
    partial void InsertScreeningItem(ScreeningItem instance);
    partial void UpdateScreeningItem(ScreeningItem instance);
    partial void DeleteScreeningItem(ScreeningItem instance);
    partial void InsertSerialNumber(SerialNumber instance);
    partial void UpdateSerialNumber(SerialNumber instance);
    partial void DeleteSerialNumber(SerialNumber instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceCategory(ServiceCategory instance);
    partial void UpdateServiceCategory(ServiceCategory instance);
    partial void DeleteServiceCategory(ServiceCategory instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InsertSpecialDisease(SpecialDisease instance);
    partial void UpdateSpecialDisease(SpecialDisease instance);
    partial void DeleteSpecialDisease(SpecialDisease instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertSpecialityDepartment(SpecialityDepartment instance);
    partial void UpdateSpecialityDepartment(SpecialityDepartment instance);
    partial void DeleteSpecialityDepartment(SpecialityDepartment instance);
    partial void InsertSpecialityDrug(SpecialityDrug instance);
    partial void UpdateSpecialityDrug(SpecialityDrug instance);
    partial void DeleteSpecialityDrug(SpecialityDrug instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertSurgery(Surgery instance);
    partial void UpdateSurgery(Surgery instance);
    partial void DeleteSurgery(Surgery instance);
    partial void InsertSurgeyHistory(SurgeyHistory instance);
    partial void UpdateSurgeyHistory(SurgeyHistory instance);
    partial void DeleteSurgeyHistory(SurgeyHistory instance);
    partial void InsertSystemError(SystemError instance);
    partial void UpdateSystemError(SystemError instance);
    partial void DeleteSystemError(SystemError instance);
    partial void InsertTadilArea(TadilArea instance);
    partial void UpdateTadilArea(TadilArea instance);
    partial void DeleteTadilArea(TadilArea instance);
    partial void InsertTariff(Tariff instance);
    partial void UpdateTariff(Tariff instance);
    partial void DeleteTariff(Tariff instance);
    partial void InserttblAllPhoneNumber(tblAllPhoneNumber instance);
    partial void UpdatetblAllPhoneNumber(tblAllPhoneNumber instance);
    partial void DeletetblAllPhoneNumber(tblAllPhoneNumber instance);
    partial void InserttblHomeDefinition(tblHomeDefinition instance);
    partial void UpdatetblHomeDefinition(tblHomeDefinition instance);
    partial void DeletetblHomeDefinition(tblHomeDefinition instance);
    partial void InserttblMngCarDriver(tblMngCarDriver instance);
    partial void UpdatetblMngCarDriver(tblMngCarDriver instance);
    partial void DeletetblMngCarDriver(tblMngCarDriver instance);
    partial void InserttblMngCarInsurance(tblMngCarInsurance instance);
    partial void UpdatetblMngCarInsurance(tblMngCarInsurance instance);
    partial void DeletetblMngCarInsurance(tblMngCarInsurance instance);
    partial void InserttblMngCastMahd(tblMngCastMahd instance);
    partial void UpdatetblMngCastMahd(tblMngCastMahd instance);
    partial void DeletetblMngCastMahd(tblMngCastMahd instance);
    partial void InserttblMngChiled(tblMngChiled instance);
    partial void UpdatetblMngChiled(tblMngChiled instance);
    partial void DeletetblMngChiled(tblMngChiled instance);
    partial void InserttblMngCivilCar(tblMngCivilCar instance);
    partial void UpdatetblMngCivilCar(tblMngCivilCar instance);
    partial void DeletetblMngCivilCar(tblMngCivilCar instance);
    partial void InserttblMngCprGroup(tblMngCprGroup instance);
    partial void UpdatetblMngCprGroup(tblMngCprGroup instance);
    partial void DeletetblMngCprGroup(tblMngCprGroup instance);
    partial void InserttblMngDaily_routine_function(tblMngDaily_routine_function instance);
    partial void UpdatetblMngDaily_routine_function(tblMngDaily_routine_function instance);
    partial void DeletetblMngDaily_routine_function(tblMngDaily_routine_function instance);
    partial void InserttblMngDailyRep(tblMngDailyRep instance);
    partial void UpdatetblMngDailyRep(tblMngDailyRep instance);
    partial void DeletetblMngDailyRep(tblMngDailyRep instance);
    partial void InserttblMngDirectionCar(tblMngDirectionCar instance);
    partial void UpdatetblMngDirectionCar(tblMngDirectionCar instance);
    partial void DeletetblMngDirectionCar(tblMngDirectionCar instance);
    partial void InserttblMngFactorRepair(tblMngFactorRepair instance);
    partial void UpdatetblMngFactorRepair(tblMngFactorRepair instance);
    partial void DeletetblMngFactorRepair(tblMngFactorRepair instance);
    partial void InserttblMngFuelCar(tblMngFuelCar instance);
    partial void UpdatetblMngFuelCar(tblMngFuelCar instance);
    partial void DeletetblMngFuelCar(tblMngFuelCar instance);
    partial void InserttblMngGroup(tblMngGroup instance);
    partial void UpdatetblMngGroup(tblMngGroup instance);
    partial void DeletetblMngGroup(tblMngGroup instance);
    partial void InserttblMngHistoryHome(tblMngHistoryHome instance);
    partial void UpdatetblMngHistoryHome(tblMngHistoryHome instance);
    partial void DeletetblMngHistoryHome(tblMngHistoryHome instance);
    partial void InserttblMngHomeRequst(tblMngHomeRequst instance);
    partial void UpdatetblMngHomeRequst(tblMngHomeRequst instance);
    partial void DeletetblMngHomeRequst(tblMngHomeRequst instance);
    partial void InserttblMngKindergarten(tblMngKindergarten instance);
    partial void UpdatetblMngKindergarten(tblMngKindergarten instance);
    partial void DeletetblMngKindergarten(tblMngKindergarten instance);
    partial void InserttblMngLeaseDriver(tblMngLeaseDriver instance);
    partial void UpdatetblMngLeaseDriver(tblMngLeaseDriver instance);
    partial void DeletetblMngLeaseDriver(tblMngLeaseDriver instance);
    partial void InserttblMngMasterNurse(tblMngMasterNurse instance);
    partial void UpdatetblMngMasterNurse(tblMngMasterNurse instance);
    partial void DeletetblMngMasterNurse(tblMngMasterNurse instance);
    partial void InserttblMngNotResponse(tblMngNotResponse instance);
    partial void UpdatetblMngNotResponse(tblMngNotResponse instance);
    partial void DeletetblMngNotResponse(tblMngNotResponse instance);
    partial void InserttblMngOut_of_CareCall(tblMngOut_of_CareCall instance);
    partial void UpdatetblMngOut_of_CareCall(tblMngOut_of_CareCall instance);
    partial void DeletetblMngOut_of_CareCall(tblMngOut_of_CareCall instance);
    partial void InserttblMngStatusChiled(tblMngStatusChiled instance);
    partial void UpdatetblMngStatusChiled(tblMngStatusChiled instance);
    partial void DeletetblMngStatusChiled(tblMngStatusChiled instance);
    partial void InserttblMngTelecomunicationPersonnel(tblMngTelecomunicationPersonnel instance);
    partial void UpdatetblMngTelecomunicationPersonnel(tblMngTelecomunicationPersonnel instance);
    partial void DeletetblMngTelecomunicationPersonnel(tblMngTelecomunicationPersonnel instance);
    partial void InserttblMngTicketPhone(tblMngTicketPhone instance);
    partial void UpdatetblMngTicketPhone(tblMngTicketPhone instance);
    partial void DeletetblMngTicketPhone(tblMngTicketPhone instance);
    partial void InserttblMngTrainingChiled(tblMngTrainingChiled instance);
    partial void UpdatetblMngTrainingChiled(tblMngTrainingChiled instance);
    partial void DeletetblMngTrainingChiled(tblMngTrainingChiled instance);
    partial void InserttblMngtransportPersonel(tblMngtransportPersonel instance);
    partial void UpdatetblMngtransportPersonel(tblMngtransportPersonel instance);
    partial void DeletetblMngtransportPersonel(tblMngtransportPersonel instance);
    partial void InsertTestHistory(TestHistory instance);
    partial void UpdateTestHistory(TestHistory instance);
    partial void DeleteTestHistory(TestHistory instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertTransmissionOfPatient(TransmissionOfPatient instance);
    partial void UpdateTransmissionOfPatient(TransmissionOfPatient instance);
    partial void DeleteTransmissionOfPatient(TransmissionOfPatient instance);
    partial void InsertTreatmentProgress(TreatmentProgress instance);
    partial void UpdateTreatmentProgress(TreatmentProgress instance);
    partial void DeleteTreatmentProgress(TreatmentProgress instance);
    partial void InsertTriage(Triage instance);
    partial void UpdateTriage(Triage instance);
    partial void DeleteTriage(Triage instance);
    partial void InsertTriageAdmission(TriageAdmission instance);
    partial void UpdateTriageAdmission(TriageAdmission instance);
    partial void DeleteTriageAdmission(TriageAdmission instance);
    partial void InsertTriageCPR(TriageCPR instance);
    partial void UpdateTriageCPR(TriageCPR instance);
    partial void DeleteTriageCPR(TriageCPR instance);
    partial void InsertTriageCPRType(TriageCPRType instance);
    partial void UpdateTriageCPRType(TriageCPRType instance);
    partial void DeleteTriageCPRType(TriageCPRType instance);
    partial void InsertTriageDossierEM(TriageDossierEM instance);
    partial void UpdateTriageDossierEM(TriageDossierEM instance);
    partial void DeleteTriageDossierEM(TriageDossierEM instance);
    partial void InsertTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void UpdateTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void DeleteTriageEmergencyCPR(TriageEmergencyCPR instance);
    partial void InsertTriageEMGAccident(TriageEMGAccident instance);
    partial void UpdateTriageEMGAccident(TriageEMGAccident instance);
    partial void DeleteTriageEMGAccident(TriageEMGAccident instance);
    partial void InsertTriageEMGincident(TriageEMGincident instance);
    partial void UpdateTriageEMGincident(TriageEMGincident instance);
    partial void DeleteTriageEMGincident(TriageEMGincident instance);
    partial void InsertTriageEMGkhodkoshi(TriageEMGkhodkoshi instance);
    partial void UpdateTriageEMGkhodkoshi(TriageEMGkhodkoshi instance);
    partial void DeleteTriageEMGkhodkoshi(TriageEMGkhodkoshi instance);
    partial void InsertTriagePartialData(TriagePartialData instance);
    partial void UpdateTriagePartialData(TriagePartialData instance);
    partial void DeleteTriagePartialData(TriagePartialData instance);
    partial void InsertTtblPerson(TtblPerson instance);
    partial void UpdateTtblPerson(TtblPerson instance);
    partial void DeleteTtblPerson(TtblPerson instance);
    partial void InsertTypeOfICDCode(TypeOfICDCode instance);
    partial void UpdateTypeOfICDCode(TypeOfICDCode instance);
    partial void DeleteTypeOfICDCode(TypeOfICDCode instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertVisitHistory(VisitHistory instance);
    partial void UpdateVisitHistory(VisitHistory instance);
    partial void DeleteVisitHistory(VisitHistory instance);
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    #endregion
		
		public HCISDataContext() : 
				base(global::HCISReport.Properties.Settings.Default.HCISConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ASD> ASDs
		{
			get
			{
				return this.GetTable<ASD>();
			}
		}
		
		public System.Data.Linq.Table<VitalSign> VitalSigns
		{
			get
			{
				return this.GetTable<VitalSign>();
			}
		}
		
		public System.Data.Linq.Table<Bed> Beds
		{
			get
			{
				return this.GetTable<Bed>();
			}
		}
		
		public System.Data.Linq.Table<BedReservation> BedReservations
		{
			get
			{
				return this.GetTable<BedReservation>();
			}
		}
		
		public System.Data.Linq.Table<BeforOprationCare> BeforOprationCares
		{
			get
			{
				return this.GetTable<BeforOprationCare>();
			}
		}
		
		public System.Data.Linq.Table<Billing> Billings
		{
			get
			{
				return this.GetTable<Billing>();
			}
		}
		
		public System.Data.Linq.Table<BreastExamination> BreastExaminations
		{
			get
			{
				return this.GetTable<BreastExamination>();
			}
		}
		
		public System.Data.Linq.Table<BreastVisit> BreastVisits
		{
			get
			{
				return this.GetTable<BreastVisit>();
			}
		}
		
		public System.Data.Linq.Table<ClientApp> ClientApps
		{
			get
			{
				return this.GetTable<ClientApp>();
			}
		}
		
		public System.Data.Linq.Table<ClientConfig> ClientConfigs
		{
			get
			{
				return this.GetTable<ClientConfig>();
			}
		}
		
		public System.Data.Linq.Table<CommentAndRequest> CommentAndRequests
		{
			get
			{
				return this.GetTable<CommentAndRequest>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<ComplicationsBB> ComplicationsBBs
		{
			get
			{
				return this.GetTable<ComplicationsBB>();
			}
		}
		
		public System.Data.Linq.Table<Consultant> Consultants
		{
			get
			{
				return this.GetTable<Consultant>();
			}
		}
		
		public System.Data.Linq.Table<CostsAndIncome> CostsAndIncomes
		{
			get
			{
				return this.GetTable<CostsAndIncome>();
			}
		}
		
		public System.Data.Linq.Table<CostType> CostTypes
		{
			get
			{
				return this.GetTable<CostType>();
			}
		}
		
		public System.Data.Linq.Table<CPR> CPRs
		{
			get
			{
				return this.GetTable<CPR>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<Denote> Denotes
		{
			get
			{
				return this.GetTable<Denote>();
			}
		}
		
		public System.Data.Linq.Table<DenoteDailyResult> DenoteDailyResults
		{
			get
			{
				return this.GetTable<DenoteDailyResult>();
			}
		}
		
		public System.Data.Linq.Table<DenoteDetail> DenoteDetails
		{
			get
			{
				return this.GetTable<DenoteDetail>();
			}
		}
		
		public System.Data.Linq.Table<DepAdvancePayment> DepAdvancePayments
		{
			get
			{
				return this.GetTable<DepAdvancePayment>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<DiagnosticServiceDetail> DiagnosticServiceDetails
		{
			get
			{
				return this.GetTable<DiagnosticServiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<Diet> Diets
		{
			get
			{
				return this.GetTable<Diet>();
			}
		}
		
		public System.Data.Linq.Table<Discharge> Discharges
		{
			get
			{
				return this.GetTable<Discharge>();
			}
		}
		
		public System.Data.Linq.Table<Dispatch> Dispatches
		{
			get
			{
				return this.GetTable<Dispatch>();
			}
		}
		
		public System.Data.Linq.Table<DispatchReason> DispatchReasons
		{
			get
			{
				return this.GetTable<DispatchReason>();
			}
		}
		
		public System.Data.Linq.Table<DoctorComment> DoctorComments
		{
			get
			{
				return this.GetTable<DoctorComment>();
			}
		}
		
		public System.Data.Linq.Table<DoctorContract> DoctorContracts
		{
			get
			{
				return this.GetTable<DoctorContract>();
			}
		}
		
		public System.Data.Linq.Table<DoctorContractD> DoctorContractDs
		{
			get
			{
				return this.GetTable<DoctorContractD>();
			}
		}
		
		public System.Data.Linq.Table<DoctorContractM> DoctorContractMs
		{
			get
			{
				return this.GetTable<DoctorContractM>();
			}
		}
		
		public System.Data.Linq.Table<DoctorFunction> DoctorFunctions
		{
			get
			{
				return this.GetTable<DoctorFunction>();
			}
		}
		
		public System.Data.Linq.Table<DoctorInsurance> DoctorInsurances
		{
			get
			{
				return this.GetTable<DoctorInsurance>();
			}
		}
		
		public System.Data.Linq.Table<DoctorPaymentCategory> DoctorPaymentCategories
		{
			get
			{
				return this.GetTable<DoctorPaymentCategory>();
			}
		}
		
		public System.Data.Linq.Table<DoctorPaymentsAndDeduction> DoctorPaymentsAndDeductions
		{
			get
			{
				return this.GetTable<DoctorPaymentsAndDeduction>();
			}
		}
		
		public System.Data.Linq.Table<DoctorSalaryAdditionalItem> DoctorSalaryAdditionalItems
		{
			get
			{
				return this.GetTable<DoctorSalaryAdditionalItem>();
			}
		}
		
		public System.Data.Linq.Table<DoctorSalaryParam> DoctorSalaryParams
		{
			get
			{
				return this.GetTable<DoctorSalaryParam>();
			}
		}
		
		public System.Data.Linq.Table<DoctorServiceCategoryTariff> DoctorServiceCategoryTariffs
		{
			get
			{
				return this.GetTable<DoctorServiceCategoryTariff>();
			}
		}
		
		public System.Data.Linq.Table<Dossier> Dossiers
		{
			get
			{
				return this.GetTable<Dossier>();
			}
		}
		
		public System.Data.Linq.Table<DrugAllergy> DrugAllergies
		{
			get
			{
				return this.GetTable<DrugAllergy>();
			}
		}
		
		public System.Data.Linq.Table<DrugFrequencyUsage> DrugFrequencyUsages
		{
			get
			{
				return this.GetTable<DrugFrequencyUsage>();
			}
		}
		
		public System.Data.Linq.Table<DrugHistory> DrugHistories
		{
			get
			{
				return this.GetTable<DrugHistory>();
			}
		}
		
		public System.Data.Linq.Table<DrugTempelateForWard> DrugTempelateForWards
		{
			get
			{
				return this.GetTable<DrugTempelateForWard>();
			}
		}
		
		public System.Data.Linq.Table<DrugTransferee> DrugTransferees
		{
			get
			{
				return this.GetTable<DrugTransferee>();
			}
		}
		
		public System.Data.Linq.Table<DS_Category> DS_Categories
		{
			get
			{
				return this.GetTable<DS_Category>();
			}
		}
		
		public System.Data.Linq.Table<Exeption> Exeptions
		{
			get
			{
				return this.GetTable<Exeption>();
			}
		}
		
		public System.Data.Linq.Table<FactorD> FactorDs
		{
			get
			{
				return this.GetTable<FactorD>();
			}
		}
		
		public System.Data.Linq.Table<FactorM> FactorMs
		{
			get
			{
				return this.GetTable<FactorM>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteICD10> FavoriteICD10s
		{
			get
			{
				return this.GetTable<FavoriteICD10>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteService> FavoriteServices
		{
			get
			{
				return this.GetTable<FavoriteService>();
			}
		}
		
		public System.Data.Linq.Table<FileExcel> FileExcels
		{
			get
			{
				return this.GetTable<FileExcel>();
			}
		}
		
		public System.Data.Linq.Table<Form20> Form20s
		{
			get
			{
				return this.GetTable<Form20>();
			}
		}
		
		public System.Data.Linq.Table<Form20Definition> Form20Definitions
		{
			get
			{
				return this.GetTable<Form20Definition>();
			}
		}
		
		public System.Data.Linq.Table<gh_sh_ICD10> gh_sh_ICD10s
		{
			get
			{
				return this.GetTable<gh_sh_ICD10>();
			}
		}
		
		public System.Data.Linq.Table<GivenDiagnosticServiceD> GivenDiagnosticServiceDs
		{
			get
			{
				return this.GetTable<GivenDiagnosticServiceD>();
			}
		}
		
		public System.Data.Linq.Table<GivenDiagnosticServiceM> GivenDiagnosticServiceMs
		{
			get
			{
				return this.GetTable<GivenDiagnosticServiceM>();
			}
		}
		
		public System.Data.Linq.Table<GivenDrug> GivenDrugs
		{
			get
			{
				return this.GetTable<GivenDrug>();
			}
		}
		
		public System.Data.Linq.Table<GivenLaboratoryServiceD> GivenLaboratoryServiceDs
		{
			get
			{
				return this.GetTable<GivenLaboratoryServiceD>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this.GetTable<GivenServiceD>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this.GetTable<GivenServiceM>();
			}
		}
		
		public System.Data.Linq.Table<HealthDailyResult> HealthDailyResults
		{
			get
			{
				return this.GetTable<HealthDailyResult>();
			}
		}
		
		public System.Data.Linq.Table<HealthDailyResultbyFunc> HealthDailyResultbyFuncs
		{
			get
			{
				return this.GetTable<HealthDailyResultbyFunc>();
			}
		}
		
		public System.Data.Linq.Table<HealthSoratDetail> HealthSoratDetails
		{
			get
			{
				return this.GetTable<HealthSoratDetail>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<ICD10> ICD10s
		{
			get
			{
				return this.GetTable<ICD10>();
			}
		}
		
		public System.Data.Linq.Table<IndexDetail> IndexDetails
		{
			get
			{
				return this.GetTable<IndexDetail>();
			}
		}
		
		public System.Data.Linq.Table<IndexTeh> IndexTehs
		{
			get
			{
				return this.GetTable<IndexTeh>();
			}
		}
		
		public System.Data.Linq.Table<Insurance> Insurances
		{
			get
			{
				return this.GetTable<Insurance>();
			}
		}
		
		public System.Data.Linq.Table<LabAntiBiogram> LabAntiBiograms
		{
			get
			{
				return this.GetTable<LabAntiBiogram>();
			}
		}
		
		public System.Data.Linq.Table<LabGroup> LabGroups
		{
			get
			{
				return this.GetTable<LabGroup>();
			}
		}
		
		public System.Data.Linq.Table<LaboratoryServiceDetail> LaboratoryServiceDetails
		{
			get
			{
				return this.GetTable<LaboratoryServiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<LabSubGroup> LabSubGroups
		{
			get
			{
				return this.GetTable<LabSubGroup>();
			}
		}
		
		public System.Data.Linq.Table<LabTerm> LabTerms
		{
			get
			{
				return this.GetTable<LabTerm>();
			}
		}
		
		public System.Data.Linq.Table<LabTestGroup> LabTestGroups
		{
			get
			{
				return this.GetTable<LabTestGroup>();
			}
		}
		
		public System.Data.Linq.Table<LabWorksheet> LabWorksheets
		{
			get
			{
				return this.GetTable<LabWorksheet>();
			}
		}
		
		public System.Data.Linq.Table<LabWorksheetService> LabWorksheetServices
		{
			get
			{
				return this.GetTable<LabWorksheetService>();
			}
		}
		
		public System.Data.Linq.Table<Laundry> Laundries
		{
			get
			{
				return this.GetTable<Laundry>();
			}
		}
		
		public System.Data.Linq.Table<MeasurementDefinition> MeasurementDefinitions
		{
			get
			{
				return this.GetTable<MeasurementDefinition>();
			}
		}
		
		public System.Data.Linq.Table<MedicalRecord> MedicalRecords
		{
			get
			{
				return this.GetTable<MedicalRecord>();
			}
		}
		
		public System.Data.Linq.Table<MentalHealthHistory> MentalHealthHistories
		{
			get
			{
				return this.GetTable<MentalHealthHistory>();
			}
		}
		
		public System.Data.Linq.Table<ModularService> ModularServices
		{
			get
			{
				return this.GetTable<ModularService>();
			}
		}
		
		public System.Data.Linq.Table<NutritionHistory> NutritionHistories
		{
			get
			{
				return this.GetTable<NutritionHistory>();
			}
		}
		
		public System.Data.Linq.Table<ONcall> ONcalls
		{
			get
			{
				return this.GetTable<ONcall>();
			}
		}
		
		public System.Data.Linq.Table<Optometry> Optometries
		{
			get
			{
				return this.GetTable<Optometry>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Organ> Organs
		{
			get
			{
				return this.GetTable<Organ>();
			}
		}
		
		public System.Data.Linq.Table<PacsDateCheck> PacsDateChecks
		{
			get
			{
				return this.GetTable<PacsDateCheck>();
			}
		}
		
		public System.Data.Linq.Table<ParaClinicServiceHistory> ParaClinicServiceHistories
		{
			get
			{
				return this.GetTable<ParaClinicServiceHistory>();
			}
		}
		
		public System.Data.Linq.Table<PatternD> PatternDs
		{
			get
			{
				return this.GetTable<PatternD>();
			}
		}
		
		public System.Data.Linq.Table<PatternM> PatternMs
		{
			get
			{
				return this.GetTable<PatternM>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Period> Periods
		{
			get
			{
				return this.GetTable<Period>();
			}
		}
		
		public System.Data.Linq.Table<PeriodicCalender> PeriodicCalenders
		{
			get
			{
				return this.GetTable<PeriodicCalender>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<PersonDisease> PersonDiseases
		{
			get
			{
				return this.GetTable<PersonDisease>();
			}
		}
		
		public System.Data.Linq.Table<Pharmacy> Pharmacies
		{
			get
			{
				return this.GetTable<Pharmacy>();
			}
		}
		
		public System.Data.Linq.Table<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this.GetTable<PharmacyDrug>();
			}
		}
		
		public System.Data.Linq.Table<PhysiotherapyOrderD> PhysiotherapyOrderDs
		{
			get
			{
				return this.GetTable<PhysiotherapyOrderD>();
			}
		}
		
		public System.Data.Linq.Table<PhysiotherapyOrderM> PhysiotherapyOrderMs
		{
			get
			{
				return this.GetTable<PhysiotherapyOrderM>();
			}
		}
		
		public System.Data.Linq.Table<Presentation> Presentations
		{
			get
			{
				return this.GetTable<Presentation>();
			}
		}
		
		public System.Data.Linq.Table<PreventingDeviceRecive> PreventingDeviceRecives
		{
			get
			{
				return this.GetTable<PreventingDeviceRecive>();
			}
		}
		
		public System.Data.Linq.Table<PreventingStartAndEnd> PreventingStartAndEnds
		{
			get
			{
				return this.GetTable<PreventingStartAndEnd>();
			}
		}
		
		public System.Data.Linq.Table<QA> QAs
		{
			get
			{
				return this.GetTable<QA>();
			}
		}
		
		public System.Data.Linq.Table<QAPlus> QAPlus
		{
			get
			{
				return this.GetTable<QAPlus>();
			}
		}
		
		public System.Data.Linq.Table<QualitativePoint> QualitativePoints
		{
			get
			{
				return this.GetTable<QualitativePoint>();
			}
		}
		
		public System.Data.Linq.Table<Questionnaire> Questionnaires
		{
			get
			{
				return this.GetTable<Questionnaire>();
			}
		}
		
		public System.Data.Linq.Table<QuestionnaireGroup> QuestionnaireGroups
		{
			get
			{
				return this.GetTable<QuestionnaireGroup>();
			}
		}
		
		public System.Data.Linq.Table<Recall> Recalls
		{
			get
			{
				return this.GetTable<Recall>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<RefResult> RefResults
		{
			get
			{
				return this.GetTable<RefResult>();
			}
		}
		
		public System.Data.Linq.Table<RequestD> RequestDs
		{
			get
			{
				return this.GetTable<RequestD>();
			}
		}
		
		public System.Data.Linq.Table<RequestM> RequestMs
		{
			get
			{
				return this.GetTable<RequestM>();
			}
		}
		
		public System.Data.Linq.Table<RequestPermission> RequestPermissions
		{
			get
			{
				return this.GetTable<RequestPermission>();
			}
		}
		
		public System.Data.Linq.Table<Rest> Rests
		{
			get
			{
				return this.GetTable<Rest>();
			}
		}
		
		public System.Data.Linq.Table<RiskFactorHistory> RiskFactorHistories
		{
			get
			{
				return this.GetTable<RiskFactorHistory>();
			}
		}
		
		public System.Data.Linq.Table<RVCauseOfReferral> RVCauseOfReferrals
		{
			get
			{
				return this.GetTable<RVCauseOfReferral>();
			}
		}
		
		public System.Data.Linq.Table<RVInitialInterview> RVInitialInterviews
		{
			get
			{
				return this.GetTable<RVInitialInterview>();
			}
		}
		
		public System.Data.Linq.Table<RVPersonalInformation> RVPersonalInformations
		{
			get
			{
				return this.GetTable<RVPersonalInformation>();
			}
		}
		
		public System.Data.Linq.Table<RVPsychiatricIntervention> RVPsychiatricInterventions
		{
			get
			{
				return this.GetTable<RVPsychiatricIntervention>();
			}
		}
		
		public System.Data.Linq.Table<RVPsychometricRecord> RVPsychometricRecords
		{
			get
			{
				return this.GetTable<RVPsychometricRecord>();
			}
		}
		
		public System.Data.Linq.Table<RVRecordsOfIntervention> RVRecordsOfInterventions
		{
			get
			{
				return this.GetTable<RVRecordsOfIntervention>();
			}
		}
		
		public System.Data.Linq.Table<RVU> RVUs
		{
			get
			{
				return this.GetTable<RVU>();
			}
		}
		
		public System.Data.Linq.Table<SampleAnswer> SampleAnswers
		{
			get
			{
				return this.GetTable<SampleAnswer>();
			}
		}
		
		public System.Data.Linq.Table<Screening> Screenings
		{
			get
			{
				return this.GetTable<Screening>();
			}
		}
		
		public System.Data.Linq.Table<ScreeningItem> ScreeningItems
		{
			get
			{
				return this.GetTable<ScreeningItem>();
			}
		}
		
		public System.Data.Linq.Table<SerialNumber> SerialNumbers
		{
			get
			{
				return this.GetTable<SerialNumber>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCategory> ServiceCategories
		{
			get
			{
				return this.GetTable<ServiceCategory>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shifts
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<SpecialDisease> SpecialDiseases
		{
			get
			{
				return this.GetTable<SpecialDisease>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<SpecialityDepartment> SpecialityDepartments
		{
			get
			{
				return this.GetTable<SpecialityDepartment>();
			}
		}
		
		public System.Data.Linq.Table<SpecialityDrug> SpecialityDrugs
		{
			get
			{
				return this.GetTable<SpecialityDrug>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Surgery> Surgeries
		{
			get
			{
				return this.GetTable<Surgery>();
			}
		}
		
		public System.Data.Linq.Table<SurgeyHistory> SurgeyHistories
		{
			get
			{
				return this.GetTable<SurgeyHistory>();
			}
		}
		
		public System.Data.Linq.Table<SystemError> SystemErrors
		{
			get
			{
				return this.GetTable<SystemError>();
			}
		}
		
		public System.Data.Linq.Table<TadilArea> TadilAreas
		{
			get
			{
				return this.GetTable<TadilArea>();
			}
		}
		
		public System.Data.Linq.Table<Tariff> Tariffs
		{
			get
			{
				return this.GetTable<Tariff>();
			}
		}
		
		public System.Data.Linq.Table<tblAllPhoneNumber> tblAllPhoneNumbers
		{
			get
			{
				return this.GetTable<tblAllPhoneNumber>();
			}
		}
		
		public System.Data.Linq.Table<tblHomeDefinition> tblHomeDefinitions
		{
			get
			{
				return this.GetTable<tblHomeDefinition>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCarDriver> tblMngCarDrivers
		{
			get
			{
				return this.GetTable<tblMngCarDriver>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCarInsurance> tblMngCarInsurances
		{
			get
			{
				return this.GetTable<tblMngCarInsurance>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCastMahd> tblMngCastMahds
		{
			get
			{
				return this.GetTable<tblMngCastMahd>();
			}
		}
		
		public System.Data.Linq.Table<tblMngChiled> tblMngChileds
		{
			get
			{
				return this.GetTable<tblMngChiled>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCivilCar> tblMngCivilCars
		{
			get
			{
				return this.GetTable<tblMngCivilCar>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCprGroup> tblMngCprGroups
		{
			get
			{
				return this.GetTable<tblMngCprGroup>();
			}
		}
		
		public System.Data.Linq.Table<tblMngDaily_routine_function> tblMngDaily_routine_functions
		{
			get
			{
				return this.GetTable<tblMngDaily_routine_function>();
			}
		}
		
		public System.Data.Linq.Table<tblMngDailyRep> tblMngDailyReps
		{
			get
			{
				return this.GetTable<tblMngDailyRep>();
			}
		}
		
		public System.Data.Linq.Table<tblMngDirectionCar> tblMngDirectionCars
		{
			get
			{
				return this.GetTable<tblMngDirectionCar>();
			}
		}
		
		public System.Data.Linq.Table<tblMngFactorRepair> tblMngFactorRepairs
		{
			get
			{
				return this.GetTable<tblMngFactorRepair>();
			}
		}
		
		public System.Data.Linq.Table<tblMngFuelCar> tblMngFuelCars
		{
			get
			{
				return this.GetTable<tblMngFuelCar>();
			}
		}
		
		public System.Data.Linq.Table<tblMngGroup> tblMngGroups
		{
			get
			{
				return this.GetTable<tblMngGroup>();
			}
		}
		
		public System.Data.Linq.Table<tblMngHistoryHome> tblMngHistoryHomes
		{
			get
			{
				return this.GetTable<tblMngHistoryHome>();
			}
		}
		
		public System.Data.Linq.Table<tblMngHomeRequst> tblMngHomeRequsts
		{
			get
			{
				return this.GetTable<tblMngHomeRequst>();
			}
		}
		
		public System.Data.Linq.Table<tblMngKindergarten> tblMngKindergartens
		{
			get
			{
				return this.GetTable<tblMngKindergarten>();
			}
		}
		
		public System.Data.Linq.Table<tblMngLeaseDriver> tblMngLeaseDrivers
		{
			get
			{
				return this.GetTable<tblMngLeaseDriver>();
			}
		}
		
		public System.Data.Linq.Table<tblMngMasterNurse> tblMngMasterNurses
		{
			get
			{
				return this.GetTable<tblMngMasterNurse>();
			}
		}
		
		public System.Data.Linq.Table<tblMngNotResponse> tblMngNotResponses
		{
			get
			{
				return this.GetTable<tblMngNotResponse>();
			}
		}
		
		public System.Data.Linq.Table<tblMngOut_of_CareCall> tblMngOut_of_CareCalls
		{
			get
			{
				return this.GetTable<tblMngOut_of_CareCall>();
			}
		}
		
		public System.Data.Linq.Table<tblMngStatusChiled> tblMngStatusChileds
		{
			get
			{
				return this.GetTable<tblMngStatusChiled>();
			}
		}
		
		public System.Data.Linq.Table<tblMngTelecomunicationPersonnel> tblMngTelecomunicationPersonnels
		{
			get
			{
				return this.GetTable<tblMngTelecomunicationPersonnel>();
			}
		}
		
		public System.Data.Linq.Table<tblMngTicketPhone> tblMngTicketPhones
		{
			get
			{
				return this.GetTable<tblMngTicketPhone>();
			}
		}
		
		public System.Data.Linq.Table<tblMngTrainingChiled> tblMngTrainingChileds
		{
			get
			{
				return this.GetTable<tblMngTrainingChiled>();
			}
		}
		
		public System.Data.Linq.Table<tblMngtransportPersonel> tblMngtransportPersonels
		{
			get
			{
				return this.GetTable<tblMngtransportPersonel>();
			}
		}
		
		public System.Data.Linq.Table<TestHistory> TestHistories
		{
			get
			{
				return this.GetTable<TestHistory>();
			}
		}
		
		public System.Data.Linq.Table<tmpSexPyramid> tmpSexPyramids
		{
			get
			{
				return this.GetTable<tmpSexPyramid>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfers
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<TransmissionOfPatient> TransmissionOfPatients
		{
			get
			{
				return this.GetTable<TransmissionOfPatient>();
			}
		}
		
		public System.Data.Linq.Table<TreatmentProgress> TreatmentProgresses
		{
			get
			{
				return this.GetTable<TreatmentProgress>();
			}
		}
		
		public System.Data.Linq.Table<Triage> Triages
		{
			get
			{
				return this.GetTable<Triage>();
			}
		}
		
		public System.Data.Linq.Table<TriageAdmission> TriageAdmissions
		{
			get
			{
				return this.GetTable<TriageAdmission>();
			}
		}
		
		public System.Data.Linq.Table<TriageCPR> TriageCPRs
		{
			get
			{
				return this.GetTable<TriageCPR>();
			}
		}
		
		public System.Data.Linq.Table<TriageCPRType> TriageCPRTypes
		{
			get
			{
				return this.GetTable<TriageCPRType>();
			}
		}
		
		public System.Data.Linq.Table<TriageDossierEM> TriageDossierEMs
		{
			get
			{
				return this.GetTable<TriageDossierEM>();
			}
		}
		
		public System.Data.Linq.Table<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this.GetTable<TriageEmergencyCPR>();
			}
		}
		
		public System.Data.Linq.Table<TriageEMGAccident> TriageEMGAccidents
		{
			get
			{
				return this.GetTable<TriageEMGAccident>();
			}
		}
		
		public System.Data.Linq.Table<TriageEMGincident> TriageEMGincidents
		{
			get
			{
				return this.GetTable<TriageEMGincident>();
			}
		}
		
		public System.Data.Linq.Table<TriageEMGkhodkoshi> TriageEMGkhodkoshis
		{
			get
			{
				return this.GetTable<TriageEMGkhodkoshi>();
			}
		}
		
		public System.Data.Linq.Table<TriagePartialData> TriagePartialDatas
		{
			get
			{
				return this.GetTable<TriagePartialData>();
			}
		}
		
		public System.Data.Linq.Table<TtblPerson> TtblPersons
		{
			get
			{
				return this.GetTable<TtblPerson>();
			}
		}
		
		public System.Data.Linq.Table<TtblTelePlace> TtblTelePlaces
		{
			get
			{
				return this.GetTable<TtblTelePlace>();
			}
		}
		
		public System.Data.Linq.Table<TypeOfICDCode> TypeOfICDCodes
		{
			get
			{
				return this.GetTable<TypeOfICDCode>();
			}
		}
		
		public System.Data.Linq.Table<ViewMainTmp> ViewMainTmps
		{
			get
			{
				return this.GetTable<ViewMainTmp>();
			}
		}
		
		public System.Data.Linq.Table<ViewMainTmpSmall> ViewMainTmpSmalls
		{
			get
			{
				return this.GetTable<ViewMainTmpSmall>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<VisitHistory> VisitHistories
		{
			get
			{
				return this.GetTable<VisitHistory>();
			}
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASD")]
	public partial class ASD
	{
		
		private string _Gp;
		
		private int _IDPerson;
		
		private string _MedicalID;
		
		private System.Nullable<int> _ValidCenter;
		
		private System.Nullable<int> _VisitDate;
		
		private int _MedicalService;
		
		private System.Nullable<long> _PayMent;
		
		private int _SN;
		
		private System.Nullable<int> _Dep_ID;
		
		private System.Nullable<int> _Shift;
		
		private System.Nullable<int> _nationalid;
		
		public ASD()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gp
		{
			get
			{
				return this._Gp;
			}
			set
			{
				if ((this._Gp != value))
				{
					this._Gp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="Int NOT NULL")]
		public int IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this._IDPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this._MedicalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidCenter", DbType="Int")]
		public System.Nullable<int> ValidCenter
		{
			get
			{
				return this._ValidCenter;
			}
			set
			{
				if ((this._ValidCenter != value))
				{
					this._ValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="Int")]
		public System.Nullable<int> VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this._VisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalService", DbType="Int NOT NULL")]
		public int MedicalService
		{
			get
			{
				return this._MedicalService;
			}
			set
			{
				if ((this._MedicalService != value))
				{
					this._MedicalService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="BigInt")]
		public System.Nullable<long> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", DbType="Int NOT NULL")]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this._SN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep_ID", DbType="Int")]
		public System.Nullable<int> Dep_ID
		{
			get
			{
				return this._Dep_ID;
			}
			set
			{
				if ((this._Dep_ID != value))
				{
					this._Dep_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="Int")]
		public System.Nullable<int> Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this._Shift = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationalid", DbType="Int")]
		public System.Nullable<int> nationalid
		{
			get
			{
				return this._nationalid;
			}
			set
			{
				if ((this._nationalid != value))
				{
					this._nationalid = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VitalSigns")]
	public partial class VitalSign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Temperatures;
		
		private string _Breathing;
		
		private string _NervousSymptoms;
		
		private string _PupilReflexes;
		
		private string _SystolicBloodPressure;
		
		private string _DiastolicBloodPressure;
		
		private string _Pulse;
		
		private string _SPO2;
		
		private string _Glucometry;
		
		private System.Nullable<int> _TriageLevelChange;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTemperaturesChanging(string value);
    partial void OnTemperaturesChanged();
    partial void OnBreathingChanging(string value);
    partial void OnBreathingChanged();
    partial void OnNervousSymptomsChanging(string value);
    partial void OnNervousSymptomsChanged();
    partial void OnPupilReflexesChanging(string value);
    partial void OnPupilReflexesChanged();
    partial void OnSystolicBloodPressureChanging(string value);
    partial void OnSystolicBloodPressureChanged();
    partial void OnDiastolicBloodPressureChanging(string value);
    partial void OnDiastolicBloodPressureChanged();
    partial void OnPulseChanging(string value);
    partial void OnPulseChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnGlucometryChanging(string value);
    partial void OnGlucometryChanged();
    partial void OnTriageLevelChangeChanging(System.Nullable<int> value);
    partial void OnTriageLevelChangeChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public VitalSign()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperatures", DbType="NVarChar(50)")]
		public string Temperatures
		{
			get
			{
				return this._Temperatures;
			}
			set
			{
				if ((this._Temperatures != value))
				{
					this.OnTemperaturesChanging(value);
					this.SendPropertyChanging();
					this._Temperatures = value;
					this.SendPropertyChanged("Temperatures");
					this.OnTemperaturesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breathing", DbType="NVarChar(50)")]
		public string Breathing
		{
			get
			{
				return this._Breathing;
			}
			set
			{
				if ((this._Breathing != value))
				{
					this.OnBreathingChanging(value);
					this.SendPropertyChanging();
					this._Breathing = value;
					this.SendPropertyChanged("Breathing");
					this.OnBreathingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSymptoms", DbType="NVarChar(50)")]
		public string NervousSymptoms
		{
			get
			{
				return this._NervousSymptoms;
			}
			set
			{
				if ((this._NervousSymptoms != value))
				{
					this.OnNervousSymptomsChanging(value);
					this.SendPropertyChanging();
					this._NervousSymptoms = value;
					this.SendPropertyChanged("NervousSymptoms");
					this.OnNervousSymptomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PupilReflexes", DbType="NVarChar(50)")]
		public string PupilReflexes
		{
			get
			{
				return this._PupilReflexes;
			}
			set
			{
				if ((this._PupilReflexes != value))
				{
					this.OnPupilReflexesChanging(value);
					this.SendPropertyChanging();
					this._PupilReflexes = value;
					this.SendPropertyChanged("PupilReflexes");
					this.OnPupilReflexesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystolicBloodPressure", DbType="NVarChar(50)")]
		public string SystolicBloodPressure
		{
			get
			{
				return this._SystolicBloodPressure;
			}
			set
			{
				if ((this._SystolicBloodPressure != value))
				{
					this.OnSystolicBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._SystolicBloodPressure = value;
					this.SendPropertyChanged("SystolicBloodPressure");
					this.OnSystolicBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiastolicBloodPressure", DbType="NVarChar(50)")]
		public string DiastolicBloodPressure
		{
			get
			{
				return this._DiastolicBloodPressure;
			}
			set
			{
				if ((this._DiastolicBloodPressure != value))
				{
					this.OnDiastolicBloodPressureChanging(value);
					this.SendPropertyChanging();
					this._DiastolicBloodPressure = value;
					this.SendPropertyChanged("DiastolicBloodPressure");
					this.OnDiastolicBloodPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pulse", DbType="NVarChar(50)")]
		public string Pulse
		{
			get
			{
				return this._Pulse;
			}
			set
			{
				if ((this._Pulse != value))
				{
					this.OnPulseChanging(value);
					this.SendPropertyChanging();
					this._Pulse = value;
					this.SendPropertyChanged("Pulse");
					this.OnPulseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(50)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glucometry", DbType="NVarChar(50)")]
		public string Glucometry
		{
			get
			{
				return this._Glucometry;
			}
			set
			{
				if ((this._Glucometry != value))
				{
					this.OnGlucometryChanging(value);
					this.SendPropertyChanging();
					this._Glucometry = value;
					this.SendPropertyChanged("Glucometry");
					this.OnGlucometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageLevelChange", DbType="Int")]
		public System.Nullable<int> TriageLevelChange
		{
			get
			{
				return this._TriageLevelChange;
			}
			set
			{
				if ((this._TriageLevelChange != value))
				{
					this.OnTriageLevelChangeChanging(value);
					this.SendPropertyChanging();
					this._TriageLevelChange = value;
					this.SendPropertyChanged("TriageLevelChange");
					this.OnTriageLevelChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_VitalSign", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.VitalSign = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.VitalSign = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bed")]
	public partial class Bed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Bed1;
		
		private System.Nullable<int> _BedNumber;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private string _Condition;
		
		private string _Type;
		
		private System.Nullable<int> _RoomNumber;
		
		private EntitySet<BedReservation> _BedReservations;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBed1Changing(System.Nullable<int> value);
    partial void OnBed1Changed();
    partial void OnBedNumberChanging(System.Nullable<int> value);
    partial void OnBedNumberChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnConditionChanging(string value);
    partial void OnConditionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    #endregion
		
		public Bed()
		{
			this._BedReservations = new EntitySet<BedReservation>(new Action<BedReservation>(this.attach_BedReservations), new Action<BedReservation>(this.detach_BedReservations));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bed", Storage="_Bed1", DbType="Int")]
		public System.Nullable<int> Bed1
		{
			get
			{
				return this._Bed1;
			}
			set
			{
				if ((this._Bed1 != value))
				{
					this.OnBed1Changing(value);
					this.SendPropertyChanging();
					this._Bed1 = value;
					this.SendPropertyChanged("Bed1");
					this.OnBed1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedNumber", DbType="Int")]
		public System.Nullable<int> BedNumber
		{
			get
			{
				return this._BedNumber;
			}
			set
			{
				if ((this._BedNumber != value))
				{
					this.OnBedNumberChanging(value);
					this.SendPropertyChanging();
					this._BedNumber = value;
					this.SendPropertyChanged("BedNumber");
					this.OnBedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="NVarChar(50)")]
		public string Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_BedReservation", Storage="_BedReservations", ThisKey="ID", OtherKey="BedID")]
		public EntitySet<BedReservation> BedReservations
		{
			get
			{
				return this._BedReservations;
			}
			set
			{
				this._BedReservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="BedID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Bed", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Beds.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Beds.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.Bed = this;
		}
		
		private void detach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.Bed = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Bed = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Bed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BedReservation")]
	public partial class BedReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private string _FromDate;
		
		private string _ToDate;
		
		private System.Nullable<bool> _Cancel;
		
		private string _Comment;
		
		private System.Nullable<bool> _Leave;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Bed> _Bed;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnFromDateChanging(string value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(string value);
    partial void OnToDateChanged();
    partial void OnCancelChanging(System.Nullable<bool> value);
    partial void OnCancelChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLeaveChanging(System.Nullable<bool> value);
    partial void OnLeaveChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public BedReservation()
		{
			this._Bed = default(EntityRef<Bed>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					if (this._Bed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="NVarChar(10)")]
		public string FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="NVarChar(10)")]
		public string ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancel", DbType="Bit")]
		public System.Nullable<bool> Cancel
		{
			get
			{
				return this._Cancel;
			}
			set
			{
				if ((this._Cancel != value))
				{
					this.OnCancelChanging(value);
					this.SendPropertyChanging();
					this._Cancel = value;
					this.SendPropertyChanged("Cancel");
					this.OnCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leave", DbType="Bit")]
		public System.Nullable<bool> Leave
		{
			get
			{
				return this._Leave;
			}
			set
			{
				if ((this._Leave != value))
				{
					this.OnLeaveChanging(value);
					this.SendPropertyChanging();
					this._Leave = value;
					this.SendPropertyChanged("Leave");
					this.OnLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_BedReservation", Storage="_Bed", ThisKey="BedID", OtherKey="ID", IsForeignKey=true)]
		public Bed Bed
		{
			get
			{
				return this._Bed.Entity;
			}
			set
			{
				Bed previousValue = this._Bed.Entity;
				if (((previousValue != value) 
							|| (this._Bed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bed.Entity = null;
						previousValue.BedReservations.Remove(this);
					}
					this._Bed.Entity = value;
					if ((value != null))
					{
						value.BedReservations.Add(this);
						this._BedID = value.ID;
					}
					else
					{
						this._BedID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Bed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BedReservation", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.BedReservations.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.BedReservations.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeforOprationCare")]
	public partial class BeforOprationCare
	{
		
		private System.Nullable<System.Guid> _ID;
		
		private string _OparationName;
		
		private string _OparationDate;
		
		private string _Ore;
		
		private string _BloodPressureOnAdmit;
		
		private string _BloodPressureAfterAnesthesia;
		
		private string _Rhash;
		
		private string _BloodGroup;
		
		private string _Homuglobin;
		
		private string _LDL;
		
		private string _OperationSide;
		
		private string _DrugUsageBeforOperation;
		
		private string _VistalTemp;
		
		private string _VitalBreath;
		
		private string _VitalNabz;
		
		private string _DrugEffect;
		
		private System.Nullable<bool> _NurseRpt;
		
		private System.Nullable<bool> _RptTest;
		
		private System.Nullable<bool> _RptRadiologi;
		
		private string _PateintThings;
		
		public BeforOprationCare()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OparationName", DbType="NVarChar(50)")]
		public string OparationName
		{
			get
			{
				return this._OparationName;
			}
			set
			{
				if ((this._OparationName != value))
				{
					this._OparationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OparationDate", DbType="NChar(10)")]
		public string OparationDate
		{
			get
			{
				return this._OparationDate;
			}
			set
			{
				if ((this._OparationDate != value))
				{
					this._OparationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ore", DbType="NVarChar(50)")]
		public string Ore
		{
			get
			{
				return this._Ore;
			}
			set
			{
				if ((this._Ore != value))
				{
					this._Ore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodPressureOnAdmit", DbType="NVarChar(50)")]
		public string BloodPressureOnAdmit
		{
			get
			{
				return this._BloodPressureOnAdmit;
			}
			set
			{
				if ((this._BloodPressureOnAdmit != value))
				{
					this._BloodPressureOnAdmit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodPressureAfterAnesthesia", DbType="NVarChar(50)")]
		public string BloodPressureAfterAnesthesia
		{
			get
			{
				return this._BloodPressureAfterAnesthesia;
			}
			set
			{
				if ((this._BloodPressureAfterAnesthesia != value))
				{
					this._BloodPressureAfterAnesthesia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rhash", DbType="NVarChar(50)")]
		public string Rhash
		{
			get
			{
				return this._Rhash;
			}
			set
			{
				if ((this._Rhash != value))
				{
					this._Rhash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodGroup", DbType="NChar(10)")]
		public string BloodGroup
		{
			get
			{
				return this._BloodGroup;
			}
			set
			{
				if ((this._BloodGroup != value))
				{
					this._BloodGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Homuglobin", DbType="NChar(10)")]
		public string Homuglobin
		{
			get
			{
				return this._Homuglobin;
			}
			set
			{
				if ((this._Homuglobin != value))
				{
					this._Homuglobin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDL", DbType="NChar(10)")]
		public string LDL
		{
			get
			{
				return this._LDL;
			}
			set
			{
				if ((this._LDL != value))
				{
					this._LDL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationSide", DbType="NVarChar(50)")]
		public string OperationSide
		{
			get
			{
				return this._OperationSide;
			}
			set
			{
				if ((this._OperationSide != value))
				{
					this._OperationSide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugUsageBeforOperation", DbType="NVarChar(50)")]
		public string DrugUsageBeforOperation
		{
			get
			{
				return this._DrugUsageBeforOperation;
			}
			set
			{
				if ((this._DrugUsageBeforOperation != value))
				{
					this._DrugUsageBeforOperation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VistalTemp", DbType="NChar(10)")]
		public string VistalTemp
		{
			get
			{
				return this._VistalTemp;
			}
			set
			{
				if ((this._VistalTemp != value))
				{
					this._VistalTemp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VitalBreath", DbType="NChar(10)")]
		public string VitalBreath
		{
			get
			{
				return this._VitalBreath;
			}
			set
			{
				if ((this._VitalBreath != value))
				{
					this._VitalBreath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VitalNabz", DbType="NChar(10)")]
		public string VitalNabz
		{
			get
			{
				return this._VitalNabz;
			}
			set
			{
				if ((this._VitalNabz != value))
				{
					this._VitalNabz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugEffect", DbType="NVarChar(50)")]
		public string DrugEffect
		{
			get
			{
				return this._DrugEffect;
			}
			set
			{
				if ((this._DrugEffect != value))
				{
					this._DrugEffect = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NurseRpt", DbType="Bit")]
		public System.Nullable<bool> NurseRpt
		{
			get
			{
				return this._NurseRpt;
			}
			set
			{
				if ((this._NurseRpt != value))
				{
					this._NurseRpt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RptTest", DbType="Bit")]
		public System.Nullable<bool> RptTest
		{
			get
			{
				return this._RptTest;
			}
			set
			{
				if ((this._RptTest != value))
				{
					this._RptTest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RptRadiologi", DbType="Bit")]
		public System.Nullable<bool> RptRadiologi
		{
			get
			{
				return this._RptRadiologi;
			}
			set
			{
				if ((this._RptRadiologi != value))
				{
					this._RptRadiologi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PateintThings", DbType="NChar(10)")]
		public string PateintThings
		{
			get
			{
				return this._PateintThings;
			}
			set
			{
				if ((this._PateintThings != value))
				{
					this._PateintThings = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billing")]
	public partial class Billing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<int> _InsureID;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _DichargeDepName;
		
		private string _ResidentDate;
		
		private string _EndResidentDate;
		
		private string _MedicalID;
		
		private string _FirstName;
		
		private string _LastName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnInsureIDChanging(System.Nullable<int> value);
    partial void OnInsureIDChanged();
    partial void OnPayMentChanging(System.Nullable<decimal> value);
    partial void OnPayMentChanged();
    partial void OnDichargeDepNameChanging(string value);
    partial void OnDichargeDepNameChanged();
    partial void OnResidentDateChanging(string value);
    partial void OnResidentDateChanged();
    partial void OnEndResidentDateChanging(string value);
    partial void OnEndResidentDateChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public Billing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsureID", DbType="Int")]
		public System.Nullable<int> InsureID
		{
			get
			{
				return this._InsureID;
			}
			set
			{
				if ((this._InsureID != value))
				{
					this.OnInsureIDChanging(value);
					this.SendPropertyChanging();
					this._InsureID = value;
					this.SendPropertyChanged("InsureID");
					this.OnInsureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this.OnPayMentChanging(value);
					this.SendPropertyChanging();
					this._PayMent = value;
					this.SendPropertyChanged("PayMent");
					this.OnPayMentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DichargeDepName", DbType="NVarChar(50)")]
		public string DichargeDepName
		{
			get
			{
				return this._DichargeDepName;
			}
			set
			{
				if ((this._DichargeDepName != value))
				{
					this.OnDichargeDepNameChanging(value);
					this.SendPropertyChanging();
					this._DichargeDepName = value;
					this.SendPropertyChanged("DichargeDepName");
					this.OnDichargeDepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentDate", DbType="NChar(10)")]
		public string ResidentDate
		{
			get
			{
				return this._ResidentDate;
			}
			set
			{
				if ((this._ResidentDate != value))
				{
					this.OnResidentDateChanging(value);
					this.SendPropertyChanging();
					this._ResidentDate = value;
					this.SendPropertyChanged("ResidentDate");
					this.OnResidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndResidentDate", DbType="NChar(10)")]
		public string EndResidentDate
		{
			get
			{
				return this._EndResidentDate;
			}
			set
			{
				if ((this._EndResidentDate != value))
				{
					this.OnEndResidentDateChanging(value);
					this.SendPropertyChanging();
					this._EndResidentDate = value;
					this.SendPropertyChanged("EndResidentDate");
					this.OnEndResidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(50)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BreastExamination")]
	public partial class BreastExamination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _GsmID;
		
		private System.Nullable<bool> _BreastStatus;
		
		private string _Doc;
		
		private string _TestDate;
		
		private string _TestPlace;
		
		private string _Advise;
		
		private System.Nullable<bool> _Breast;
		
		private System.Nullable<bool> _Asymmetric;
		
		private System.Nullable<int> _MassesStatus;
		
		private System.Nullable<int> _Calcification;
		
		private System.Nullable<int> _DifferentialDiagnosis;
		
		private System.Nullable<int> _Texture;
		
		private System.Nullable<int> _Pattern;
		
		private string _Dimensions;
		
		private string _Place;
		
		private string _PlaceComment;
		
		private System.Nullable<bool> _Result;
		
		private string _DateofEnd;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUser;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<Definition> _Definition2;
		
		private EntityRef<Definition> _Definition3;
		
		private EntityRef<Definition> _Definition4;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsmIDChanging(System.Guid value);
    partial void OnGsmIDChanged();
    partial void OnBreastStatusChanging(System.Nullable<bool> value);
    partial void OnBreastStatusChanged();
    partial void OnDocChanging(string value);
    partial void OnDocChanged();
    partial void OnTestDateChanging(string value);
    partial void OnTestDateChanged();
    partial void OnTestPlaceChanging(string value);
    partial void OnTestPlaceChanged();
    partial void OnAdviseChanging(string value);
    partial void OnAdviseChanged();
    partial void OnBreastChanging(System.Nullable<bool> value);
    partial void OnBreastChanged();
    partial void OnAsymmetricChanging(System.Nullable<bool> value);
    partial void OnAsymmetricChanged();
    partial void OnMassesStatusChanging(System.Nullable<int> value);
    partial void OnMassesStatusChanged();
    partial void OnCalcificationChanging(System.Nullable<int> value);
    partial void OnCalcificationChanged();
    partial void OnDifferentialDiagnosisChanging(System.Nullable<int> value);
    partial void OnDifferentialDiagnosisChanged();
    partial void OnTextureChanging(System.Nullable<int> value);
    partial void OnTextureChanged();
    partial void OnPatternChanging(System.Nullable<int> value);
    partial void OnPatternChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnPlaceCommentChanging(string value);
    partial void OnPlaceCommentChanged();
    partial void OnResultChanging(System.Nullable<bool> value);
    partial void OnResultChanged();
    partial void OnDateofEndChanging(string value);
    partial void OnDateofEndChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    #endregion
		
		public BreastExamination()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._Definition2 = default(EntityRef<Definition>);
			this._Definition3 = default(EntityRef<Definition>);
			this._Definition4 = default(EntityRef<Definition>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GsmID
		{
			get
			{
				return this._GsmID;
			}
			set
			{
				if ((this._GsmID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsmIDChanging(value);
					this.SendPropertyChanging();
					this._GsmID = value;
					this.SendPropertyChanged("GsmID");
					this.OnGsmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreastStatus", DbType="Bit")]
		public System.Nullable<bool> BreastStatus
		{
			get
			{
				return this._BreastStatus;
			}
			set
			{
				if ((this._BreastStatus != value))
				{
					this.OnBreastStatusChanging(value);
					this.SendPropertyChanging();
					this._BreastStatus = value;
					this.SendPropertyChanged("BreastStatus");
					this.OnBreastStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc", DbType="NVarChar(100)")]
		public string Doc
		{
			get
			{
				return this._Doc;
			}
			set
			{
				if ((this._Doc != value))
				{
					this.OnDocChanging(value);
					this.SendPropertyChanging();
					this._Doc = value;
					this.SendPropertyChanged("Doc");
					this.OnDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="NVarChar(10)")]
		public string TestDate
		{
			get
			{
				return this._TestDate;
			}
			set
			{
				if ((this._TestDate != value))
				{
					this.OnTestDateChanging(value);
					this.SendPropertyChanging();
					this._TestDate = value;
					this.SendPropertyChanged("TestDate");
					this.OnTestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlace", DbType="NVarChar(50)")]
		public string TestPlace
		{
			get
			{
				return this._TestPlace;
			}
			set
			{
				if ((this._TestPlace != value))
				{
					this.OnTestPlaceChanging(value);
					this.SendPropertyChanging();
					this._TestPlace = value;
					this.SendPropertyChanged("TestPlace");
					this.OnTestPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advise", DbType="NVarChar(300)")]
		public string Advise
		{
			get
			{
				return this._Advise;
			}
			set
			{
				if ((this._Advise != value))
				{
					this.OnAdviseChanging(value);
					this.SendPropertyChanging();
					this._Advise = value;
					this.SendPropertyChanged("Advise");
					this.OnAdviseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breast", DbType="Bit")]
		public System.Nullable<bool> Breast
		{
			get
			{
				return this._Breast;
			}
			set
			{
				if ((this._Breast != value))
				{
					this.OnBreastChanging(value);
					this.SendPropertyChanging();
					this._Breast = value;
					this.SendPropertyChanged("Breast");
					this.OnBreastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Asymmetric", DbType="Bit")]
		public System.Nullable<bool> Asymmetric
		{
			get
			{
				return this._Asymmetric;
			}
			set
			{
				if ((this._Asymmetric != value))
				{
					this.OnAsymmetricChanging(value);
					this.SendPropertyChanging();
					this._Asymmetric = value;
					this.SendPropertyChanged("Asymmetric");
					this.OnAsymmetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MassesStatus", DbType="Int")]
		public System.Nullable<int> MassesStatus
		{
			get
			{
				return this._MassesStatus;
			}
			set
			{
				if ((this._MassesStatus != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMassesStatusChanging(value);
					this.SendPropertyChanging();
					this._MassesStatus = value;
					this.SendPropertyChanged("MassesStatus");
					this.OnMassesStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calcification", DbType="Int")]
		public System.Nullable<int> Calcification
		{
			get
			{
				return this._Calcification;
			}
			set
			{
				if ((this._Calcification != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalcificationChanging(value);
					this.SendPropertyChanging();
					this._Calcification = value;
					this.SendPropertyChanged("Calcification");
					this.OnCalcificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferentialDiagnosis", DbType="Int")]
		public System.Nullable<int> DifferentialDiagnosis
		{
			get
			{
				return this._DifferentialDiagnosis;
			}
			set
			{
				if ((this._DifferentialDiagnosis != value))
				{
					if (this._Definition2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDifferentialDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._DifferentialDiagnosis = value;
					this.SendPropertyChanged("DifferentialDiagnosis");
					this.OnDifferentialDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texture", DbType="Int")]
		public System.Nullable<int> Texture
		{
			get
			{
				return this._Texture;
			}
			set
			{
				if ((this._Texture != value))
				{
					if (this._Definition3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTextureChanging(value);
					this.SendPropertyChanging();
					this._Texture = value;
					this.SendPropertyChanged("Texture");
					this.OnTextureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="Int")]
		public System.Nullable<int> Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					if (this._Definition4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="NVarChar(50)")]
		public string Dimensions
		{
			get
			{
				return this._Dimensions;
			}
			set
			{
				if ((this._Dimensions != value))
				{
					this.OnDimensionsChanging(value);
					this.SendPropertyChanging();
					this._Dimensions = value;
					this.SendPropertyChanged("Dimensions");
					this.OnDimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(50)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceComment", DbType="NVarChar(70)")]
		public string PlaceComment
		{
			get
			{
				return this._PlaceComment;
			}
			set
			{
				if ((this._PlaceComment != value))
				{
					this.OnPlaceCommentChanging(value);
					this.SendPropertyChanging();
					this._PlaceComment = value;
					this.SendPropertyChanged("PlaceComment");
					this.OnPlaceCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit")]
		public System.Nullable<bool> Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofEnd", DbType="NVarChar(10)")]
		public string DateofEnd
		{
			get
			{
				return this._DateofEnd;
			}
			set
			{
				if ((this._DateofEnd != value))
				{
					this.OnDateofEndChanging(value);
					this.SendPropertyChanging();
					this._DateofEnd = value;
					this.SendPropertyChanged("DateofEnd");
					this.OnDateofEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination", Storage="_Definition", ThisKey="MassesStatus", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.BreastExaminations.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.BreastExaminations.Add(this);
						this._MassesStatus = value.ID;
					}
					else
					{
						this._MassesStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination1", Storage="_Definition1", ThisKey="Calcification", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.BreastExaminations1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.BreastExaminations1.Add(this);
						this._Calcification = value.ID;
					}
					else
					{
						this._Calcification = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination2", Storage="_Definition2", ThisKey="DifferentialDiagnosis", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition2
		{
			get
			{
				return this._Definition2.Entity;
			}
			set
			{
				Definition previousValue = this._Definition2.Entity;
				if (((previousValue != value) 
							|| (this._Definition2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition2.Entity = null;
						previousValue.BreastExaminations2.Remove(this);
					}
					this._Definition2.Entity = value;
					if ((value != null))
					{
						value.BreastExaminations2.Add(this);
						this._DifferentialDiagnosis = value.ID;
					}
					else
					{
						this._DifferentialDiagnosis = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination3", Storage="_Definition3", ThisKey="Texture", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition3
		{
			get
			{
				return this._Definition3.Entity;
			}
			set
			{
				Definition previousValue = this._Definition3.Entity;
				if (((previousValue != value) 
							|| (this._Definition3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition3.Entity = null;
						previousValue.BreastExaminations3.Remove(this);
					}
					this._Definition3.Entity = value;
					if ((value != null))
					{
						value.BreastExaminations3.Add(this);
						this._Texture = value.ID;
					}
					else
					{
						this._Texture = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination4", Storage="_Definition4", ThisKey="Pattern", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition4
		{
			get
			{
				return this._Definition4.Entity;
			}
			set
			{
				Definition previousValue = this._Definition4.Entity;
				if (((previousValue != value) 
							|| (this._Definition4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition4.Entity = null;
						previousValue.BreastExaminations4.Remove(this);
					}
					this._Definition4.Entity = value;
					if ((value != null))
					{
						value.BreastExaminations4.Add(this);
						this._Pattern = value.ID;
					}
					else
					{
						this._Pattern = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BreastExamination", Storage="_GivenServiceM", ThisKey="GsmID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.BreastExaminations.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.BreastExaminations.Add(this);
						this._GsmID = value.ID;
					}
					else
					{
						this._GsmID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BreastVisit")]
	public partial class BreastVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Comment;
		
		private string _ChiefComplaint;
		
		private string _Ago;
		
		private System.Nullable<short> _Since;
		
		private string _AccompanyingDocument;
		
		private System.Nullable<bool> _RO;
		
		private System.Nullable<int> _IMP;
		
		private System.Nullable<int> _DDx1;
		
		private System.Nullable<int> _DDx2;
		
		private string _Organ;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<ICD10> _ICD10;
		
		private EntityRef<ICD10> _ICD101;
		
		private EntityRef<ICD10> _ICD102;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnChiefComplaintChanging(string value);
    partial void OnChiefComplaintChanged();
    partial void OnAgoChanging(string value);
    partial void OnAgoChanged();
    partial void OnSinceChanging(System.Nullable<short> value);
    partial void OnSinceChanged();
    partial void OnAccompanyingDocumentChanging(string value);
    partial void OnAccompanyingDocumentChanged();
    partial void OnROChanging(System.Nullable<bool> value);
    partial void OnROChanged();
    partial void OnIMPChanging(System.Nullable<int> value);
    partial void OnIMPChanged();
    partial void OnDDx1Changing(System.Nullable<int> value);
    partial void OnDDx1Changed();
    partial void OnDDx2Changing(System.Nullable<int> value);
    partial void OnDDx2Changed();
    partial void OnOrganChanging(string value);
    partial void OnOrganChanged();
    #endregion
		
		public BreastVisit()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._ICD10 = default(EntityRef<ICD10>);
			this._ICD101 = default(EntityRef<ICD10>);
			this._ICD102 = default(EntityRef<ICD10>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefComplaint", DbType="NVarChar(100)")]
		public string ChiefComplaint
		{
			get
			{
				return this._ChiefComplaint;
			}
			set
			{
				if ((this._ChiefComplaint != value))
				{
					this.OnChiefComplaintChanging(value);
					this.SendPropertyChanging();
					this._ChiefComplaint = value;
					this.SendPropertyChanged("ChiefComplaint");
					this.OnChiefComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NVarChar(10)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this.OnAgoChanging(value);
					this.SendPropertyChanging();
					this._Ago = value;
					this.SendPropertyChanged("Ago");
					this.OnAgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="SmallInt")]
		public System.Nullable<short> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this.OnSinceChanging(value);
					this.SendPropertyChanging();
					this._Since = value;
					this.SendPropertyChanged("Since");
					this.OnSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccompanyingDocument", DbType="NVarChar(MAX)")]
		public string AccompanyingDocument
		{
			get
			{
				return this._AccompanyingDocument;
			}
			set
			{
				if ((this._AccompanyingDocument != value))
				{
					this.OnAccompanyingDocumentChanging(value);
					this.SendPropertyChanging();
					this._AccompanyingDocument = value;
					this.SendPropertyChanged("AccompanyingDocument");
					this.OnAccompanyingDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RO", DbType="Bit")]
		public System.Nullable<bool> RO
		{
			get
			{
				return this._RO;
			}
			set
			{
				if ((this._RO != value))
				{
					this.OnROChanging(value);
					this.SendPropertyChanging();
					this._RO = value;
					this.SendPropertyChanged("RO");
					this.OnROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMP", DbType="Int")]
		public System.Nullable<int> IMP
		{
			get
			{
				return this._IMP;
			}
			set
			{
				if ((this._IMP != value))
				{
					if (this._ICD10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIMPChanging(value);
					this.SendPropertyChanging();
					this._IMP = value;
					this.SendPropertyChanged("IMP");
					this.OnIMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx1", DbType="Int")]
		public System.Nullable<int> DDx1
		{
			get
			{
				return this._DDx1;
			}
			set
			{
				if ((this._DDx1 != value))
				{
					if (this._ICD101.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx1Changing(value);
					this.SendPropertyChanging();
					this._DDx1 = value;
					this.SendPropertyChanged("DDx1");
					this.OnDDx1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx2", DbType="Int")]
		public System.Nullable<int> DDx2
		{
			get
			{
				return this._DDx2;
			}
			set
			{
				if ((this._DDx2 != value))
				{
					if (this._ICD102.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx2Changing(value);
					this.SendPropertyChanging();
					this._DDx2 = value;
					this.SendPropertyChanged("DDx2");
					this.OnDDx2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organ", DbType="NVarChar(100)")]
		public string Organ
		{
			get
			{
				return this._Organ;
			}
			set
			{
				if ((this._Organ != value))
				{
					this.OnOrganChanging(value);
					this.SendPropertyChanging();
					this._Organ = value;
					this.SendPropertyChanged("Organ");
					this.OnOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BreastVisit", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.BreastVisit = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.BreastVisit = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_BreastVisit", Storage="_ICD10", ThisKey="IMP", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD10
		{
			get
			{
				return this._ICD10.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD10.Entity;
				if (((previousValue != value) 
							|| (this._ICD10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD10.Entity = null;
						previousValue.BreastVisits.Remove(this);
					}
					this._ICD10.Entity = value;
					if ((value != null))
					{
						value.BreastVisits.Add(this);
						this._IMP = value.ID;
					}
					else
					{
						this._IMP = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_BreastVisit1", Storage="_ICD101", ThisKey="DDx1", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD101
		{
			get
			{
				return this._ICD101.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD101.Entity;
				if (((previousValue != value) 
							|| (this._ICD101.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD101.Entity = null;
						previousValue.BreastVisits1.Remove(this);
					}
					this._ICD101.Entity = value;
					if ((value != null))
					{
						value.BreastVisits1.Add(this);
						this._DDx1 = value.ID;
					}
					else
					{
						this._DDx1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD101");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_BreastVisit2", Storage="_ICD102", ThisKey="DDx2", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD102
		{
			get
			{
				return this._ICD102.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD102.Entity;
				if (((previousValue != value) 
							|| (this._ICD102.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD102.Entity = null;
						previousValue.BreastVisits2.Remove(this);
					}
					this._ICD102.Entity = value;
					if ((value != null))
					{
						value.BreastVisits2.Add(this);
						this._DDx2 = value.ID;
					}
					else
					{
						this._DDx2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD102");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientApp")]
	public partial class ClientApp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ClientID;
		
		private System.Guid _AppID;
		
		private bool _AllowPayment;
		
		private EntityRef<ClientConfig> _ClientConfig;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Guid value);
    partial void OnClientIDChanged();
    partial void OnAppIDChanging(System.Guid value);
    partial void OnAppIDChanged();
    partial void OnAllowPaymentChanging(bool value);
    partial void OnAllowPaymentChanged();
    #endregion
		
		public ClientApp()
		{
			this._ClientConfig = default(EntityRef<ClientConfig>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._ClientConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowPayment", DbType="Bit NOT NULL")]
		public bool AllowPayment
		{
			get
			{
				return this._AllowPayment;
			}
			set
			{
				if ((this._AllowPayment != value))
				{
					this.OnAllowPaymentChanging(value);
					this.SendPropertyChanging();
					this._AllowPayment = value;
					this.SendPropertyChanged("AllowPayment");
					this.OnAllowPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientConfig_ClientApp", Storage="_ClientConfig", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public ClientConfig ClientConfig
		{
			get
			{
				return this._ClientConfig.Entity;
			}
			set
			{
				ClientConfig previousValue = this._ClientConfig.Entity;
				if (((previousValue != value) 
							|| (this._ClientConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientConfig.Entity = null;
						previousValue.ClientApps.Remove(this);
					}
					this._ClientConfig.Entity = value;
					if ((value != null))
					{
						value.ClientApps.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(System.Guid);
					}
					this.SendPropertyChanged("ClientConfig");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientConfig")]
	public partial class ClientConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _ReportTitle;
		
		private System.Data.Linq.Binary _ReportImage;
		
		private bool _Active;
		
		private int _IDint;
		
		private EntitySet<ClientApp> _ClientApps;
		
		private EntitySet<Department> _Departments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReportTitleChanging(string value);
    partial void OnReportTitleChanged();
    partial void OnReportImageChanging(System.Data.Linq.Binary value);
    partial void OnReportImageChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public ClientConfig()
		{
			this._ClientApps = new EntitySet<ClientApp>(new Action<ClientApp>(this.attach_ClientApps), new Action<ClientApp>(this.detach_ClientApps));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTitle", DbType="NVarChar(300)")]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this.OnReportTitleChanging(value);
					this.SendPropertyChanging();
					this._ReportTitle = value;
					this.SendPropertyChanged("ReportTitle");
					this.OnReportTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportImage", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ReportImage
		{
			get
			{
				return this._ReportImage;
			}
			set
			{
				if ((this._ReportImage != value))
				{
					this.OnReportImageChanging(value);
					this.SendPropertyChanging();
					this._ReportImage = value;
					this.SendPropertyChanged("ReportImage");
					this.OnReportImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientConfig_ClientApp", Storage="_ClientApps", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<ClientApp> ClientApps
		{
			get
			{
				return this._ClientApps;
			}
			set
			{
				this._ClientApps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientConfig_Department", Storage="_Departments", ThisKey="ID", OtherKey="ClientID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientApps(ClientApp entity)
		{
			this.SendPropertyChanging();
			entity.ClientConfig = this;
		}
		
		private void detach_ClientApps(ClientApp entity)
		{
			this.SendPropertyChanging();
			entity.ClientConfig = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.ClientConfig = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.ClientConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommentAndRequest")]
	public partial class CommentAndRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _ApplicationName;
		
		private string _Description;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _tel;
		
		private string _CreatorUsername;
		
		private string _Answer;
		
		private System.Nullable<bool> _AnswerBit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnCreatorUsernameChanging(string value);
    partial void OnCreatorUsernameChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnAnswerBitChanging(System.Nullable<bool> value);
    partial void OnAnswerBitChanged();
    #endregion
		
		public CommentAndRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(100)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(50)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUsername", DbType="NVarChar(100)")]
		public string CreatorUsername
		{
			get
			{
				return this._CreatorUsername;
			}
			set
			{
				if ((this._CreatorUsername != value))
				{
					this.OnCreatorUsernameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUsername = value;
					this.SendPropertyChanged("CreatorUsername");
					this.OnCreatorUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(MAX)")]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerBit", DbType="Bit")]
		public System.Nullable<bool> AnswerBit
		{
			get
			{
				return this._AnswerBit;
			}
			set
			{
				if ((this._AnswerBit != value))
				{
					this.OnAnswerBitChanging(value);
					this.SendPropertyChanging();
					this._AnswerBit = value;
					this.SendPropertyChanged("AnswerBit");
					this.OnAnswerBitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CompanyName;
		
		private string _Responsible;
		
		private string _ResponsibleMobail;
		
		private string _Adreess;
		
		private string _Tel;
		
		private string _PostalCode;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationTime;
		
		private string _LastModificationDate;
		
		private string _Number;
		
		private EntitySet<FactorM> _FactorMs;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnResponsibleChanging(string value);
    partial void OnResponsibleChanged();
    partial void OnResponsibleMobailChanging(string value);
    partial void OnResponsibleMobailChanged();
    partial void OnAdreessChanging(string value);
    partial void OnAdreessChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public Company()
		{
			this._FactorMs = new EntitySet<FactorM>(new Action<FactorM>(this.attach_FactorMs), new Action<FactorM>(this.detach_FactorMs));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(50)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this.OnResponsibleChanging(value);
					this.SendPropertyChanging();
					this._Responsible = value;
					this.SendPropertyChanged("Responsible");
					this.OnResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleMobail", DbType="NVarChar(50)")]
		public string ResponsibleMobail
		{
			get
			{
				return this._ResponsibleMobail;
			}
			set
			{
				if ((this._ResponsibleMobail != value))
				{
					this.OnResponsibleMobailChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleMobail = value;
					this.SendPropertyChanged("ResponsibleMobail");
					this.OnResponsibleMobailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adreess", DbType="NVarChar(200)")]
		public string Adreess
		{
			get
			{
				return this._Adreess;
			}
			set
			{
				if ((this._Adreess != value))
				{
					this.OnAdreessChanging(value);
					this.SendPropertyChanging();
					this._Adreess = value;
					this.SendPropertyChanged("Adreess");
					this.OnAdreessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(25)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_FactorM", Storage="_FactorMs", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<FactorM> FactorMs
		{
			get
			{
				return this._FactorMs;
			}
			set
			{
				this._FactorMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Order", Storage="_Orders", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComplicationsBB")]
	public partial class ComplicationsBB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private bool _G1n1c1;
		
		private bool _G1n1c2;
		
		private bool _G1n1c3;
		
		private bool _G1n1c4;
		
		private bool _G1n1c5;
		
		private bool _G1n1c6;
		
		private bool _G1n1c7;
		
		private string _G1n1TypeSurgery;
		
		private string _G1n1Other;
		
		private bool _G1n2c1;
		
		private bool _G1n2c2;
		
		private bool _G1n2c3;
		
		private bool _G1n2c4;
		
		private bool _G1n2c5;
		
		private bool _G1n2c6;
		
		private bool _G1n2c7;
		
		private bool _G1n2c8;
		
		private bool _G1n2c9;
		
		private bool _G1n2c10;
		
		private bool _G1n2c11;
		
		private bool _G1n2c12;
		
		private bool _G1n3c1;
		
		private bool _G1n3c2;
		
		private bool _G1n3c3;
		
		private bool _G1n3c4;
		
		private bool _G1n3c5;
		
		private string _G1Description;
		
		private string _G2TypeProduct;
		
		private string _G2n1t1;
		
		private string _G2n1t2;
		
		private string _G2n1t3;
		
		private string _G2n1t4;
		
		private string _G2n1t5;
		
		private string _G2n1t6;
		
		private string _G2n1t7;
		
		private string _G2n1t8;
		
		private string _G2n1t9;
		
		private string _G2n1t10;
		
		private bool _G2n1c1;
		
		private bool _G2n1c2;
		
		private bool _G2n1c3;
		
		private bool _G2n1c4;
		
		private bool _G2n1c5;
		
		private bool _G2n1c6;
		
		private bool _G2n1c7;
		
		private bool _G2n1c8;
		
		private bool _G2n1c9;
		
		private string _G2n1Description;
		
		private bool _G2n2RBCc1;
		
		private bool _G2n2RBCc2;
		
		private bool _G2n2RBCc3;
		
		private bool _G2n2RBCc4;
		
		private bool _G2n2RBCc5;
		
		private bool _G2n2RBCc6;
		
		private bool _G2n2RBCc7;
		
		private bool _G2n2RBCc8;
		
		private bool _G2n2RBCc9;
		
		private bool _G2n2RBCc10;
		
		private bool _G2n2RBCc11;
		
		private bool _G2n2RBCc12;
		
		private bool _G2n2PLTc1;
		
		private bool _G2n2PLTc2;
		
		private bool _G2n2PLTc3;
		
		private bool _G2n2PLTc4;
		
		private bool _G2n2PLTc5;
		
		private bool _G2n2PLTc6;
		
		private string _G2n2Description;
		
		private string _G3Bt1;
		
		private string _G3Bt2;
		
		private string _G3Bt3;
		
		private string _G3Bt4;
		
		private string _G3At1;
		
		private string _G3At2;
		
		private string _G3At3;
		
		private string _G3At4;
		
		private bool _G3c1;
		
		private bool _G3c2;
		
		private bool _G3c3;
		
		private bool _G3c4;
		
		private bool _G3c5;
		
		private bool _G3c6;
		
		private bool _G3c7;
		
		private bool _G3c8;
		
		private bool _G3c9;
		
		private bool _G3c10;
		
		private bool _G3c11;
		
		private bool _G3c12;
		
		private bool _G3c13;
		
		private bool _G3c14;
		
		private bool _G3c15;
		
		private bool _G3c16;
		
		private bool _G3c17;
		
		private bool _G3c18;
		
		private bool _G3c19;
		
		private bool _G3c20;
		
		private bool _G3c21;
		
		private bool _G3c22;
		
		private bool _G3c23;
		
		private bool _G3c24;
		
		private bool _G3c25;
		
		private string _G3Other;
		
		private bool _G4c1;
		
		private bool _G4c2;
		
		private bool _G4c3;
		
		private string _G4Other;
		
		private string _G4Description;
		
		private string _G5Bt1;
		
		private string _G5Bt2;
		
		private string _G5Bt3;
		
		private string _G5Bt4;
		
		private string _G5At1;
		
		private string _G5At2;
		
		private string _G5At3;
		
		private string _G5At4;
		
		private string _G5t1;
		
		private string _G5t2;
		
		private string _G5t3;
		
		private string _G5t4;
		
		private string _G5t5;
		
		private string _G5t6;
		
		private bool _G6c1;
		
		private bool _G6c2;
		
		private bool _G6c3;
		
		private bool _G6c4;
		
		private bool _G6c5;
		
		private bool _G6c6;
		
		private bool _G6c7;
		
		private bool _G6c8;
		
		private bool _G6c9;
		
		private bool _G6c10;
		
		private bool _G6c11;
		
		private bool _G6c12;
		
		private bool _G6c13;
		
		private bool _G6c14;
		
		private bool _G6c15;
		
		private bool _G6c16;
		
		private bool _G6c17;
		
		private bool _G6c18;
		
		private bool _G6c19;
		
		private bool _G6c20;
		
		private bool _G6c21;
		
		private bool _G6c22;
		
		private bool _G6c23;
		
		private bool _G6c24;
		
		private bool _G6c25;
		
		private bool _G6c26;
		
		private bool _G6c27;
		
		private bool _G6c28;
		
		private string _G6Description;
		
		private bool _G7c1;
		
		private bool _G7c2;
		
		private bool _G7c3;
		
		private bool _G7c4;
		
		private string _G7Description;
		
		private bool _G8c1;
		
		private bool _G8c2;
		
		private bool _G8c3;
		
		private bool _G8c4;
		
		private bool _G8c5;
		
		private bool _G8c6;
		
		private bool _G8c7;
		
		private bool _G8c8;
		
		private bool _G8c9;
		
		private bool _G8c10;
		
		private bool _G8c11;
		
		private bool _G8c12;
		
		private string _G8Description;
		
		private bool _G9c1;
		
		private bool _G9c2;
		
		private bool _G9c3;
		
		private bool _G9c4;
		
		private bool _G9c5;
		
		private bool _G9c6;
		
		private bool _G9c7;
		
		private bool _G9c8;
		
		private bool _G9c9;
		
		private bool _G10c1;
		
		private bool _G10c2;
		
		private bool _G10c3;
		
		private string _G10t1;
		
		private string _G10t2;
		
		private string _G10t3;
		
		private string _G10t4;
		
		private string _G10t5;
		
		private string _G11t1;
		
		private string _G11t2;
		
		private string _G11t3;
		
		private string _G11t4;
		
		private string _G11t5;
		
		private EntityRef<Dossier> _Dossier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnG1n1c1Changing(bool value);
    partial void OnG1n1c1Changed();
    partial void OnG1n1c2Changing(bool value);
    partial void OnG1n1c2Changed();
    partial void OnG1n1c3Changing(bool value);
    partial void OnG1n1c3Changed();
    partial void OnG1n1c4Changing(bool value);
    partial void OnG1n1c4Changed();
    partial void OnG1n1c5Changing(bool value);
    partial void OnG1n1c5Changed();
    partial void OnG1n1c6Changing(bool value);
    partial void OnG1n1c6Changed();
    partial void OnG1n1c7Changing(bool value);
    partial void OnG1n1c7Changed();
    partial void OnG1n1TypeSurgeryChanging(string value);
    partial void OnG1n1TypeSurgeryChanged();
    partial void OnG1n1OtherChanging(string value);
    partial void OnG1n1OtherChanged();
    partial void OnG1n2c1Changing(bool value);
    partial void OnG1n2c1Changed();
    partial void OnG1n2c2Changing(bool value);
    partial void OnG1n2c2Changed();
    partial void OnG1n2c3Changing(bool value);
    partial void OnG1n2c3Changed();
    partial void OnG1n2c4Changing(bool value);
    partial void OnG1n2c4Changed();
    partial void OnG1n2c5Changing(bool value);
    partial void OnG1n2c5Changed();
    partial void OnG1n2c6Changing(bool value);
    partial void OnG1n2c6Changed();
    partial void OnG1n2c7Changing(bool value);
    partial void OnG1n2c7Changed();
    partial void OnG1n2c8Changing(bool value);
    partial void OnG1n2c8Changed();
    partial void OnG1n2c9Changing(bool value);
    partial void OnG1n2c9Changed();
    partial void OnG1n2c10Changing(bool value);
    partial void OnG1n2c10Changed();
    partial void OnG1n2c11Changing(bool value);
    partial void OnG1n2c11Changed();
    partial void OnG1n2c12Changing(bool value);
    partial void OnG1n2c12Changed();
    partial void OnG1n3c1Changing(bool value);
    partial void OnG1n3c1Changed();
    partial void OnG1n3c2Changing(bool value);
    partial void OnG1n3c2Changed();
    partial void OnG1n3c3Changing(bool value);
    partial void OnG1n3c3Changed();
    partial void OnG1n3c4Changing(bool value);
    partial void OnG1n3c4Changed();
    partial void OnG1n3c5Changing(bool value);
    partial void OnG1n3c5Changed();
    partial void OnG1DescriptionChanging(string value);
    partial void OnG1DescriptionChanged();
    partial void OnG2TypeProductChanging(string value);
    partial void OnG2TypeProductChanged();
    partial void OnG2n1t1Changing(string value);
    partial void OnG2n1t1Changed();
    partial void OnG2n1t2Changing(string value);
    partial void OnG2n1t2Changed();
    partial void OnG2n1t3Changing(string value);
    partial void OnG2n1t3Changed();
    partial void OnG2n1t4Changing(string value);
    partial void OnG2n1t4Changed();
    partial void OnG2n1t5Changing(string value);
    partial void OnG2n1t5Changed();
    partial void OnG2n1t6Changing(string value);
    partial void OnG2n1t6Changed();
    partial void OnG2n1t7Changing(string value);
    partial void OnG2n1t7Changed();
    partial void OnG2n1t8Changing(string value);
    partial void OnG2n1t8Changed();
    partial void OnG2n1t9Changing(string value);
    partial void OnG2n1t9Changed();
    partial void OnG2n1t10Changing(string value);
    partial void OnG2n1t10Changed();
    partial void OnG2n1c1Changing(bool value);
    partial void OnG2n1c1Changed();
    partial void OnG2n1c2Changing(bool value);
    partial void OnG2n1c2Changed();
    partial void OnG2n1c3Changing(bool value);
    partial void OnG2n1c3Changed();
    partial void OnG2n1c4Changing(bool value);
    partial void OnG2n1c4Changed();
    partial void OnG2n1c5Changing(bool value);
    partial void OnG2n1c5Changed();
    partial void OnG2n1c6Changing(bool value);
    partial void OnG2n1c6Changed();
    partial void OnG2n1c7Changing(bool value);
    partial void OnG2n1c7Changed();
    partial void OnG2n1c8Changing(bool value);
    partial void OnG2n1c8Changed();
    partial void OnG2n1c9Changing(bool value);
    partial void OnG2n1c9Changed();
    partial void OnG2n1DescriptionChanging(string value);
    partial void OnG2n1DescriptionChanged();
    partial void OnG2n2RBCc1Changing(bool value);
    partial void OnG2n2RBCc1Changed();
    partial void OnG2n2RBCc2Changing(bool value);
    partial void OnG2n2RBCc2Changed();
    partial void OnG2n2RBCc3Changing(bool value);
    partial void OnG2n2RBCc3Changed();
    partial void OnG2n2RBCc4Changing(bool value);
    partial void OnG2n2RBCc4Changed();
    partial void OnG2n2RBCc5Changing(bool value);
    partial void OnG2n2RBCc5Changed();
    partial void OnG2n2RBCc6Changing(bool value);
    partial void OnG2n2RBCc6Changed();
    partial void OnG2n2RBCc7Changing(bool value);
    partial void OnG2n2RBCc7Changed();
    partial void OnG2n2RBCc8Changing(bool value);
    partial void OnG2n2RBCc8Changed();
    partial void OnG2n2RBCc9Changing(bool value);
    partial void OnG2n2RBCc9Changed();
    partial void OnG2n2RBCc10Changing(bool value);
    partial void OnG2n2RBCc10Changed();
    partial void OnG2n2RBCc11Changing(bool value);
    partial void OnG2n2RBCc11Changed();
    partial void OnG2n2RBCc12Changing(bool value);
    partial void OnG2n2RBCc12Changed();
    partial void OnG2n2PLTc1Changing(bool value);
    partial void OnG2n2PLTc1Changed();
    partial void OnG2n2PLTc2Changing(bool value);
    partial void OnG2n2PLTc2Changed();
    partial void OnG2n2PLTc3Changing(bool value);
    partial void OnG2n2PLTc3Changed();
    partial void OnG2n2PLTc4Changing(bool value);
    partial void OnG2n2PLTc4Changed();
    partial void OnG2n2PLTc5Changing(bool value);
    partial void OnG2n2PLTc5Changed();
    partial void OnG2n2PLTc6Changing(bool value);
    partial void OnG2n2PLTc6Changed();
    partial void OnG2n2DescriptionChanging(string value);
    partial void OnG2n2DescriptionChanged();
    partial void OnG3Bt1Changing(string value);
    partial void OnG3Bt1Changed();
    partial void OnG3Bt2Changing(string value);
    partial void OnG3Bt2Changed();
    partial void OnG3Bt3Changing(string value);
    partial void OnG3Bt3Changed();
    partial void OnG3Bt4Changing(string value);
    partial void OnG3Bt4Changed();
    partial void OnG3At1Changing(string value);
    partial void OnG3At1Changed();
    partial void OnG3At2Changing(string value);
    partial void OnG3At2Changed();
    partial void OnG3At3Changing(string value);
    partial void OnG3At3Changed();
    partial void OnG3At4Changing(string value);
    partial void OnG3At4Changed();
    partial void OnG3c1Changing(bool value);
    partial void OnG3c1Changed();
    partial void OnG3c2Changing(bool value);
    partial void OnG3c2Changed();
    partial void OnG3c3Changing(bool value);
    partial void OnG3c3Changed();
    partial void OnG3c4Changing(bool value);
    partial void OnG3c4Changed();
    partial void OnG3c5Changing(bool value);
    partial void OnG3c5Changed();
    partial void OnG3c6Changing(bool value);
    partial void OnG3c6Changed();
    partial void OnG3c7Changing(bool value);
    partial void OnG3c7Changed();
    partial void OnG3c8Changing(bool value);
    partial void OnG3c8Changed();
    partial void OnG3c9Changing(bool value);
    partial void OnG3c9Changed();
    partial void OnG3c10Changing(bool value);
    partial void OnG3c10Changed();
    partial void OnG3c11Changing(bool value);
    partial void OnG3c11Changed();
    partial void OnG3c12Changing(bool value);
    partial void OnG3c12Changed();
    partial void OnG3c13Changing(bool value);
    partial void OnG3c13Changed();
    partial void OnG3c14Changing(bool value);
    partial void OnG3c14Changed();
    partial void OnG3c15Changing(bool value);
    partial void OnG3c15Changed();
    partial void OnG3c16Changing(bool value);
    partial void OnG3c16Changed();
    partial void OnG3c17Changing(bool value);
    partial void OnG3c17Changed();
    partial void OnG3c18Changing(bool value);
    partial void OnG3c18Changed();
    partial void OnG3c19Changing(bool value);
    partial void OnG3c19Changed();
    partial void OnG3c20Changing(bool value);
    partial void OnG3c20Changed();
    partial void OnG3c21Changing(bool value);
    partial void OnG3c21Changed();
    partial void OnG3c22Changing(bool value);
    partial void OnG3c22Changed();
    partial void OnG3c23Changing(bool value);
    partial void OnG3c23Changed();
    partial void OnG3c24Changing(bool value);
    partial void OnG3c24Changed();
    partial void OnG3c25Changing(bool value);
    partial void OnG3c25Changed();
    partial void OnG3OtherChanging(string value);
    partial void OnG3OtherChanged();
    partial void OnG4c1Changing(bool value);
    partial void OnG4c1Changed();
    partial void OnG4c2Changing(bool value);
    partial void OnG4c2Changed();
    partial void OnG4c3Changing(bool value);
    partial void OnG4c3Changed();
    partial void OnG4OtherChanging(string value);
    partial void OnG4OtherChanged();
    partial void OnG4DescriptionChanging(string value);
    partial void OnG4DescriptionChanged();
    partial void OnG5Bt1Changing(string value);
    partial void OnG5Bt1Changed();
    partial void OnG5Bt2Changing(string value);
    partial void OnG5Bt2Changed();
    partial void OnG5Bt3Changing(string value);
    partial void OnG5Bt3Changed();
    partial void OnG5Bt4Changing(string value);
    partial void OnG5Bt4Changed();
    partial void OnG5At1Changing(string value);
    partial void OnG5At1Changed();
    partial void OnG5At2Changing(string value);
    partial void OnG5At2Changed();
    partial void OnG5At3Changing(string value);
    partial void OnG5At3Changed();
    partial void OnG5At4Changing(string value);
    partial void OnG5At4Changed();
    partial void OnG5t1Changing(string value);
    partial void OnG5t1Changed();
    partial void OnG5t2Changing(string value);
    partial void OnG5t2Changed();
    partial void OnG5t3Changing(string value);
    partial void OnG5t3Changed();
    partial void OnG5t4Changing(string value);
    partial void OnG5t4Changed();
    partial void OnG5t5Changing(string value);
    partial void OnG5t5Changed();
    partial void OnG5t6Changing(string value);
    partial void OnG5t6Changed();
    partial void OnG6c1Changing(bool value);
    partial void OnG6c1Changed();
    partial void OnG6c2Changing(bool value);
    partial void OnG6c2Changed();
    partial void OnG6c3Changing(bool value);
    partial void OnG6c3Changed();
    partial void OnG6c4Changing(bool value);
    partial void OnG6c4Changed();
    partial void OnG6c5Changing(bool value);
    partial void OnG6c5Changed();
    partial void OnG6c6Changing(bool value);
    partial void OnG6c6Changed();
    partial void OnG6c7Changing(bool value);
    partial void OnG6c7Changed();
    partial void OnG6c8Changing(bool value);
    partial void OnG6c8Changed();
    partial void OnG6c9Changing(bool value);
    partial void OnG6c9Changed();
    partial void OnG6c10Changing(bool value);
    partial void OnG6c10Changed();
    partial void OnG6c11Changing(bool value);
    partial void OnG6c11Changed();
    partial void OnG6c12Changing(bool value);
    partial void OnG6c12Changed();
    partial void OnG6c13Changing(bool value);
    partial void OnG6c13Changed();
    partial void OnG6c14Changing(bool value);
    partial void OnG6c14Changed();
    partial void OnG6c15Changing(bool value);
    partial void OnG6c15Changed();
    partial void OnG6c16Changing(bool value);
    partial void OnG6c16Changed();
    partial void OnG6c17Changing(bool value);
    partial void OnG6c17Changed();
    partial void OnG6c18Changing(bool value);
    partial void OnG6c18Changed();
    partial void OnG6c19Changing(bool value);
    partial void OnG6c19Changed();
    partial void OnG6c20Changing(bool value);
    partial void OnG6c20Changed();
    partial void OnG6c21Changing(bool value);
    partial void OnG6c21Changed();
    partial void OnG6c22Changing(bool value);
    partial void OnG6c22Changed();
    partial void OnG6c23Changing(bool value);
    partial void OnG6c23Changed();
    partial void OnG6c24Changing(bool value);
    partial void OnG6c24Changed();
    partial void OnG6c25Changing(bool value);
    partial void OnG6c25Changed();
    partial void OnG6c26Changing(bool value);
    partial void OnG6c26Changed();
    partial void OnG6c27Changing(bool value);
    partial void OnG6c27Changed();
    partial void OnG6c28Changing(bool value);
    partial void OnG6c28Changed();
    partial void OnG6DescriptionChanging(string value);
    partial void OnG6DescriptionChanged();
    partial void OnG7c1Changing(bool value);
    partial void OnG7c1Changed();
    partial void OnG7c2Changing(bool value);
    partial void OnG7c2Changed();
    partial void OnG7c3Changing(bool value);
    partial void OnG7c3Changed();
    partial void OnG7c4Changing(bool value);
    partial void OnG7c4Changed();
    partial void OnG7DescriptionChanging(string value);
    partial void OnG7DescriptionChanged();
    partial void OnG8c1Changing(bool value);
    partial void OnG8c1Changed();
    partial void OnG8c2Changing(bool value);
    partial void OnG8c2Changed();
    partial void OnG8c3Changing(bool value);
    partial void OnG8c3Changed();
    partial void OnG8c4Changing(bool value);
    partial void OnG8c4Changed();
    partial void OnG8c5Changing(bool value);
    partial void OnG8c5Changed();
    partial void OnG8c6Changing(bool value);
    partial void OnG8c6Changed();
    partial void OnG8c7Changing(bool value);
    partial void OnG8c7Changed();
    partial void OnG8c8Changing(bool value);
    partial void OnG8c8Changed();
    partial void OnG8c9Changing(bool value);
    partial void OnG8c9Changed();
    partial void OnG8c10Changing(bool value);
    partial void OnG8c10Changed();
    partial void OnG8c11Changing(bool value);
    partial void OnG8c11Changed();
    partial void OnG8c12Changing(bool value);
    partial void OnG8c12Changed();
    partial void OnG8DescriptionChanging(string value);
    partial void OnG8DescriptionChanged();
    partial void OnG9c1Changing(bool value);
    partial void OnG9c1Changed();
    partial void OnG9c2Changing(bool value);
    partial void OnG9c2Changed();
    partial void OnG9c3Changing(bool value);
    partial void OnG9c3Changed();
    partial void OnG9c4Changing(bool value);
    partial void OnG9c4Changed();
    partial void OnG9c5Changing(bool value);
    partial void OnG9c5Changed();
    partial void OnG9c6Changing(bool value);
    partial void OnG9c6Changed();
    partial void OnG9c7Changing(bool value);
    partial void OnG9c7Changed();
    partial void OnG9c8Changing(bool value);
    partial void OnG9c8Changed();
    partial void OnG9c9Changing(bool value);
    partial void OnG9c9Changed();
    partial void OnG10c1Changing(bool value);
    partial void OnG10c1Changed();
    partial void OnG10c2Changing(bool value);
    partial void OnG10c2Changed();
    partial void OnG10c3Changing(bool value);
    partial void OnG10c3Changed();
    partial void OnG10t1Changing(string value);
    partial void OnG10t1Changed();
    partial void OnG10t2Changing(string value);
    partial void OnG10t2Changed();
    partial void OnG10t3Changing(string value);
    partial void OnG10t3Changed();
    partial void OnG10t4Changing(string value);
    partial void OnG10t4Changed();
    partial void OnG10t5Changing(string value);
    partial void OnG10t5Changed();
    partial void OnG11t1Changing(string value);
    partial void OnG11t1Changed();
    partial void OnG11t2Changing(string value);
    partial void OnG11t2Changed();
    partial void OnG11t3Changing(string value);
    partial void OnG11t3Changed();
    partial void OnG11t4Changing(string value);
    partial void OnG11t4Changed();
    partial void OnG11t5Changing(string value);
    partial void OnG11t5Changed();
    #endregion
		
		public ComplicationsBB()
		{
			this._Dossier = default(EntityRef<Dossier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c1", DbType="Bit NOT NULL")]
		public bool G1n1c1
		{
			get
			{
				return this._G1n1c1;
			}
			set
			{
				if ((this._G1n1c1 != value))
				{
					this.OnG1n1c1Changing(value);
					this.SendPropertyChanging();
					this._G1n1c1 = value;
					this.SendPropertyChanged("G1n1c1");
					this.OnG1n1c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c2", DbType="Bit NOT NULL")]
		public bool G1n1c2
		{
			get
			{
				return this._G1n1c2;
			}
			set
			{
				if ((this._G1n1c2 != value))
				{
					this.OnG1n1c2Changing(value);
					this.SendPropertyChanging();
					this._G1n1c2 = value;
					this.SendPropertyChanged("G1n1c2");
					this.OnG1n1c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c3", DbType="Bit NOT NULL")]
		public bool G1n1c3
		{
			get
			{
				return this._G1n1c3;
			}
			set
			{
				if ((this._G1n1c3 != value))
				{
					this.OnG1n1c3Changing(value);
					this.SendPropertyChanging();
					this._G1n1c3 = value;
					this.SendPropertyChanged("G1n1c3");
					this.OnG1n1c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c4", DbType="Bit NOT NULL")]
		public bool G1n1c4
		{
			get
			{
				return this._G1n1c4;
			}
			set
			{
				if ((this._G1n1c4 != value))
				{
					this.OnG1n1c4Changing(value);
					this.SendPropertyChanging();
					this._G1n1c4 = value;
					this.SendPropertyChanged("G1n1c4");
					this.OnG1n1c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c5", DbType="Bit NOT NULL")]
		public bool G1n1c5
		{
			get
			{
				return this._G1n1c5;
			}
			set
			{
				if ((this._G1n1c5 != value))
				{
					this.OnG1n1c5Changing(value);
					this.SendPropertyChanging();
					this._G1n1c5 = value;
					this.SendPropertyChanged("G1n1c5");
					this.OnG1n1c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c6", DbType="Bit NOT NULL")]
		public bool G1n1c6
		{
			get
			{
				return this._G1n1c6;
			}
			set
			{
				if ((this._G1n1c6 != value))
				{
					this.OnG1n1c6Changing(value);
					this.SendPropertyChanging();
					this._G1n1c6 = value;
					this.SendPropertyChanged("G1n1c6");
					this.OnG1n1c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1c7", DbType="Bit NOT NULL")]
		public bool G1n1c7
		{
			get
			{
				return this._G1n1c7;
			}
			set
			{
				if ((this._G1n1c7 != value))
				{
					this.OnG1n1c7Changing(value);
					this.SendPropertyChanging();
					this._G1n1c7 = value;
					this.SendPropertyChanged("G1n1c7");
					this.OnG1n1c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1TypeSurgery", DbType="NVarChar(50)")]
		public string G1n1TypeSurgery
		{
			get
			{
				return this._G1n1TypeSurgery;
			}
			set
			{
				if ((this._G1n1TypeSurgery != value))
				{
					this.OnG1n1TypeSurgeryChanging(value);
					this.SendPropertyChanging();
					this._G1n1TypeSurgery = value;
					this.SendPropertyChanged("G1n1TypeSurgery");
					this.OnG1n1TypeSurgeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n1Other", DbType="NVarChar(50)")]
		public string G1n1Other
		{
			get
			{
				return this._G1n1Other;
			}
			set
			{
				if ((this._G1n1Other != value))
				{
					this.OnG1n1OtherChanging(value);
					this.SendPropertyChanging();
					this._G1n1Other = value;
					this.SendPropertyChanged("G1n1Other");
					this.OnG1n1OtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c1", DbType="Bit NOT NULL")]
		public bool G1n2c1
		{
			get
			{
				return this._G1n2c1;
			}
			set
			{
				if ((this._G1n2c1 != value))
				{
					this.OnG1n2c1Changing(value);
					this.SendPropertyChanging();
					this._G1n2c1 = value;
					this.SendPropertyChanged("G1n2c1");
					this.OnG1n2c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c2", DbType="Bit NOT NULL")]
		public bool G1n2c2
		{
			get
			{
				return this._G1n2c2;
			}
			set
			{
				if ((this._G1n2c2 != value))
				{
					this.OnG1n2c2Changing(value);
					this.SendPropertyChanging();
					this._G1n2c2 = value;
					this.SendPropertyChanged("G1n2c2");
					this.OnG1n2c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c3", DbType="Bit NOT NULL")]
		public bool G1n2c3
		{
			get
			{
				return this._G1n2c3;
			}
			set
			{
				if ((this._G1n2c3 != value))
				{
					this.OnG1n2c3Changing(value);
					this.SendPropertyChanging();
					this._G1n2c3 = value;
					this.SendPropertyChanged("G1n2c3");
					this.OnG1n2c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c4", DbType="Bit NOT NULL")]
		public bool G1n2c4
		{
			get
			{
				return this._G1n2c4;
			}
			set
			{
				if ((this._G1n2c4 != value))
				{
					this.OnG1n2c4Changing(value);
					this.SendPropertyChanging();
					this._G1n2c4 = value;
					this.SendPropertyChanged("G1n2c4");
					this.OnG1n2c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c5", DbType="Bit NOT NULL")]
		public bool G1n2c5
		{
			get
			{
				return this._G1n2c5;
			}
			set
			{
				if ((this._G1n2c5 != value))
				{
					this.OnG1n2c5Changing(value);
					this.SendPropertyChanging();
					this._G1n2c5 = value;
					this.SendPropertyChanged("G1n2c5");
					this.OnG1n2c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c6", DbType="Bit NOT NULL")]
		public bool G1n2c6
		{
			get
			{
				return this._G1n2c6;
			}
			set
			{
				if ((this._G1n2c6 != value))
				{
					this.OnG1n2c6Changing(value);
					this.SendPropertyChanging();
					this._G1n2c6 = value;
					this.SendPropertyChanged("G1n2c6");
					this.OnG1n2c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c7", DbType="Bit NOT NULL")]
		public bool G1n2c7
		{
			get
			{
				return this._G1n2c7;
			}
			set
			{
				if ((this._G1n2c7 != value))
				{
					this.OnG1n2c7Changing(value);
					this.SendPropertyChanging();
					this._G1n2c7 = value;
					this.SendPropertyChanged("G1n2c7");
					this.OnG1n2c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c8", DbType="Bit NOT NULL")]
		public bool G1n2c8
		{
			get
			{
				return this._G1n2c8;
			}
			set
			{
				if ((this._G1n2c8 != value))
				{
					this.OnG1n2c8Changing(value);
					this.SendPropertyChanging();
					this._G1n2c8 = value;
					this.SendPropertyChanged("G1n2c8");
					this.OnG1n2c8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c9", DbType="Bit NOT NULL")]
		public bool G1n2c9
		{
			get
			{
				return this._G1n2c9;
			}
			set
			{
				if ((this._G1n2c9 != value))
				{
					this.OnG1n2c9Changing(value);
					this.SendPropertyChanging();
					this._G1n2c9 = value;
					this.SendPropertyChanged("G1n2c9");
					this.OnG1n2c9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c10", DbType="Bit NOT NULL")]
		public bool G1n2c10
		{
			get
			{
				return this._G1n2c10;
			}
			set
			{
				if ((this._G1n2c10 != value))
				{
					this.OnG1n2c10Changing(value);
					this.SendPropertyChanging();
					this._G1n2c10 = value;
					this.SendPropertyChanged("G1n2c10");
					this.OnG1n2c10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c11", DbType="Bit NOT NULL")]
		public bool G1n2c11
		{
			get
			{
				return this._G1n2c11;
			}
			set
			{
				if ((this._G1n2c11 != value))
				{
					this.OnG1n2c11Changing(value);
					this.SendPropertyChanging();
					this._G1n2c11 = value;
					this.SendPropertyChanged("G1n2c11");
					this.OnG1n2c11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n2c12", DbType="Bit NOT NULL")]
		public bool G1n2c12
		{
			get
			{
				return this._G1n2c12;
			}
			set
			{
				if ((this._G1n2c12 != value))
				{
					this.OnG1n2c12Changing(value);
					this.SendPropertyChanging();
					this._G1n2c12 = value;
					this.SendPropertyChanged("G1n2c12");
					this.OnG1n2c12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n3c1", DbType="Bit NOT NULL")]
		public bool G1n3c1
		{
			get
			{
				return this._G1n3c1;
			}
			set
			{
				if ((this._G1n3c1 != value))
				{
					this.OnG1n3c1Changing(value);
					this.SendPropertyChanging();
					this._G1n3c1 = value;
					this.SendPropertyChanged("G1n3c1");
					this.OnG1n3c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n3c2", DbType="Bit NOT NULL")]
		public bool G1n3c2
		{
			get
			{
				return this._G1n3c2;
			}
			set
			{
				if ((this._G1n3c2 != value))
				{
					this.OnG1n3c2Changing(value);
					this.SendPropertyChanging();
					this._G1n3c2 = value;
					this.SendPropertyChanged("G1n3c2");
					this.OnG1n3c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n3c3", DbType="Bit NOT NULL")]
		public bool G1n3c3
		{
			get
			{
				return this._G1n3c3;
			}
			set
			{
				if ((this._G1n3c3 != value))
				{
					this.OnG1n3c3Changing(value);
					this.SendPropertyChanging();
					this._G1n3c3 = value;
					this.SendPropertyChanged("G1n3c3");
					this.OnG1n3c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n3c4", DbType="Bit NOT NULL")]
		public bool G1n3c4
		{
			get
			{
				return this._G1n3c4;
			}
			set
			{
				if ((this._G1n3c4 != value))
				{
					this.OnG1n3c4Changing(value);
					this.SendPropertyChanging();
					this._G1n3c4 = value;
					this.SendPropertyChanged("G1n3c4");
					this.OnG1n3c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1n3c5", DbType="Bit NOT NULL")]
		public bool G1n3c5
		{
			get
			{
				return this._G1n3c5;
			}
			set
			{
				if ((this._G1n3c5 != value))
				{
					this.OnG1n3c5Changing(value);
					this.SendPropertyChanging();
					this._G1n3c5 = value;
					this.SendPropertyChanged("G1n3c5");
					this.OnG1n3c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G1Description", DbType="NVarChar(100)")]
		public string G1Description
		{
			get
			{
				return this._G1Description;
			}
			set
			{
				if ((this._G1Description != value))
				{
					this.OnG1DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G1Description = value;
					this.SendPropertyChanged("G1Description");
					this.OnG1DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2TypeProduct", DbType="NVarChar(50)")]
		public string G2TypeProduct
		{
			get
			{
				return this._G2TypeProduct;
			}
			set
			{
				if ((this._G2TypeProduct != value))
				{
					this.OnG2TypeProductChanging(value);
					this.SendPropertyChanging();
					this._G2TypeProduct = value;
					this.SendPropertyChanged("G2TypeProduct");
					this.OnG2TypeProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t1", DbType="NVarChar(10)")]
		public string G2n1t1
		{
			get
			{
				return this._G2n1t1;
			}
			set
			{
				if ((this._G2n1t1 != value))
				{
					this.OnG2n1t1Changing(value);
					this.SendPropertyChanging();
					this._G2n1t1 = value;
					this.SendPropertyChanged("G2n1t1");
					this.OnG2n1t1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t2", DbType="NVarChar(10)")]
		public string G2n1t2
		{
			get
			{
				return this._G2n1t2;
			}
			set
			{
				if ((this._G2n1t2 != value))
				{
					this.OnG2n1t2Changing(value);
					this.SendPropertyChanging();
					this._G2n1t2 = value;
					this.SendPropertyChanged("G2n1t2");
					this.OnG2n1t2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t3", DbType="NVarChar(10)")]
		public string G2n1t3
		{
			get
			{
				return this._G2n1t3;
			}
			set
			{
				if ((this._G2n1t3 != value))
				{
					this.OnG2n1t3Changing(value);
					this.SendPropertyChanging();
					this._G2n1t3 = value;
					this.SendPropertyChanged("G2n1t3");
					this.OnG2n1t3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t4", DbType="NVarChar(10)")]
		public string G2n1t4
		{
			get
			{
				return this._G2n1t4;
			}
			set
			{
				if ((this._G2n1t4 != value))
				{
					this.OnG2n1t4Changing(value);
					this.SendPropertyChanging();
					this._G2n1t4 = value;
					this.SendPropertyChanged("G2n1t4");
					this.OnG2n1t4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t5", DbType="NVarChar(10)")]
		public string G2n1t5
		{
			get
			{
				return this._G2n1t5;
			}
			set
			{
				if ((this._G2n1t5 != value))
				{
					this.OnG2n1t5Changing(value);
					this.SendPropertyChanging();
					this._G2n1t5 = value;
					this.SendPropertyChanged("G2n1t5");
					this.OnG2n1t5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t6", DbType="NVarChar(10)")]
		public string G2n1t6
		{
			get
			{
				return this._G2n1t6;
			}
			set
			{
				if ((this._G2n1t6 != value))
				{
					this.OnG2n1t6Changing(value);
					this.SendPropertyChanging();
					this._G2n1t6 = value;
					this.SendPropertyChanged("G2n1t6");
					this.OnG2n1t6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t7", DbType="NVarChar(10)")]
		public string G2n1t7
		{
			get
			{
				return this._G2n1t7;
			}
			set
			{
				if ((this._G2n1t7 != value))
				{
					this.OnG2n1t7Changing(value);
					this.SendPropertyChanging();
					this._G2n1t7 = value;
					this.SendPropertyChanged("G2n1t7");
					this.OnG2n1t7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t8", DbType="NVarChar(10)")]
		public string G2n1t8
		{
			get
			{
				return this._G2n1t8;
			}
			set
			{
				if ((this._G2n1t8 != value))
				{
					this.OnG2n1t8Changing(value);
					this.SendPropertyChanging();
					this._G2n1t8 = value;
					this.SendPropertyChanged("G2n1t8");
					this.OnG2n1t8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t9", DbType="NVarChar(10)")]
		public string G2n1t9
		{
			get
			{
				return this._G2n1t9;
			}
			set
			{
				if ((this._G2n1t9 != value))
				{
					this.OnG2n1t9Changing(value);
					this.SendPropertyChanging();
					this._G2n1t9 = value;
					this.SendPropertyChanged("G2n1t9");
					this.OnG2n1t9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1t10", DbType="NVarChar(50)")]
		public string G2n1t10
		{
			get
			{
				return this._G2n1t10;
			}
			set
			{
				if ((this._G2n1t10 != value))
				{
					this.OnG2n1t10Changing(value);
					this.SendPropertyChanging();
					this._G2n1t10 = value;
					this.SendPropertyChanged("G2n1t10");
					this.OnG2n1t10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c1", DbType="Bit NOT NULL")]
		public bool G2n1c1
		{
			get
			{
				return this._G2n1c1;
			}
			set
			{
				if ((this._G2n1c1 != value))
				{
					this.OnG2n1c1Changing(value);
					this.SendPropertyChanging();
					this._G2n1c1 = value;
					this.SendPropertyChanged("G2n1c1");
					this.OnG2n1c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c2", DbType="Bit NOT NULL")]
		public bool G2n1c2
		{
			get
			{
				return this._G2n1c2;
			}
			set
			{
				if ((this._G2n1c2 != value))
				{
					this.OnG2n1c2Changing(value);
					this.SendPropertyChanging();
					this._G2n1c2 = value;
					this.SendPropertyChanged("G2n1c2");
					this.OnG2n1c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c3", DbType="Bit NOT NULL")]
		public bool G2n1c3
		{
			get
			{
				return this._G2n1c3;
			}
			set
			{
				if ((this._G2n1c3 != value))
				{
					this.OnG2n1c3Changing(value);
					this.SendPropertyChanging();
					this._G2n1c3 = value;
					this.SendPropertyChanged("G2n1c3");
					this.OnG2n1c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c4", DbType="Bit NOT NULL")]
		public bool G2n1c4
		{
			get
			{
				return this._G2n1c4;
			}
			set
			{
				if ((this._G2n1c4 != value))
				{
					this.OnG2n1c4Changing(value);
					this.SendPropertyChanging();
					this._G2n1c4 = value;
					this.SendPropertyChanged("G2n1c4");
					this.OnG2n1c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c5", DbType="Bit NOT NULL")]
		public bool G2n1c5
		{
			get
			{
				return this._G2n1c5;
			}
			set
			{
				if ((this._G2n1c5 != value))
				{
					this.OnG2n1c5Changing(value);
					this.SendPropertyChanging();
					this._G2n1c5 = value;
					this.SendPropertyChanged("G2n1c5");
					this.OnG2n1c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c6", DbType="Bit NOT NULL")]
		public bool G2n1c6
		{
			get
			{
				return this._G2n1c6;
			}
			set
			{
				if ((this._G2n1c6 != value))
				{
					this.OnG2n1c6Changing(value);
					this.SendPropertyChanging();
					this._G2n1c6 = value;
					this.SendPropertyChanged("G2n1c6");
					this.OnG2n1c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c7", DbType="Bit NOT NULL")]
		public bool G2n1c7
		{
			get
			{
				return this._G2n1c7;
			}
			set
			{
				if ((this._G2n1c7 != value))
				{
					this.OnG2n1c7Changing(value);
					this.SendPropertyChanging();
					this._G2n1c7 = value;
					this.SendPropertyChanged("G2n1c7");
					this.OnG2n1c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c8", DbType="Bit NOT NULL")]
		public bool G2n1c8
		{
			get
			{
				return this._G2n1c8;
			}
			set
			{
				if ((this._G2n1c8 != value))
				{
					this.OnG2n1c8Changing(value);
					this.SendPropertyChanging();
					this._G2n1c8 = value;
					this.SendPropertyChanged("G2n1c8");
					this.OnG2n1c8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1c9", DbType="Bit NOT NULL")]
		public bool G2n1c9
		{
			get
			{
				return this._G2n1c9;
			}
			set
			{
				if ((this._G2n1c9 != value))
				{
					this.OnG2n1c9Changing(value);
					this.SendPropertyChanging();
					this._G2n1c9 = value;
					this.SendPropertyChanged("G2n1c9");
					this.OnG2n1c9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n1Description", DbType="NVarChar(100)")]
		public string G2n1Description
		{
			get
			{
				return this._G2n1Description;
			}
			set
			{
				if ((this._G2n1Description != value))
				{
					this.OnG2n1DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G2n1Description = value;
					this.SendPropertyChanged("G2n1Description");
					this.OnG2n1DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc1", DbType="Bit NOT NULL")]
		public bool G2n2RBCc1
		{
			get
			{
				return this._G2n2RBCc1;
			}
			set
			{
				if ((this._G2n2RBCc1 != value))
				{
					this.OnG2n2RBCc1Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc1 = value;
					this.SendPropertyChanged("G2n2RBCc1");
					this.OnG2n2RBCc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc2", DbType="Bit NOT NULL")]
		public bool G2n2RBCc2
		{
			get
			{
				return this._G2n2RBCc2;
			}
			set
			{
				if ((this._G2n2RBCc2 != value))
				{
					this.OnG2n2RBCc2Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc2 = value;
					this.SendPropertyChanged("G2n2RBCc2");
					this.OnG2n2RBCc2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc3", DbType="Bit NOT NULL")]
		public bool G2n2RBCc3
		{
			get
			{
				return this._G2n2RBCc3;
			}
			set
			{
				if ((this._G2n2RBCc3 != value))
				{
					this.OnG2n2RBCc3Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc3 = value;
					this.SendPropertyChanged("G2n2RBCc3");
					this.OnG2n2RBCc3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc4", DbType="Bit NOT NULL")]
		public bool G2n2RBCc4
		{
			get
			{
				return this._G2n2RBCc4;
			}
			set
			{
				if ((this._G2n2RBCc4 != value))
				{
					this.OnG2n2RBCc4Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc4 = value;
					this.SendPropertyChanged("G2n2RBCc4");
					this.OnG2n2RBCc4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc5", DbType="Bit NOT NULL")]
		public bool G2n2RBCc5
		{
			get
			{
				return this._G2n2RBCc5;
			}
			set
			{
				if ((this._G2n2RBCc5 != value))
				{
					this.OnG2n2RBCc5Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc5 = value;
					this.SendPropertyChanged("G2n2RBCc5");
					this.OnG2n2RBCc5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc6", DbType="Bit NOT NULL")]
		public bool G2n2RBCc6
		{
			get
			{
				return this._G2n2RBCc6;
			}
			set
			{
				if ((this._G2n2RBCc6 != value))
				{
					this.OnG2n2RBCc6Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc6 = value;
					this.SendPropertyChanged("G2n2RBCc6");
					this.OnG2n2RBCc6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc7", DbType="Bit NOT NULL")]
		public bool G2n2RBCc7
		{
			get
			{
				return this._G2n2RBCc7;
			}
			set
			{
				if ((this._G2n2RBCc7 != value))
				{
					this.OnG2n2RBCc7Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc7 = value;
					this.SendPropertyChanged("G2n2RBCc7");
					this.OnG2n2RBCc7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc8", DbType="Bit NOT NULL")]
		public bool G2n2RBCc8
		{
			get
			{
				return this._G2n2RBCc8;
			}
			set
			{
				if ((this._G2n2RBCc8 != value))
				{
					this.OnG2n2RBCc8Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc8 = value;
					this.SendPropertyChanged("G2n2RBCc8");
					this.OnG2n2RBCc8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc9", DbType="Bit NOT NULL")]
		public bool G2n2RBCc9
		{
			get
			{
				return this._G2n2RBCc9;
			}
			set
			{
				if ((this._G2n2RBCc9 != value))
				{
					this.OnG2n2RBCc9Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc9 = value;
					this.SendPropertyChanged("G2n2RBCc9");
					this.OnG2n2RBCc9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc10", DbType="Bit NOT NULL")]
		public bool G2n2RBCc10
		{
			get
			{
				return this._G2n2RBCc10;
			}
			set
			{
				if ((this._G2n2RBCc10 != value))
				{
					this.OnG2n2RBCc10Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc10 = value;
					this.SendPropertyChanged("G2n2RBCc10");
					this.OnG2n2RBCc10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc11", DbType="Bit NOT NULL")]
		public bool G2n2RBCc11
		{
			get
			{
				return this._G2n2RBCc11;
			}
			set
			{
				if ((this._G2n2RBCc11 != value))
				{
					this.OnG2n2RBCc11Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc11 = value;
					this.SendPropertyChanged("G2n2RBCc11");
					this.OnG2n2RBCc11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2RBCc12", DbType="Bit NOT NULL")]
		public bool G2n2RBCc12
		{
			get
			{
				return this._G2n2RBCc12;
			}
			set
			{
				if ((this._G2n2RBCc12 != value))
				{
					this.OnG2n2RBCc12Changing(value);
					this.SendPropertyChanging();
					this._G2n2RBCc12 = value;
					this.SendPropertyChanged("G2n2RBCc12");
					this.OnG2n2RBCc12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2PLTc1", DbType="Bit NOT NULL")]
		public bool G2n2PLTc1
		{
			get
			{
				return this._G2n2PLTc1;
			}
			set
			{
				if ((this._G2n2PLTc1 != value))
				{
					this.OnG2n2PLTc1Changing(value);
					this.SendPropertyChanging();
					this._G2n2PLTc1 = value;
					this.SendPropertyChanged("G2n2PLTc1");
					this.OnG2n2PLTc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2PLTc2", DbType="Bit NOT NULL")]
		public bool G2n2PLTc2
		{
			get
			{
				return this._G2n2PLTc2;
			}
			set
			{
				if ((this._G2n2PLTc2 != value))
				{
					this.OnG2n2PLTc2Changing(value);
					this.SendPropertyChanging();
					this._G2n2PLTc2 = value;
					this.SendPropertyChanged("G2n2PLTc2");
					this.OnG2n2PLTc2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2PLTc3", DbType="Bit NOT NULL")]
		public bool G2n2PLTc3
		{
			get
			{
				return this._G2n2PLTc3;
			}
			set
			{
				if ((this._G2n2PLTc3 != value))
				{
					this.OnG2n2PLTc3Changing(value);
					this.SendPropertyChanging();
					this._G2n2PLTc3 = value;
					this.SendPropertyChanged("G2n2PLTc3");
					this.OnG2n2PLTc3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2PLTc4", DbType="Bit NOT NULL")]
		public bool G2n2PLTc4
		{
			get
			{
				return this._G2n2PLTc4;
			}
			set
			{
				if ((this._G2n2PLTc4 != value))
				{
					this.OnG2n2PLTc4Changing(value);
					this.SendPropertyChanging();
					this._G2n2PLTc4 = value;
					this.SendPropertyChanged("G2n2PLTc4");
					this.OnG2n2PLTc4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2PLTc5", DbType="Bit NOT NULL")]
		public bool G2n2PLTc5
		{
			get
			{
				return this._G2n2PLTc5;
			}
			set
			{
				if ((this._G2n2PLTc5 != value))
				{
					this.OnG2n2PLTc5Changing(value);
					this.SendPropertyChanging();
					this._G2n2PLTc5 = value;
					this.SendPropertyChanged("G2n2PLTc5");
					this.OnG2n2PLTc5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2PLTc6", DbType="Bit NOT NULL")]
		public bool G2n2PLTc6
		{
			get
			{
				return this._G2n2PLTc6;
			}
			set
			{
				if ((this._G2n2PLTc6 != value))
				{
					this.OnG2n2PLTc6Changing(value);
					this.SendPropertyChanging();
					this._G2n2PLTc6 = value;
					this.SendPropertyChanged("G2n2PLTc6");
					this.OnG2n2PLTc6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G2n2Description", DbType="NVarChar(100)")]
		public string G2n2Description
		{
			get
			{
				return this._G2n2Description;
			}
			set
			{
				if ((this._G2n2Description != value))
				{
					this.OnG2n2DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G2n2Description = value;
					this.SendPropertyChanged("G2n2Description");
					this.OnG2n2DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3Bt1", DbType="NVarChar(50)")]
		public string G3Bt1
		{
			get
			{
				return this._G3Bt1;
			}
			set
			{
				if ((this._G3Bt1 != value))
				{
					this.OnG3Bt1Changing(value);
					this.SendPropertyChanging();
					this._G3Bt1 = value;
					this.SendPropertyChanged("G3Bt1");
					this.OnG3Bt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3Bt2", DbType="NVarChar(50)")]
		public string G3Bt2
		{
			get
			{
				return this._G3Bt2;
			}
			set
			{
				if ((this._G3Bt2 != value))
				{
					this.OnG3Bt2Changing(value);
					this.SendPropertyChanging();
					this._G3Bt2 = value;
					this.SendPropertyChanged("G3Bt2");
					this.OnG3Bt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3Bt3", DbType="NVarChar(50)")]
		public string G3Bt3
		{
			get
			{
				return this._G3Bt3;
			}
			set
			{
				if ((this._G3Bt3 != value))
				{
					this.OnG3Bt3Changing(value);
					this.SendPropertyChanging();
					this._G3Bt3 = value;
					this.SendPropertyChanged("G3Bt3");
					this.OnG3Bt3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3Bt4", DbType="NVarChar(50)")]
		public string G3Bt4
		{
			get
			{
				return this._G3Bt4;
			}
			set
			{
				if ((this._G3Bt4 != value))
				{
					this.OnG3Bt4Changing(value);
					this.SendPropertyChanging();
					this._G3Bt4 = value;
					this.SendPropertyChanged("G3Bt4");
					this.OnG3Bt4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3At1", DbType="NVarChar(50)")]
		public string G3At1
		{
			get
			{
				return this._G3At1;
			}
			set
			{
				if ((this._G3At1 != value))
				{
					this.OnG3At1Changing(value);
					this.SendPropertyChanging();
					this._G3At1 = value;
					this.SendPropertyChanged("G3At1");
					this.OnG3At1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3At2", DbType="NVarChar(50)")]
		public string G3At2
		{
			get
			{
				return this._G3At2;
			}
			set
			{
				if ((this._G3At2 != value))
				{
					this.OnG3At2Changing(value);
					this.SendPropertyChanging();
					this._G3At2 = value;
					this.SendPropertyChanged("G3At2");
					this.OnG3At2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3At3", DbType="NVarChar(50)")]
		public string G3At3
		{
			get
			{
				return this._G3At3;
			}
			set
			{
				if ((this._G3At3 != value))
				{
					this.OnG3At3Changing(value);
					this.SendPropertyChanging();
					this._G3At3 = value;
					this.SendPropertyChanged("G3At3");
					this.OnG3At3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3At4", DbType="NVarChar(50)")]
		public string G3At4
		{
			get
			{
				return this._G3At4;
			}
			set
			{
				if ((this._G3At4 != value))
				{
					this.OnG3At4Changing(value);
					this.SendPropertyChanging();
					this._G3At4 = value;
					this.SendPropertyChanged("G3At4");
					this.OnG3At4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c1", DbType="Bit NOT NULL")]
		public bool G3c1
		{
			get
			{
				return this._G3c1;
			}
			set
			{
				if ((this._G3c1 != value))
				{
					this.OnG3c1Changing(value);
					this.SendPropertyChanging();
					this._G3c1 = value;
					this.SendPropertyChanged("G3c1");
					this.OnG3c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c2", DbType="Bit NOT NULL")]
		public bool G3c2
		{
			get
			{
				return this._G3c2;
			}
			set
			{
				if ((this._G3c2 != value))
				{
					this.OnG3c2Changing(value);
					this.SendPropertyChanging();
					this._G3c2 = value;
					this.SendPropertyChanged("G3c2");
					this.OnG3c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c3", DbType="Bit NOT NULL")]
		public bool G3c3
		{
			get
			{
				return this._G3c3;
			}
			set
			{
				if ((this._G3c3 != value))
				{
					this.OnG3c3Changing(value);
					this.SendPropertyChanging();
					this._G3c3 = value;
					this.SendPropertyChanged("G3c3");
					this.OnG3c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c4", DbType="Bit NOT NULL")]
		public bool G3c4
		{
			get
			{
				return this._G3c4;
			}
			set
			{
				if ((this._G3c4 != value))
				{
					this.OnG3c4Changing(value);
					this.SendPropertyChanging();
					this._G3c4 = value;
					this.SendPropertyChanged("G3c4");
					this.OnG3c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c5", DbType="Bit NOT NULL")]
		public bool G3c5
		{
			get
			{
				return this._G3c5;
			}
			set
			{
				if ((this._G3c5 != value))
				{
					this.OnG3c5Changing(value);
					this.SendPropertyChanging();
					this._G3c5 = value;
					this.SendPropertyChanged("G3c5");
					this.OnG3c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c6", DbType="Bit NOT NULL")]
		public bool G3c6
		{
			get
			{
				return this._G3c6;
			}
			set
			{
				if ((this._G3c6 != value))
				{
					this.OnG3c6Changing(value);
					this.SendPropertyChanging();
					this._G3c6 = value;
					this.SendPropertyChanged("G3c6");
					this.OnG3c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c7", DbType="Bit NOT NULL")]
		public bool G3c7
		{
			get
			{
				return this._G3c7;
			}
			set
			{
				if ((this._G3c7 != value))
				{
					this.OnG3c7Changing(value);
					this.SendPropertyChanging();
					this._G3c7 = value;
					this.SendPropertyChanged("G3c7");
					this.OnG3c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c8", DbType="Bit NOT NULL")]
		public bool G3c8
		{
			get
			{
				return this._G3c8;
			}
			set
			{
				if ((this._G3c8 != value))
				{
					this.OnG3c8Changing(value);
					this.SendPropertyChanging();
					this._G3c8 = value;
					this.SendPropertyChanged("G3c8");
					this.OnG3c8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c9", DbType="Bit NOT NULL")]
		public bool G3c9
		{
			get
			{
				return this._G3c9;
			}
			set
			{
				if ((this._G3c9 != value))
				{
					this.OnG3c9Changing(value);
					this.SendPropertyChanging();
					this._G3c9 = value;
					this.SendPropertyChanged("G3c9");
					this.OnG3c9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c10", DbType="Bit NOT NULL")]
		public bool G3c10
		{
			get
			{
				return this._G3c10;
			}
			set
			{
				if ((this._G3c10 != value))
				{
					this.OnG3c10Changing(value);
					this.SendPropertyChanging();
					this._G3c10 = value;
					this.SendPropertyChanged("G3c10");
					this.OnG3c10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c11", DbType="Bit NOT NULL")]
		public bool G3c11
		{
			get
			{
				return this._G3c11;
			}
			set
			{
				if ((this._G3c11 != value))
				{
					this.OnG3c11Changing(value);
					this.SendPropertyChanging();
					this._G3c11 = value;
					this.SendPropertyChanged("G3c11");
					this.OnG3c11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c12", DbType="Bit NOT NULL")]
		public bool G3c12
		{
			get
			{
				return this._G3c12;
			}
			set
			{
				if ((this._G3c12 != value))
				{
					this.OnG3c12Changing(value);
					this.SendPropertyChanging();
					this._G3c12 = value;
					this.SendPropertyChanged("G3c12");
					this.OnG3c12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c13", DbType="Bit NOT NULL")]
		public bool G3c13
		{
			get
			{
				return this._G3c13;
			}
			set
			{
				if ((this._G3c13 != value))
				{
					this.OnG3c13Changing(value);
					this.SendPropertyChanging();
					this._G3c13 = value;
					this.SendPropertyChanged("G3c13");
					this.OnG3c13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c14", DbType="Bit NOT NULL")]
		public bool G3c14
		{
			get
			{
				return this._G3c14;
			}
			set
			{
				if ((this._G3c14 != value))
				{
					this.OnG3c14Changing(value);
					this.SendPropertyChanging();
					this._G3c14 = value;
					this.SendPropertyChanged("G3c14");
					this.OnG3c14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c15", DbType="Bit NOT NULL")]
		public bool G3c15
		{
			get
			{
				return this._G3c15;
			}
			set
			{
				if ((this._G3c15 != value))
				{
					this.OnG3c15Changing(value);
					this.SendPropertyChanging();
					this._G3c15 = value;
					this.SendPropertyChanged("G3c15");
					this.OnG3c15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c16", DbType="Bit NOT NULL")]
		public bool G3c16
		{
			get
			{
				return this._G3c16;
			}
			set
			{
				if ((this._G3c16 != value))
				{
					this.OnG3c16Changing(value);
					this.SendPropertyChanging();
					this._G3c16 = value;
					this.SendPropertyChanged("G3c16");
					this.OnG3c16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c17", DbType="Bit NOT NULL")]
		public bool G3c17
		{
			get
			{
				return this._G3c17;
			}
			set
			{
				if ((this._G3c17 != value))
				{
					this.OnG3c17Changing(value);
					this.SendPropertyChanging();
					this._G3c17 = value;
					this.SendPropertyChanged("G3c17");
					this.OnG3c17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c18", DbType="Bit NOT NULL")]
		public bool G3c18
		{
			get
			{
				return this._G3c18;
			}
			set
			{
				if ((this._G3c18 != value))
				{
					this.OnG3c18Changing(value);
					this.SendPropertyChanging();
					this._G3c18 = value;
					this.SendPropertyChanged("G3c18");
					this.OnG3c18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c19", DbType="Bit NOT NULL")]
		public bool G3c19
		{
			get
			{
				return this._G3c19;
			}
			set
			{
				if ((this._G3c19 != value))
				{
					this.OnG3c19Changing(value);
					this.SendPropertyChanging();
					this._G3c19 = value;
					this.SendPropertyChanged("G3c19");
					this.OnG3c19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c20", DbType="Bit NOT NULL")]
		public bool G3c20
		{
			get
			{
				return this._G3c20;
			}
			set
			{
				if ((this._G3c20 != value))
				{
					this.OnG3c20Changing(value);
					this.SendPropertyChanging();
					this._G3c20 = value;
					this.SendPropertyChanged("G3c20");
					this.OnG3c20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c21", DbType="Bit NOT NULL")]
		public bool G3c21
		{
			get
			{
				return this._G3c21;
			}
			set
			{
				if ((this._G3c21 != value))
				{
					this.OnG3c21Changing(value);
					this.SendPropertyChanging();
					this._G3c21 = value;
					this.SendPropertyChanged("G3c21");
					this.OnG3c21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c22", DbType="Bit NOT NULL")]
		public bool G3c22
		{
			get
			{
				return this._G3c22;
			}
			set
			{
				if ((this._G3c22 != value))
				{
					this.OnG3c22Changing(value);
					this.SendPropertyChanging();
					this._G3c22 = value;
					this.SendPropertyChanged("G3c22");
					this.OnG3c22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c23", DbType="Bit NOT NULL")]
		public bool G3c23
		{
			get
			{
				return this._G3c23;
			}
			set
			{
				if ((this._G3c23 != value))
				{
					this.OnG3c23Changing(value);
					this.SendPropertyChanging();
					this._G3c23 = value;
					this.SendPropertyChanged("G3c23");
					this.OnG3c23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c24", DbType="Bit NOT NULL")]
		public bool G3c24
		{
			get
			{
				return this._G3c24;
			}
			set
			{
				if ((this._G3c24 != value))
				{
					this.OnG3c24Changing(value);
					this.SendPropertyChanging();
					this._G3c24 = value;
					this.SendPropertyChanged("G3c24");
					this.OnG3c24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3c25", DbType="Bit NOT NULL")]
		public bool G3c25
		{
			get
			{
				return this._G3c25;
			}
			set
			{
				if ((this._G3c25 != value))
				{
					this.OnG3c25Changing(value);
					this.SendPropertyChanging();
					this._G3c25 = value;
					this.SendPropertyChanged("G3c25");
					this.OnG3c25Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G3Other", DbType="NVarChar(50)")]
		public string G3Other
		{
			get
			{
				return this._G3Other;
			}
			set
			{
				if ((this._G3Other != value))
				{
					this.OnG3OtherChanging(value);
					this.SendPropertyChanging();
					this._G3Other = value;
					this.SendPropertyChanged("G3Other");
					this.OnG3OtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G4c1", DbType="Bit NOT NULL")]
		public bool G4c1
		{
			get
			{
				return this._G4c1;
			}
			set
			{
				if ((this._G4c1 != value))
				{
					this.OnG4c1Changing(value);
					this.SendPropertyChanging();
					this._G4c1 = value;
					this.SendPropertyChanged("G4c1");
					this.OnG4c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G4c2", DbType="Bit NOT NULL")]
		public bool G4c2
		{
			get
			{
				return this._G4c2;
			}
			set
			{
				if ((this._G4c2 != value))
				{
					this.OnG4c2Changing(value);
					this.SendPropertyChanging();
					this._G4c2 = value;
					this.SendPropertyChanged("G4c2");
					this.OnG4c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G4c3", DbType="Bit NOT NULL")]
		public bool G4c3
		{
			get
			{
				return this._G4c3;
			}
			set
			{
				if ((this._G4c3 != value))
				{
					this.OnG4c3Changing(value);
					this.SendPropertyChanging();
					this._G4c3 = value;
					this.SendPropertyChanged("G4c3");
					this.OnG4c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G4Other", DbType="NVarChar(50)")]
		public string G4Other
		{
			get
			{
				return this._G4Other;
			}
			set
			{
				if ((this._G4Other != value))
				{
					this.OnG4OtherChanging(value);
					this.SendPropertyChanging();
					this._G4Other = value;
					this.SendPropertyChanged("G4Other");
					this.OnG4OtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G4Description", DbType="NVarChar(100)")]
		public string G4Description
		{
			get
			{
				return this._G4Description;
			}
			set
			{
				if ((this._G4Description != value))
				{
					this.OnG4DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G4Description = value;
					this.SendPropertyChanged("G4Description");
					this.OnG4DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5Bt1", DbType="NVarChar(50)")]
		public string G5Bt1
		{
			get
			{
				return this._G5Bt1;
			}
			set
			{
				if ((this._G5Bt1 != value))
				{
					this.OnG5Bt1Changing(value);
					this.SendPropertyChanging();
					this._G5Bt1 = value;
					this.SendPropertyChanged("G5Bt1");
					this.OnG5Bt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5Bt2", DbType="NVarChar(50)")]
		public string G5Bt2
		{
			get
			{
				return this._G5Bt2;
			}
			set
			{
				if ((this._G5Bt2 != value))
				{
					this.OnG5Bt2Changing(value);
					this.SendPropertyChanging();
					this._G5Bt2 = value;
					this.SendPropertyChanged("G5Bt2");
					this.OnG5Bt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5Bt3", DbType="NVarChar(50)")]
		public string G5Bt3
		{
			get
			{
				return this._G5Bt3;
			}
			set
			{
				if ((this._G5Bt3 != value))
				{
					this.OnG5Bt3Changing(value);
					this.SendPropertyChanging();
					this._G5Bt3 = value;
					this.SendPropertyChanged("G5Bt3");
					this.OnG5Bt3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5Bt4", DbType="NVarChar(50)")]
		public string G5Bt4
		{
			get
			{
				return this._G5Bt4;
			}
			set
			{
				if ((this._G5Bt4 != value))
				{
					this.OnG5Bt4Changing(value);
					this.SendPropertyChanging();
					this._G5Bt4 = value;
					this.SendPropertyChanged("G5Bt4");
					this.OnG5Bt4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5At1", DbType="NVarChar(50)")]
		public string G5At1
		{
			get
			{
				return this._G5At1;
			}
			set
			{
				if ((this._G5At1 != value))
				{
					this.OnG5At1Changing(value);
					this.SendPropertyChanging();
					this._G5At1 = value;
					this.SendPropertyChanged("G5At1");
					this.OnG5At1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5At2", DbType="NVarChar(50)")]
		public string G5At2
		{
			get
			{
				return this._G5At2;
			}
			set
			{
				if ((this._G5At2 != value))
				{
					this.OnG5At2Changing(value);
					this.SendPropertyChanging();
					this._G5At2 = value;
					this.SendPropertyChanged("G5At2");
					this.OnG5At2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5At3", DbType="NVarChar(50)")]
		public string G5At3
		{
			get
			{
				return this._G5At3;
			}
			set
			{
				if ((this._G5At3 != value))
				{
					this.OnG5At3Changing(value);
					this.SendPropertyChanging();
					this._G5At3 = value;
					this.SendPropertyChanged("G5At3");
					this.OnG5At3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5At4", DbType="NVarChar(50)")]
		public string G5At4
		{
			get
			{
				return this._G5At4;
			}
			set
			{
				if ((this._G5At4 != value))
				{
					this.OnG5At4Changing(value);
					this.SendPropertyChanging();
					this._G5At4 = value;
					this.SendPropertyChanged("G5At4");
					this.OnG5At4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5t1", DbType="NVarChar(50)")]
		public string G5t1
		{
			get
			{
				return this._G5t1;
			}
			set
			{
				if ((this._G5t1 != value))
				{
					this.OnG5t1Changing(value);
					this.SendPropertyChanging();
					this._G5t1 = value;
					this.SendPropertyChanged("G5t1");
					this.OnG5t1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5t2", DbType="NVarChar(50)")]
		public string G5t2
		{
			get
			{
				return this._G5t2;
			}
			set
			{
				if ((this._G5t2 != value))
				{
					this.OnG5t2Changing(value);
					this.SendPropertyChanging();
					this._G5t2 = value;
					this.SendPropertyChanged("G5t2");
					this.OnG5t2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5t3", DbType="NVarChar(50)")]
		public string G5t3
		{
			get
			{
				return this._G5t3;
			}
			set
			{
				if ((this._G5t3 != value))
				{
					this.OnG5t3Changing(value);
					this.SendPropertyChanging();
					this._G5t3 = value;
					this.SendPropertyChanged("G5t3");
					this.OnG5t3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5t4", DbType="NVarChar(50)")]
		public string G5t4
		{
			get
			{
				return this._G5t4;
			}
			set
			{
				if ((this._G5t4 != value))
				{
					this.OnG5t4Changing(value);
					this.SendPropertyChanging();
					this._G5t4 = value;
					this.SendPropertyChanged("G5t4");
					this.OnG5t4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5t5", DbType="NVarChar(50)")]
		public string G5t5
		{
			get
			{
				return this._G5t5;
			}
			set
			{
				if ((this._G5t5 != value))
				{
					this.OnG5t5Changing(value);
					this.SendPropertyChanging();
					this._G5t5 = value;
					this.SendPropertyChanged("G5t5");
					this.OnG5t5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G5t6", DbType="NVarChar(50)")]
		public string G5t6
		{
			get
			{
				return this._G5t6;
			}
			set
			{
				if ((this._G5t6 != value))
				{
					this.OnG5t6Changing(value);
					this.SendPropertyChanging();
					this._G5t6 = value;
					this.SendPropertyChanged("G5t6");
					this.OnG5t6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c1", DbType="Bit NOT NULL")]
		public bool G6c1
		{
			get
			{
				return this._G6c1;
			}
			set
			{
				if ((this._G6c1 != value))
				{
					this.OnG6c1Changing(value);
					this.SendPropertyChanging();
					this._G6c1 = value;
					this.SendPropertyChanged("G6c1");
					this.OnG6c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c2", DbType="Bit NOT NULL")]
		public bool G6c2
		{
			get
			{
				return this._G6c2;
			}
			set
			{
				if ((this._G6c2 != value))
				{
					this.OnG6c2Changing(value);
					this.SendPropertyChanging();
					this._G6c2 = value;
					this.SendPropertyChanged("G6c2");
					this.OnG6c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c3", DbType="Bit NOT NULL")]
		public bool G6c3
		{
			get
			{
				return this._G6c3;
			}
			set
			{
				if ((this._G6c3 != value))
				{
					this.OnG6c3Changing(value);
					this.SendPropertyChanging();
					this._G6c3 = value;
					this.SendPropertyChanged("G6c3");
					this.OnG6c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c4", DbType="Bit NOT NULL")]
		public bool G6c4
		{
			get
			{
				return this._G6c4;
			}
			set
			{
				if ((this._G6c4 != value))
				{
					this.OnG6c4Changing(value);
					this.SendPropertyChanging();
					this._G6c4 = value;
					this.SendPropertyChanged("G6c4");
					this.OnG6c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c5", DbType="Bit NOT NULL")]
		public bool G6c5
		{
			get
			{
				return this._G6c5;
			}
			set
			{
				if ((this._G6c5 != value))
				{
					this.OnG6c5Changing(value);
					this.SendPropertyChanging();
					this._G6c5 = value;
					this.SendPropertyChanged("G6c5");
					this.OnG6c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c6", DbType="Bit NOT NULL")]
		public bool G6c6
		{
			get
			{
				return this._G6c6;
			}
			set
			{
				if ((this._G6c6 != value))
				{
					this.OnG6c6Changing(value);
					this.SendPropertyChanging();
					this._G6c6 = value;
					this.SendPropertyChanged("G6c6");
					this.OnG6c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c7", DbType="Bit NOT NULL")]
		public bool G6c7
		{
			get
			{
				return this._G6c7;
			}
			set
			{
				if ((this._G6c7 != value))
				{
					this.OnG6c7Changing(value);
					this.SendPropertyChanging();
					this._G6c7 = value;
					this.SendPropertyChanged("G6c7");
					this.OnG6c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c8", DbType="Bit NOT NULL")]
		public bool G6c8
		{
			get
			{
				return this._G6c8;
			}
			set
			{
				if ((this._G6c8 != value))
				{
					this.OnG6c8Changing(value);
					this.SendPropertyChanging();
					this._G6c8 = value;
					this.SendPropertyChanged("G6c8");
					this.OnG6c8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c9", DbType="Bit NOT NULL")]
		public bool G6c9
		{
			get
			{
				return this._G6c9;
			}
			set
			{
				if ((this._G6c9 != value))
				{
					this.OnG6c9Changing(value);
					this.SendPropertyChanging();
					this._G6c9 = value;
					this.SendPropertyChanged("G6c9");
					this.OnG6c9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c10", DbType="Bit NOT NULL")]
		public bool G6c10
		{
			get
			{
				return this._G6c10;
			}
			set
			{
				if ((this._G6c10 != value))
				{
					this.OnG6c10Changing(value);
					this.SendPropertyChanging();
					this._G6c10 = value;
					this.SendPropertyChanged("G6c10");
					this.OnG6c10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c11", DbType="Bit NOT NULL")]
		public bool G6c11
		{
			get
			{
				return this._G6c11;
			}
			set
			{
				if ((this._G6c11 != value))
				{
					this.OnG6c11Changing(value);
					this.SendPropertyChanging();
					this._G6c11 = value;
					this.SendPropertyChanged("G6c11");
					this.OnG6c11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c12", DbType="Bit NOT NULL")]
		public bool G6c12
		{
			get
			{
				return this._G6c12;
			}
			set
			{
				if ((this._G6c12 != value))
				{
					this.OnG6c12Changing(value);
					this.SendPropertyChanging();
					this._G6c12 = value;
					this.SendPropertyChanged("G6c12");
					this.OnG6c12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c13", DbType="Bit NOT NULL")]
		public bool G6c13
		{
			get
			{
				return this._G6c13;
			}
			set
			{
				if ((this._G6c13 != value))
				{
					this.OnG6c13Changing(value);
					this.SendPropertyChanging();
					this._G6c13 = value;
					this.SendPropertyChanged("G6c13");
					this.OnG6c13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c14", DbType="Bit NOT NULL")]
		public bool G6c14
		{
			get
			{
				return this._G6c14;
			}
			set
			{
				if ((this._G6c14 != value))
				{
					this.OnG6c14Changing(value);
					this.SendPropertyChanging();
					this._G6c14 = value;
					this.SendPropertyChanged("G6c14");
					this.OnG6c14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c15", DbType="Bit NOT NULL")]
		public bool G6c15
		{
			get
			{
				return this._G6c15;
			}
			set
			{
				if ((this._G6c15 != value))
				{
					this.OnG6c15Changing(value);
					this.SendPropertyChanging();
					this._G6c15 = value;
					this.SendPropertyChanged("G6c15");
					this.OnG6c15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c16", DbType="Bit NOT NULL")]
		public bool G6c16
		{
			get
			{
				return this._G6c16;
			}
			set
			{
				if ((this._G6c16 != value))
				{
					this.OnG6c16Changing(value);
					this.SendPropertyChanging();
					this._G6c16 = value;
					this.SendPropertyChanged("G6c16");
					this.OnG6c16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c17", DbType="Bit NOT NULL")]
		public bool G6c17
		{
			get
			{
				return this._G6c17;
			}
			set
			{
				if ((this._G6c17 != value))
				{
					this.OnG6c17Changing(value);
					this.SendPropertyChanging();
					this._G6c17 = value;
					this.SendPropertyChanged("G6c17");
					this.OnG6c17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c18", DbType="Bit NOT NULL")]
		public bool G6c18
		{
			get
			{
				return this._G6c18;
			}
			set
			{
				if ((this._G6c18 != value))
				{
					this.OnG6c18Changing(value);
					this.SendPropertyChanging();
					this._G6c18 = value;
					this.SendPropertyChanged("G6c18");
					this.OnG6c18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c19", DbType="Bit NOT NULL")]
		public bool G6c19
		{
			get
			{
				return this._G6c19;
			}
			set
			{
				if ((this._G6c19 != value))
				{
					this.OnG6c19Changing(value);
					this.SendPropertyChanging();
					this._G6c19 = value;
					this.SendPropertyChanged("G6c19");
					this.OnG6c19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c20", DbType="Bit NOT NULL")]
		public bool G6c20
		{
			get
			{
				return this._G6c20;
			}
			set
			{
				if ((this._G6c20 != value))
				{
					this.OnG6c20Changing(value);
					this.SendPropertyChanging();
					this._G6c20 = value;
					this.SendPropertyChanged("G6c20");
					this.OnG6c20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c21", DbType="Bit NOT NULL")]
		public bool G6c21
		{
			get
			{
				return this._G6c21;
			}
			set
			{
				if ((this._G6c21 != value))
				{
					this.OnG6c21Changing(value);
					this.SendPropertyChanging();
					this._G6c21 = value;
					this.SendPropertyChanged("G6c21");
					this.OnG6c21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c22", DbType="Bit NOT NULL")]
		public bool G6c22
		{
			get
			{
				return this._G6c22;
			}
			set
			{
				if ((this._G6c22 != value))
				{
					this.OnG6c22Changing(value);
					this.SendPropertyChanging();
					this._G6c22 = value;
					this.SendPropertyChanged("G6c22");
					this.OnG6c22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c23", DbType="Bit NOT NULL")]
		public bool G6c23
		{
			get
			{
				return this._G6c23;
			}
			set
			{
				if ((this._G6c23 != value))
				{
					this.OnG6c23Changing(value);
					this.SendPropertyChanging();
					this._G6c23 = value;
					this.SendPropertyChanged("G6c23");
					this.OnG6c23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c24", DbType="Bit NOT NULL")]
		public bool G6c24
		{
			get
			{
				return this._G6c24;
			}
			set
			{
				if ((this._G6c24 != value))
				{
					this.OnG6c24Changing(value);
					this.SendPropertyChanging();
					this._G6c24 = value;
					this.SendPropertyChanged("G6c24");
					this.OnG6c24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c25", DbType="Bit NOT NULL")]
		public bool G6c25
		{
			get
			{
				return this._G6c25;
			}
			set
			{
				if ((this._G6c25 != value))
				{
					this.OnG6c25Changing(value);
					this.SendPropertyChanging();
					this._G6c25 = value;
					this.SendPropertyChanged("G6c25");
					this.OnG6c25Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c26", DbType="Bit NOT NULL")]
		public bool G6c26
		{
			get
			{
				return this._G6c26;
			}
			set
			{
				if ((this._G6c26 != value))
				{
					this.OnG6c26Changing(value);
					this.SendPropertyChanging();
					this._G6c26 = value;
					this.SendPropertyChanged("G6c26");
					this.OnG6c26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c27", DbType="Bit NOT NULL")]
		public bool G6c27
		{
			get
			{
				return this._G6c27;
			}
			set
			{
				if ((this._G6c27 != value))
				{
					this.OnG6c27Changing(value);
					this.SendPropertyChanging();
					this._G6c27 = value;
					this.SendPropertyChanged("G6c27");
					this.OnG6c27Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6c28", DbType="Bit NOT NULL")]
		public bool G6c28
		{
			get
			{
				return this._G6c28;
			}
			set
			{
				if ((this._G6c28 != value))
				{
					this.OnG6c28Changing(value);
					this.SendPropertyChanging();
					this._G6c28 = value;
					this.SendPropertyChanged("G6c28");
					this.OnG6c28Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G6Description", DbType="NVarChar(100)")]
		public string G6Description
		{
			get
			{
				return this._G6Description;
			}
			set
			{
				if ((this._G6Description != value))
				{
					this.OnG6DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G6Description = value;
					this.SendPropertyChanged("G6Description");
					this.OnG6DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G7c1", DbType="Bit NOT NULL")]
		public bool G7c1
		{
			get
			{
				return this._G7c1;
			}
			set
			{
				if ((this._G7c1 != value))
				{
					this.OnG7c1Changing(value);
					this.SendPropertyChanging();
					this._G7c1 = value;
					this.SendPropertyChanged("G7c1");
					this.OnG7c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G7c2", DbType="Bit NOT NULL")]
		public bool G7c2
		{
			get
			{
				return this._G7c2;
			}
			set
			{
				if ((this._G7c2 != value))
				{
					this.OnG7c2Changing(value);
					this.SendPropertyChanging();
					this._G7c2 = value;
					this.SendPropertyChanged("G7c2");
					this.OnG7c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G7c3", DbType="Bit NOT NULL")]
		public bool G7c3
		{
			get
			{
				return this._G7c3;
			}
			set
			{
				if ((this._G7c3 != value))
				{
					this.OnG7c3Changing(value);
					this.SendPropertyChanging();
					this._G7c3 = value;
					this.SendPropertyChanged("G7c3");
					this.OnG7c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G7c4", DbType="Bit NOT NULL")]
		public bool G7c4
		{
			get
			{
				return this._G7c4;
			}
			set
			{
				if ((this._G7c4 != value))
				{
					this.OnG7c4Changing(value);
					this.SendPropertyChanging();
					this._G7c4 = value;
					this.SendPropertyChanged("G7c4");
					this.OnG7c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G7Description", DbType="NVarChar(100)")]
		public string G7Description
		{
			get
			{
				return this._G7Description;
			}
			set
			{
				if ((this._G7Description != value))
				{
					this.OnG7DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G7Description = value;
					this.SendPropertyChanged("G7Description");
					this.OnG7DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c1", DbType="Bit NOT NULL")]
		public bool G8c1
		{
			get
			{
				return this._G8c1;
			}
			set
			{
				if ((this._G8c1 != value))
				{
					this.OnG8c1Changing(value);
					this.SendPropertyChanging();
					this._G8c1 = value;
					this.SendPropertyChanged("G8c1");
					this.OnG8c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c2", DbType="Bit NOT NULL")]
		public bool G8c2
		{
			get
			{
				return this._G8c2;
			}
			set
			{
				if ((this._G8c2 != value))
				{
					this.OnG8c2Changing(value);
					this.SendPropertyChanging();
					this._G8c2 = value;
					this.SendPropertyChanged("G8c2");
					this.OnG8c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c3", DbType="Bit NOT NULL")]
		public bool G8c3
		{
			get
			{
				return this._G8c3;
			}
			set
			{
				if ((this._G8c3 != value))
				{
					this.OnG8c3Changing(value);
					this.SendPropertyChanging();
					this._G8c3 = value;
					this.SendPropertyChanged("G8c3");
					this.OnG8c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c4", DbType="Bit NOT NULL")]
		public bool G8c4
		{
			get
			{
				return this._G8c4;
			}
			set
			{
				if ((this._G8c4 != value))
				{
					this.OnG8c4Changing(value);
					this.SendPropertyChanging();
					this._G8c4 = value;
					this.SendPropertyChanged("G8c4");
					this.OnG8c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c5", DbType="Bit NOT NULL")]
		public bool G8c5
		{
			get
			{
				return this._G8c5;
			}
			set
			{
				if ((this._G8c5 != value))
				{
					this.OnG8c5Changing(value);
					this.SendPropertyChanging();
					this._G8c5 = value;
					this.SendPropertyChanged("G8c5");
					this.OnG8c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c6", DbType="Bit NOT NULL")]
		public bool G8c6
		{
			get
			{
				return this._G8c6;
			}
			set
			{
				if ((this._G8c6 != value))
				{
					this.OnG8c6Changing(value);
					this.SendPropertyChanging();
					this._G8c6 = value;
					this.SendPropertyChanged("G8c6");
					this.OnG8c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c7", DbType="Bit NOT NULL")]
		public bool G8c7
		{
			get
			{
				return this._G8c7;
			}
			set
			{
				if ((this._G8c7 != value))
				{
					this.OnG8c7Changing(value);
					this.SendPropertyChanging();
					this._G8c7 = value;
					this.SendPropertyChanged("G8c7");
					this.OnG8c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c8", DbType="Bit NOT NULL")]
		public bool G8c8
		{
			get
			{
				return this._G8c8;
			}
			set
			{
				if ((this._G8c8 != value))
				{
					this.OnG8c8Changing(value);
					this.SendPropertyChanging();
					this._G8c8 = value;
					this.SendPropertyChanged("G8c8");
					this.OnG8c8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c9", DbType="Bit NOT NULL")]
		public bool G8c9
		{
			get
			{
				return this._G8c9;
			}
			set
			{
				if ((this._G8c9 != value))
				{
					this.OnG8c9Changing(value);
					this.SendPropertyChanging();
					this._G8c9 = value;
					this.SendPropertyChanged("G8c9");
					this.OnG8c9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c10", DbType="Bit NOT NULL")]
		public bool G8c10
		{
			get
			{
				return this._G8c10;
			}
			set
			{
				if ((this._G8c10 != value))
				{
					this.OnG8c10Changing(value);
					this.SendPropertyChanging();
					this._G8c10 = value;
					this.SendPropertyChanged("G8c10");
					this.OnG8c10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c11", DbType="Bit NOT NULL")]
		public bool G8c11
		{
			get
			{
				return this._G8c11;
			}
			set
			{
				if ((this._G8c11 != value))
				{
					this.OnG8c11Changing(value);
					this.SendPropertyChanging();
					this._G8c11 = value;
					this.SendPropertyChanged("G8c11");
					this.OnG8c11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8c12", DbType="Bit NOT NULL")]
		public bool G8c12
		{
			get
			{
				return this._G8c12;
			}
			set
			{
				if ((this._G8c12 != value))
				{
					this.OnG8c12Changing(value);
					this.SendPropertyChanging();
					this._G8c12 = value;
					this.SendPropertyChanged("G8c12");
					this.OnG8c12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G8Description", DbType="NVarChar(100)")]
		public string G8Description
		{
			get
			{
				return this._G8Description;
			}
			set
			{
				if ((this._G8Description != value))
				{
					this.OnG8DescriptionChanging(value);
					this.SendPropertyChanging();
					this._G8Description = value;
					this.SendPropertyChanged("G8Description");
					this.OnG8DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c1", DbType="Bit NOT NULL")]
		public bool G9c1
		{
			get
			{
				return this._G9c1;
			}
			set
			{
				if ((this._G9c1 != value))
				{
					this.OnG9c1Changing(value);
					this.SendPropertyChanging();
					this._G9c1 = value;
					this.SendPropertyChanged("G9c1");
					this.OnG9c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c2", DbType="Bit NOT NULL")]
		public bool G9c2
		{
			get
			{
				return this._G9c2;
			}
			set
			{
				if ((this._G9c2 != value))
				{
					this.OnG9c2Changing(value);
					this.SendPropertyChanging();
					this._G9c2 = value;
					this.SendPropertyChanged("G9c2");
					this.OnG9c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c3", DbType="Bit NOT NULL")]
		public bool G9c3
		{
			get
			{
				return this._G9c3;
			}
			set
			{
				if ((this._G9c3 != value))
				{
					this.OnG9c3Changing(value);
					this.SendPropertyChanging();
					this._G9c3 = value;
					this.SendPropertyChanged("G9c3");
					this.OnG9c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c4", DbType="Bit NOT NULL")]
		public bool G9c4
		{
			get
			{
				return this._G9c4;
			}
			set
			{
				if ((this._G9c4 != value))
				{
					this.OnG9c4Changing(value);
					this.SendPropertyChanging();
					this._G9c4 = value;
					this.SendPropertyChanged("G9c4");
					this.OnG9c4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c5", DbType="Bit NOT NULL")]
		public bool G9c5
		{
			get
			{
				return this._G9c5;
			}
			set
			{
				if ((this._G9c5 != value))
				{
					this.OnG9c5Changing(value);
					this.SendPropertyChanging();
					this._G9c5 = value;
					this.SendPropertyChanged("G9c5");
					this.OnG9c5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c6", DbType="Bit NOT NULL")]
		public bool G9c6
		{
			get
			{
				return this._G9c6;
			}
			set
			{
				if ((this._G9c6 != value))
				{
					this.OnG9c6Changing(value);
					this.SendPropertyChanging();
					this._G9c6 = value;
					this.SendPropertyChanged("G9c6");
					this.OnG9c6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c7", DbType="Bit NOT NULL")]
		public bool G9c7
		{
			get
			{
				return this._G9c7;
			}
			set
			{
				if ((this._G9c7 != value))
				{
					this.OnG9c7Changing(value);
					this.SendPropertyChanging();
					this._G9c7 = value;
					this.SendPropertyChanged("G9c7");
					this.OnG9c7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c8", DbType="Bit NOT NULL")]
		public bool G9c8
		{
			get
			{
				return this._G9c8;
			}
			set
			{
				if ((this._G9c8 != value))
				{
					this.OnG9c8Changing(value);
					this.SendPropertyChanging();
					this._G9c8 = value;
					this.SendPropertyChanged("G9c8");
					this.OnG9c8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G9c9", DbType="Bit NOT NULL")]
		public bool G9c9
		{
			get
			{
				return this._G9c9;
			}
			set
			{
				if ((this._G9c9 != value))
				{
					this.OnG9c9Changing(value);
					this.SendPropertyChanging();
					this._G9c9 = value;
					this.SendPropertyChanged("G9c9");
					this.OnG9c9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10c1", DbType="Bit NOT NULL")]
		public bool G10c1
		{
			get
			{
				return this._G10c1;
			}
			set
			{
				if ((this._G10c1 != value))
				{
					this.OnG10c1Changing(value);
					this.SendPropertyChanging();
					this._G10c1 = value;
					this.SendPropertyChanged("G10c1");
					this.OnG10c1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10c2", DbType="Bit NOT NULL")]
		public bool G10c2
		{
			get
			{
				return this._G10c2;
			}
			set
			{
				if ((this._G10c2 != value))
				{
					this.OnG10c2Changing(value);
					this.SendPropertyChanging();
					this._G10c2 = value;
					this.SendPropertyChanged("G10c2");
					this.OnG10c2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10c3", DbType="Bit NOT NULL")]
		public bool G10c3
		{
			get
			{
				return this._G10c3;
			}
			set
			{
				if ((this._G10c3 != value))
				{
					this.OnG10c3Changing(value);
					this.SendPropertyChanging();
					this._G10c3 = value;
					this.SendPropertyChanged("G10c3");
					this.OnG10c3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10t1", DbType="NVarChar(50)")]
		public string G10t1
		{
			get
			{
				return this._G10t1;
			}
			set
			{
				if ((this._G10t1 != value))
				{
					this.OnG10t1Changing(value);
					this.SendPropertyChanging();
					this._G10t1 = value;
					this.SendPropertyChanged("G10t1");
					this.OnG10t1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10t2", DbType="NVarChar(50)")]
		public string G10t2
		{
			get
			{
				return this._G10t2;
			}
			set
			{
				if ((this._G10t2 != value))
				{
					this.OnG10t2Changing(value);
					this.SendPropertyChanging();
					this._G10t2 = value;
					this.SendPropertyChanged("G10t2");
					this.OnG10t2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10t3", DbType="NVarChar(50)")]
		public string G10t3
		{
			get
			{
				return this._G10t3;
			}
			set
			{
				if ((this._G10t3 != value))
				{
					this.OnG10t3Changing(value);
					this.SendPropertyChanging();
					this._G10t3 = value;
					this.SendPropertyChanged("G10t3");
					this.OnG10t3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10t4", DbType="NVarChar(10)")]
		public string G10t4
		{
			get
			{
				return this._G10t4;
			}
			set
			{
				if ((this._G10t4 != value))
				{
					this.OnG10t4Changing(value);
					this.SendPropertyChanging();
					this._G10t4 = value;
					this.SendPropertyChanged("G10t4");
					this.OnG10t4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G10t5", DbType="NVarChar(5)")]
		public string G10t5
		{
			get
			{
				return this._G10t5;
			}
			set
			{
				if ((this._G10t5 != value))
				{
					this.OnG10t5Changing(value);
					this.SendPropertyChanging();
					this._G10t5 = value;
					this.SendPropertyChanged("G10t5");
					this.OnG10t5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G11t1", DbType="NVarChar(50)")]
		public string G11t1
		{
			get
			{
				return this._G11t1;
			}
			set
			{
				if ((this._G11t1 != value))
				{
					this.OnG11t1Changing(value);
					this.SendPropertyChanging();
					this._G11t1 = value;
					this.SendPropertyChanged("G11t1");
					this.OnG11t1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G11t2", DbType="NVarChar(10)")]
		public string G11t2
		{
			get
			{
				return this._G11t2;
			}
			set
			{
				if ((this._G11t2 != value))
				{
					this.OnG11t2Changing(value);
					this.SendPropertyChanging();
					this._G11t2 = value;
					this.SendPropertyChanged("G11t2");
					this.OnG11t2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G11t3", DbType="NVarChar(10)")]
		public string G11t3
		{
			get
			{
				return this._G11t3;
			}
			set
			{
				if ((this._G11t3 != value))
				{
					this.OnG11t3Changing(value);
					this.SendPropertyChanging();
					this._G11t3 = value;
					this.SendPropertyChanged("G11t3");
					this.OnG11t3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G11t4", DbType="NVarChar(50)")]
		public string G11t4
		{
			get
			{
				return this._G11t4;
			}
			set
			{
				if ((this._G11t4 != value))
				{
					this.OnG11t4Changing(value);
					this.SendPropertyChanging();
					this._G11t4 = value;
					this.SendPropertyChanged("G11t4");
					this.OnG11t4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G11t5", DbType="NVarChar(50)")]
		public string G11t5
		{
			get
			{
				return this._G11t5;
			}
			set
			{
				if ((this._G11t5 != value))
				{
					this.OnG11t5Changing(value);
					this.SendPropertyChanging();
					this._G11t5 = value;
					this.SendPropertyChanged("G11t5");
					this.OnG11t5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_ComplicationsBB", Storage="_Dossier", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.ComplicationsBB = null;
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.ComplicationsBB = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultant")]
	public partial class Consultant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _ReqType;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private string _ReqText;
		
		private string _ReplyText;
		
		private string _ReqTime;
		
		private string _ReqDate;
		
		private string _ReplyTime;
		
		private string _ReplyDate;
		
		private System.Nullable<long> _DossierID;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnReqTypeChanging(string value);
    partial void OnReqTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnReqTextChanging(string value);
    partial void OnReqTextChanged();
    partial void OnReplyTextChanging(string value);
    partial void OnReplyTextChanged();
    partial void OnReqTimeChanging(string value);
    partial void OnReqTimeChanged();
    partial void OnReqDateChanging(string value);
    partial void OnReqDateChanged();
    partial void OnReplyTimeChanging(string value);
    partial void OnReplyTimeChanged();
    partial void OnReplyDateChanging(string value);
    partial void OnReplyDateChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    #endregion
		
		public Consultant()
		{
			this._Dossier = default(EntityRef<Dossier>);
			this._Speciality = default(EntityRef<Speciality>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqType", DbType="NVarChar(50)")]
		public string ReqType
		{
			get
			{
				return this._ReqType;
			}
			set
			{
				if ((this._ReqType != value))
				{
					this.OnReqTypeChanging(value);
					this.SendPropertyChanging();
					this._ReqType = value;
					this.SendPropertyChanged("ReqType");
					this.OnReqTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqText", DbType="NVarChar(MAX)")]
		public string ReqText
		{
			get
			{
				return this._ReqText;
			}
			set
			{
				if ((this._ReqText != value))
				{
					this.OnReqTextChanging(value);
					this.SendPropertyChanging();
					this._ReqText = value;
					this.SendPropertyChanged("ReqText");
					this.OnReqTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyText", DbType="NVarChar(MAX)")]
		public string ReplyText
		{
			get
			{
				return this._ReplyText;
			}
			set
			{
				if ((this._ReplyText != value))
				{
					this.OnReplyTextChanging(value);
					this.SendPropertyChanging();
					this._ReplyText = value;
					this.SendPropertyChanged("ReplyText");
					this.OnReplyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqTime", DbType="NChar(10)")]
		public string ReqTime
		{
			get
			{
				return this._ReqTime;
			}
			set
			{
				if ((this._ReqTime != value))
				{
					this.OnReqTimeChanging(value);
					this.SendPropertyChanging();
					this._ReqTime = value;
					this.SendPropertyChanged("ReqTime");
					this.OnReqTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqDate", DbType="NChar(10)")]
		public string ReqDate
		{
			get
			{
				return this._ReqDate;
			}
			set
			{
				if ((this._ReqDate != value))
				{
					this.OnReqDateChanging(value);
					this.SendPropertyChanging();
					this._ReqDate = value;
					this.SendPropertyChanged("ReqDate");
					this.OnReqDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTime", DbType="NChar(10)")]
		public string ReplyTime
		{
			get
			{
				return this._ReplyTime;
			}
			set
			{
				if ((this._ReplyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyDate", DbType="NChar(10)")]
		public string ReplyDate
		{
			get
			{
				return this._ReplyDate;
			}
			set
			{
				if ((this._ReplyDate != value))
				{
					this.OnReplyDateChanging(value);
					this.SendPropertyChanging();
					this._ReplyDate = value;
					this.SendPropertyChanged("ReplyDate");
					this.OnReplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Consultant", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Consultants.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Consultants.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Consultant", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Consultants.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Consultants.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Consultant", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Consultants.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Consultants.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostsAndIncome")]
	public partial class CostsAndIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _CostTypeID;
		
		private string _Date;
		
		private string _Time;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _DocumentNumber;
		
		private System.Nullable<bool> _Income;
		
		private string _Comment;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<CostType> _CostType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCostTypeIDChanging(System.Guid value);
    partial void OnCostTypeIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnDocumentNumberChanging(System.Nullable<int> value);
    partial void OnDocumentNumberChanged();
    partial void OnIncomeChanging(System.Nullable<bool> value);
    partial void OnIncomeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public CostsAndIncome()
		{
			this._CostType = default(EntityRef<CostType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CostTypeID
		{
			get
			{
				return this._CostTypeID;
			}
			set
			{
				if ((this._CostTypeID != value))
				{
					if (this._CostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CostTypeID = value;
					this.SendPropertyChanged("CostTypeID");
					this.OnCostTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="Int")]
		public System.Nullable<int> DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Bit")]
		public System.Nullable<bool> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_CostsAndIncome", Storage="_CostType", ThisKey="CostTypeID", OtherKey="ID", IsForeignKey=true)]
		public CostType CostType
		{
			get
			{
				return this._CostType.Entity;
			}
			set
			{
				CostType previousValue = this._CostType.Entity;
				if (((previousValue != value) 
							|| (this._CostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostType.Entity = null;
						previousValue.CostsAndIncomes.Remove(this);
					}
					this._CostType.Entity = value;
					if ((value != null))
					{
						value.CostsAndIncomes.Add(this);
						this._CostTypeID = value.ID;
					}
					else
					{
						this._CostTypeID = default(System.Guid);
					}
					this.SendPropertyChanged("CostType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostType")]
	public partial class CostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Name;
		
		private System.Nullable<bool> _Income;
		
		private EntitySet<CostsAndIncome> _CostsAndIncomes;
		
		private EntitySet<CostType> _CostTypes;
		
		private EntityRef<CostType> _CostType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIncomeChanging(System.Nullable<bool> value);
    partial void OnIncomeChanged();
    #endregion
		
		public CostType()
		{
			this._CostsAndIncomes = new EntitySet<CostsAndIncome>(new Action<CostsAndIncome>(this.attach_CostsAndIncomes), new Action<CostsAndIncome>(this.detach_CostsAndIncomes));
			this._CostTypes = new EntitySet<CostType>(new Action<CostType>(this.attach_CostTypes), new Action<CostType>(this.detach_CostTypes));
			this._CostType1 = default(EntityRef<CostType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._CostType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Bit")]
		public System.Nullable<bool> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_CostsAndIncome", Storage="_CostsAndIncomes", ThisKey="ID", OtherKey="CostTypeID")]
		public EntitySet<CostsAndIncome> CostsAndIncomes
		{
			get
			{
				return this._CostsAndIncomes;
			}
			set
			{
				this._CostsAndIncomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_CostType", Storage="_CostTypes", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<CostType> CostTypes
		{
			get
			{
				return this._CostTypes;
			}
			set
			{
				this._CostTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostType_CostType", Storage="_CostType1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public CostType CostType1
		{
			get
			{
				return this._CostType1.Entity;
			}
			set
			{
				CostType previousValue = this._CostType1.Entity;
				if (((previousValue != value) 
							|| (this._CostType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostType1.Entity = null;
						previousValue.CostTypes.Remove(this);
					}
					this._CostType1.Entity = value;
					if ((value != null))
					{
						value.CostTypes.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CostType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CostsAndIncomes(CostsAndIncome entity)
		{
			this.SendPropertyChanging();
			entity.CostType = this;
		}
		
		private void detach_CostsAndIncomes(CostsAndIncome entity)
		{
			this.SendPropertyChanging();
			entity.CostType = null;
		}
		
		private void attach_CostTypes(CostType entity)
		{
			this.SendPropertyChanging();
			entity.CostType1 = this;
		}
		
		private void detach_CostTypes(CostType entity)
		{
			this.SendPropertyChanging();
			entity.CostType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CPR")]
	public partial class CPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GSDID;
		
		private System.Nullable<System.TimeSpan> _CPRAnnounce;
		
		private System.Nullable<System.TimeSpan> _CPRGroupPresence;
		
		private System.Nullable<System.TimeSpan> _CPRBegin;
		
		private System.Nullable<System.TimeSpan> _CPREnd;
		
		private bool _Expair;
		
		private bool _HasVitalSign;
		
		private System.Nullable<System.Guid> _HeartAssistant;
		
		private System.Nullable<System.Guid> _InternistAssistant;
		
		private System.Nullable<System.Guid> _AnesthesiologistTechnician;
		
		private System.Nullable<System.Guid> _Anesthesiologist;
		
		private System.Nullable<System.Guid> _Nurse1;
		
		private System.Nullable<System.Guid> _Nurse2;
		
		private System.Nullable<System.Guid> _Nurse3;
		
		private System.Nullable<System.Guid> _Nurse4;
		
		private System.Nullable<System.Guid> _Nurse5;
		
		private string _CPRResultReport;
		
		private string _QualityManagementReport;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGSDIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSDIDChanged();
    partial void OnCPRAnnounceChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCPRAnnounceChanged();
    partial void OnCPRGroupPresenceChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCPRGroupPresenceChanged();
    partial void OnCPRBeginChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCPRBeginChanged();
    partial void OnCPREndChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCPREndChanged();
    partial void OnExpairChanging(bool value);
    partial void OnExpairChanged();
    partial void OnHasVitalSignChanging(bool value);
    partial void OnHasVitalSignChanged();
    partial void OnHeartAssistantChanging(System.Nullable<System.Guid> value);
    partial void OnHeartAssistantChanged();
    partial void OnInternistAssistantChanging(System.Nullable<System.Guid> value);
    partial void OnInternistAssistantChanged();
    partial void OnAnesthesiologistTechnicianChanging(System.Nullable<System.Guid> value);
    partial void OnAnesthesiologistTechnicianChanged();
    partial void OnAnesthesiologistChanging(System.Nullable<System.Guid> value);
    partial void OnAnesthesiologistChanged();
    partial void OnNurse1Changing(System.Nullable<System.Guid> value);
    partial void OnNurse1Changed();
    partial void OnNurse2Changing(System.Nullable<System.Guid> value);
    partial void OnNurse2Changed();
    partial void OnNurse3Changing(System.Nullable<System.Guid> value);
    partial void OnNurse3Changed();
    partial void OnNurse4Changing(System.Nullable<System.Guid> value);
    partial void OnNurse4Changed();
    partial void OnNurse5Changing(System.Nullable<System.Guid> value);
    partial void OnNurse5Changed();
    partial void OnCPRResultReportChanging(string value);
    partial void OnCPRResultReportChanged();
    partial void OnQualityManagementReportChanging(string value);
    partial void OnQualityManagementReportChanged();
    #endregion
		
		public CPR()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSDID
		{
			get
			{
				return this._GSDID;
			}
			set
			{
				if ((this._GSDID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSDIDChanging(value);
					this.SendPropertyChanging();
					this._GSDID = value;
					this.SendPropertyChanged("GSDID");
					this.OnGSDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPRAnnounce", DbType="Time")]
		public System.Nullable<System.TimeSpan> CPRAnnounce
		{
			get
			{
				return this._CPRAnnounce;
			}
			set
			{
				if ((this._CPRAnnounce != value))
				{
					this.OnCPRAnnounceChanging(value);
					this.SendPropertyChanging();
					this._CPRAnnounce = value;
					this.SendPropertyChanged("CPRAnnounce");
					this.OnCPRAnnounceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPRGroupPresence", DbType="Time")]
		public System.Nullable<System.TimeSpan> CPRGroupPresence
		{
			get
			{
				return this._CPRGroupPresence;
			}
			set
			{
				if ((this._CPRGroupPresence != value))
				{
					this.OnCPRGroupPresenceChanging(value);
					this.SendPropertyChanging();
					this._CPRGroupPresence = value;
					this.SendPropertyChanged("CPRGroupPresence");
					this.OnCPRGroupPresenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPRBegin", DbType="Time")]
		public System.Nullable<System.TimeSpan> CPRBegin
		{
			get
			{
				return this._CPRBegin;
			}
			set
			{
				if ((this._CPRBegin != value))
				{
					this.OnCPRBeginChanging(value);
					this.SendPropertyChanging();
					this._CPRBegin = value;
					this.SendPropertyChanged("CPRBegin");
					this.OnCPRBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPREnd", DbType="Time")]
		public System.Nullable<System.TimeSpan> CPREnd
		{
			get
			{
				return this._CPREnd;
			}
			set
			{
				if ((this._CPREnd != value))
				{
					this.OnCPREndChanging(value);
					this.SendPropertyChanging();
					this._CPREnd = value;
					this.SendPropertyChanged("CPREnd");
					this.OnCPREndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expair", DbType="Bit NOT NULL")]
		public bool Expair
		{
			get
			{
				return this._Expair;
			}
			set
			{
				if ((this._Expair != value))
				{
					this.OnExpairChanging(value);
					this.SendPropertyChanging();
					this._Expair = value;
					this.SendPropertyChanged("Expair");
					this.OnExpairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasVitalSign", DbType="Bit NOT NULL")]
		public bool HasVitalSign
		{
			get
			{
				return this._HasVitalSign;
			}
			set
			{
				if ((this._HasVitalSign != value))
				{
					this.OnHasVitalSignChanging(value);
					this.SendPropertyChanging();
					this._HasVitalSign = value;
					this.SendPropertyChanged("HasVitalSign");
					this.OnHasVitalSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartAssistant", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> HeartAssistant
		{
			get
			{
				return this._HeartAssistant;
			}
			set
			{
				if ((this._HeartAssistant != value))
				{
					this.OnHeartAssistantChanging(value);
					this.SendPropertyChanging();
					this._HeartAssistant = value;
					this.SendPropertyChanged("HeartAssistant");
					this.OnHeartAssistantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternistAssistant", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InternistAssistant
		{
			get
			{
				return this._InternistAssistant;
			}
			set
			{
				if ((this._InternistAssistant != value))
				{
					this.OnInternistAssistantChanging(value);
					this.SendPropertyChanging();
					this._InternistAssistant = value;
					this.SendPropertyChanged("InternistAssistant");
					this.OnInternistAssistantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnesthesiologistTechnician", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AnesthesiologistTechnician
		{
			get
			{
				return this._AnesthesiologistTechnician;
			}
			set
			{
				if ((this._AnesthesiologistTechnician != value))
				{
					this.OnAnesthesiologistTechnicianChanging(value);
					this.SendPropertyChanging();
					this._AnesthesiologistTechnician = value;
					this.SendPropertyChanged("AnesthesiologistTechnician");
					this.OnAnesthesiologistTechnicianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anesthesiologist", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Anesthesiologist
		{
			get
			{
				return this._Anesthesiologist;
			}
			set
			{
				if ((this._Anesthesiologist != value))
				{
					this.OnAnesthesiologistChanging(value);
					this.SendPropertyChanging();
					this._Anesthesiologist = value;
					this.SendPropertyChanged("Anesthesiologist");
					this.OnAnesthesiologistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nurse1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Nurse1
		{
			get
			{
				return this._Nurse1;
			}
			set
			{
				if ((this._Nurse1 != value))
				{
					this.OnNurse1Changing(value);
					this.SendPropertyChanging();
					this._Nurse1 = value;
					this.SendPropertyChanged("Nurse1");
					this.OnNurse1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nurse2", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Nurse2
		{
			get
			{
				return this._Nurse2;
			}
			set
			{
				if ((this._Nurse2 != value))
				{
					this.OnNurse2Changing(value);
					this.SendPropertyChanging();
					this._Nurse2 = value;
					this.SendPropertyChanged("Nurse2");
					this.OnNurse2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nurse3", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Nurse3
		{
			get
			{
				return this._Nurse3;
			}
			set
			{
				if ((this._Nurse3 != value))
				{
					this.OnNurse3Changing(value);
					this.SendPropertyChanging();
					this._Nurse3 = value;
					this.SendPropertyChanged("Nurse3");
					this.OnNurse3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nurse4", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Nurse4
		{
			get
			{
				return this._Nurse4;
			}
			set
			{
				if ((this._Nurse4 != value))
				{
					this.OnNurse4Changing(value);
					this.SendPropertyChanging();
					this._Nurse4 = value;
					this.SendPropertyChanged("Nurse4");
					this.OnNurse4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nurse5", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Nurse5
		{
			get
			{
				return this._Nurse5;
			}
			set
			{
				if ((this._Nurse5 != value))
				{
					this.OnNurse5Changing(value);
					this.SendPropertyChanging();
					this._Nurse5 = value;
					this.SendPropertyChanged("Nurse5");
					this.OnNurse5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPRResultReport", DbType="NVarChar(3000)")]
		public string CPRResultReport
		{
			get
			{
				return this._CPRResultReport;
			}
			set
			{
				if ((this._CPRResultReport != value))
				{
					this.OnCPRResultReportChanging(value);
					this.SendPropertyChanging();
					this._CPRResultReport = value;
					this.SendPropertyChanged("CPRResultReport");
					this.OnCPRResultReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityManagementReport", DbType="NVarChar(3000)")]
		public string QualityManagementReport
		{
			get
			{
				return this._QualityManagementReport;
			}
			set
			{
				if ((this._QualityManagementReport != value))
				{
					this.OnQualityManagementReportChanging(value);
					this.SendPropertyChanging();
					this._QualityManagementReport = value;
					this.SendPropertyChanged("QualityManagementReport");
					this.OnQualityManagementReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_CPR", Storage="_GivenServiceD", ThisKey="GSDID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.CPRs.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.CPRs.Add(this);
						this._GSDID = value.ID;
					}
					else
					{
						this._GSDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Parent;
		
		private string _Name;
		
		private System.Nullable<int> _SepasID;
		
		private EntitySet<BreastExamination> _BreastExaminations;
		
		private EntitySet<BreastExamination> _BreastExaminations1;
		
		private EntitySet<BreastExamination> _BreastExaminations2;
		
		private EntitySet<BreastExamination> _BreastExaminations3;
		
		private EntitySet<BreastExamination> _BreastExaminations4;
		
		private EntitySet<Definition> _Definitions;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<PeriodicCalender> _PeriodicCalenders;
		
		private EntitySet<Presentation> _Presentations;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    #endregion
		
		public Definition()
		{
			this._BreastExaminations = new EntitySet<BreastExamination>(new Action<BreastExamination>(this.attach_BreastExaminations), new Action<BreastExamination>(this.detach_BreastExaminations));
			this._BreastExaminations1 = new EntitySet<BreastExamination>(new Action<BreastExamination>(this.attach_BreastExaminations1), new Action<BreastExamination>(this.detach_BreastExaminations1));
			this._BreastExaminations2 = new EntitySet<BreastExamination>(new Action<BreastExamination>(this.attach_BreastExaminations2), new Action<BreastExamination>(this.detach_BreastExaminations2));
			this._BreastExaminations3 = new EntitySet<BreastExamination>(new Action<BreastExamination>(this.attach_BreastExaminations3), new Action<BreastExamination>(this.detach_BreastExaminations3));
			this._BreastExaminations4 = new EntitySet<BreastExamination>(new Action<BreastExamination>(this.attach_BreastExaminations4), new Action<BreastExamination>(this.detach_BreastExaminations4));
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._PeriodicCalenders = new EntitySet<PeriodicCalender>(new Action<PeriodicCalender>(this.attach_PeriodicCalenders), new Action<PeriodicCalender>(this.detach_PeriodicCalenders));
			this._Presentations = new EntitySet<Presentation>(new Action<Presentation>(this.attach_Presentations), new Action<Presentation>(this.detach_Presentations));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination", Storage="_BreastExaminations", ThisKey="ID", OtherKey="MassesStatus")]
		public EntitySet<BreastExamination> BreastExaminations
		{
			get
			{
				return this._BreastExaminations;
			}
			set
			{
				this._BreastExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination1", Storage="_BreastExaminations1", ThisKey="ID", OtherKey="Calcification")]
		public EntitySet<BreastExamination> BreastExaminations1
		{
			get
			{
				return this._BreastExaminations1;
			}
			set
			{
				this._BreastExaminations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination2", Storage="_BreastExaminations2", ThisKey="ID", OtherKey="DifferentialDiagnosis")]
		public EntitySet<BreastExamination> BreastExaminations2
		{
			get
			{
				return this._BreastExaminations2;
			}
			set
			{
				this._BreastExaminations2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination3", Storage="_BreastExaminations3", ThisKey="ID", OtherKey="Texture")]
		public EntitySet<BreastExamination> BreastExaminations3
		{
			get
			{
				return this._BreastExaminations3;
			}
			set
			{
				this._BreastExaminations3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_BreastExamination4", Storage="_BreastExaminations4", ThisKey="ID", OtherKey="Pattern")]
		public EntitySet<BreastExamination> BreastExaminations4
		{
			get
			{
				return this._BreastExaminations4;
			}
			set
			{
				this._BreastExaminations4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Departments", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="PatientStatus")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="VisitType")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PeriodicCalender", Storage="_PeriodicCalenders", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<PeriodicCalender> PeriodicCalenders
		{
			get
			{
				return this._PeriodicCalenders;
			}
			set
			{
				this._PeriodicCalenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Presentation", Storage="_Presentations", ThisKey="ID", OtherKey="PatientCondition")]
		public EntitySet<Presentation> Presentations
		{
			get
			{
				return this._Presentations;
			}
			set
			{
				this._Presentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BreastExaminations(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_BreastExaminations(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_BreastExaminations1(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_BreastExaminations1(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_BreastExaminations2(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition2 = this;
		}
		
		private void detach_BreastExaminations2(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition2 = null;
		}
		
		private void attach_BreastExaminations3(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition3 = this;
		}
		
		private void detach_BreastExaminations3(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition3 = null;
		}
		
		private void attach_BreastExaminations4(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition4 = this;
		}
		
		private void detach_BreastExaminations4(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.Definition4 = null;
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
		
		private void attach_PeriodicCalenders(PeriodicCalender entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_PeriodicCalenders(PeriodicCalender entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Presentations(Presentation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Presentations(Presentation entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Denote")]
	public partial class Denote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _SqlCommand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnSqlCommandChanging(string value);
    partial void OnSqlCommandChanged();
    #endregion
		
		public Denote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SqlCommand", DbType="NVarChar(500)")]
		public string SqlCommand
		{
			get
			{
				return this._SqlCommand;
			}
			set
			{
				if ((this._SqlCommand != value))
				{
					this.OnSqlCommandChanging(value);
					this.SendPropertyChanging();
					this._SqlCommand = value;
					this.SendPropertyChanged("SqlCommand");
					this.OnSqlCommandChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DenoteDailyResult")]
	public partial class DenoteDailyResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DenoteDetailID;
		
		private System.Nullable<double> _Answer;
		
		private string _Date;
		
		private System.Nullable<int> _IDValidCenter;
		
		private System.Nullable<int> _IDValidCenterZone;
		
		private string _Da;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDenoteDetailIDChanging(System.Nullable<int> value);
    partial void OnDenoteDetailIDChanged();
    partial void OnAnswerChanging(System.Nullable<double> value);
    partial void OnAnswerChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnIDValidCenterChanging(System.Nullable<int> value);
    partial void OnIDValidCenterChanged();
    partial void OnIDValidCenterZoneChanging(System.Nullable<int> value);
    partial void OnIDValidCenterZoneChanged();
    partial void OnDaChanging(string value);
    partial void OnDaChanged();
    #endregion
		
		public DenoteDailyResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenoteDetailID", DbType="Int")]
		public System.Nullable<int> DenoteDetailID
		{
			get
			{
				return this._DenoteDetailID;
			}
			set
			{
				if ((this._DenoteDetailID != value))
				{
					this.OnDenoteDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DenoteDetailID = value;
					this.SendPropertyChanged("DenoteDetailID");
					this.OnDenoteDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="Float")]
		public System.Nullable<double> Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", DbType="Int")]
		public System.Nullable<int> IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this.OnIDValidCenterChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenter = value;
					this.SendPropertyChanged("IDValidCenter");
					this.OnIDValidCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="Int")]
		public System.Nullable<int> IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this.OnIDValidCenterZoneChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenterZone = value;
					this.SendPropertyChanged("IDValidCenterZone");
					this.OnIDValidCenterZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Da", DbType="NVarChar(50)")]
		public string Da
		{
			get
			{
				return this._Da;
			}
			set
			{
				if ((this._Da != value))
				{
					this.OnDaChanging(value);
					this.SendPropertyChanging();
					this._Da = value;
					this.SendPropertyChanged("Da");
					this.OnDaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DenoteDetail")]
	public partial class DenoteDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Func_NAme;
		
		private string _Param1;
		
		private string _Param2;
		
		private string _Param3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFunc_NAmeChanging(string value);
    partial void OnFunc_NAmeChanged();
    partial void OnParam1Changing(string value);
    partial void OnParam1Changed();
    partial void OnParam2Changing(string value);
    partial void OnParam2Changed();
    partial void OnParam3Changing(string value);
    partial void OnParam3Changed();
    #endregion
		
		public DenoteDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Func_NAme", DbType="NVarChar(1000)")]
		public string Func_NAme
		{
			get
			{
				return this._Func_NAme;
			}
			set
			{
				if ((this._Func_NAme != value))
				{
					this.OnFunc_NAmeChanging(value);
					this.SendPropertyChanging();
					this._Func_NAme = value;
					this.SendPropertyChanged("Func_NAme");
					this.OnFunc_NAmeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param1", DbType="NVarChar(100)")]
		public string Param1
		{
			get
			{
				return this._Param1;
			}
			set
			{
				if ((this._Param1 != value))
				{
					this.OnParam1Changing(value);
					this.SendPropertyChanging();
					this._Param1 = value;
					this.SendPropertyChanged("Param1");
					this.OnParam1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param2", DbType="NVarChar(50)")]
		public string Param2
		{
			get
			{
				return this._Param2;
			}
			set
			{
				if ((this._Param2 != value))
				{
					this.OnParam2Changing(value);
					this.SendPropertyChanging();
					this._Param2 = value;
					this.SendPropertyChanged("Param2");
					this.OnParam2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param3", DbType="NVarChar(50)")]
		public string Param3
		{
			get
			{
				return this._Param3;
			}
			set
			{
				if ((this._Param3 != value))
				{
					this.OnParam3Changing(value);
					this.SendPropertyChanging();
					this._Param3 = value;
					this.SendPropertyChanged("Param3");
					this.OnParam3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepAdvancePayment")]
	public partial class DepAdvancePayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<decimal> _AdvancePayment;
		
		private string _Comment;
		
		private string _Date;
		
		private System.Nullable<int> _InsuranceID;
		
		private EntityRef<Insurance> _Insurance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnAdvancePaymentChanging(System.Nullable<decimal> value);
    partial void OnAdvancePaymentChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    #endregion
		
		public DepAdvancePayment()
		{
			this._Insurance = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money")]
		public System.Nullable<decimal> AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this.OnAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._AdvancePayment = value;
					this.SendPropertyChanged("AdvancePayment");
					this.OnAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_DepAdvancePayment", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.DepAdvancePayments.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.DepAdvancePayments.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ClientID;
		
		private System.Nullable<int> _OldId;
		
		private int _IDInt;
		
		private System.Nullable<int> _IDIntParent;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<System.Guid> _Parent;
		
		private System.Nullable<int> _IMPHOID;
		
		private System.Nullable<int> _JamiatID;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdWardRef;
		
		private System.Nullable<int> _SataIdWardRefint;
		
		private System.Nullable<decimal> _VisitAmountPerHour;
		
		private bool _HideInReports;
		
		private System.Nullable<int> _IDValidCenter;
		
		private bool _Deleted;
		
		private EntitySet<Bed> _Beds;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<DrugTempelateForWard> _DrugTempelateForWards;
		
		private EntitySet<FactorM> _FactorMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Person> _Persons;
		
		private EntityRef<Pharmacy> _Pharmacy;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Reference> _References1;
		
		private EntitySet<RequestM> _RequestMs;
		
		private EntitySet<RequestM> _RequestMs1;
		
		private EntitySet<RequestPermission> _RequestPermissions;
		
		private EntitySet<RequestPermission> _RequestPermissions1;
		
		private EntitySet<SpecialityDepartment> _SpecialityDepartments;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<ClientConfig> _ClientConfig;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnClientIDChanging(System.Nullable<System.Guid> value);
    partial void OnClientIDChanged();
    partial void OnOldIdChanging(System.Nullable<int> value);
    partial void OnOldIdChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnIDIntParentChanging(System.Nullable<int> value);
    partial void OnIDIntParentChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnIMPHOIDChanging(System.Nullable<int> value);
    partial void OnIMPHOIDChanged();
    partial void OnJamiatIDChanging(System.Nullable<int> value);
    partial void OnJamiatIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdWardRefChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdWardRefChanged();
    partial void OnSataIdWardRefintChanging(System.Nullable<int> value);
    partial void OnSataIdWardRefintChanged();
    partial void OnVisitAmountPerHourChanging(System.Nullable<decimal> value);
    partial void OnVisitAmountPerHourChanged();
    partial void OnHideInReportsChanging(bool value);
    partial void OnHideInReportsChanged();
    partial void OnIDValidCenterChanging(System.Nullable<int> value);
    partial void OnIDValidCenterChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Department()
		{
			this._Beds = new EntitySet<Bed>(new Action<Bed>(this.attach_Beds), new Action<Bed>(this.detach_Beds));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._DrugTempelateForWards = new EntitySet<DrugTempelateForWard>(new Action<DrugTempelateForWard>(this.attach_DrugTempelateForWards), new Action<DrugTempelateForWard>(this.detach_DrugTempelateForWards));
			this._FactorMs = new EntitySet<FactorM>(new Action<FactorM>(this.attach_FactorMs), new Action<FactorM>(this.detach_FactorMs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Pharmacy = default(EntityRef<Pharmacy>);
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._References1 = new EntitySet<Reference>(new Action<Reference>(this.attach_References1), new Action<Reference>(this.detach_References1));
			this._RequestMs = new EntitySet<RequestM>(new Action<RequestM>(this.attach_RequestMs), new Action<RequestM>(this.detach_RequestMs));
			this._RequestMs1 = new EntitySet<RequestM>(new Action<RequestM>(this.attach_RequestMs1), new Action<RequestM>(this.detach_RequestMs1));
			this._RequestPermissions = new EntitySet<RequestPermission>(new Action<RequestPermission>(this.attach_RequestPermissions), new Action<RequestPermission>(this.detach_RequestPermissions));
			this._RequestPermissions1 = new EntitySet<RequestPermission>(new Action<RequestPermission>(this.attach_RequestPermissions1), new Action<RequestPermission>(this.detach_RequestPermissions1));
			this._SpecialityDepartments = new EntitySet<SpecialityDepartment>(new Action<SpecialityDepartment>(this.attach_SpecialityDepartments), new Action<SpecialityDepartment>(this.detach_SpecialityDepartments));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._ClientConfig = default(EntityRef<ClientConfig>);
			this._Definition = default(EntityRef<Definition>);
			this._Department1 = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._ClientConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int")]
		public System.Nullable<int> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntParent", DbType="Int")]
		public System.Nullable<int> IDIntParent
		{
			get
			{
				return this._IDIntParent;
			}
			set
			{
				if ((this._IDIntParent != value))
				{
					this.OnIDIntParentChanging(value);
					this.SendPropertyChanging();
					this._IDIntParent = value;
					this.SendPropertyChanged("IDIntParent");
					this.OnIDIntParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMPHOID", DbType="Int")]
		public System.Nullable<int> IMPHOID
		{
			get
			{
				return this._IMPHOID;
			}
			set
			{
				if ((this._IMPHOID != value))
				{
					this.OnIMPHOIDChanging(value);
					this.SendPropertyChanging();
					this._IMPHOID = value;
					this.SendPropertyChanged("IMPHOID");
					this.OnIMPHOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JamiatID", DbType="Int")]
		public System.Nullable<int> JamiatID
		{
			get
			{
				return this._JamiatID;
			}
			set
			{
				if ((this._JamiatID != value))
				{
					this.OnJamiatIDChanging(value);
					this.SendPropertyChanging();
					this._JamiatID = value;
					this.SendPropertyChanged("JamiatID");
					this.OnJamiatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdWardRef", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdWardRef
		{
			get
			{
				return this._SATAIdWardRef;
			}
			set
			{
				if ((this._SATAIdWardRef != value))
				{
					this.OnSATAIdWardRefChanging(value);
					this.SendPropertyChanging();
					this._SATAIdWardRef = value;
					this.SendPropertyChanged("SATAIdWardRef");
					this.OnSATAIdWardRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SataIdWardRefint", DbType="Int")]
		public System.Nullable<int> SataIdWardRefint
		{
			get
			{
				return this._SataIdWardRefint;
			}
			set
			{
				if ((this._SataIdWardRefint != value))
				{
					this.OnSataIdWardRefintChanging(value);
					this.SendPropertyChanging();
					this._SataIdWardRefint = value;
					this.SendPropertyChanged("SataIdWardRefint");
					this.OnSataIdWardRefintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitAmountPerHour", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> VisitAmountPerHour
		{
			get
			{
				return this._VisitAmountPerHour;
			}
			set
			{
				if ((this._VisitAmountPerHour != value))
				{
					this.OnVisitAmountPerHourChanging(value);
					this.SendPropertyChanging();
					this._VisitAmountPerHour = value;
					this.SendPropertyChanged("VisitAmountPerHour");
					this.OnVisitAmountPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideInReports", DbType="Bit NOT NULL")]
		public bool HideInReports
		{
			get
			{
				return this._HideInReports;
			}
			set
			{
				if ((this._HideInReports != value))
				{
					this.OnHideInReportsChanging(value);
					this.SendPropertyChanging();
					this._HideInReports = value;
					this.SendPropertyChanged("HideInReports");
					this.OnHideInReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", DbType="Int")]
		public System.Nullable<int> IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this.OnIDValidCenterChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenter = value;
					this.SendPropertyChanged("IDValidCenter");
					this.OnIDValidCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Bed", Storage="_Beds", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Bed> Beds
		{
			get
			{
				return this._Beds;
			}
			set
			{
				this._Beds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="DischargeDepID")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_DrugTempelateForWard", Storage="_DrugTempelateForWards", ThisKey="ID", OtherKey="WardID")]
		public EntitySet<DrugTempelateForWard> DrugTempelateForWards
		{
			get
			{
				return this._DrugTempelateForWards;
			}
			set
			{
				this._DrugTempelateForWards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_FactorM", Storage="_FactorMs", ThisKey="ID", OtherKey="Distributor")]
		public EntitySet<FactorM> FactorMs
		{
			get
			{
				return this._FactorMs;
			}
			set
			{
				this._FactorMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Person", Storage="_Persons", ThisKey="ID", OtherKey="FDDepartment")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Pharmacy", Storage="_Pharmacy", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Pharmacy Pharmacy
		{
			get
			{
				return this._Pharmacy.Entity;
			}
			set
			{
				Pharmacy previousValue = this._Pharmacy.Entity;
				if (((previousValue != value) 
							|| (this._Pharmacy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pharmacy.Entity = null;
						previousValue.Department = null;
					}
					this._Pharmacy.Entity = value;
					if ((value != null))
					{
						value.Department = this;
					}
					this.SendPropertyChanged("Pharmacy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="PharmacyID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_References", ThisKey="ID", OtherKey="DestinationWard")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_References1", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Reference> References1
		{
			get
			{
				return this._References1;
			}
			set
			{
				this._References1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM", Storage="_RequestMs", ThisKey="ID", OtherKey="FromUnit")]
		public EntitySet<RequestM> RequestMs
		{
			get
			{
				return this._RequestMs;
			}
			set
			{
				this._RequestMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM1", Storage="_RequestMs1", ThisKey="ID", OtherKey="ToUnit")]
		public EntitySet<RequestM> RequestMs1
		{
			get
			{
				return this._RequestMs1;
			}
			set
			{
				this._RequestMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestPermission", Storage="_RequestPermissions", ThisKey="ID", OtherKey="FromUnit")]
		public EntitySet<RequestPermission> RequestPermissions
		{
			get
			{
				return this._RequestPermissions;
			}
			set
			{
				this._RequestPermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestPermission1", Storage="_RequestPermissions1", ThisKey="ID", OtherKey="ToUnit")]
		public EntitySet<RequestPermission> RequestPermissions1
		{
			get
			{
				return this._RequestPermissions1;
			}
			set
			{
				this._RequestPermissions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_SpecialityDepartment", Storage="_SpecialityDepartments", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<SpecialityDepartment> SpecialityDepartments
		{
			get
			{
				return this._SpecialityDepartments;
			}
			set
			{
				this._SpecialityDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientConfig_Department", Storage="_ClientConfig", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public ClientConfig ClientConfig
		{
			get
			{
				return this._ClientConfig.Entity;
			}
			set
			{
				ClientConfig previousValue = this._ClientConfig.Entity;
				if (((previousValue != value) 
							|| (this._ClientConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientConfig.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._ClientConfig.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ClientConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Definition", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Beds(Bed entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Beds(Bed entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_DrugTempelateForWards(DrugTempelateForWard entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_DrugTempelateForWards(DrugTempelateForWard entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_References1(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_RequestMs(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_RequestMs(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_RequestMs1(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_RequestMs1(RequestM entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_RequestPermissions(RequestPermission entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_RequestPermissions(RequestPermission entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_RequestPermissions1(RequestPermission entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_RequestPermissions1(RequestPermission entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_SpecialityDepartments(SpecialityDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_SpecialityDepartments(SpecialityDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiagnosticServiceDetail")]
	public partial class DiagnosticServiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _Code;
		
		private string _Description;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DiagnosticServiceDetail()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DiagnosticServiceDetail", Storage="_Service", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DiagnosticServiceDetail = null;
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DiagnosticServiceDetail = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diet")]
	public partial class Diet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _GsdID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Meal;
		
		private System.Nullable<bool> _Along;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntitySet<Diet> _Diets;
		
		private EntityRef<Diet> _Diet1;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnGsdIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsdIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnMealChanging(string value);
    partial void OnMealChanged();
    partial void OnAlongChanging(System.Nullable<bool> value);
    partial void OnAlongChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public Diet()
		{
			this._Diets = new EntitySet<Diet>(new Action<Diet>(this.attach_Diets), new Action<Diet>(this.detach_Diets));
			this._Diet1 = default(EntityRef<Diet>);
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Diet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsdID
		{
			get
			{
				return this._GsdID;
			}
			set
			{
				if ((this._GsdID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsdIDChanging(value);
					this.SendPropertyChanging();
					this._GsdID = value;
					this.SendPropertyChanged("GsdID");
					this.OnGsdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meal", DbType="NVarChar(50)")]
		public string Meal
		{
			get
			{
				return this._Meal;
			}
			set
			{
				if ((this._Meal != value))
				{
					this.OnMealChanging(value);
					this.SendPropertyChanging();
					this._Meal = value;
					this.SendPropertyChanged("Meal");
					this.OnMealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Along", DbType="Bit")]
		public System.Nullable<bool> Along
		{
			get
			{
				return this._Along;
			}
			set
			{
				if ((this._Along != value))
				{
					this.OnAlongChanging(value);
					this.SendPropertyChanging();
					this._Along = value;
					this.SendPropertyChanged("Along");
					this.OnAlongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diet_Diet", Storage="_Diets", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Diet> Diets
		{
			get
			{
				return this._Diets;
			}
			set
			{
				this._Diets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diet_Diet", Storage="_Diet1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Diet Diet1
		{
			get
			{
				return this._Diet1.Entity;
			}
			set
			{
				Diet previousValue = this._Diet1.Entity;
				if (((previousValue != value) 
							|| (this._Diet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diet1.Entity = null;
						previousValue.Diets.Remove(this);
					}
					this._Diet1.Entity = value;
					if ((value != null))
					{
						value.Diets.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Diet1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Diet", Storage="_GivenServiceD", ThisKey="GsdID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.Diets.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.Diets.Add(this);
						this._GsdID = value.ID;
					}
					else
					{
						this._GsdID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Diet", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Diets.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Diets.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Diet1 = this;
		}
		
		private void detach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Diet1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discharge")]
	public partial class Discharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DossierID;
		
		private System.Nullable<int> _PatientStatus;
		
		private string _FinalDiagnosis;
		
		private string _DischargeTime;
		
		private string _DischargeDate;
		
		private System.Nullable<System.Guid> _DischargeDepID;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private System.Nullable<System.Guid> _DischargerStaffID;
		
		private string _DischargeAdvance;
		
		private string _DeathReasone;
		
		private string _DeathPlace;
		
		private System.Nullable<int> _DeathPlaceSepasID;
		
		private string _DischargerUserID;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDossierIDChanging(long value);
    partial void OnDossierIDChanged();
    partial void OnPatientStatusChanging(System.Nullable<int> value);
    partial void OnPatientStatusChanged();
    partial void OnFinalDiagnosisChanging(string value);
    partial void OnFinalDiagnosisChanged();
    partial void OnDischargeTimeChanging(string value);
    partial void OnDischargeTimeChanged();
    partial void OnDischargeDateChanging(string value);
    partial void OnDischargeDateChanged();
    partial void OnDischargeDepIDChanging(System.Nullable<System.Guid> value);
    partial void OnDischargeDepIDChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDischargerStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnDischargerStaffIDChanged();
    partial void OnDischargeAdvanceChanging(string value);
    partial void OnDischargeAdvanceChanged();
    partial void OnDeathReasoneChanging(string value);
    partial void OnDeathReasoneChanged();
    partial void OnDeathPlaceChanging(string value);
    partial void OnDeathPlaceChanged();
    partial void OnDeathPlaceSepasIDChanging(System.Nullable<int> value);
    partial void OnDeathPlaceSepasIDChanged();
    partial void OnDischargerUserIDChanging(string value);
    partial void OnDischargerUserIDChanged();
    #endregion
		
		public Discharge()
		{
			this._Definition = default(EntityRef<Definition>);
			this._Department = default(EntityRef<Department>);
			this._Dossier = default(EntityRef<Dossier>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientStatus", DbType="Int")]
		public System.Nullable<int> PatientStatus
		{
			get
			{
				return this._PatientStatus;
			}
			set
			{
				if ((this._PatientStatus != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientStatusChanging(value);
					this.SendPropertyChanging();
					this._PatientStatus = value;
					this.SendPropertyChanged("PatientStatus");
					this.OnPatientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalDiagnosis", DbType="NVarChar(2000)")]
		public string FinalDiagnosis
		{
			get
			{
				return this._FinalDiagnosis;
			}
			set
			{
				if ((this._FinalDiagnosis != value))
				{
					this.OnFinalDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._FinalDiagnosis = value;
					this.SendPropertyChanged("FinalDiagnosis");
					this.OnFinalDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeTime", DbType="NChar(10)")]
		public string DischargeTime
		{
			get
			{
				return this._DischargeTime;
			}
			set
			{
				if ((this._DischargeTime != value))
				{
					this.OnDischargeTimeChanging(value);
					this.SendPropertyChanging();
					this._DischargeTime = value;
					this.SendPropertyChanged("DischargeTime");
					this.OnDischargeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDate", DbType="NChar(10)")]
		public string DischargeDate
		{
			get
			{
				return this._DischargeDate;
			}
			set
			{
				if ((this._DischargeDate != value))
				{
					this.OnDischargeDateChanging(value);
					this.SendPropertyChanging();
					this._DischargeDate = value;
					this.SendPropertyChanged("DischargeDate");
					this.OnDischargeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeDepID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DischargeDepID
		{
			get
			{
				return this._DischargeDepID;
			}
			set
			{
				if ((this._DischargeDepID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDischargeDepIDChanging(value);
					this.SendPropertyChanging();
					this._DischargeDepID = value;
					this.SendPropertyChanged("DischargeDepID");
					this.OnDischargeDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NChar(10)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DischargerStaffID
		{
			get
			{
				return this._DischargerStaffID;
			}
			set
			{
				if ((this._DischargerStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDischargerStaffIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerStaffID = value;
					this.SendPropertyChanged("DischargerStaffID");
					this.OnDischargerStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargeAdvance", DbType="NVarChar(MAX)")]
		public string DischargeAdvance
		{
			get
			{
				return this._DischargeAdvance;
			}
			set
			{
				if ((this._DischargeAdvance != value))
				{
					this.OnDischargeAdvanceChanging(value);
					this.SendPropertyChanging();
					this._DischargeAdvance = value;
					this.SendPropertyChanged("DischargeAdvance");
					this.OnDischargeAdvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathReasone", DbType="NVarChar(MAX)")]
		public string DeathReasone
		{
			get
			{
				return this._DeathReasone;
			}
			set
			{
				if ((this._DeathReasone != value))
				{
					this.OnDeathReasoneChanging(value);
					this.SendPropertyChanging();
					this._DeathReasone = value;
					this.SendPropertyChanged("DeathReasone");
					this.OnDeathReasoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlace", DbType="NVarChar(50)")]
		public string DeathPlace
		{
			get
			{
				return this._DeathPlace;
			}
			set
			{
				if ((this._DeathPlace != value))
				{
					this.OnDeathPlaceChanging(value);
					this.SendPropertyChanging();
					this._DeathPlace = value;
					this.SendPropertyChanged("DeathPlace");
					this.OnDeathPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathPlaceSepasID", DbType="Int")]
		public System.Nullable<int> DeathPlaceSepasID
		{
			get
			{
				return this._DeathPlaceSepasID;
			}
			set
			{
				if ((this._DeathPlaceSepasID != value))
				{
					this.OnDeathPlaceSepasIDChanging(value);
					this.SendPropertyChanging();
					this._DeathPlaceSepasID = value;
					this.SendPropertyChanged("DeathPlaceSepasID");
					this.OnDeathPlaceSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DischargerUserID", DbType="NVarChar(100)")]
		public string DischargerUserID
		{
			get
			{
				return this._DischargerUserID;
			}
			set
			{
				if ((this._DischargerUserID != value))
				{
					this.OnDischargerUserIDChanging(value);
					this.SendPropertyChanging();
					this._DischargerUserID = value;
					this.SendPropertyChanged("DischargerUserID");
					this.OnDischargerUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Discharge", Storage="_Definition", ThisKey="PatientStatus", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._PatientStatus = value.ID;
					}
					else
					{
						this._PatientStatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Discharge", Storage="_Department", ThisKey="DischargeDepID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._DischargeDepID = value.ID;
					}
					else
					{
						this._DischargeDepID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Discharge1 = null;
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Discharge1 = this;
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(long);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Staff", ThisKey="DischargerStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Discharges.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Discharges.Add(this);
						this._DischargerStaffID = value.ID;
					}
					else
					{
						this._DischargerStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dispatch")]
	public partial class Dispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GsmID;
		
		private System.Nullable<int> _DispatchResonID;
		
		private string _Comment;
		
		private string _Destinition;
		
		private string _Sender;
		
		private string _Receiver;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModifactor;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _Deleted;
		
		private bool _Confirmation;
		
		private string _ConfirmationDate;
		
		private string _ConfirmationTime;
		
		private System.Nullable<int> _ConfirmationUserID;
		
		private EntityRef<DispatchReason> _DispatchReason;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsmIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsmIDChanged();
    partial void OnDispatchResonIDChanging(System.Nullable<int> value);
    partial void OnDispatchResonIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDestinitionChanging(string value);
    partial void OnDestinitionChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnReceiverChanging(string value);
    partial void OnReceiverChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifactorChanging(System.Nullable<int> value);
    partial void OnLastModifactorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnConfirmationChanging(bool value);
    partial void OnConfirmationChanged();
    partial void OnConfirmationDateChanging(string value);
    partial void OnConfirmationDateChanged();
    partial void OnConfirmationTimeChanging(string value);
    partial void OnConfirmationTimeChanged();
    partial void OnConfirmationUserIDChanging(System.Nullable<int> value);
    partial void OnConfirmationUserIDChanged();
    #endregion
		
		public Dispatch()
		{
			this._DispatchReason = default(EntityRef<DispatchReason>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsmID
		{
			get
			{
				return this._GsmID;
			}
			set
			{
				if ((this._GsmID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsmIDChanging(value);
					this.SendPropertyChanging();
					this._GsmID = value;
					this.SendPropertyChanged("GsmID");
					this.OnGsmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchResonID", DbType="Int")]
		public System.Nullable<int> DispatchResonID
		{
			get
			{
				return this._DispatchResonID;
			}
			set
			{
				if ((this._DispatchResonID != value))
				{
					if (this._DispatchReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispatchResonIDChanging(value);
					this.SendPropertyChanging();
					this._DispatchResonID = value;
					this.SendPropertyChanged("DispatchResonID");
					this.OnDispatchResonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(3000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destinition", DbType="NVarChar(50)")]
		public string Destinition
		{
			get
			{
				return this._Destinition;
			}
			set
			{
				if ((this._Destinition != value))
				{
					this.OnDestinitionChanging(value);
					this.SendPropertyChanging();
					this._Destinition = value;
					this.SendPropertyChanged("Destinition");
					this.OnDestinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(50)")]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receiver", DbType="NVarChar(50)")]
		public string Receiver
		{
			get
			{
				return this._Receiver;
			}
			set
			{
				if ((this._Receiver != value))
				{
					this.OnReceiverChanging(value);
					this.SendPropertyChanging();
					this._Receiver = value;
					this.SendPropertyChanged("Receiver");
					this.OnReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifactor", DbType="Int")]
		public System.Nullable<int> LastModifactor
		{
			get
			{
				return this._LastModifactor;
			}
			set
			{
				if ((this._LastModifactor != value))
				{
					this.OnLastModifactorChanging(value);
					this.SendPropertyChanging();
					this._LastModifactor = value;
					this.SendPropertyChanged("LastModifactor");
					this.OnLastModifactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmation", DbType="Bit NOT NULL")]
		public bool Confirmation
		{
			get
			{
				return this._Confirmation;
			}
			set
			{
				if ((this._Confirmation != value))
				{
					this.OnConfirmationChanging(value);
					this.SendPropertyChanging();
					this._Confirmation = value;
					this.SendPropertyChanged("Confirmation");
					this.OnConfirmationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationDate", DbType="NVarChar(10)")]
		public string ConfirmationDate
		{
			get
			{
				return this._ConfirmationDate;
			}
			set
			{
				if ((this._ConfirmationDate != value))
				{
					this.OnConfirmationDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationDate = value;
					this.SendPropertyChanged("ConfirmationDate");
					this.OnConfirmationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationTime", DbType="NVarChar(8)")]
		public string ConfirmationTime
		{
			get
			{
				return this._ConfirmationTime;
			}
			set
			{
				if ((this._ConfirmationTime != value))
				{
					this.OnConfirmationTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationTime = value;
					this.SendPropertyChanged("ConfirmationTime");
					this.OnConfirmationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationUserID", DbType="Int")]
		public System.Nullable<int> ConfirmationUserID
		{
			get
			{
				return this._ConfirmationUserID;
			}
			set
			{
				if ((this._ConfirmationUserID != value))
				{
					this.OnConfirmationUserIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationUserID = value;
					this.SendPropertyChanged("ConfirmationUserID");
					this.OnConfirmationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispatchReason_Dispatch", Storage="_DispatchReason", ThisKey="DispatchResonID", OtherKey="ID", IsForeignKey=true)]
		public DispatchReason DispatchReason
		{
			get
			{
				return this._DispatchReason.Entity;
			}
			set
			{
				DispatchReason previousValue = this._DispatchReason.Entity;
				if (((previousValue != value) 
							|| (this._DispatchReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispatchReason.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._DispatchReason.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._DispatchResonID = value.ID;
					}
					else
					{
						this._DispatchResonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DispatchReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Dispatch", Storage="_GivenServiceM", ThisKey="GsmID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._GsmID = value.ID;
					}
					else
					{
						this._GsmID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DispatchReason")]
	public partial class DispatchReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SpecialityID;
		
		private string _Title;
		
		private System.Nullable<int> _NationalID;
		
		private string _Description;
		
		private bool _EmergencyResons;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpecialityIDChanging(int value);
    partial void OnSpecialityIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNationalIDChanging(System.Nullable<int> value);
    partial void OnNationalIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEmergencyResonsChanging(bool value);
    partial void OnEmergencyResonsChanged();
    #endregion
		
		public DispatchReason()
		{
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int NOT NULL")]
		public int SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(3000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="Int")]
		public System.Nullable<int> NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyResons", DbType="Bit NOT NULL")]
		public bool EmergencyResons
		{
			get
			{
				return this._EmergencyResons;
			}
			set
			{
				if ((this._EmergencyResons != value))
				{
					this.OnEmergencyResonsChanging(value);
					this.SendPropertyChanging();
					this._EmergencyResons = value;
					this.SendPropertyChanged("EmergencyResons");
					this.OnEmergencyResonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispatchReason_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="DispatchResonID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_DispatchReason", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.DispatchReasons.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.DispatchReasons.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(int);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.DispatchReason = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.DispatchReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorComment")]
	public partial class DoctorComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private string _Comment;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public DoctorComment()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(2000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_DoctorComment", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.DoctorComments.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.DoctorComments.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorContract")]
	public partial class DoctorContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<decimal> _Payment;
		
		private string _Date;
		
		private string _Time;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPaymentChanging(System.Nullable<decimal> value);
    partial void OnPaymentChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public DoctorContract()
		{
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Money")]
		public System.Nullable<decimal> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(12)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DoctorContract", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DoctorContracts.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DoctorContracts.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorContract", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.DoctorContracts.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.DoctorContracts.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorContractD")]
	public partial class DoctorContractD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ContractID;
		
		private int _ServiceID;
		
		private System.Nullable<double> _Multiplier;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _CreatorUserFullname;
		
		private EntityRef<DoctorContractM> _DoctorContractM;
		
		private EntityRef<DoctorPaymentCategory> _DoctorPaymentCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnContractIDChanging(System.Guid value);
    partial void OnContractIDChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnMultiplierChanging(System.Nullable<double> value);
    partial void OnMultiplierChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    #endregion
		
		public DoctorContractD()
		{
			this._DoctorContractM = default(EntityRef<DoctorContractM>);
			this._DoctorPaymentCategory = default(EntityRef<DoctorPaymentCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._DoctorContractM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._DoctorPaymentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multiplier", DbType="Float")]
		public System.Nullable<double> Multiplier
		{
			get
			{
				return this._Multiplier;
			}
			set
			{
				if ((this._Multiplier != value))
				{
					this.OnMultiplierChanging(value);
					this.SendPropertyChanging();
					this._Multiplier = value;
					this.SendPropertyChanged("Multiplier");
					this.OnMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorContractM_DoctorContractD", Storage="_DoctorContractM", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DoctorContractM DoctorContractM
		{
			get
			{
				return this._DoctorContractM.Entity;
			}
			set
			{
				DoctorContractM previousValue = this._DoctorContractM.Entity;
				if (((previousValue != value) 
							|| (this._DoctorContractM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorContractM.Entity = null;
						previousValue.DoctorContractDs.Remove(this);
					}
					this._DoctorContractM.Entity = value;
					if ((value != null))
					{
						value.DoctorContractDs.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(System.Guid);
					}
					this.SendPropertyChanged("DoctorContractM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_DoctorContractD", Storage="_DoctorPaymentCategory", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public DoctorPaymentCategory DoctorPaymentCategory
		{
			get
			{
				return this._DoctorPaymentCategory.Entity;
			}
			set
			{
				DoctorPaymentCategory previousValue = this._DoctorPaymentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DoctorPaymentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorPaymentCategory.Entity = null;
						previousValue.DoctorContractDs.Remove(this);
					}
					this._DoctorPaymentCategory.Entity = value;
					if ((value != null))
					{
						value.DoctorContractDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(int);
					}
					this.SendPropertyChanged("DoctorPaymentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorContractM")]
	public partial class DoctorContractM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _StaffID;
		
		private string _ContractNumber;
		
		private string _StartDate;
		
		private string _EndDate;
		
		private bool _Rasmi;
		
		private System.Nullable<decimal> _SalaryBase;
		
		private System.Nullable<double> _PositionPercentage;
		
		private bool _TotalK;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _CreatorUserFullname;
		
		private EntitySet<DoctorContractD> _DoctorContractDs;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(string value);
    partial void OnEndDateChanged();
    partial void OnRasmiChanging(bool value);
    partial void OnRasmiChanged();
    partial void OnSalaryBaseChanging(System.Nullable<decimal> value);
    partial void OnSalaryBaseChanged();
    partial void OnPositionPercentageChanging(System.Nullable<double> value);
    partial void OnPositionPercentageChanged();
    partial void OnTotalKChanging(bool value);
    partial void OnTotalKChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    #endregion
		
		public DoctorContractM()
		{
			this._DoctorContractDs = new EntitySet<DoctorContractD>(new Action<DoctorContractD>(this.attach_DoctorContractDs), new Action<DoctorContractD>(this.detach_DoctorContractDs));
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(50)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="NChar(10)")]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rasmi", DbType="Bit NOT NULL")]
		public bool Rasmi
		{
			get
			{
				return this._Rasmi;
			}
			set
			{
				if ((this._Rasmi != value))
				{
					this.OnRasmiChanging(value);
					this.SendPropertyChanging();
					this._Rasmi = value;
					this.SendPropertyChanged("Rasmi");
					this.OnRasmiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBase", DbType="Money")]
		public System.Nullable<decimal> SalaryBase
		{
			get
			{
				return this._SalaryBase;
			}
			set
			{
				if ((this._SalaryBase != value))
				{
					this.OnSalaryBaseChanging(value);
					this.SendPropertyChanging();
					this._SalaryBase = value;
					this.SendPropertyChanged("SalaryBase");
					this.OnSalaryBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionPercentage", DbType="Float")]
		public System.Nullable<double> PositionPercentage
		{
			get
			{
				return this._PositionPercentage;
			}
			set
			{
				if ((this._PositionPercentage != value))
				{
					this.OnPositionPercentageChanging(value);
					this.SendPropertyChanging();
					this._PositionPercentage = value;
					this.SendPropertyChanged("PositionPercentage");
					this.OnPositionPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalK", DbType="Bit NOT NULL")]
		public bool TotalK
		{
			get
			{
				return this._TotalK;
			}
			set
			{
				if ((this._TotalK != value))
				{
					this.OnTotalKChanging(value);
					this.SendPropertyChanging();
					this._TotalK = value;
					this.SendPropertyChanged("TotalK");
					this.OnTotalKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorContractM_DoctorContractD", Storage="_DoctorContractDs", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<DoctorContractD> DoctorContractDs
		{
			get
			{
				return this._DoctorContractDs;
			}
			set
			{
				this._DoctorContractDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorContractM", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.DoctorContractMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.DoctorContractMs.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoctorContractDs(DoctorContractD entity)
		{
			this.SendPropertyChanging();
			entity.DoctorContractM = this;
		}
		
		private void detach_DoctorContractDs(DoctorContractD entity)
		{
			this.SendPropertyChanging();
			entity.DoctorContractM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorFunction")]
	public partial class DoctorFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _StaffID;
		
		private System.Guid _ServiceID;
		
		private string _Date;
		
		private double _Amount;
		
		private System.Nullable<double> _TotalK;
		
		private System.Nullable<double> _JozeHerfeyi;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<int> _Multiplier;
		
		private double _StandardAmount;
		
		private double _ConfirmedAmount;
		
		private bool _ClinicalOfficerConfirm;
		
		private System.Nullable<int> _TimeOfExist;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private bool _Deleted;
		
		private bool _PayedConfirm;
		
		private EntityRef<DoctorFunction> _DoctorFunction2;
		
		private EntityRef<DoctorFunction> _DoctorFunction1;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnServiceIDChanging(System.Guid value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnTotalKChanging(System.Nullable<double> value);
    partial void OnTotalKChanged();
    partial void OnJozeHerfeyiChanging(System.Nullable<double> value);
    partial void OnJozeHerfeyiChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnMultiplierChanging(System.Nullable<int> value);
    partial void OnMultiplierChanged();
    partial void OnStandardAmountChanging(double value);
    partial void OnStandardAmountChanged();
    partial void OnConfirmedAmountChanging(double value);
    partial void OnConfirmedAmountChanged();
    partial void OnClinicalOfficerConfirmChanging(bool value);
    partial void OnClinicalOfficerConfirmChanged();
    partial void OnTimeOfExistChanging(System.Nullable<int> value);
    partial void OnTimeOfExistChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnPayedConfirmChanging(bool value);
    partial void OnPayedConfirmChanged();
    #endregion
		
		public DoctorFunction()
		{
			this._DoctorFunction2 = default(EntityRef<DoctorFunction>);
			this._DoctorFunction1 = default(EntityRef<DoctorFunction>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if ((this._DoctorFunction1.HasLoadedOrAssignedValue || this._Staff.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if ((this._DoctorFunction1.HasLoadedOrAssignedValue || this._Service.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					if (this._DoctorFunction1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalK", DbType="Float")]
		public System.Nullable<double> TotalK
		{
			get
			{
				return this._TotalK;
			}
			set
			{
				if ((this._TotalK != value))
				{
					this.OnTotalKChanging(value);
					this.SendPropertyChanging();
					this._TotalK = value;
					this.SendPropertyChanged("TotalK");
					this.OnTotalKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JozeHerfeyi", DbType="Float")]
		public System.Nullable<double> JozeHerfeyi
		{
			get
			{
				return this._JozeHerfeyi;
			}
			set
			{
				if ((this._JozeHerfeyi != value))
				{
					this.OnJozeHerfeyiChanging(value);
					this.SendPropertyChanging();
					this._JozeHerfeyi = value;
					this.SendPropertyChanged("JozeHerfeyi");
					this.OnJozeHerfeyiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multiplier", DbType="Int")]
		public System.Nullable<int> Multiplier
		{
			get
			{
				return this._Multiplier;
			}
			set
			{
				if ((this._Multiplier != value))
				{
					this.OnMultiplierChanging(value);
					this.SendPropertyChanging();
					this._Multiplier = value;
					this.SendPropertyChanged("Multiplier");
					this.OnMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardAmount", DbType="Float NOT NULL")]
		public double StandardAmount
		{
			get
			{
				return this._StandardAmount;
			}
			set
			{
				if ((this._StandardAmount != value))
				{
					this.OnStandardAmountChanging(value);
					this.SendPropertyChanging();
					this._StandardAmount = value;
					this.SendPropertyChanged("StandardAmount");
					this.OnStandardAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedAmount", DbType="Float NOT NULL")]
		public double ConfirmedAmount
		{
			get
			{
				return this._ConfirmedAmount;
			}
			set
			{
				if ((this._ConfirmedAmount != value))
				{
					this.OnConfirmedAmountChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedAmount = value;
					this.SendPropertyChanged("ConfirmedAmount");
					this.OnConfirmedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClinicalOfficerConfirm", DbType="Bit NOT NULL")]
		public bool ClinicalOfficerConfirm
		{
			get
			{
				return this._ClinicalOfficerConfirm;
			}
			set
			{
				if ((this._ClinicalOfficerConfirm != value))
				{
					this.OnClinicalOfficerConfirmChanging(value);
					this.SendPropertyChanging();
					this._ClinicalOfficerConfirm = value;
					this.SendPropertyChanged("ClinicalOfficerConfirm");
					this.OnClinicalOfficerConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfExist", DbType="Int")]
		public System.Nullable<int> TimeOfExist
		{
			get
			{
				return this._TimeOfExist;
			}
			set
			{
				if ((this._TimeOfExist != value))
				{
					this.OnTimeOfExistChanging(value);
					this.SendPropertyChanging();
					this._TimeOfExist = value;
					this.SendPropertyChanged("TimeOfExist");
					this.OnTimeOfExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedConfirm", DbType="Bit NOT NULL")]
		public bool PayedConfirm
		{
			get
			{
				return this._PayedConfirm;
			}
			set
			{
				if ((this._PayedConfirm != value))
				{
					this.OnPayedConfirmChanging(value);
					this.SendPropertyChanging();
					this._PayedConfirm = value;
					this.SendPropertyChanged("PayedConfirm");
					this.OnPayedConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorFunction_DoctorFunction", Storage="_DoctorFunction2", ThisKey="StaffID,ServiceID,Date", OtherKey="StaffID,ServiceID,Date", IsUnique=true, IsForeignKey=false)]
		public DoctorFunction DoctorFunction2
		{
			get
			{
				return this._DoctorFunction2.Entity;
			}
			set
			{
				DoctorFunction previousValue = this._DoctorFunction2.Entity;
				if (((previousValue != value) 
							|| (this._DoctorFunction2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorFunction2.Entity = null;
						previousValue.DoctorFunction1 = null;
					}
					this._DoctorFunction2.Entity = value;
					if ((value != null))
					{
						value.DoctorFunction1 = this;
					}
					this.SendPropertyChanged("DoctorFunction2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorFunction_DoctorFunction", Storage="_DoctorFunction1", ThisKey="StaffID,ServiceID,Date", OtherKey="StaffID,ServiceID,Date", IsForeignKey=true)]
		public DoctorFunction DoctorFunction1
		{
			get
			{
				return this._DoctorFunction1.Entity;
			}
			set
			{
				DoctorFunction previousValue = this._DoctorFunction1.Entity;
				if (((previousValue != value) 
							|| (this._DoctorFunction1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorFunction1.Entity = null;
						previousValue.DoctorFunction2 = null;
					}
					this._DoctorFunction1.Entity = value;
					if ((value != null))
					{
						value.DoctorFunction2 = this;
						this._StaffID = value.StaffID;
						this._ServiceID = value.ServiceID;
						this._Date = value.Date;
					}
					else
					{
						this._StaffID = default(System.Guid);
						this._ServiceID = default(System.Guid);
						this._Date = default(string);
					}
					this.SendPropertyChanged("DoctorFunction1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DoctorFunction", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DoctorFunctions.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DoctorFunctions.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorFunction", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.DoctorFunctions.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.DoctorFunctions.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorInsurance")]
	public partial class DoctorInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    #endregion
		
		public DoctorInsurance()
		{
			this._Insurance = default(EntityRef<Insurance>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_DoctorInsurance", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.DoctorInsurances.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.DoctorInsurances.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorInsurance", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.DoctorInsurances.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.DoctorInsurances.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorPaymentCategory")]
	public partial class DoctorPaymentCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CatName;
		
		private bool _ForOffical;
		
		private bool _ForNonOffical;
		
		private bool _Hide;
		
		private System.Nullable<double> _DefultRatio;
		
		private EntitySet<DoctorContractD> _DoctorContractDs;
		
		private EntitySet<DoctorServiceCategoryTariff> _DoctorServiceCategoryTariffs;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<Service> _Services1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCatNameChanging(string value);
    partial void OnCatNameChanged();
    partial void OnForOfficalChanging(bool value);
    partial void OnForOfficalChanged();
    partial void OnForNonOfficalChanging(bool value);
    partial void OnForNonOfficalChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    partial void OnDefultRatioChanging(System.Nullable<double> value);
    partial void OnDefultRatioChanged();
    #endregion
		
		public DoctorPaymentCategory()
		{
			this._DoctorContractDs = new EntitySet<DoctorContractD>(new Action<DoctorContractD>(this.attach_DoctorContractDs), new Action<DoctorContractD>(this.detach_DoctorContractDs));
			this._DoctorServiceCategoryTariffs = new EntitySet<DoctorServiceCategoryTariff>(new Action<DoctorServiceCategoryTariff>(this.attach_DoctorServiceCategoryTariffs), new Action<DoctorServiceCategoryTariff>(this.detach_DoctorServiceCategoryTariffs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._Services1 = new EntitySet<Service>(new Action<Service>(this.attach_Services1), new Action<Service>(this.detach_Services1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this.OnCatNameChanging(value);
					this.SendPropertyChanging();
					this._CatName = value;
					this.SendPropertyChanged("CatName");
					this.OnCatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForOffical", DbType="Bit NOT NULL")]
		public bool ForOffical
		{
			get
			{
				return this._ForOffical;
			}
			set
			{
				if ((this._ForOffical != value))
				{
					this.OnForOfficalChanging(value);
					this.SendPropertyChanging();
					this._ForOffical = value;
					this.SendPropertyChanged("ForOffical");
					this.OnForOfficalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForNonOffical", DbType="Bit NOT NULL")]
		public bool ForNonOffical
		{
			get
			{
				return this._ForNonOffical;
			}
			set
			{
				if ((this._ForNonOffical != value))
				{
					this.OnForNonOfficalChanging(value);
					this.SendPropertyChanging();
					this._ForNonOffical = value;
					this.SendPropertyChanged("ForNonOffical");
					this.OnForNonOfficalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefultRatio", DbType="Float")]
		public System.Nullable<double> DefultRatio
		{
			get
			{
				return this._DefultRatio;
			}
			set
			{
				if ((this._DefultRatio != value))
				{
					this.OnDefultRatioChanging(value);
					this.SendPropertyChanging();
					this._DefultRatio = value;
					this.SendPropertyChanged("DefultRatio");
					this.OnDefultRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_DoctorContractD", Storage="_DoctorContractDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<DoctorContractD> DoctorContractDs
		{
			get
			{
				return this._DoctorContractDs;
			}
			set
			{
				this._DoctorContractDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_DoctorServiceCategoryTariff", Storage="_DoctorServiceCategoryTariffs", ThisKey="ID", OtherKey="DSServiceID")]
		public EntitySet<DoctorServiceCategoryTariff> DoctorServiceCategoryTariffs
		{
			get
			{
				return this._DoctorServiceCategoryTariffs;
			}
			set
			{
				this._DoctorServiceCategoryTariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_Service", Storage="_Services", ThisKey="ID", OtherKey="DocPaymentCatNonOffical")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_Service1", Storage="_Services1", ThisKey="ID", OtherKey="DocPaymentCatOffical")]
		public EntitySet<Service> Services1
		{
			get
			{
				return this._Services1;
			}
			set
			{
				this._Services1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoctorContractDs(DoctorContractD entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory = this;
		}
		
		private void detach_DoctorContractDs(DoctorContractD entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory = null;
		}
		
		private void attach_DoctorServiceCategoryTariffs(DoctorServiceCategoryTariff entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory = this;
		}
		
		private void detach_DoctorServiceCategoryTariffs(DoctorServiceCategoryTariff entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory = null;
		}
		
		private void attach_Services1(Service entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory1 = this;
		}
		
		private void detach_Services1(Service entity)
		{
			this.SendPropertyChanging();
			entity.DoctorPaymentCategory1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorPaymentsAndDeductions")]
	public partial class DoctorPaymentsAndDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private string _Date;
		
		private System.Nullable<double> _Percentage;
		
		private bool _LowOff;
		
		private System.Nullable<decimal> _Amount;
		
		private bool _ForOffical;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPercentageChanging(System.Nullable<double> value);
    partial void OnPercentageChanged();
    partial void OnLowOffChanging(bool value);
    partial void OnLowOffChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnForOfficalChanging(bool value);
    partial void OnForOfficalChanged();
    #endregion
		
		public DoctorPaymentsAndDeduction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Float")]
		public System.Nullable<double> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowOff", DbType="Bit NOT NULL")]
		public bool LowOff
		{
			get
			{
				return this._LowOff;
			}
			set
			{
				if ((this._LowOff != value))
				{
					this.OnLowOffChanging(value);
					this.SendPropertyChanging();
					this._LowOff = value;
					this.SendPropertyChanged("LowOff");
					this.OnLowOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForOffical", DbType="Bit NOT NULL")]
		public bool ForOffical
		{
			get
			{
				return this._ForOffical;
			}
			set
			{
				if ((this._ForOffical != value))
				{
					this.OnForOfficalChanging(value);
					this.SendPropertyChanging();
					this._ForOffical = value;
					this.SendPropertyChanged("ForOffical");
					this.OnForOfficalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorSalaryAdditionalItem")]
	public partial class DoctorSalaryAdditionalItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FromDate;
		
		private string _ToDate;
		
		private double _Weather;
		
		private double _SuperSpecial;
		
		private double _Deprivation;
		
		private double _SuperWorkshop;
		
		private double _SuperAbsorption;
		
		private bool _Active;
		
		private string _LastModifactorUserFullName;
		
		private string _LastModifctionDate;
		
		private string _LastModifictionTIme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFromDateChanging(string value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(string value);
    partial void OnToDateChanged();
    partial void OnWeatherChanging(double value);
    partial void OnWeatherChanged();
    partial void OnSuperSpecialChanging(double value);
    partial void OnSuperSpecialChanged();
    partial void OnDeprivationChanging(double value);
    partial void OnDeprivationChanged();
    partial void OnSuperWorkshopChanging(double value);
    partial void OnSuperWorkshopChanged();
    partial void OnSuperAbsorptionChanging(double value);
    partial void OnSuperAbsorptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLastModifactorUserFullNameChanging(string value);
    partial void OnLastModifactorUserFullNameChanged();
    partial void OnLastModifctionDateChanging(string value);
    partial void OnLastModifctionDateChanged();
    partial void OnLastModifictionTImeChanging(string value);
    partial void OnLastModifictionTImeChanged();
    #endregion
		
		public DoctorSalaryAdditionalItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weather", DbType="Float NOT NULL")]
		public double Weather
		{
			get
			{
				return this._Weather;
			}
			set
			{
				if ((this._Weather != value))
				{
					this.OnWeatherChanging(value);
					this.SendPropertyChanging();
					this._Weather = value;
					this.SendPropertyChanged("Weather");
					this.OnWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperSpecial", DbType="Float NOT NULL")]
		public double SuperSpecial
		{
			get
			{
				return this._SuperSpecial;
			}
			set
			{
				if ((this._SuperSpecial != value))
				{
					this.OnSuperSpecialChanging(value);
					this.SendPropertyChanging();
					this._SuperSpecial = value;
					this.SendPropertyChanged("SuperSpecial");
					this.OnSuperSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deprivation", DbType="Float NOT NULL")]
		public double Deprivation
		{
			get
			{
				return this._Deprivation;
			}
			set
			{
				if ((this._Deprivation != value))
				{
					this.OnDeprivationChanging(value);
					this.SendPropertyChanging();
					this._Deprivation = value;
					this.SendPropertyChanged("Deprivation");
					this.OnDeprivationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkshop", DbType="Float NOT NULL")]
		public double SuperWorkshop
		{
			get
			{
				return this._SuperWorkshop;
			}
			set
			{
				if ((this._SuperWorkshop != value))
				{
					this.OnSuperWorkshopChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkshop = value;
					this.SendPropertyChanged("SuperWorkshop");
					this.OnSuperWorkshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperAbsorption", DbType="Float NOT NULL")]
		public double SuperAbsorption
		{
			get
			{
				return this._SuperAbsorption;
			}
			set
			{
				if ((this._SuperAbsorption != value))
				{
					this.OnSuperAbsorptionChanging(value);
					this.SendPropertyChanging();
					this._SuperAbsorption = value;
					this.SendPropertyChanged("SuperAbsorption");
					this.OnSuperAbsorptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifactorUserFullName", DbType="NVarChar(70)")]
		public string LastModifactorUserFullName
		{
			get
			{
				return this._LastModifactorUserFullName;
			}
			set
			{
				if ((this._LastModifactorUserFullName != value))
				{
					this.OnLastModifactorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastModifactorUserFullName = value;
					this.SendPropertyChanged("LastModifactorUserFullName");
					this.OnLastModifactorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifctionDate", DbType="NVarChar(10)")]
		public string LastModifctionDate
		{
			get
			{
				return this._LastModifctionDate;
			}
			set
			{
				if ((this._LastModifctionDate != value))
				{
					this.OnLastModifctionDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifctionDate = value;
					this.SendPropertyChanged("LastModifctionDate");
					this.OnLastModifctionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifictionTIme", DbType="NVarChar(8)")]
		public string LastModifictionTIme
		{
			get
			{
				return this._LastModifictionTIme;
			}
			set
			{
				if ((this._LastModifictionTIme != value))
				{
					this.OnLastModifictionTImeChanging(value);
					this.SendPropertyChanging();
					this._LastModifictionTIme = value;
					this.SendPropertyChanged("LastModifictionTIme");
					this.OnLastModifictionTImeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorSalaryParams")]
	public partial class DoctorSalaryParam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PKID;
		
		private System.Guid _StaffID;
		
		private string _Date;
		
		private string _ParamName;
		
		private decimal _ParamValue;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _ConfirmPayment;
		
		private System.Nullable<int> _SortCol;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPKIDChanging(int value);
    partial void OnPKIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnParamNameChanging(string value);
    partial void OnParamNameChanged();
    partial void OnParamValueChanging(decimal value);
    partial void OnParamValueChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnConfirmPaymentChanging(bool value);
    partial void OnConfirmPaymentChanged();
    partial void OnSortColChanging(System.Nullable<int> value);
    partial void OnSortColChanged();
    #endregion
		
		public DoctorSalaryParam()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PKID
		{
			get
			{
				return this._PKID;
			}
			set
			{
				if ((this._PKID != value))
				{
					this.OnPKIDChanging(value);
					this.SendPropertyChanging();
					this._PKID = value;
					this.SendPropertyChanged("PKID");
					this.OnPKIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(7) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ParamName
		{
			get
			{
				return this._ParamName;
			}
			set
			{
				if ((this._ParamName != value))
				{
					this.OnParamNameChanging(value);
					this.SendPropertyChanging();
					this._ParamName = value;
					this.SendPropertyChanged("ParamName");
					this.OnParamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamValue", DbType="Money NOT NULL")]
		public decimal ParamValue
		{
			get
			{
				return this._ParamValue;
			}
			set
			{
				if ((this._ParamValue != value))
				{
					this.OnParamValueChanging(value);
					this.SendPropertyChanging();
					this._ParamValue = value;
					this.SendPropertyChanged("ParamValue");
					this.OnParamValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmPayment", DbType="Bit NOT NULL")]
		public bool ConfirmPayment
		{
			get
			{
				return this._ConfirmPayment;
			}
			set
			{
				if ((this._ConfirmPayment != value))
				{
					this.OnConfirmPaymentChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPayment = value;
					this.SendPropertyChanged("ConfirmPayment");
					this.OnConfirmPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this.OnSortColChanging(value);
					this.SendPropertyChanging();
					this._SortCol = value;
					this.SendPropertyChanged("SortCol");
					this.OnSortColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorSalaryParam", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.DoctorSalaryParams.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.DoctorSalaryParams.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorServiceCategoryTariff")]
	public partial class DoctorServiceCategoryTariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _DSServiceID;
		
		private string _Year;
		
		private string _Date;
		
		private System.Nullable<decimal> _Dolati;
		
		private System.Nullable<decimal> _QeyreDolati;
		
		private System.Nullable<decimal> _Khososi;
		
		private EntityRef<DoctorPaymentCategory> _DoctorPaymentCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDSServiceIDChanging(int value);
    partial void OnDSServiceIDChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnDolatiChanging(System.Nullable<decimal> value);
    partial void OnDolatiChanged();
    partial void OnQeyreDolatiChanging(System.Nullable<decimal> value);
    partial void OnQeyreDolatiChanged();
    partial void OnKhososiChanging(System.Nullable<decimal> value);
    partial void OnKhososiChanged();
    #endregion
		
		public DoctorServiceCategoryTariff()
		{
			this._DoctorPaymentCategory = default(EntityRef<DoctorPaymentCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSServiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DSServiceID
		{
			get
			{
				return this._DSServiceID;
			}
			set
			{
				if ((this._DSServiceID != value))
				{
					if (this._DoctorPaymentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDSServiceIDChanging(value);
					this.SendPropertyChanging();
					this._DSServiceID = value;
					this.SendPropertyChanged("DSServiceID");
					this.OnDSServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dolati", DbType="Money")]
		public System.Nullable<decimal> Dolati
		{
			get
			{
				return this._Dolati;
			}
			set
			{
				if ((this._Dolati != value))
				{
					this.OnDolatiChanging(value);
					this.SendPropertyChanging();
					this._Dolati = value;
					this.SendPropertyChanged("Dolati");
					this.OnDolatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QeyreDolati", DbType="Money")]
		public System.Nullable<decimal> QeyreDolati
		{
			get
			{
				return this._QeyreDolati;
			}
			set
			{
				if ((this._QeyreDolati != value))
				{
					this.OnQeyreDolatiChanging(value);
					this.SendPropertyChanging();
					this._QeyreDolati = value;
					this.SendPropertyChanged("QeyreDolati");
					this.OnQeyreDolatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khososi", DbType="Money")]
		public System.Nullable<decimal> Khososi
		{
			get
			{
				return this._Khososi;
			}
			set
			{
				if ((this._Khososi != value))
				{
					this.OnKhososiChanging(value);
					this.SendPropertyChanging();
					this._Khososi = value;
					this.SendPropertyChanged("Khososi");
					this.OnKhososiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_DoctorServiceCategoryTariff", Storage="_DoctorPaymentCategory", ThisKey="DSServiceID", OtherKey="ID", IsForeignKey=true)]
		public DoctorPaymentCategory DoctorPaymentCategory
		{
			get
			{
				return this._DoctorPaymentCategory.Entity;
			}
			set
			{
				DoctorPaymentCategory previousValue = this._DoctorPaymentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DoctorPaymentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorPaymentCategory.Entity = null;
						previousValue.DoctorServiceCategoryTariffs.Remove(this);
					}
					this._DoctorPaymentCategory.Entity = value;
					if ((value != null))
					{
						value.DoctorServiceCategoryTariffs.Add(this);
						this._DSServiceID = value.ID;
					}
					else
					{
						this._DSServiceID = default(int);
					}
					this.SendPropertyChanged("DoctorPaymentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dossier")]
	public partial class Dossier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Guid _UniqID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _XInsuranceID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _NationalCode;
		
		private string _Date;
		
		private string _Time;
		
		private string _MedicalCenter;
		
		private bool _AdvancePaymentPayed;
		
		private decimal _AdvancePayment;
		
		private int _IOtype;
		
		private bool _TotalPayed;
		
		private bool _Discharge;
		
		private System.Nullable<bool> _LockBilling;
		
		private string _SpicialCode;
		
		private System.Nullable<decimal> _AllPateintShare;
		
		private System.Nullable<decimal> _AllInsuranceShare;
		
		private System.Nullable<decimal> _AllPay;
		
		private bool _Editable;
		
		private System.Nullable<System.Guid> _StaffCure;
		
		private System.Nullable<bool> _SATASent;
		
		private string _SATAMessage;
		
		private System.Nullable<int> _InsuranceID2;
		
		private System.Nullable<System.DateTime> _TS;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<ComplicationsBB> _ComplicationsBB;
		
		private EntitySet<Consultant> _Consultants;
		
		private EntityRef<Discharge> _Discharge1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<TreatmentProgress> _TreatmentProgresses;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUniqIDChanging(System.Guid value);
    partial void OnUniqIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnXInsuranceIDChanging(System.Nullable<int> value);
    partial void OnXInsuranceIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnMedicalCenterChanging(string value);
    partial void OnMedicalCenterChanged();
    partial void OnAdvancePaymentPayedChanging(bool value);
    partial void OnAdvancePaymentPayedChanged();
    partial void OnAdvancePaymentChanging(decimal value);
    partial void OnAdvancePaymentChanged();
    partial void OnIOtypeChanging(int value);
    partial void OnIOtypeChanged();
    partial void OnTotalPayedChanging(bool value);
    partial void OnTotalPayedChanged();
    partial void OnDischargeChanging(bool value);
    partial void OnDischargeChanged();
    partial void OnLockBillingChanging(System.Nullable<bool> value);
    partial void OnLockBillingChanged();
    partial void OnSpicialCodeChanging(string value);
    partial void OnSpicialCodeChanged();
    partial void OnAllPateintShareChanging(System.Nullable<decimal> value);
    partial void OnAllPateintShareChanged();
    partial void OnAllInsuranceShareChanging(System.Nullable<decimal> value);
    partial void OnAllInsuranceShareChanged();
    partial void OnAllPayChanging(System.Nullable<decimal> value);
    partial void OnAllPayChanged();
    partial void OnEditableChanging(bool value);
    partial void OnEditableChanged();
    partial void OnStaffCureChanging(System.Nullable<System.Guid> value);
    partial void OnStaffCureChanged();
    partial void OnSATASentChanging(System.Nullable<bool> value);
    partial void OnSATASentChanged();
    partial void OnSATAMessageChanging(string value);
    partial void OnSATAMessageChanged();
    partial void OnInsuranceID2Changing(System.Nullable<int> value);
    partial void OnInsuranceID2Changed();
    partial void OnTSChanging(System.Nullable<System.DateTime> value);
    partial void OnTSChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public Dossier()
		{
			this._ComplicationsBB = default(EntityRef<ComplicationsBB>);
			this._Consultants = new EntitySet<Consultant>(new Action<Consultant>(this.attach_Consultants), new Action<Consultant>(this.detach_Consultants));
			this._Discharge1 = default(EntityRef<Discharge>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._TreatmentProgresses = new EntitySet<TreatmentProgress>(new Action<TreatmentProgress>(this.attach_TreatmentProgresses), new Action<TreatmentProgress>(this.detach_TreatmentProgresses));
			this._Department = default(EntityRef<Department>);
			this._Insurance = default(EntityRef<Insurance>);
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqID
		{
			get
			{
				return this._UniqID;
			}
			set
			{
				if ((this._UniqID != value))
				{
					this.OnUniqIDChanging(value);
					this.SendPropertyChanging();
					this._UniqID = value;
					this.SendPropertyChanged("UniqID");
					this.OnUniqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XInsuranceID", DbType="Int")]
		public System.Nullable<int> XInsuranceID
		{
			get
			{
				return this._XInsuranceID;
			}
			set
			{
				if ((this._XInsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._XInsuranceID = value;
					this.SendPropertyChanged("XInsuranceID");
					this.OnXInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(200)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this.OnMedicalCenterChanging(value);
					this.SendPropertyChanging();
					this._MedicalCenter = value;
					this.SendPropertyChanged("MedicalCenter");
					this.OnMedicalCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePaymentPayed", DbType="Bit NOT NULL")]
		public bool AdvancePaymentPayed
		{
			get
			{
				return this._AdvancePaymentPayed;
			}
			set
			{
				if ((this._AdvancePaymentPayed != value))
				{
					this.OnAdvancePaymentPayedChanging(value);
					this.SendPropertyChanging();
					this._AdvancePaymentPayed = value;
					this.SendPropertyChanged("AdvancePaymentPayed");
					this.OnAdvancePaymentPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvancePayment", DbType="Money NOT NULL")]
		public decimal AdvancePayment
		{
			get
			{
				return this._AdvancePayment;
			}
			set
			{
				if ((this._AdvancePayment != value))
				{
					this.OnAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._AdvancePayment = value;
					this.SendPropertyChanged("AdvancePayment");
					this.OnAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOtype", DbType="Int NOT NULL")]
		public int IOtype
		{
			get
			{
				return this._IOtype;
			}
			set
			{
				if ((this._IOtype != value))
				{
					this.OnIOtypeChanging(value);
					this.SendPropertyChanging();
					this._IOtype = value;
					this.SendPropertyChanged("IOtype");
					this.OnIOtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayed", DbType="Bit NOT NULL")]
		public bool TotalPayed
		{
			get
			{
				return this._TotalPayed;
			}
			set
			{
				if ((this._TotalPayed != value))
				{
					this.OnTotalPayedChanging(value);
					this.SendPropertyChanging();
					this._TotalPayed = value;
					this.SendPropertyChanged("TotalPayed");
					this.OnTotalPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discharge", DbType="Bit NOT NULL")]
		public bool Discharge
		{
			get
			{
				return this._Discharge;
			}
			set
			{
				if ((this._Discharge != value))
				{
					this.OnDischargeChanging(value);
					this.SendPropertyChanging();
					this._Discharge = value;
					this.SendPropertyChanged("Discharge");
					this.OnDischargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockBilling", DbType="Bit")]
		public System.Nullable<bool> LockBilling
		{
			get
			{
				return this._LockBilling;
			}
			set
			{
				if ((this._LockBilling != value))
				{
					this.OnLockBillingChanging(value);
					this.SendPropertyChanging();
					this._LockBilling = value;
					this.SendPropertyChanged("LockBilling");
					this.OnLockBillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpicialCode", DbType="NVarChar(20)")]
		public string SpicialCode
		{
			get
			{
				return this._SpicialCode;
			}
			set
			{
				if ((this._SpicialCode != value))
				{
					this.OnSpicialCodeChanging(value);
					this.SendPropertyChanging();
					this._SpicialCode = value;
					this.SendPropertyChanged("SpicialCode");
					this.OnSpicialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPateintShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPateintShare
		{
			get
			{
				return this._AllPateintShare;
			}
			set
			{
				if ((this._AllPateintShare != value))
				{
					this.OnAllPateintShareChanging(value);
					this.SendPropertyChanging();
					this._AllPateintShare = value;
					this.SendPropertyChanged("AllPateintShare");
					this.OnAllPateintShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllInsuranceShare", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllInsuranceShare
		{
			get
			{
				return this._AllInsuranceShare;
			}
			set
			{
				if ((this._AllInsuranceShare != value))
				{
					this.OnAllInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._AllInsuranceShare = value;
					this.SendPropertyChanged("AllInsuranceShare");
					this.OnAllInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllPay", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AllPay
		{
			get
			{
				return this._AllPay;
			}
			set
			{
				if ((this._AllPay != value))
				{
					this.OnAllPayChanging(value);
					this.SendPropertyChanging();
					this._AllPay = value;
					this.SendPropertyChanged("AllPay");
					this.OnAllPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit NOT NULL")]
		public bool Editable
		{
			get
			{
				return this._Editable;
			}
			set
			{
				if ((this._Editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._Editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffCure", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffCure
		{
			get
			{
				return this._StaffCure;
			}
			set
			{
				if ((this._StaffCure != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffCureChanging(value);
					this.SendPropertyChanging();
					this._StaffCure = value;
					this.SendPropertyChanged("StaffCure");
					this.OnStaffCureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATASent", DbType="Bit")]
		public System.Nullable<bool> SATASent
		{
			get
			{
				return this._SATASent;
			}
			set
			{
				if ((this._SATASent != value))
				{
					this.OnSATASentChanging(value);
					this.SendPropertyChanging();
					this._SATASent = value;
					this.SendPropertyChanged("SATASent");
					this.OnSATASentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAMessage", DbType="NVarChar(500)")]
		public string SATAMessage
		{
			get
			{
				return this._SATAMessage;
			}
			set
			{
				if ((this._SATAMessage != value))
				{
					this.OnSATAMessageChanging(value);
					this.SendPropertyChanging();
					this._SATAMessage = value;
					this.SendPropertyChanged("SATAMessage");
					this.OnSATAMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID2", DbType="Int")]
		public System.Nullable<int> InsuranceID2
		{
			get
			{
				return this._InsuranceID2;
			}
			set
			{
				if ((this._InsuranceID2 != value))
				{
					this.OnInsuranceID2Changing(value);
					this.SendPropertyChanging();
					this._InsuranceID2 = value;
					this.SendPropertyChanged("InsuranceID2");
					this.OnInsuranceID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_ComplicationsBB", Storage="_ComplicationsBB", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ComplicationsBB ComplicationsBB
		{
			get
			{
				return this._ComplicationsBB.Entity;
			}
			set
			{
				ComplicationsBB previousValue = this._ComplicationsBB.Entity;
				if (((previousValue != value) 
							|| (this._ComplicationsBB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComplicationsBB.Entity = null;
						previousValue.Dossier = null;
					}
					this._ComplicationsBB.Entity = value;
					if ((value != null))
					{
						value.Dossier = this;
					}
					this.SendPropertyChanged("ComplicationsBB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Consultant", Storage="_Consultants", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<Consultant> Consultants
		{
			get
			{
				return this._Consultants;
			}
			set
			{
				this._Consultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Discharge", Storage="_Discharge1", ThisKey="ID", OtherKey="DossierID", IsUnique=true, IsForeignKey=false)]
		public Discharge Discharge1
		{
			get
			{
				return this._Discharge1.Entity;
			}
			set
			{
				Discharge previousValue = this._Discharge1.Entity;
				if (((previousValue != value) 
							|| (this._Discharge1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discharge1.Entity = null;
						previousValue.Dossier = null;
					}
					this._Discharge1.Entity = value;
					if ((value != null))
					{
						value.Dossier = this;
					}
					this.SendPropertyChanged("Discharge1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Payment", Storage="_Payments", ThisKey="ID", OtherKey="DossierID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_TreatmentProgress", Storage="_TreatmentProgresses", ThisKey="ID", OtherKey="DosseirID")]
		public EntitySet<TreatmentProgress> TreatmentProgresses
		{
			get
			{
				return this._TreatmentProgresses;
			}
			set
			{
				this._TreatmentProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Dossier", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Insurance", ThisKey="XInsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._XInsuranceID = value.ID;
					}
					else
					{
						this._XInsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Staff", ThisKey="StaffCure", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Dossiers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Dossiers.Add(this);
						this._StaffCure = value.ID;
					}
					else
					{
						this._StaffCure = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
		
		private void attach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = this;
		}
		
		private void detach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.Dossier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugAllergy")]
	public partial class DrugAllergy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public DrugAllergy()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugAllergies.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugAllergies.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugAllergies.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugAllergies.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugFrequencyUsage")]
	public partial class DrugFrequencyUsage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _EName;
		
		private string _Code;
		
		private string _Equivalent;
		
		private EntitySet<DrugTempelateForWard> _DrugTempelateForWards;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEquivalentChanging(string value);
    partial void OnEquivalentChanged();
    #endregion
		
		public DrugFrequencyUsage()
		{
			this._DrugTempelateForWards = new EntitySet<DrugTempelateForWard>(new Action<DrugTempelateForWard>(this.attach_DrugTempelateForWards), new Action<DrugTempelateForWard>(this.detach_DrugTempelateForWards));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(1000)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(1000)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this.OnENameChanging(value);
					this.SendPropertyChanging();
					this._EName = value;
					this.SendPropertyChanged("EName");
					this.OnENameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equivalent", DbType="NVarChar(100)")]
		public string Equivalent
		{
			get
			{
				return this._Equivalent;
			}
			set
			{
				if ((this._Equivalent != value))
				{
					this.OnEquivalentChanging(value);
					this.SendPropertyChanging();
					this._Equivalent = value;
					this.SendPropertyChanged("Equivalent");
					this.OnEquivalentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_DrugTempelateForWard", Storage="_DrugTempelateForWards", ThisKey="ID", OtherKey="HIXCode")]
		public EntitySet<DrugTempelateForWard> DrugTempelateForWards
		{
			get
			{
				return this._DrugTempelateForWards;
			}
			set
			{
				this._DrugTempelateForWards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="HIXCode")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DrugTempelateForWards(DrugTempelateForWard entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = this;
		}
		
		private void detach_DrugTempelateForWards(DrugTempelateForWard entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.DrugFrequencyUsage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugHistory")]
	public partial class DrugHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<double> _Amount;
		
		private string _Dosage;
		
		private string _Date;
		
		private string _Complication;
		
		private string _ComplicationWithVaccan;
		
		private string _VaccanCondition;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnDosageChanging(string value);
    partial void OnDosageChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnComplicationChanging(string value);
    partial void OnComplicationChanged();
    partial void OnComplicationWithVaccanChanging(string value);
    partial void OnComplicationWithVaccanChanged();
    partial void OnVaccanConditionChanging(string value);
    partial void OnVaccanConditionChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public DrugHistory()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dosage", DbType="NVarChar(100)")]
		public string Dosage
		{
			get
			{
				return this._Dosage;
			}
			set
			{
				if ((this._Dosage != value))
				{
					this.OnDosageChanging(value);
					this.SendPropertyChanging();
					this._Dosage = value;
					this.SendPropertyChanged("Dosage");
					this.OnDosageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complication", DbType="NVarChar(100)")]
		public string Complication
		{
			get
			{
				return this._Complication;
			}
			set
			{
				if ((this._Complication != value))
				{
					this.OnComplicationChanging(value);
					this.SendPropertyChanging();
					this._Complication = value;
					this.SendPropertyChanged("Complication");
					this.OnComplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplicationWithVaccan", DbType="NVarChar(100)")]
		public string ComplicationWithVaccan
		{
			get
			{
				return this._ComplicationWithVaccan;
			}
			set
			{
				if ((this._ComplicationWithVaccan != value))
				{
					this.OnComplicationWithVaccanChanging(value);
					this.SendPropertyChanging();
					this._ComplicationWithVaccan = value;
					this.SendPropertyChanged("ComplicationWithVaccan");
					this.OnComplicationWithVaccanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaccanCondition", DbType="NVarChar(100)")]
		public string VaccanCondition
		{
			get
			{
				return this._VaccanCondition;
			}
			set
			{
				if ((this._VaccanCondition != value))
				{
					this.OnVaccanConditionChanging(value);
					this.SendPropertyChanging();
					this._VaccanCondition = value;
					this.SendPropertyChanged("VaccanCondition");
					this.OnVaccanConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.DrugHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.DrugHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugHistories.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugHistories.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugTempelateForWard")]
	public partial class DrugTempelateForWard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<System.Guid> _WardID;
		
		private System.Nullable<double> _Amount;
		
		private string _Comment;
		
		private System.Nullable<int> _HIXCode;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<DrugFrequencyUsage> _DrugFrequencyUsage;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnWardIDChanging(System.Nullable<System.Guid> value);
    partial void OnWardIDChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnHIXCodeChanging(System.Nullable<int> value);
    partial void OnHIXCodeChanged();
    #endregion
		
		public DrugTempelateForWard()
		{
			this._Department = default(EntityRef<Department>);
			this._DrugFrequencyUsage = default(EntityRef<DrugFrequencyUsage>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(100)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="Int")]
		public System.Nullable<int> HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					if (this._DrugFrequencyUsage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_DrugTempelateForWard", Storage="_Department", ThisKey="WardID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.DrugTempelateForWards.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.DrugTempelateForWards.Add(this);
						this._WardID = value.ID;
					}
					else
					{
						this._WardID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_DrugTempelateForWard", Storage="_DrugFrequencyUsage", ThisKey="HIXCode", OtherKey="ID", IsForeignKey=true)]
		public DrugFrequencyUsage DrugFrequencyUsage
		{
			get
			{
				return this._DrugFrequencyUsage.Entity;
			}
			set
			{
				DrugFrequencyUsage previousValue = this._DrugFrequencyUsage.Entity;
				if (((previousValue != value) 
							|| (this._DrugFrequencyUsage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DrugFrequencyUsage.Entity = null;
						previousValue.DrugTempelateForWards.Remove(this);
					}
					this._DrugFrequencyUsage.Entity = value;
					if ((value != null))
					{
						value.DrugTempelateForWards.Add(this);
						this._HIXCode = value.ID;
					}
					else
					{
						this._HIXCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("DrugFrequencyUsage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugTempelateForWard", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.DrugTempelateForWards.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.DrugTempelateForWards.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrugTransferee")]
	public partial class DrugTransferee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _LName;
		
		private string _Tel;
		
		private string _NatioalCode;
		
		private string _Address;
		
		private string _Number;
		
		private EntitySet<FactorM> _FactorMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnNatioalCodeChanging(string value);
    partial void OnNatioalCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public DrugTransferee()
		{
			this._FactorMs = new EntitySet<FactorM>(new Action<FactorM>(this.attach_FactorMs), new Action<FactorM>(this.detach_FactorMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NatioalCode", DbType="NVarChar(10)")]
		public string NatioalCode
		{
			get
			{
				return this._NatioalCode;
			}
			set
			{
				if ((this._NatioalCode != value))
				{
					this.OnNatioalCodeChanging(value);
					this.SendPropertyChanging();
					this._NatioalCode = value;
					this.SendPropertyChanged("NatioalCode");
					this.OnNatioalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugTransferee_FactorM", Storage="_FactorMs", ThisKey="ID", OtherKey="DrugTransfereeID")]
		public EntitySet<FactorM> FactorMs
		{
			get
			{
				return this._FactorMs;
			}
			set
			{
				this._FactorMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.DrugTransferee = this;
		}
		
		private void detach_FactorMs(FactorM entity)
		{
			this.SendPropertyChanging();
			entity.DrugTransferee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DS_Category")]
	public partial class DS_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _SID;
		
		private string _CName;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<bool> _Hide;
		
		private byte _CalcType;
		
		private bool _ForPrivatePatients;
		
		private bool _CalculateByK;
		
		private EntitySet<DS_Category> _DS_Categories;
		
		private EntityRef<DS_Category> _DS_Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnSIDChanging(System.Nullable<int> value);
    partial void OnSIDChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnHideChanging(System.Nullable<bool> value);
    partial void OnHideChanged();
    partial void OnCalcTypeChanging(byte value);
    partial void OnCalcTypeChanged();
    partial void OnForPrivatePatientsChanging(bool value);
    partial void OnForPrivatePatientsChanged();
    partial void OnCalculateByKChanging(bool value);
    partial void OnCalculateByKChanged();
    #endregion
		
		public DS_Category()
		{
			this._DS_Categories = new EntitySet<DS_Category>(new Action<DS_Category>(this.attach_DS_Categories), new Action<DS_Category>(this.detach_DS_Categories));
			this._DS_Category1 = default(EntityRef<DS_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._DS_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="NVarChar(50)")]
		public string CName
		{
			get
			{
				return this._CName;
			}
			set
			{
				if ((this._CName != value))
				{
					this.OnCNameChanging(value);
					this.SendPropertyChanging();
					this._CName = value;
					this.SendPropertyChanged("CName");
					this.OnCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit")]
		public System.Nullable<bool> Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcType", DbType="TinyInt NOT NULL")]
		public byte CalcType
		{
			get
			{
				return this._CalcType;
			}
			set
			{
				if ((this._CalcType != value))
				{
					this.OnCalcTypeChanging(value);
					this.SendPropertyChanging();
					this._CalcType = value;
					this.SendPropertyChanged("CalcType");
					this.OnCalcTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForPrivatePatients", DbType="Bit NOT NULL")]
		public bool ForPrivatePatients
		{
			get
			{
				return this._ForPrivatePatients;
			}
			set
			{
				if ((this._ForPrivatePatients != value))
				{
					this.OnForPrivatePatientsChanging(value);
					this.SendPropertyChanging();
					this._ForPrivatePatients = value;
					this.SendPropertyChanged("ForPrivatePatients");
					this.OnForPrivatePatientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculateByK", DbType="Bit NOT NULL")]
		public bool CalculateByK
		{
			get
			{
				return this._CalculateByK;
			}
			set
			{
				if ((this._CalculateByK != value))
				{
					this.OnCalculateByKChanging(value);
					this.SendPropertyChanging();
					this._CalculateByK = value;
					this.SendPropertyChanged("CalculateByK");
					this.OnCalculateByKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DS_Category_DS_Category", Storage="_DS_Categories", ThisKey="CID", OtherKey="PID")]
		public EntitySet<DS_Category> DS_Categories
		{
			get
			{
				return this._DS_Categories;
			}
			set
			{
				this._DS_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DS_Category_DS_Category", Storage="_DS_Category1", ThisKey="PID", OtherKey="CID", IsForeignKey=true)]
		public DS_Category DS_Category1
		{
			get
			{
				return this._DS_Category1.Entity;
			}
			set
			{
				DS_Category previousValue = this._DS_Category1.Entity;
				if (((previousValue != value) 
							|| (this._DS_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DS_Category1.Entity = null;
						previousValue.DS_Categories.Remove(this);
					}
					this._DS_Category1.Entity = value;
					if ((value != null))
					{
						value.DS_Categories.Add(this);
						this._PID = value.CID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DS_Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DS_Categories(DS_Category entity)
		{
			this.SendPropertyChanging();
			entity.DS_Category1 = this;
		}
		
		private void detach_DS_Categories(DS_Category entity)
		{
			this.SendPropertyChanging();
			entity.DS_Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exeption")]
	public partial class Exeption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MSG;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Ex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMSGChanging(string value);
    partial void OnMSGChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnExChanging(string value);
    partial void OnExChanged();
    #endregion
		
		public Exeption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSG", DbType="NVarChar(1000)")]
		public string MSG
		{
			get
			{
				return this._MSG;
			}
			set
			{
				if ((this._MSG != value))
				{
					this.OnMSGChanging(value);
					this.SendPropertyChanging();
					this._MSG = value;
					this.SendPropertyChanged("MSG");
					this.OnMSGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ex", DbType="NVarChar(4000)")]
		public string Ex
		{
			get
			{
				return this._Ex;
			}
			set
			{
				if ((this._Ex != value))
				{
					this.OnExChanging(value);
					this.SendPropertyChanging();
					this._Ex = value;
					this.SendPropertyChanged("Ex");
					this.OnExChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactorD")]
	public partial class FactorD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _FactorMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<int> _AmountBuy;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ExpireDate;
		
		private System.Nullable<int> _NumPageProduct;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _Tax;
		
		private string _Pack;
		
		private string _MESCCode_No;
		
		private string _LastModificatorUserFullName;
		
		private bool _Printfrm;
		
		private int _IDint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFactorMIDChanging(System.Nullable<System.Guid> value);
    partial void OnFactorMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountBuyChanging(System.Nullable<int> value);
    partial void OnAmountBuyChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnExpireDateChanging(string value);
    partial void OnExpireDateChanged();
    partial void OnNumPageProductChanging(System.Nullable<int> value);
    partial void OnNumPageProductChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnTaxChanging(System.Nullable<decimal> value);
    partial void OnTaxChanged();
    partial void OnPackChanging(string value);
    partial void OnPackChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnLastModificatorUserFullNameChanging(string value);
    partial void OnLastModificatorUserFullNameChanged();
    partial void OnPrintfrmChanging(bool value);
    partial void OnPrintfrmChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public FactorD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FactorMID
		{
			get
			{
				return this._FactorMID;
			}
			set
			{
				if ((this._FactorMID != value))
				{
					this.OnFactorMIDChanging(value);
					this.SendPropertyChanging();
					this._FactorMID = value;
					this.SendPropertyChanged("FactorMID");
					this.OnFactorMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountBuy", DbType="Int")]
		public System.Nullable<int> AmountBuy
		{
			get
			{
				return this._AmountBuy;
			}
			set
			{
				if ((this._AmountBuy != value))
				{
					this.OnAmountBuyChanging(value);
					this.SendPropertyChanging();
					this._AmountBuy = value;
					this.SendPropertyChanged("AmountBuy");
					this.OnAmountBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="NVarChar(10)")]
		public string ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPageProduct", DbType="Int")]
		public System.Nullable<int> NumPageProduct
		{
			get
			{
				return this._NumPageProduct;
			}
			set
			{
				if ((this._NumPageProduct != value))
				{
					this.OnNumPageProductChanging(value);
					this.SendPropertyChanging();
					this._NumPageProduct = value;
					this.SendPropertyChanged("NumPageProduct");
					this.OnNumPageProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Money")]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pack", DbType="NVarChar(100)")]
		public string Pack
		{
			get
			{
				return this._Pack;
			}
			set
			{
				if ((this._Pack != value))
				{
					this.OnPackChanging(value);
					this.SendPropertyChanging();
					this._Pack = value;
					this.SendPropertyChanged("Pack");
					this.OnPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificatorUserFullName", DbType="NVarChar(50)")]
		public string LastModificatorUserFullName
		{
			get
			{
				return this._LastModificatorUserFullName;
			}
			set
			{
				if ((this._LastModificatorUserFullName != value))
				{
					this.OnLastModificatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastModificatorUserFullName = value;
					this.SendPropertyChanged("LastModificatorUserFullName");
					this.OnLastModificatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Printfrm", DbType="Bit NOT NULL")]
		public bool Printfrm
		{
			get
			{
				return this._Printfrm;
			}
			set
			{
				if ((this._Printfrm != value))
				{
					this.OnPrintfrmChanging(value);
					this.SendPropertyChanging();
					this._Printfrm = value;
					this.SendPropertyChanged("Printfrm");
					this.OnPrintfrmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactorM")]
	public partial class FactorM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _DrugTransfereeID;
		
		private System.Nullable<System.Guid> _CompanyID;
		
		private string _FactorNumber;
		
		private string _FactorDate;
		
		private System.Nullable<int> _ResponsibleSale;
		
		private string _Description;
		
		private string _Barname;
		
		private string _DeliveryDate;
		
		private string _DeliveryTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<System.Guid> _Distributor;
		
		private bool _AwardFactor;
		
		private string _NeedDate;
		
		private string _DemandNumber;
		
		private string _Ordernum;
		
		private string _ReceiptNumber;
		
		private string _LastModificatorUserFullName;
		
		private int _IDint;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<DrugTransferee> _DrugTransferee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDrugTransfereeIDChanging(System.Nullable<int> value);
    partial void OnDrugTransfereeIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnCompanyIDChanged();
    partial void OnFactorNumberChanging(string value);
    partial void OnFactorNumberChanged();
    partial void OnFactorDateChanging(string value);
    partial void OnFactorDateChanged();
    partial void OnResponsibleSaleChanging(System.Nullable<int> value);
    partial void OnResponsibleSaleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBarnameChanging(string value);
    partial void OnBarnameChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnDeliveryTimeChanging(string value);
    partial void OnDeliveryTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDistributorChanging(System.Nullable<System.Guid> value);
    partial void OnDistributorChanged();
    partial void OnAwardFactorChanging(bool value);
    partial void OnAwardFactorChanged();
    partial void OnNeedDateChanging(string value);
    partial void OnNeedDateChanged();
    partial void OnDemandNumberChanging(string value);
    partial void OnDemandNumberChanged();
    partial void OnOrdernumChanging(string value);
    partial void OnOrdernumChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnLastModificatorUserFullNameChanging(string value);
    partial void OnLastModificatorUserFullNameChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public FactorM()
		{
			this._Company = default(EntityRef<Company>);
			this._Department = default(EntityRef<Department>);
			this._DrugTransferee = default(EntityRef<DrugTransferee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTransfereeID", DbType="Int")]
		public System.Nullable<int> DrugTransfereeID
		{
			get
			{
				return this._DrugTransfereeID;
			}
			set
			{
				if ((this._DrugTransfereeID != value))
				{
					if (this._DrugTransferee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugTransfereeIDChanging(value);
					this.SendPropertyChanging();
					this._DrugTransfereeID = value;
					this.SendPropertyChanged("DrugTransfereeID");
					this.OnDrugTransfereeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorNumber", DbType="NVarChar(50)")]
		public string FactorNumber
		{
			get
			{
				return this._FactorNumber;
			}
			set
			{
				if ((this._FactorNumber != value))
				{
					this.OnFactorNumberChanging(value);
					this.SendPropertyChanging();
					this._FactorNumber = value;
					this.SendPropertyChanged("FactorNumber");
					this.OnFactorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorDate", DbType="NVarChar(10)")]
		public string FactorDate
		{
			get
			{
				return this._FactorDate;
			}
			set
			{
				if ((this._FactorDate != value))
				{
					this.OnFactorDateChanging(value);
					this.SendPropertyChanging();
					this._FactorDate = value;
					this.SendPropertyChanged("FactorDate");
					this.OnFactorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleSale", DbType="Int")]
		public System.Nullable<int> ResponsibleSale
		{
			get
			{
				return this._ResponsibleSale;
			}
			set
			{
				if ((this._ResponsibleSale != value))
				{
					this.OnResponsibleSaleChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleSale = value;
					this.SendPropertyChanged("ResponsibleSale");
					this.OnResponsibleSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barname", DbType="NVarChar(100)")]
		public string Barname
		{
			get
			{
				return this._Barname;
			}
			set
			{
				if ((this._Barname != value))
				{
					this.OnBarnameChanging(value);
					this.SendPropertyChanging();
					this._Barname = value;
					this.SendPropertyChanged("Barname");
					this.OnBarnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(10)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTime", DbType="NVarChar(8)")]
		public string DeliveryTime
		{
			get
			{
				return this._DeliveryTime;
			}
			set
			{
				if ((this._DeliveryTime != value))
				{
					this.OnDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryTime = value;
					this.SendPropertyChanged("DeliveryTime");
					this.OnDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distributor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Distributor
		{
			get
			{
				return this._Distributor;
			}
			set
			{
				if ((this._Distributor != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistributorChanging(value);
					this.SendPropertyChanging();
					this._Distributor = value;
					this.SendPropertyChanged("Distributor");
					this.OnDistributorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardFactor", DbType="Bit NOT NULL")]
		public bool AwardFactor
		{
			get
			{
				return this._AwardFactor;
			}
			set
			{
				if ((this._AwardFactor != value))
				{
					this.OnAwardFactorChanging(value);
					this.SendPropertyChanging();
					this._AwardFactor = value;
					this.SendPropertyChanged("AwardFactor");
					this.OnAwardFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedDate", DbType="NVarChar(10)")]
		public string NeedDate
		{
			get
			{
				return this._NeedDate;
			}
			set
			{
				if ((this._NeedDate != value))
				{
					this.OnNeedDateChanging(value);
					this.SendPropertyChanging();
					this._NeedDate = value;
					this.SendPropertyChanged("NeedDate");
					this.OnNeedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandNumber", DbType="NVarChar(50)")]
		public string DemandNumber
		{
			get
			{
				return this._DemandNumber;
			}
			set
			{
				if ((this._DemandNumber != value))
				{
					this.OnDemandNumberChanging(value);
					this.SendPropertyChanging();
					this._DemandNumber = value;
					this.SendPropertyChanged("DemandNumber");
					this.OnDemandNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordernum", DbType="NVarChar(50)")]
		public string Ordernum
		{
			get
			{
				return this._Ordernum;
			}
			set
			{
				if ((this._Ordernum != value))
				{
					this.OnOrdernumChanging(value);
					this.SendPropertyChanging();
					this._Ordernum = value;
					this.SendPropertyChanged("Ordernum");
					this.OnOrdernumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificatorUserFullName", DbType="NVarChar(50)")]
		public string LastModificatorUserFullName
		{
			get
			{
				return this._LastModificatorUserFullName;
			}
			set
			{
				if ((this._LastModificatorUserFullName != value))
				{
					this.OnLastModificatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastModificatorUserFullName = value;
					this.SendPropertyChanged("LastModificatorUserFullName");
					this.OnLastModificatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_FactorM", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.FactorMs.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.FactorMs.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_FactorM", Storage="_Department", ThisKey="Distributor", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.FactorMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.FactorMs.Add(this);
						this._Distributor = value.ID;
					}
					else
					{
						this._Distributor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugTransferee_FactorM", Storage="_DrugTransferee", ThisKey="DrugTransfereeID", OtherKey="ID", IsForeignKey=true)]
		public DrugTransferee DrugTransferee
		{
			get
			{
				return this._DrugTransferee.Entity;
			}
			set
			{
				DrugTransferee previousValue = this._DrugTransferee.Entity;
				if (((previousValue != value) 
							|| (this._DrugTransferee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DrugTransferee.Entity = null;
						previousValue.FactorMs.Remove(this);
					}
					this._DrugTransferee.Entity = value;
					if ((value != null))
					{
						value.FactorMs.Add(this);
						this._DrugTransfereeID = value.ID;
					}
					else
					{
						this._DrugTransfereeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DrugTransferee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteICD10")]
	public partial class FavoriteICD10 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _ICD10ID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private EntityRef<ICD10> _ICD10;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnICD10IDChanging(System.Nullable<int> value);
    partial void OnICD10IDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    #endregion
		
		public FavoriteICD10()
		{
			this._ICD10 = default(EntityRef<ICD10>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICD10ID", DbType="Int")]
		public System.Nullable<int> ICD10ID
		{
			get
			{
				return this._ICD10ID;
			}
			set
			{
				if ((this._ICD10ID != value))
				{
					if (this._ICD10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnICD10IDChanging(value);
					this.SendPropertyChanging();
					this._ICD10ID = value;
					this.SendPropertyChanged("ICD10ID");
					this.OnICD10IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_FavoriteICD10", Storage="_ICD10", ThisKey="ICD10ID", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD10
		{
			get
			{
				return this._ICD10.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD10.Entity;
				if (((previousValue != value) 
							|| (this._ICD10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD10.Entity = null;
						previousValue.FavoriteICD10s.Remove(this);
					}
					this._ICD10.Entity = value;
					if ((value != null))
					{
						value.FavoriteICD10s.Add(this);
						this._ICD10ID = value.ID;
					}
					else
					{
						this._ICD10ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteICD10", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FavoriteICD10s.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FavoriteICD10s.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteService")]
	public partial class FavoriteService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public FavoriteService()
		{
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FavoriteService", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.FavoriteServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.FavoriteServices.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteService", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FavoriteServices.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FavoriteServices.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileExcel")]
	public partial class FileExcel
	{
		
		private int _ID;
		
		private string _Doctor;
		
		private System.Nullable<double> _PersonalCode;
		
		private string _MedicalCode;
		
		private string _LastName;
		
		private string _Name;
		
		private string _BirthDate;
		
		private System.Nullable<double> _Sex;
		
		private string _Company;
		
		private string _Management;
		
		private string _Organization;
		
		private System.Nullable<double> _DossierNumber;
		
		private System.Nullable<double> _Phone;
		
		private System.Nullable<double> _Age;
		
		private string _MedicFamilyDossier;
		
		private string _ActiveHygieneDossier;
		
		private string _Description;
		
		private string _MedicalCenter;
		
		private string _DiabeteRiddleStatus;
		
		private System.Nullable<double> _HealthyDRDate;
		
		private string _SickDRDate;
		
		private string _ifgDRDate;
		
		private string _igtDRDate;
		
		private System.Nullable<double> _HealthyIDR;
		
		private System.Nullable<double> _ifgIDR;
		
		private System.Nullable<double> _igdIDR;
		
		private string _BloodFatDisorderRiddleStatus;
		
		private System.Nullable<double> _HealthyBFDRDate;
		
		private System.Nullable<double> _LdlBFDRDate;
		
		private System.Nullable<double> _HdlBFDRDate;
		
		private System.Nullable<double> _TgBFDRDate;
		
		private System.Nullable<double> _IncludedBFDR;
		
		private string _HighBloodPressRiddleStat;
		
		private System.Nullable<double> _HealthyHBPRDate;
		
		private string _SickHBPRDate;
		
		private System.Nullable<double> _PreHipertansiyonHBPRDate;
		
		private System.Nullable<double> _HealthyIncludeHiper;
		
		private System.Nullable<double> _PreHiperIncludeHiper;
		
		private string _OverweightRiddleStat;
		
		private System.Nullable<double> _NormalOWDate;
		
		private string _ThinOWDate;
		
		private System.Nullable<double> _OverweightOWDate;
		
		private string _FatOWDate;
		
		private System.Nullable<double> _BMIRiddleInclude;
		
		private string _DiabeteRiskFactAssessment;
		
		private System.Nullable<double> _HasNotDRFADate;
		
		private string _HasDFRADate;
		
		private System.Nullable<double> _DiabetRiskFactRiddleInclude;
		
		private System.Nullable<double> _HeartVascularRiskAssessmentDate;
		
		private string _ResultHeartRiskAssess;
		
		private string _Action;
		
		private string _PeriodicCheckupDate;
		
		private string _PeriodicCheckupType;
		
		private System.Nullable<double> _HealthyResChechup;
		
		private string _SmokeStatusResChechup;
		
		private string _SmokeTypeResCheckup;
		
		private string _StartDateSmokeResCheckup;
		
		private string _ResPhysicalActivityResCheckup;
		
		private string _BodyActivityRiskFactResCheckup;
		
		private string _PARQResCheckup;
		
		private string _InterventionBodyActTypeResCheckup;
		
		private System.Nullable<double> _FoodAssessmentResCheckup;
		
		private string _ResFoodActionResCheckup;
		
		private System.Nullable<double> _HeartVescularAssessmentResCheckup;
		
		private string _OsteoprosisResCheckup;
		
		private string _MentalAssessmentResCheckup;
		
		private string _AsthmaAllergyAssessResCheckup;
		
		private string _CancerResCheckup;
		
		private string _CancerStageResCheckup;
		
		private string _RefferMouthTeethResCheckup;
		
		private string _Other1;
		
		private string _Other2;
		
		private string _Other3;
		
		private string _Other4;
		
		private string _Other5;
		
		private string _Other6;
		
		private string _Other7;
		
		private string _Recall;
		
		private string _Following;
		
		private string _RecallFollowingDate1;
		
		private string _RecallFollowingDate2;
		
		private string _RecallFollowingDate3;
		
		private string _ResFollowing1;
		
		private string _ResFollowing2;
		
		private string _ResFollowing3;
		
		private string _CurrentVisitDate;
		
		private string _NextVisitDatePeriCheck;
		
		private string _NextVisitDateChronic;
		
		private string _FollowingLiable;
		
		private string _Empty1;
		
		private string _Empty2;
		
		private System.Nullable<System.Guid> _DepartmentHCIS;
		
		public FileExcel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(255)")]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this._Doctor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="Float")]
		public System.Nullable<double> PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCode", DbType="NVarChar(255)")]
		public string MedicalCode
		{
			get
			{
				return this._MedicalCode;
			}
			set
			{
				if ((this._MedicalCode != value))
				{
					this._MedicalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(255)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Float")]
		public System.Nullable<double> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this._Company = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Management", DbType="NVarChar(255)")]
		public string Management
		{
			get
			{
				return this._Management;
			}
			set
			{
				if ((this._Management != value))
				{
					this._Management = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="NVarChar(255)")]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this._Organization = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierNumber", DbType="Float")]
		public System.Nullable<double> DossierNumber
		{
			get
			{
				return this._DossierNumber;
			}
			set
			{
				if ((this._DossierNumber != value))
				{
					this._DossierNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Float")]
		public System.Nullable<double> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Float")]
		public System.Nullable<double> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicFamilyDossier", DbType="NVarChar(255)")]
		public string MedicFamilyDossier
		{
			get
			{
				return this._MedicFamilyDossier;
			}
			set
			{
				if ((this._MedicFamilyDossier != value))
				{
					this._MedicFamilyDossier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveHygieneDossier", DbType="NVarChar(255)")]
		public string ActiveHygieneDossier
		{
			get
			{
				return this._ActiveHygieneDossier;
			}
			set
			{
				if ((this._ActiveHygieneDossier != value))
				{
					this._ActiveHygieneDossier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalCenter", DbType="NVarChar(255)")]
		public string MedicalCenter
		{
			get
			{
				return this._MedicalCenter;
			}
			set
			{
				if ((this._MedicalCenter != value))
				{
					this._MedicalCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabeteRiddleStatus", DbType="NVarChar(255)")]
		public string DiabeteRiddleStatus
		{
			get
			{
				return this._DiabeteRiddleStatus;
			}
			set
			{
				if ((this._DiabeteRiddleStatus != value))
				{
					this._DiabeteRiddleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyDRDate", DbType="Float")]
		public System.Nullable<double> HealthyDRDate
		{
			get
			{
				return this._HealthyDRDate;
			}
			set
			{
				if ((this._HealthyDRDate != value))
				{
					this._HealthyDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickDRDate", DbType="NVarChar(255)")]
		public string SickDRDate
		{
			get
			{
				return this._SickDRDate;
			}
			set
			{
				if ((this._SickDRDate != value))
				{
					this._SickDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifgDRDate", DbType="NVarChar(255)")]
		public string ifgDRDate
		{
			get
			{
				return this._ifgDRDate;
			}
			set
			{
				if ((this._ifgDRDate != value))
				{
					this._ifgDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_igtDRDate", DbType="NVarChar(255)")]
		public string igtDRDate
		{
			get
			{
				return this._igtDRDate;
			}
			set
			{
				if ((this._igtDRDate != value))
				{
					this._igtDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyIDR", DbType="Float")]
		public System.Nullable<double> HealthyIDR
		{
			get
			{
				return this._HealthyIDR;
			}
			set
			{
				if ((this._HealthyIDR != value))
				{
					this._HealthyIDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ifgIDR", DbType="Float")]
		public System.Nullable<double> ifgIDR
		{
			get
			{
				return this._ifgIDR;
			}
			set
			{
				if ((this._ifgIDR != value))
				{
					this._ifgIDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_igdIDR", DbType="Float")]
		public System.Nullable<double> igdIDR
		{
			get
			{
				return this._igdIDR;
			}
			set
			{
				if ((this._igdIDR != value))
				{
					this._igdIDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodFatDisorderRiddleStatus", DbType="NVarChar(255)")]
		public string BloodFatDisorderRiddleStatus
		{
			get
			{
				return this._BloodFatDisorderRiddleStatus;
			}
			set
			{
				if ((this._BloodFatDisorderRiddleStatus != value))
				{
					this._BloodFatDisorderRiddleStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyBFDRDate", DbType="Float")]
		public System.Nullable<double> HealthyBFDRDate
		{
			get
			{
				return this._HealthyBFDRDate;
			}
			set
			{
				if ((this._HealthyBFDRDate != value))
				{
					this._HealthyBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdlBFDRDate", DbType="Float")]
		public System.Nullable<double> LdlBFDRDate
		{
			get
			{
				return this._LdlBFDRDate;
			}
			set
			{
				if ((this._LdlBFDRDate != value))
				{
					this._LdlBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HdlBFDRDate", DbType="Float")]
		public System.Nullable<double> HdlBFDRDate
		{
			get
			{
				return this._HdlBFDRDate;
			}
			set
			{
				if ((this._HdlBFDRDate != value))
				{
					this._HdlBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TgBFDRDate", DbType="Float")]
		public System.Nullable<double> TgBFDRDate
		{
			get
			{
				return this._TgBFDRDate;
			}
			set
			{
				if ((this._TgBFDRDate != value))
				{
					this._TgBFDRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludedBFDR", DbType="Float")]
		public System.Nullable<double> IncludedBFDR
		{
			get
			{
				return this._IncludedBFDR;
			}
			set
			{
				if ((this._IncludedBFDR != value))
				{
					this._IncludedBFDR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighBloodPressRiddleStat", DbType="NVarChar(255)")]
		public string HighBloodPressRiddleStat
		{
			get
			{
				return this._HighBloodPressRiddleStat;
			}
			set
			{
				if ((this._HighBloodPressRiddleStat != value))
				{
					this._HighBloodPressRiddleStat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyHBPRDate", DbType="Float")]
		public System.Nullable<double> HealthyHBPRDate
		{
			get
			{
				return this._HealthyHBPRDate;
			}
			set
			{
				if ((this._HealthyHBPRDate != value))
				{
					this._HealthyHBPRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickHBPRDate", DbType="NVarChar(255)")]
		public string SickHBPRDate
		{
			get
			{
				return this._SickHBPRDate;
			}
			set
			{
				if ((this._SickHBPRDate != value))
				{
					this._SickHBPRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreHipertansiyonHBPRDate", DbType="Float")]
		public System.Nullable<double> PreHipertansiyonHBPRDate
		{
			get
			{
				return this._PreHipertansiyonHBPRDate;
			}
			set
			{
				if ((this._PreHipertansiyonHBPRDate != value))
				{
					this._PreHipertansiyonHBPRDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyIncludeHiper", DbType="Float")]
		public System.Nullable<double> HealthyIncludeHiper
		{
			get
			{
				return this._HealthyIncludeHiper;
			}
			set
			{
				if ((this._HealthyIncludeHiper != value))
				{
					this._HealthyIncludeHiper = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreHiperIncludeHiper", DbType="Float")]
		public System.Nullable<double> PreHiperIncludeHiper
		{
			get
			{
				return this._PreHiperIncludeHiper;
			}
			set
			{
				if ((this._PreHiperIncludeHiper != value))
				{
					this._PreHiperIncludeHiper = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverweightRiddleStat", DbType="NVarChar(255)")]
		public string OverweightRiddleStat
		{
			get
			{
				return this._OverweightRiddleStat;
			}
			set
			{
				if ((this._OverweightRiddleStat != value))
				{
					this._OverweightRiddleStat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalOWDate", DbType="Float")]
		public System.Nullable<double> NormalOWDate
		{
			get
			{
				return this._NormalOWDate;
			}
			set
			{
				if ((this._NormalOWDate != value))
				{
					this._NormalOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThinOWDate", DbType="NVarChar(255)")]
		public string ThinOWDate
		{
			get
			{
				return this._ThinOWDate;
			}
			set
			{
				if ((this._ThinOWDate != value))
				{
					this._ThinOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverweightOWDate", DbType="Float")]
		public System.Nullable<double> OverweightOWDate
		{
			get
			{
				return this._OverweightOWDate;
			}
			set
			{
				if ((this._OverweightOWDate != value))
				{
					this._OverweightOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatOWDate", DbType="NVarChar(255)")]
		public string FatOWDate
		{
			get
			{
				return this._FatOWDate;
			}
			set
			{
				if ((this._FatOWDate != value))
				{
					this._FatOWDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMIRiddleInclude", DbType="Float")]
		public System.Nullable<double> BMIRiddleInclude
		{
			get
			{
				return this._BMIRiddleInclude;
			}
			set
			{
				if ((this._BMIRiddleInclude != value))
				{
					this._BMIRiddleInclude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabeteRiskFactAssessment", DbType="NVarChar(255)")]
		public string DiabeteRiskFactAssessment
		{
			get
			{
				return this._DiabeteRiskFactAssessment;
			}
			set
			{
				if ((this._DiabeteRiskFactAssessment != value))
				{
					this._DiabeteRiskFactAssessment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNotDRFADate", DbType="Float")]
		public System.Nullable<double> HasNotDRFADate
		{
			get
			{
				return this._HasNotDRFADate;
			}
			set
			{
				if ((this._HasNotDRFADate != value))
				{
					this._HasNotDRFADate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDFRADate", DbType="NVarChar(255)")]
		public string HasDFRADate
		{
			get
			{
				return this._HasDFRADate;
			}
			set
			{
				if ((this._HasDFRADate != value))
				{
					this._HasDFRADate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiabetRiskFactRiddleInclude", DbType="Float")]
		public System.Nullable<double> DiabetRiskFactRiddleInclude
		{
			get
			{
				return this._DiabetRiskFactRiddleInclude;
			}
			set
			{
				if ((this._DiabetRiskFactRiddleInclude != value))
				{
					this._DiabetRiskFactRiddleInclude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartVascularRiskAssessmentDate", DbType="Float")]
		public System.Nullable<double> HeartVascularRiskAssessmentDate
		{
			get
			{
				return this._HeartVascularRiskAssessmentDate;
			}
			set
			{
				if ((this._HeartVascularRiskAssessmentDate != value))
				{
					this._HeartVascularRiskAssessmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultHeartRiskAssess", DbType="NVarChar(255)")]
		public string ResultHeartRiskAssess
		{
			get
			{
				return this._ResultHeartRiskAssess;
			}
			set
			{
				if ((this._ResultHeartRiskAssess != value))
				{
					this._ResultHeartRiskAssess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(255)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCheckupDate", DbType="NVarChar(255)")]
		public string PeriodicCheckupDate
		{
			get
			{
				return this._PeriodicCheckupDate;
			}
			set
			{
				if ((this._PeriodicCheckupDate != value))
				{
					this._PeriodicCheckupDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCheckupType", DbType="NVarChar(255)")]
		public string PeriodicCheckupType
		{
			get
			{
				return this._PeriodicCheckupType;
			}
			set
			{
				if ((this._PeriodicCheckupType != value))
				{
					this._PeriodicCheckupType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthyResChechup", DbType="Float")]
		public System.Nullable<double> HealthyResChechup
		{
			get
			{
				return this._HealthyResChechup;
			}
			set
			{
				if ((this._HealthyResChechup != value))
				{
					this._HealthyResChechup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokeStatusResChechup", DbType="NVarChar(255)")]
		public string SmokeStatusResChechup
		{
			get
			{
				return this._SmokeStatusResChechup;
			}
			set
			{
				if ((this._SmokeStatusResChechup != value))
				{
					this._SmokeStatusResChechup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmokeTypeResCheckup", DbType="NVarChar(255)")]
		public string SmokeTypeResCheckup
		{
			get
			{
				return this._SmokeTypeResCheckup;
			}
			set
			{
				if ((this._SmokeTypeResCheckup != value))
				{
					this._SmokeTypeResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateSmokeResCheckup", DbType="NVarChar(255)")]
		public string StartDateSmokeResCheckup
		{
			get
			{
				return this._StartDateSmokeResCheckup;
			}
			set
			{
				if ((this._StartDateSmokeResCheckup != value))
				{
					this._StartDateSmokeResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResPhysicalActivityResCheckup", DbType="NVarChar(255)")]
		public string ResPhysicalActivityResCheckup
		{
			get
			{
				return this._ResPhysicalActivityResCheckup;
			}
			set
			{
				if ((this._ResPhysicalActivityResCheckup != value))
				{
					this._ResPhysicalActivityResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyActivityRiskFactResCheckup", DbType="NVarChar(255)")]
		public string BodyActivityRiskFactResCheckup
		{
			get
			{
				return this._BodyActivityRiskFactResCheckup;
			}
			set
			{
				if ((this._BodyActivityRiskFactResCheckup != value))
				{
					this._BodyActivityRiskFactResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARQResCheckup", DbType="NVarChar(255)")]
		public string PARQResCheckup
		{
			get
			{
				return this._PARQResCheckup;
			}
			set
			{
				if ((this._PARQResCheckup != value))
				{
					this._PARQResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterventionBodyActTypeResCheckup", DbType="NVarChar(255)")]
		public string InterventionBodyActTypeResCheckup
		{
			get
			{
				return this._InterventionBodyActTypeResCheckup;
			}
			set
			{
				if ((this._InterventionBodyActTypeResCheckup != value))
				{
					this._InterventionBodyActTypeResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodAssessmentResCheckup", DbType="Float")]
		public System.Nullable<double> FoodAssessmentResCheckup
		{
			get
			{
				return this._FoodAssessmentResCheckup;
			}
			set
			{
				if ((this._FoodAssessmentResCheckup != value))
				{
					this._FoodAssessmentResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFoodActionResCheckup", DbType="NVarChar(255)")]
		public string ResFoodActionResCheckup
		{
			get
			{
				return this._ResFoodActionResCheckup;
			}
			set
			{
				if ((this._ResFoodActionResCheckup != value))
				{
					this._ResFoodActionResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartVescularAssessmentResCheckup", DbType="Float")]
		public System.Nullable<double> HeartVescularAssessmentResCheckup
		{
			get
			{
				return this._HeartVescularAssessmentResCheckup;
			}
			set
			{
				if ((this._HeartVescularAssessmentResCheckup != value))
				{
					this._HeartVescularAssessmentResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsteoprosisResCheckup", DbType="NVarChar(255)")]
		public string OsteoprosisResCheckup
		{
			get
			{
				return this._OsteoprosisResCheckup;
			}
			set
			{
				if ((this._OsteoprosisResCheckup != value))
				{
					this._OsteoprosisResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MentalAssessmentResCheckup", DbType="NVarChar(255)")]
		public string MentalAssessmentResCheckup
		{
			get
			{
				return this._MentalAssessmentResCheckup;
			}
			set
			{
				if ((this._MentalAssessmentResCheckup != value))
				{
					this._MentalAssessmentResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsthmaAllergyAssessResCheckup", DbType="NVarChar(255)")]
		public string AsthmaAllergyAssessResCheckup
		{
			get
			{
				return this._AsthmaAllergyAssessResCheckup;
			}
			set
			{
				if ((this._AsthmaAllergyAssessResCheckup != value))
				{
					this._AsthmaAllergyAssessResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancerResCheckup", DbType="NVarChar(255)")]
		public string CancerResCheckup
		{
			get
			{
				return this._CancerResCheckup;
			}
			set
			{
				if ((this._CancerResCheckup != value))
				{
					this._CancerResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancerStageResCheckup", DbType="NVarChar(255)")]
		public string CancerStageResCheckup
		{
			get
			{
				return this._CancerStageResCheckup;
			}
			set
			{
				if ((this._CancerStageResCheckup != value))
				{
					this._CancerStageResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefferMouthTeethResCheckup", DbType="NVarChar(255)")]
		public string RefferMouthTeethResCheckup
		{
			get
			{
				return this._RefferMouthTeethResCheckup;
			}
			set
			{
				if ((this._RefferMouthTeethResCheckup != value))
				{
					this._RefferMouthTeethResCheckup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other1", DbType="NVarChar(255)")]
		public string Other1
		{
			get
			{
				return this._Other1;
			}
			set
			{
				if ((this._Other1 != value))
				{
					this._Other1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other2", DbType="NVarChar(255)")]
		public string Other2
		{
			get
			{
				return this._Other2;
			}
			set
			{
				if ((this._Other2 != value))
				{
					this._Other2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other3", DbType="NVarChar(255)")]
		public string Other3
		{
			get
			{
				return this._Other3;
			}
			set
			{
				if ((this._Other3 != value))
				{
					this._Other3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other4", DbType="NVarChar(255)")]
		public string Other4
		{
			get
			{
				return this._Other4;
			}
			set
			{
				if ((this._Other4 != value))
				{
					this._Other4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other5", DbType="NVarChar(255)")]
		public string Other5
		{
			get
			{
				return this._Other5;
			}
			set
			{
				if ((this._Other5 != value))
				{
					this._Other5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other6", DbType="NVarChar(255)")]
		public string Other6
		{
			get
			{
				return this._Other6;
			}
			set
			{
				if ((this._Other6 != value))
				{
					this._Other6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other7", DbType="NVarChar(255)")]
		public string Other7
		{
			get
			{
				return this._Other7;
			}
			set
			{
				if ((this._Other7 != value))
				{
					this._Other7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recall", DbType="NVarChar(255)")]
		public string Recall
		{
			get
			{
				return this._Recall;
			}
			set
			{
				if ((this._Recall != value))
				{
					this._Recall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Following", DbType="NVarChar(255)")]
		public string Following
		{
			get
			{
				return this._Following;
			}
			set
			{
				if ((this._Following != value))
				{
					this._Following = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallFollowingDate1", DbType="NVarChar(255)")]
		public string RecallFollowingDate1
		{
			get
			{
				return this._RecallFollowingDate1;
			}
			set
			{
				if ((this._RecallFollowingDate1 != value))
				{
					this._RecallFollowingDate1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallFollowingDate2", DbType="NVarChar(255)")]
		public string RecallFollowingDate2
		{
			get
			{
				return this._RecallFollowingDate2;
			}
			set
			{
				if ((this._RecallFollowingDate2 != value))
				{
					this._RecallFollowingDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallFollowingDate3", DbType="NVarChar(255)")]
		public string RecallFollowingDate3
		{
			get
			{
				return this._RecallFollowingDate3;
			}
			set
			{
				if ((this._RecallFollowingDate3 != value))
				{
					this._RecallFollowingDate3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFollowing1", DbType="NVarChar(255)")]
		public string ResFollowing1
		{
			get
			{
				return this._ResFollowing1;
			}
			set
			{
				if ((this._ResFollowing1 != value))
				{
					this._ResFollowing1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFollowing2", DbType="NVarChar(255)")]
		public string ResFollowing2
		{
			get
			{
				return this._ResFollowing2;
			}
			set
			{
				if ((this._ResFollowing2 != value))
				{
					this._ResFollowing2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResFollowing3", DbType="NVarChar(255)")]
		public string ResFollowing3
		{
			get
			{
				return this._ResFollowing3;
			}
			set
			{
				if ((this._ResFollowing3 != value))
				{
					this._ResFollowing3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVisitDate", DbType="NVarChar(255)")]
		public string CurrentVisitDate
		{
			get
			{
				return this._CurrentVisitDate;
			}
			set
			{
				if ((this._CurrentVisitDate != value))
				{
					this._CurrentVisitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDatePeriCheck", DbType="NVarChar(255)")]
		public string NextVisitDatePeriCheck
		{
			get
			{
				return this._NextVisitDatePeriCheck;
			}
			set
			{
				if ((this._NextVisitDatePeriCheck != value))
				{
					this._NextVisitDatePeriCheck = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextVisitDateChronic", DbType="NVarChar(255)")]
		public string NextVisitDateChronic
		{
			get
			{
				return this._NextVisitDateChronic;
			}
			set
			{
				if ((this._NextVisitDateChronic != value))
				{
					this._NextVisitDateChronic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowingLiable", DbType="NVarChar(255)")]
		public string FollowingLiable
		{
			get
			{
				return this._FollowingLiable;
			}
			set
			{
				if ((this._FollowingLiable != value))
				{
					this._FollowingLiable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empty1", DbType="NVarChar(255)")]
		public string Empty1
		{
			get
			{
				return this._Empty1;
			}
			set
			{
				if ((this._Empty1 != value))
				{
					this._Empty1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empty2", DbType="NVarChar(255)")]
		public string Empty2
		{
			get
			{
				return this._Empty2;
			}
			set
			{
				if ((this._Empty2 != value))
				{
					this._Empty2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentHCIS", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentHCIS
		{
			get
			{
				return this._DepartmentHCIS;
			}
			set
			{
				if ((this._DepartmentHCIS != value))
				{
					this._DepartmentHCIS = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form20")]
	public partial class Form20 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Year;
		
		private string _Center;
		
		private string _Month;
		
		private string _درمانگاه;
		
		private System.Nullable<double> _تعداد_پزشک_عمومی_مرکز;
		
		private System.Nullable<double> _تعداد_پرستار_مرکز;
		
		private System.Nullable<double> _تعداد_کل_پزشک_خانواده_مرکز;
		
		private System.Nullable<double> _تعداد_پزشک_خانواده_در_شیفت_صبح;
		
		private System.Nullable<double> _تعداد_پرستارخانواده;
		
		private System.Nullable<double> _تعدادجمعیت__;
		
		private System.Nullable<double> _تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی;
		
		private System.Nullable<double> _تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته;
		
		private System.Nullable<double> _تعداد_خانوار_تحت_پوشش_مرکز;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشسته;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی;
		
		private System.Nullable<double> _فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnCenterChanging(string value);
    partial void OnCenterChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnدرمانگاهChanging(string value);
    partial void OnدرمانگاهChanged();
    partial void Onتعداد_پزشک_عمومی_مرکزChanging(System.Nullable<double> value);
    partial void Onتعداد_پزشک_عمومی_مرکزChanged();
    partial void Onتعداد_پرستار_مرکزChanging(System.Nullable<double> value);
    partial void Onتعداد_پرستار_مرکزChanged();
    partial void Onتعداد_کل_پزشک_خانواده_مرکزChanging(System.Nullable<double> value);
    partial void Onتعداد_کل_پزشک_خانواده_مرکزChanged();
    partial void Onتعداد_پزشک_خانواده_در_شیفت_صبحChanging(System.Nullable<double> value);
    partial void Onتعداد_پزشک_خانواده_در_شیفت_صبحChanged();
    partial void Onتعداد_پرستارخانوادهChanging(System.Nullable<double> value);
    partial void Onتعداد_پرستارخانوادهChanged();
    partial void Onتعدادجمعیت__Changing(System.Nullable<double> value);
    partial void Onتعدادجمعیت__Changed();
    partial void Onتعداد_جمعیت_دارای_پرونده_خانواده_شرکتیChanging(System.Nullable<double> value);
    partial void Onتعداد_جمعیت_دارای_پرونده_خانواده_شرکتیChanged();
    partial void Onتعداد_جمعیت_دارای_پرونده_خانواده_بازنشستهChanging(System.Nullable<double> value);
    partial void Onتعداد_جمعیت_دارای_پرونده_خانواده_بازنشستهChanged();
    partial void Onتعداد_خانوار_تحت_پوشش_مرکزChanging(System.Nullable<double> value);
    partial void Onتعداد_خانوار_تحت_پوشش_مرکزChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتیChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتیChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشستهChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشستهChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتیChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتیChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشستهChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشستهChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتیChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتیChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشستهChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشستهChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتیChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتیChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشستهChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشستهChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتیChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتیChanged();
    partial void Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشستهChanging(System.Nullable<double> value);
    partial void Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشستهChanged();
    #endregion
		
		public Form20()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Center", DbType="NVarChar(255)")]
		public string Center
		{
			get
			{
				return this._Center;
			}
			set
			{
				if ((this._Center != value))
				{
					this.OnCenterChanging(value);
					this.SendPropertyChanging();
					this._Center = value;
					this.SendPropertyChanged("Center");
					this.OnCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(255)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_درمانگاه", DbType="NVarChar(255)")]
		public string درمانگاه
		{
			get
			{
				return this._درمانگاه;
			}
			set
			{
				if ((this._درمانگاه != value))
				{
					this.OnدرمانگاهChanging(value);
					this.SendPropertyChanging();
					this._درمانگاه = value;
					this.SendPropertyChanged("درمانگاه");
					this.OnدرمانگاهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد پزشک عمومی مرکز]", Storage="_تعداد_پزشک_عمومی_مرکز", DbType="Float")]
		public System.Nullable<double> تعداد_پزشک_عمومی_مرکز
		{
			get
			{
				return this._تعداد_پزشک_عمومی_مرکز;
			}
			set
			{
				if ((this._تعداد_پزشک_عمومی_مرکز != value))
				{
					this.Onتعداد_پزشک_عمومی_مرکزChanging(value);
					this.SendPropertyChanging();
					this._تعداد_پزشک_عمومی_مرکز = value;
					this.SendPropertyChanged("تعداد_پزشک_عمومی_مرکز");
					this.Onتعداد_پزشک_عمومی_مرکزChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد پرستار مرکز]", Storage="_تعداد_پرستار_مرکز", DbType="Float")]
		public System.Nullable<double> تعداد_پرستار_مرکز
		{
			get
			{
				return this._تعداد_پرستار_مرکز;
			}
			set
			{
				if ((this._تعداد_پرستار_مرکز != value))
				{
					this.Onتعداد_پرستار_مرکزChanging(value);
					this.SendPropertyChanging();
					this._تعداد_پرستار_مرکز = value;
					this.SendPropertyChanged("تعداد_پرستار_مرکز");
					this.Onتعداد_پرستار_مرکزChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد کل پزشک خانواده مرکز]", Storage="_تعداد_کل_پزشک_خانواده_مرکز", DbType="Float")]
		public System.Nullable<double> تعداد_کل_پزشک_خانواده_مرکز
		{
			get
			{
				return this._تعداد_کل_پزشک_خانواده_مرکز;
			}
			set
			{
				if ((this._تعداد_کل_پزشک_خانواده_مرکز != value))
				{
					this.Onتعداد_کل_پزشک_خانواده_مرکزChanging(value);
					this.SendPropertyChanging();
					this._تعداد_کل_پزشک_خانواده_مرکز = value;
					this.SendPropertyChanged("تعداد_کل_پزشک_خانواده_مرکز");
					this.Onتعداد_کل_پزشک_خانواده_مرکزChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد پزشک خانواده در شیفت صبح]", Storage="_تعداد_پزشک_خانواده_در_شیفت_صبح", DbType="Float")]
		public System.Nullable<double> تعداد_پزشک_خانواده_در_شیفت_صبح
		{
			get
			{
				return this._تعداد_پزشک_خانواده_در_شیفت_صبح;
			}
			set
			{
				if ((this._تعداد_پزشک_خانواده_در_شیفت_صبح != value))
				{
					this.Onتعداد_پزشک_خانواده_در_شیفت_صبحChanging(value);
					this.SendPropertyChanging();
					this._تعداد_پزشک_خانواده_در_شیفت_صبح = value;
					this.SendPropertyChanged("تعداد_پزشک_خانواده_در_شیفت_صبح");
					this.Onتعداد_پزشک_خانواده_در_شیفت_صبحChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد پرستارخانواده]", Storage="_تعداد_پرستارخانواده", DbType="Float")]
		public System.Nullable<double> تعداد_پرستارخانواده
		{
			get
			{
				return this._تعداد_پرستارخانواده;
			}
			set
			{
				if ((this._تعداد_پرستارخانواده != value))
				{
					this.Onتعداد_پرستارخانوادهChanging(value);
					this.SendPropertyChanging();
					this._تعداد_پرستارخانواده = value;
					this.SendPropertyChanged("تعداد_پرستارخانواده");
					this.Onتعداد_پرستارخانوادهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعدادجمعیت  ]", Storage="_تعدادجمعیت__", DbType="Float")]
		public System.Nullable<double> تعدادجمعیت__
		{
			get
			{
				return this._تعدادجمعیت__;
			}
			set
			{
				if ((this._تعدادجمعیت__ != value))
				{
					this.Onتعدادجمعیت__Changing(value);
					this.SendPropertyChanging();
					this._تعدادجمعیت__ = value;
					this.SendPropertyChanged("تعدادجمعیت__");
					this.Onتعدادجمعیت__Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد جمعیت دارای پرونده خانواده شرکتی]", Storage="_تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی", DbType="Float")]
		public System.Nullable<double> تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی
		{
			get
			{
				return this._تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی;
			}
			set
			{
				if ((this._تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی != value))
				{
					this.Onتعداد_جمعیت_دارای_پرونده_خانواده_شرکتیChanging(value);
					this.SendPropertyChanging();
					this._تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی = value;
					this.SendPropertyChanged("تعداد_جمعیت_دارای_پرونده_خانواده_شرکتی");
					this.Onتعداد_جمعیت_دارای_پرونده_خانواده_شرکتیChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد جمعیت دارای پرونده خانواده بازنشسته]", Storage="_تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته", DbType="Float")]
		public System.Nullable<double> تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته
		{
			get
			{
				return this._تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته;
			}
			set
			{
				if ((this._تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته != value))
				{
					this.Onتعداد_جمعیت_دارای_پرونده_خانواده_بازنشستهChanging(value);
					this.SendPropertyChanging();
					this._تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته = value;
					this.SendPropertyChanged("تعداد_جمعیت_دارای_پرونده_خانواده_بازنشسته");
					this.Onتعداد_جمعیت_دارای_پرونده_خانواده_بازنشستهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تعداد خانوار تحت پوشش مرکز]", Storage="_تعداد_خانوار_تحت_پوشش_مرکز", DbType="Float")]
		public System.Nullable<double> تعداد_خانوار_تحت_پوشش_مرکز
		{
			get
			{
				return this._تعداد_خانوار_تحت_پوشش_مرکز;
			}
			set
			{
				if ((this._تعداد_خانوار_تحت_پوشش_مرکز != value))
				{
					this.Onتعداد_خانوار_تحت_پوشش_مرکزChanging(value);
					this.SendPropertyChanging();
					this._تعداد_خانوار_تحت_پوشش_مرکز = value;
					this.SendPropertyChanged("تعداد_خانوار_تحت_پوشش_مرکز");
					this.Onتعداد_خانوار_تحت_پوشش_مرکزChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعداد کل مراجعین شرکتی]", Storage="_فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتیChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتی");
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_شرکتیChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعداد کل مراجعین بازنشسته]", Storage="_فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشستهChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشسته");
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_بازنشستهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعداد کل مراجعین در شیفت صبح ( بجز روزهای تعطیل) شرکتی]", Storage="_فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتیChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتی");
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__شرکتیChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعداد کل مراجعین در شیفت صبح ( بجز روزهای تعطیل) بازنشست" +
			"ه]", Storage="_فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشست" +
			"ه", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشسته
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشسته;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشسته != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشستهChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشسته = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشسته" +
							"");
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_صبح___بجز_روزهای_تعطیل__بازنشستهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعداد کل مراجعین در شیفت عصر شرکتی]", Storage="_فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتیChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتی");
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_شرکتیChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعداد کل مراجعین در شیفت عصر بازنشسته]", Storage="_فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشستهChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشسته");
					this.Onفعالیت_تیم_پزشک_خانواده_تعداد_کل_مراجعین_در_شیفت_عصر_بازنشستهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده کل پرونده های تشکیل شده تاکنون شرکتی]", Storage="_فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتیChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتی");
					this.Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_شرکتیChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده کل پرونده های تشکیل شده تاکنون بازنشسته]", Storage="_فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشستهChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشسته");
					this.Onفعالیت_تیم_پزشک_خانواده_کل_پرونده_های_تشکیل_شده_تاکنون_بازنشستهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعدادپرونده های تشکیل شده دراین ماه شرکتی]", Storage="_فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتیChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتی");
					this.Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_شرکتیChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فعالیت تیم پزشک خانواده تعدادپرونده های تشکیل شده دراین ماه بازنشسته]", Storage="_فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته", DbType="Float")]
		public System.Nullable<double> فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته
		{
			get
			{
				return this._فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته;
			}
			set
			{
				if ((this._فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته != value))
				{
					this.Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشستهChanging(value);
					this.SendPropertyChanging();
					this._فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته = value;
					this.SendPropertyChanged("فعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشسته");
					this.Onفعالیت_تیم_پزشک_خانواده_تعدادپرونده_های_تشکیل_شده_دراین_ماه_بازنشستهChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Form20Definition")]
	public partial class Form20Definition
	{
		
		private System.Nullable<int> _یک_پزشک_برای_جمعیت;
		
		private System.Nullable<int> _یک_پرستار_برای_جمعیت;
		
		private System.Nullable<int> _یک_پزشک_خانواده_برای_جمعیت;
		
		public Form20Definition()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[یک پزشک برای جمعیت]", Storage="_یک_پزشک_برای_جمعیت", DbType="Int")]
		public System.Nullable<int> یک_پزشک_برای_جمعیت
		{
			get
			{
				return this._یک_پزشک_برای_جمعیت;
			}
			set
			{
				if ((this._یک_پزشک_برای_جمعیت != value))
				{
					this._یک_پزشک_برای_جمعیت = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[یک پرستار برای جمعیت]", Storage="_یک_پرستار_برای_جمعیت", DbType="Int")]
		public System.Nullable<int> یک_پرستار_برای_جمعیت
		{
			get
			{
				return this._یک_پرستار_برای_جمعیت;
			}
			set
			{
				if ((this._یک_پرستار_برای_جمعیت != value))
				{
					this._یک_پرستار_برای_جمعیت = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[یک پزشک خانواده برای جمعیت]", Storage="_یک_پزشک_خانواده_برای_جمعیت", DbType="Int")]
		public System.Nullable<int> یک_پزشک_خانواده_برای_جمعیت
		{
			get
			{
				return this._یک_پزشک_خانواده_برای_جمعیت;
			}
			set
			{
				if ((this._یک_پزشک_خانواده_برای_جمعیت != value))
				{
					this._یک_پزشک_خانواده_برای_جمعیت = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gh_sh_ICD10")]
	public partial class gh_sh_ICD10
	{
		
		private System.Nullable<double> _dossier;
		
		private string _Icd10code;
		
		private string _F3;
		
		public gh_sh_ICD10()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dossier", DbType="Float")]
		public System.Nullable<double> dossier
		{
			get
			{
				return this._dossier;
			}
			set
			{
				if ((this._dossier != value))
				{
					this._dossier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icd10code", DbType="NVarChar(255)")]
		public string Icd10code
		{
			get
			{
				return this._Icd10code;
			}
			set
			{
				if ((this._Icd10code != value))
				{
					this._Icd10code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F3", DbType="NVarChar(255)")]
		public string F3
		{
			get
			{
				return this._F3;
			}
			set
			{
				if ((this._F3 != value))
				{
					this._F3 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenDiagnosticServiceD")]
	public partial class GivenDiagnosticServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Position;
		
		private string _Organ;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnOrganChanging(string value);
    partial void OnOrganChanged();
    #endregion
		
		public GivenDiagnosticServiceD()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(100)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organ", DbType="NVarChar(100)")]
		public string Organ
		{
			get
			{
				return this._Organ;
			}
			set
			{
				if ((this._Organ != value))
				{
					this.OnOrganChanging(value);
					this.SendPropertyChanging();
					this._Organ = value;
					this.SendPropertyChanged("Organ");
					this.OnOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenDiagnosticServiceD", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.GivenDiagnosticServiceD = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenDiagnosticServiceD = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenDiagnosticServiceM")]
	public partial class GivenDiagnosticServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Result;
		
		private string _AnsweringDate;
		
		private string _AnswerTime;
		
		private bool _DrConfirm;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private string _RtfResult;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnAnswerTimeChanging(string value);
    partial void OnAnswerTimeChanged();
    partial void OnDrConfirmChanging(bool value);
    partial void OnDrConfirmChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnRtfResultChanging(string value);
    partial void OnRtfResultChanged();
    #endregion
		
		public GivenDiagnosticServiceM()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerTime", DbType="NVarChar(8)")]
		public string AnswerTime
		{
			get
			{
				return this._AnswerTime;
			}
			set
			{
				if ((this._AnswerTime != value))
				{
					this.OnAnswerTimeChanging(value);
					this.SendPropertyChanging();
					this._AnswerTime = value;
					this.SendPropertyChanged("AnswerTime");
					this.OnAnswerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrConfirm", DbType="Bit NOT NULL")]
		public bool DrConfirm
		{
			get
			{
				return this._DrConfirm;
			}
			set
			{
				if ((this._DrConfirm != value))
				{
					this.OnDrConfirmChanging(value);
					this.SendPropertyChanging();
					this._DrConfirm = value;
					this.SendPropertyChanged("DrConfirm");
					this.OnDrConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(8)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RtfResult", DbType="NVarChar(MAX)")]
		public string RtfResult
		{
			get
			{
				return this._RtfResult;
			}
			set
			{
				if ((this._RtfResult != value))
				{
					this.OnRtfResultChanging(value);
					this.SendPropertyChanging();
					this._RtfResult = value;
					this.SendPropertyChanged("RtfResult");
					this.OnRtfResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenDiagnosticServiceM", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.GivenDiagnosticServiceM = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenDiagnosticServiceM = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenDrug")]
	public partial class GivenDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GsdID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private string _Time;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGsdIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsdIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    #endregion
		
		public GivenDrug()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsdID
		{
			get
			{
				return this._GsdID;
			}
			set
			{
				if ((this._GsdID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsdIDChanging(value);
					this.SendPropertyChanging();
					this._GsdID = value;
					this.SendPropertyChanged("GsdID");
					this.OnGsdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenDrug", Storage="_GivenServiceD", ThisKey="GsdID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.GivenDrugs.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenDrugs.Add(this);
						this._GsdID = value.ID;
					}
					else
					{
						this._GsdID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenDrug", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenDrugs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenDrug", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenDrugs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenDrugs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenLaboratoryServiceD")]
	public partial class GivenLaboratoryServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Result;
		
		private string _NormalRange;
		
		private bool _GetSampel;
		
		private int _SampelCounter;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private EntitySet<GivenLaboratoryServiceD> _GivenLaboratoryServiceDs;
		
		private EntityRef<GivenLaboratoryServiceD> _GivenLaboratoryServiceD1;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnNormalRangeChanging(string value);
    partial void OnNormalRangeChanged();
    partial void OnGetSampelChanging(bool value);
    partial void OnGetSampelChanged();
    partial void OnSampelCounterChanging(int value);
    partial void OnSampelCounterChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    #endregion
		
		public GivenLaboratoryServiceD()
		{
			this._GivenLaboratoryServiceDs = new EntitySet<GivenLaboratoryServiceD>(new Action<GivenLaboratoryServiceD>(this.attach_GivenLaboratoryServiceDs), new Action<GivenLaboratoryServiceD>(this.detach_GivenLaboratoryServiceDs));
			this._GivenLaboratoryServiceD1 = default(EntityRef<GivenLaboratoryServiceD>);
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(500)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this.OnNormalRangeChanging(value);
					this.SendPropertyChanging();
					this._NormalRange = value;
					this.SendPropertyChanged("NormalRange");
					this.OnNormalRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetSampel", DbType="Bit NOT NULL")]
		public bool GetSampel
		{
			get
			{
				return this._GetSampel;
			}
			set
			{
				if ((this._GetSampel != value))
				{
					this.OnGetSampelChanging(value);
					this.SendPropertyChanging();
					this._GetSampel = value;
					this.SendPropertyChanged("GetSampel");
					this.OnGetSampelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampelCounter", DbType="Int NOT NULL")]
		public int SampelCounter
		{
			get
			{
				return this._SampelCounter;
			}
			set
			{
				if ((this._SampelCounter != value))
				{
					this.OnSampelCounterChanging(value);
					this.SendPropertyChanging();
					this._SampelCounter = value;
					this.SendPropertyChanged("SampelCounter");
					this.OnSampelCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenLaboratoryServiceD1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenLaboratoryServiceD_GivenLaboratoryServiceD", Storage="_GivenLaboratoryServiceDs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenLaboratoryServiceD> GivenLaboratoryServiceDs
		{
			get
			{
				return this._GivenLaboratoryServiceDs;
			}
			set
			{
				this._GivenLaboratoryServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenLaboratoryServiceD_GivenLaboratoryServiceD", Storage="_GivenLaboratoryServiceD1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenLaboratoryServiceD GivenLaboratoryServiceD1
		{
			get
			{
				return this._GivenLaboratoryServiceD1.Entity;
			}
			set
			{
				GivenLaboratoryServiceD previousValue = this._GivenLaboratoryServiceD1.Entity;
				if (((previousValue != value) 
							|| (this._GivenLaboratoryServiceD1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenLaboratoryServiceD1.Entity = null;
						previousValue.GivenLaboratoryServiceDs.Remove(this);
					}
					this._GivenLaboratoryServiceD1.Entity = value;
					if ((value != null))
					{
						value.GivenLaboratoryServiceDs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenLaboratoryServiceD1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenLaboratoryServiceD", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.GivenLaboratoryServiceD = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenLaboratoryServiceD = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenLaboratoryServiceDs(GivenLaboratoryServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenLaboratoryServiceD1 = this;
		}
		
		private void detach_GivenLaboratoryServiceDs(GivenLaboratoryServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenLaboratoryServiceD1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceD")]
	public partial class GivenServiceD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private double _Amount;
		
		private double _GivenAmount;
		
		private System.Nullable<System.Guid> _TariffID;
		
		private System.Nullable<int> _TadilAreaID;
		
		private decimal _TotalPrice;
		
		private decimal _PatientShare;
		
		private decimal _InsuranceShare;
		
		private decimal _PayedPrice;
		
		private bool _Payed;
		
		private decimal _PaymentPrice;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private bool _Confirm;
		
		private bool _Reflected;
		
		private System.Nullable<int> _HIXCode;
		
		private string _Position;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _Date;
		
		private string _Time;
		
		private bool _NoTake;
		
		private bool _Normal;
		
		private System.Nullable<bool> _NIS;
		
		private System.Nullable<System.DateTime> _TS;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private string _CreatorUserFullname;
		
		private string _Category;
		
		private System.Nullable<System.Guid> _xParentID;
		
		private EntityRef<VitalSign> _VitalSign;
		
		private EntitySet<CPR> _CPRs;
		
		private EntitySet<Diet> _Diets;
		
		private EntityRef<GivenDiagnosticServiceD> _GivenDiagnosticServiceD;
		
		private EntitySet<GivenDrug> _GivenDrugs;
		
		private EntityRef<GivenLaboratoryServiceD> _GivenLaboratoryServiceD;
		
		private EntityRef<Laundry> _Laundry;
		
		private EntitySet<ModularService> _ModularServices;
		
		private EntitySet<QA> _QAs;
		
		private EntityRef<Surgery> _Surgery;
		
		private EntityRef<DrugFrequencyUsage> _DrugFrequencyUsage;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<TadilArea> _TadilArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnGivenAmountChanging(double value);
    partial void OnGivenAmountChanged();
    partial void OnTariffIDChanging(System.Nullable<System.Guid> value);
    partial void OnTariffIDChanged();
    partial void OnTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnTadilAreaIDChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnPatientShareChanging(decimal value);
    partial void OnPatientShareChanged();
    partial void OnInsuranceShareChanging(decimal value);
    partial void OnInsuranceShareChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnHIXCodeChanging(System.Nullable<int> value);
    partial void OnHIXCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnNoTakeChanging(bool value);
    partial void OnNoTakeChanged();
    partial void OnNormalChanging(bool value);
    partial void OnNormalChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnTSChanging(System.Nullable<System.DateTime> value);
    partial void OnTSChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnxParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnxParentIDChanged();
    #endregion
		
		public GivenServiceD()
		{
			this._VitalSign = default(EntityRef<VitalSign>);
			this._CPRs = new EntitySet<CPR>(new Action<CPR>(this.attach_CPRs), new Action<CPR>(this.detach_CPRs));
			this._Diets = new EntitySet<Diet>(new Action<Diet>(this.attach_Diets), new Action<Diet>(this.detach_Diets));
			this._GivenDiagnosticServiceD = default(EntityRef<GivenDiagnosticServiceD>);
			this._GivenDrugs = new EntitySet<GivenDrug>(new Action<GivenDrug>(this.attach_GivenDrugs), new Action<GivenDrug>(this.detach_GivenDrugs));
			this._GivenLaboratoryServiceD = default(EntityRef<GivenLaboratoryServiceD>);
			this._Laundry = default(EntityRef<Laundry>);
			this._ModularServices = new EntitySet<ModularService>(new Action<ModularService>(this.attach_ModularServices), new Action<ModularService>(this.detach_ModularServices));
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._Surgery = default(EntityRef<Surgery>);
			this._DrugFrequencyUsage = default(EntityRef<DrugFrequencyUsage>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			this._TadilArea = default(EntityRef<TadilArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenAmount", DbType="Float NOT NULL")]
		public double GivenAmount
		{
			get
			{
				return this._GivenAmount;
			}
			set
			{
				if ((this._GivenAmount != value))
				{
					this.OnGivenAmountChanging(value);
					this.SendPropertyChanging();
					this._GivenAmount = value;
					this.SendPropertyChanged("GivenAmount");
					this.OnGivenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TariffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TariffID
		{
			get
			{
				return this._TariffID;
			}
			set
			{
				if ((this._TariffID != value))
				{
					this.OnTariffIDChanging(value);
					this.SendPropertyChanging();
					this._TariffID = value;
					this.SendPropertyChanged("TariffID");
					this.OnTariffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilAreaID", DbType="Int")]
		public System.Nullable<int> TadilAreaID
		{
			get
			{
				return this._TadilAreaID;
			}
			set
			{
				if ((this._TadilAreaID != value))
				{
					if (this._TadilArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._TadilAreaID = value;
					this.SendPropertyChanged("TadilAreaID");
					this.OnTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money NOT NULL")]
		public decimal PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceShare", DbType="Money NOT NULL")]
		public decimal InsuranceShare
		{
			get
			{
				return this._InsuranceShare;
			}
			set
			{
				if ((this._InsuranceShare != value))
				{
					this.OnInsuranceShareChanging(value);
					this.SendPropertyChanging();
					this._InsuranceShare = value;
					this.SendPropertyChanged("InsuranceShare");
					this.OnInsuranceShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="Int")]
		public System.Nullable<int> HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					if (this._DrugFrequencyUsage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTake", DbType="Bit NOT NULL")]
		public bool NoTake
		{
			get
			{
				return this._NoTake;
			}
			set
			{
				if ((this._NoTake != value))
				{
					this.OnNoTakeChanging(value);
					this.SendPropertyChanging();
					this._NoTake = value;
					this.SendPropertyChanged("NoTake");
					this.OnNoTakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Bit NOT NULL")]
		public bool Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> xParentID
		{
			get
			{
				return this._xParentID;
			}
			set
			{
				if ((this._xParentID != value))
				{
					this.OnxParentIDChanging(value);
					this.SendPropertyChanging();
					this._xParentID = value;
					this.SendPropertyChanged("xParentID");
					this.OnxParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_VitalSign", Storage="_VitalSign", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public VitalSign VitalSign
		{
			get
			{
				return this._VitalSign.Entity;
			}
			set
			{
				VitalSign previousValue = this._VitalSign.Entity;
				if (((previousValue != value) 
							|| (this._VitalSign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VitalSign.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._VitalSign.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("VitalSign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_CPR", Storage="_CPRs", ThisKey="ID", OtherKey="GSDID")]
		public EntitySet<CPR> CPRs
		{
			get
			{
				return this._CPRs;
			}
			set
			{
				this._CPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Diet", Storage="_Diets", ThisKey="ID", OtherKey="GsdID")]
		public EntitySet<Diet> Diets
		{
			get
			{
				return this._Diets;
			}
			set
			{
				this._Diets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenDiagnosticServiceD", Storage="_GivenDiagnosticServiceD", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public GivenDiagnosticServiceD GivenDiagnosticServiceD
		{
			get
			{
				return this._GivenDiagnosticServiceD.Entity;
			}
			set
			{
				GivenDiagnosticServiceD previousValue = this._GivenDiagnosticServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenDiagnosticServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenDiagnosticServiceD.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._GivenDiagnosticServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("GivenDiagnosticServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenDrug", Storage="_GivenDrugs", ThisKey="ID", OtherKey="GsdID")]
		public EntitySet<GivenDrug> GivenDrugs
		{
			get
			{
				return this._GivenDrugs;
			}
			set
			{
				this._GivenDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_GivenLaboratoryServiceD", Storage="_GivenLaboratoryServiceD", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public GivenLaboratoryServiceD GivenLaboratoryServiceD
		{
			get
			{
				return this._GivenLaboratoryServiceD.Entity;
			}
			set
			{
				GivenLaboratoryServiceD previousValue = this._GivenLaboratoryServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenLaboratoryServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenLaboratoryServiceD.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._GivenLaboratoryServiceD.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("GivenLaboratoryServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Laundry", Storage="_Laundry", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Laundry Laundry
		{
			get
			{
				return this._Laundry.Entity;
			}
			set
			{
				Laundry previousValue = this._Laundry.Entity;
				if (((previousValue != value) 
							|| (this._Laundry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laundry.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._Laundry.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("Laundry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_ModularService", Storage="_ModularServices", ThisKey="ID", OtherKey="GsdID")]
		public EntitySet<ModularService> ModularServices
		{
			get
			{
				return this._ModularServices;
			}
			set
			{
				this._ModularServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_QA", Storage="_QAs", ThisKey="ID", OtherKey="GivenServiceDID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Surgery", Storage="_Surgery", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Surgery Surgery
		{
			get
			{
				return this._Surgery.Entity;
			}
			set
			{
				Surgery previousValue = this._Surgery.Entity;
				if (((previousValue != value) 
							|| (this._Surgery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Surgery.Entity = null;
						previousValue.GivenServiceD = null;
					}
					this._Surgery.Entity = value;
					if ((value != null))
					{
						value.GivenServiceD = this;
					}
					this.SendPropertyChanged("Surgery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DrugFrequencyUsage_GivenServiceD", Storage="_DrugFrequencyUsage", ThisKey="HIXCode", OtherKey="ID", IsForeignKey=true)]
		public DrugFrequencyUsage DrugFrequencyUsage
		{
			get
			{
				return this._DrugFrequencyUsage.Entity;
			}
			set
			{
				DrugFrequencyUsage previousValue = this._DrugFrequencyUsage.Entity;
				if (((previousValue != value) 
							|| (this._DrugFrequencyUsage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DrugFrequencyUsage.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._DrugFrequencyUsage.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._HIXCode = value.ID;
					}
					else
					{
						this._HIXCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("DrugFrequencyUsage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_Staff", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_GivenServiceD", Storage="_TadilArea", ThisKey="TadilAreaID", OtherKey="IDTadilPercent", IsForeignKey=true)]
		public TadilArea TadilArea
		{
			get
			{
				return this._TadilArea.Entity;
			}
			set
			{
				TadilArea previousValue = this._TadilArea.Entity;
				if (((previousValue != value) 
							|| (this._TadilArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TadilArea.Entity = null;
						previousValue.GivenServiceDs.Remove(this);
					}
					this._TadilArea.Entity = value;
					if ((value != null))
					{
						value.GivenServiceDs.Add(this);
						this._TadilAreaID = value.IDTadilPercent;
					}
					else
					{
						this._TadilAreaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TadilArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CPRs(CPR entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_CPRs(CPR entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
		
		private void attach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
		
		private void attach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
		
		private void attach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceM")]
	public partial class GivenServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private System.Nullable<System.Guid> _PaymentID;
		
		private System.Nullable<int> _AdmitUserID;
		
		private System.Nullable<System.DateTime> _TS;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private string _CreatorUserFullname;
		
		private System.Nullable<bool> _HasImage;
		
		private System.Nullable<System.DateTime> _CheckImage;
		
		private bool _WardEdit;
		
		private bool _ShowForNurse;
		
		private bool _Archive;
		
		private System.Nullable<int> _ExternalID;
		
		private System.Nullable<System.Guid> _RecallID;
		
		private string _FinishTreatmentDate;
		
		private bool _PatientNew;
		
		private System.Nullable<bool> _isPatientNew;
		
		private string _SicknessName;
		
		private string _WasteLimitation;
		
		private System.Nullable<int> _TypeOfReference;
		
		private System.Nullable<System.Guid> _TypeOfRecall;
		
		private System.Nullable<System.Guid> _VST_OMO;
		
		private string _AdmitUserFullName;
		
		private EntitySet<BedReservation> _BedReservations;
		
		private EntitySet<BreastExamination> _BreastExaminations;
		
		private EntityRef<BreastVisit> _BreastVisit;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntitySet<DoctorComment> _DoctorComments;
		
		private EntityRef<GivenDiagnosticServiceM> _GivenDiagnosticServiceM;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<MedicalRecord> _MedicalRecords;
		
		private EntityRef<Optometry> _Optometry;
		
		private EntitySet<Period> _Periods;
		
		private EntityRef<Presentation> _Presentation;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<QAPlus> _QAPlus;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<RefResult> _RefResults;
		
		private EntitySet<Rest> _Rests;
		
		private EntitySet<Transfer> _Transfers;
		
		private EntitySet<TransmissionOfPatient> _TransmissionOfPatients;
		
		private EntitySet<TreatmentProgress> _TreatmentProgresses;
		
		private EntitySet<Triage> _Triages;
		
		private EntitySet<TriageDossierEM> _TriageDossierEMs;
		
		private EntityRef<Visit> _Visit;
		
		private EntityRef<Bed> _Bed;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Definition> _Definition1;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<GivenServiceM> _GivenServiceM1;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<PeriodicCalender> _PeriodicCalender;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<PhysiotherapyOrderM> _PhysiotherapyOrderM;
		
		private EntityRef<Recall> _Recall;
		
		private EntityRef<Reference> _Reference;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Agenda> _Agenda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnAgendaIDChanging(System.Nullable<System.Guid> value);
    partial void OnAgendaIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnPeriodicCalendeIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalendeIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnTechnicianIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicianIDChanged();
    partial void OnPhysioOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysioOrderMIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnBookletTypeChanging(string value);
    partial void OnBookletTypeChanged();
    partial void OnBookletDateChanging(string value);
    partial void OnBookletDateChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnTurningDateChanging(string value);
    partial void OnTurningDateChanged();
    partial void OnTurningTimeChanging(string value);
    partial void OnTurningTimeChanged();
    partial void OnBookletSerialNumberChanging(string value);
    partial void OnBookletSerialNumberChanged();
    partial void OnBookletPageNumberChanging(string value);
    partial void OnBookletPageNumberChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnSendToDrTimeChanging(string value);
    partial void OnSendToDrTimeChanged();
    partial void OnSendToDrChanging(bool value);
    partial void OnSendToDrChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnRemissionStatusChanging(bool value);
    partial void OnRemissionStatusChanged();
    partial void OnScreeningChanging(bool value);
    partial void OnScreeningChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDailySNChanging(System.Nullable<int> value);
    partial void OnDailySNChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnComplementInsuranceChanging(string value);
    partial void OnComplementInsuranceChanged();
    partial void OnComplementInsuranceNOChanging(string value);
    partial void OnComplementInsuranceNOChanged();
    partial void OnRefrenceIDChanging(System.Nullable<System.Guid> value);
    partial void OnRefrenceIDChanged();
    partial void OnPortableChanging(bool value);
    partial void OnPortableChanged();
    partial void OnConfirmFinanceSumKChanging(System.Nullable<double> value);
    partial void OnConfirmFinanceSumKChanged();
    partial void OnAdmissionTypeChanging(string value);
    partial void OnAdmissionTypeChanged();
    partial void OnPaymentIDChanging(System.Nullable<System.Guid> value);
    partial void OnPaymentIDChanged();
    partial void OnAdmitUserIDChanging(System.Nullable<int> value);
    partial void OnAdmitUserIDChanged();
    partial void OnTSChanging(System.Nullable<System.DateTime> value);
    partial void OnTSChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnCreatorUserFullnameChanging(string value);
    partial void OnCreatorUserFullnameChanged();
    partial void OnHasImageChanging(System.Nullable<bool> value);
    partial void OnHasImageChanged();
    partial void OnCheckImageChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckImageChanged();
    partial void OnWardEditChanging(bool value);
    partial void OnWardEditChanged();
    partial void OnShowForNurseChanging(bool value);
    partial void OnShowForNurseChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnExternalIDChanging(System.Nullable<int> value);
    partial void OnExternalIDChanged();
    partial void OnRecallIDChanging(System.Nullable<System.Guid> value);
    partial void OnRecallIDChanged();
    partial void OnFinishTreatmentDateChanging(string value);
    partial void OnFinishTreatmentDateChanged();
    partial void OnPatientNewChanging(bool value);
    partial void OnPatientNewChanged();
    partial void OnisPatientNewChanging(System.Nullable<bool> value);
    partial void OnisPatientNewChanged();
    partial void OnSicknessNameChanging(string value);
    partial void OnSicknessNameChanged();
    partial void OnWasteLimitationChanging(string value);
    partial void OnWasteLimitationChanged();
    partial void OnTypeOfReferenceChanging(System.Nullable<int> value);
    partial void OnTypeOfReferenceChanged();
    partial void OnTypeOfRecallChanging(System.Nullable<System.Guid> value);
    partial void OnTypeOfRecallChanged();
    partial void OnVST_OMOChanging(System.Nullable<System.Guid> value);
    partial void OnVST_OMOChanged();
    partial void OnAdmitUserFullNameChanging(string value);
    partial void OnAdmitUserFullNameChanged();
    #endregion
		
		public GivenServiceM()
		{
			this._BedReservations = new EntitySet<BedReservation>(new Action<BedReservation>(this.attach_BedReservations), new Action<BedReservation>(this.detach_BedReservations));
			this._BreastExaminations = new EntitySet<BreastExamination>(new Action<BreastExamination>(this.attach_BreastExaminations), new Action<BreastExamination>(this.detach_BreastExaminations));
			this._BreastVisit = default(EntityRef<BreastVisit>);
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._DoctorComments = new EntitySet<DoctorComment>(new Action<DoctorComment>(this.attach_DoctorComments), new Action<DoctorComment>(this.detach_DoctorComments));
			this._GivenDiagnosticServiceM = default(EntityRef<GivenDiagnosticServiceM>);
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._MedicalRecords = new EntitySet<MedicalRecord>(new Action<MedicalRecord>(this.attach_MedicalRecords), new Action<MedicalRecord>(this.detach_MedicalRecords));
			this._Optometry = default(EntityRef<Optometry>);
			this._Periods = new EntitySet<Period>(new Action<Period>(this.attach_Periods), new Action<Period>(this.detach_Periods));
			this._Presentation = default(EntityRef<Presentation>);
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._QAPlus = new EntitySet<QAPlus>(new Action<QAPlus>(this.attach_QAPlus), new Action<QAPlus>(this.detach_QAPlus));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._RefResults = new EntitySet<RefResult>(new Action<RefResult>(this.attach_RefResults), new Action<RefResult>(this.detach_RefResults));
			this._Rests = new EntitySet<Rest>(new Action<Rest>(this.attach_Rests), new Action<Rest>(this.detach_Rests));
			this._Transfers = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers), new Action<Transfer>(this.detach_Transfers));
			this._TransmissionOfPatients = new EntitySet<TransmissionOfPatient>(new Action<TransmissionOfPatient>(this.attach_TransmissionOfPatients), new Action<TransmissionOfPatient>(this.detach_TransmissionOfPatients));
			this._TreatmentProgresses = new EntitySet<TreatmentProgress>(new Action<TreatmentProgress>(this.attach_TreatmentProgresses), new Action<TreatmentProgress>(this.detach_TreatmentProgresses));
			this._Triages = new EntitySet<Triage>(new Action<Triage>(this.attach_Triages), new Action<Triage>(this.detach_Triages));
			this._TriageDossierEMs = new EntitySet<TriageDossierEM>(new Action<TriageDossierEM>(this.attach_TriageDossierEMs), new Action<TriageDossierEM>(this.detach_TriageDossierEMs));
			this._Visit = default(EntityRef<Visit>);
			this._Bed = default(EntityRef<Bed>);
			this._Definition = default(EntityRef<Definition>);
			this._Definition1 = default(EntityRef<Definition>);
			this._Department = default(EntityRef<Department>);
			this._Dossier = default(EntityRef<Dossier>);
			this._GivenServiceM1 = default(EntityRef<GivenServiceM>);
			this._Insurance = default(EntityRef<Insurance>);
			this._PeriodicCalender = default(EntityRef<PeriodicCalender>);
			this._Person = default(EntityRef<Person>);
			this._PhysiotherapyOrderM = default(EntityRef<PhysiotherapyOrderM>);
			this._Recall = default(EntityRef<Recall>);
			this._Reference = default(EntityRef<Reference>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Agenda = default(EntityRef<Agenda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenServiceM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					if (this._Agenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgendaIDChanging(value);
					this.SendPropertyChanging();
					this._AgendaID = value;
					this.SendPropertyChanged("AgendaID");
					this.OnAgendaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					if (this._PeriodicCalender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodicCalendeIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalendeID = value;
					this.SendPropertyChanged("PeriodicCalendeID");
					this.OnPeriodicCalendeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicianIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicianID = value;
					this.SendPropertyChanged("TechnicianID");
					this.OnTechnicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					if (this._PhysiotherapyOrderM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhysioOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysioOrderMID = value;
					this.SendPropertyChanged("PhysioOrderMID");
					this.OnPhysioOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					if (this._Bed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)")]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this.OnBookletTypeChanging(value);
					this.SendPropertyChanging();
					this._BookletType = value;
					this.SendPropertyChanged("BookletType");
					this.OnBookletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)")]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this.OnBookletDateChanging(value);
					this.SendPropertyChanging();
					this._BookletDate = value;
					this.SendPropertyChanged("BookletDate");
					this.OnBookletDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)")]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this.OnTurningDateChanging(value);
					this.SendPropertyChanging();
					this._TurningDate = value;
					this.SendPropertyChanged("TurningDate");
					this.OnTurningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)")]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this.OnTurningTimeChanging(value);
					this.SendPropertyChanging();
					this._TurningTime = value;
					this.SendPropertyChanged("TurningTime");
					this.OnTurningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)")]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this.OnBookletSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletSerialNumber = value;
					this.SendPropertyChanged("BookletSerialNumber");
					this.OnBookletSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)")]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this.OnBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletPageNumber = value;
					this.SendPropertyChanged("BookletPageNumber");
					this.OnBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)")]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this.OnSendToDrTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToDrTime = value;
					this.SendPropertyChanged("SendToDrTime");
					this.OnSendToDrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL")]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this.OnSendToDrChanging(value);
					this.SendPropertyChanging();
					this._SendToDr = value;
					this.SendPropertyChanged("SendToDr");
					this.OnSendToDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL")]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this.OnRemissionStatusChanging(value);
					this.SendPropertyChanging();
					this._RemissionStatus = value;
					this.SendPropertyChanged("RemissionStatus");
					this.OnRemissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL")]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this.OnScreeningChanging(value);
					this.SendPropertyChanging();
					this._Screening = value;
					this.SendPropertyChanged("Screening");
					this.OnScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int")]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this.OnDailySNChanging(value);
					this.SendPropertyChanging();
					this._DailySN = value;
					this.SendPropertyChanged("DailySN");
					this.OnDailySNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)")]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this.OnComplementInsuranceChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsurance = value;
					this.SendPropertyChanged("ComplementInsurance");
					this.OnComplementInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)")]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this.OnComplementInsuranceNOChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsuranceNO = value;
					this.SendPropertyChanged("ComplementInsuranceNO");
					this.OnComplementInsuranceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					if (this._Reference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RefrenceID = value;
					this.SendPropertyChanged("RefrenceID");
					this.OnRefrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL")]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this.OnPortableChanging(value);
					this.SendPropertyChanging();
					this._Portable = value;
					this.SendPropertyChanged("Portable");
					this.OnPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float")]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this.OnConfirmFinanceSumKChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinanceSumK = value;
					this.SendPropertyChanged("ConfirmFinanceSumK");
					this.OnConfirmFinanceSumKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)")]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUserID", DbType="Int")]
		public System.Nullable<int> AdmitUserID
		{
			get
			{
				return this._AdmitUserID;
			}
			set
			{
				if ((this._AdmitUserID != value))
				{
					this.OnAdmitUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdmitUserID = value;
					this.SendPropertyChanged("AdmitUserID");
					this.OnAdmitUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullname", DbType="NVarChar(50)")]
		public string CreatorUserFullname
		{
			get
			{
				return this._CreatorUserFullname;
			}
			set
			{
				if ((this._CreatorUserFullname != value))
				{
					this.OnCreatorUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullname = value;
					this.SendPropertyChanged("CreatorUserFullname");
					this.OnCreatorUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasImage", DbType="Bit")]
		public System.Nullable<bool> HasImage
		{
			get
			{
				return this._HasImage;
			}
			set
			{
				if ((this._HasImage != value))
				{
					this.OnHasImageChanging(value);
					this.SendPropertyChanging();
					this._HasImage = value;
					this.SendPropertyChanged("HasImage");
					this.OnHasImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckImage", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CheckImage
		{
			get
			{
				return this._CheckImage;
			}
			set
			{
				if ((this._CheckImage != value))
				{
					this.OnCheckImageChanging(value);
					this.SendPropertyChanging();
					this._CheckImage = value;
					this.SendPropertyChanged("CheckImage");
					this.OnCheckImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardEdit", DbType="Bit NOT NULL")]
		public bool WardEdit
		{
			get
			{
				return this._WardEdit;
			}
			set
			{
				if ((this._WardEdit != value))
				{
					this.OnWardEditChanging(value);
					this.SendPropertyChanging();
					this._WardEdit = value;
					this.SendPropertyChanged("WardEdit");
					this.OnWardEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowForNurse", DbType="Bit NOT NULL")]
		public bool ShowForNurse
		{
			get
			{
				return this._ShowForNurse;
			}
			set
			{
				if ((this._ShowForNurse != value))
				{
					this.OnShowForNurseChanging(value);
					this.SendPropertyChanging();
					this._ShowForNurse = value;
					this.SendPropertyChanged("ShowForNurse");
					this.OnShowForNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archive", DbType="Bit NOT NULL")]
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="Int")]
		public System.Nullable<int> ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RecallID
		{
			get
			{
				return this._RecallID;
			}
			set
			{
				if ((this._RecallID != value))
				{
					if (this._Recall.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecallIDChanging(value);
					this.SendPropertyChanging();
					this._RecallID = value;
					this.SendPropertyChanged("RecallID");
					this.OnRecallIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishTreatmentDate", DbType="NVarChar(10)")]
		public string FinishTreatmentDate
		{
			get
			{
				return this._FinishTreatmentDate;
			}
			set
			{
				if ((this._FinishTreatmentDate != value))
				{
					this.OnFinishTreatmentDateChanging(value);
					this.SendPropertyChanging();
					this._FinishTreatmentDate = value;
					this.SendPropertyChanged("FinishTreatmentDate");
					this.OnFinishTreatmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNew", DbType="Bit NOT NULL")]
		public bool PatientNew
		{
			get
			{
				return this._PatientNew;
			}
			set
			{
				if ((this._PatientNew != value))
				{
					this.OnPatientNewChanging(value);
					this.SendPropertyChanging();
					this._PatientNew = value;
					this.SendPropertyChanged("PatientNew");
					this.OnPatientNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPatientNew", DbType="Bit")]
		public System.Nullable<bool> isPatientNew
		{
			get
			{
				return this._isPatientNew;
			}
			set
			{
				if ((this._isPatientNew != value))
				{
					this.OnisPatientNewChanging(value);
					this.SendPropertyChanging();
					this._isPatientNew = value;
					this.SendPropertyChanged("isPatientNew");
					this.OnisPatientNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SicknessName", DbType="NVarChar(50)")]
		public string SicknessName
		{
			get
			{
				return this._SicknessName;
			}
			set
			{
				if ((this._SicknessName != value))
				{
					this.OnSicknessNameChanging(value);
					this.SendPropertyChanging();
					this._SicknessName = value;
					this.SendPropertyChanged("SicknessName");
					this.OnSicknessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasteLimitation", DbType="NVarChar(300)")]
		public string WasteLimitation
		{
			get
			{
				return this._WasteLimitation;
			}
			set
			{
				if ((this._WasteLimitation != value))
				{
					this.OnWasteLimitationChanging(value);
					this.SendPropertyChanging();
					this._WasteLimitation = value;
					this.SendPropertyChanged("WasteLimitation");
					this.OnWasteLimitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfReference", DbType="Int")]
		public System.Nullable<int> TypeOfReference
		{
			get
			{
				return this._TypeOfReference;
			}
			set
			{
				if ((this._TypeOfReference != value))
				{
					this.OnTypeOfReferenceChanging(value);
					this.SendPropertyChanging();
					this._TypeOfReference = value;
					this.SendPropertyChanged("TypeOfReference");
					this.OnTypeOfReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRecall", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TypeOfRecall
		{
			get
			{
				return this._TypeOfRecall;
			}
			set
			{
				if ((this._TypeOfRecall != value))
				{
					this.OnTypeOfRecallChanging(value);
					this.SendPropertyChanging();
					this._TypeOfRecall = value;
					this.SendPropertyChanged("TypeOfRecall");
					this.OnTypeOfRecallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VST_OMO", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> VST_OMO
		{
			get
			{
				return this._VST_OMO;
			}
			set
			{
				if ((this._VST_OMO != value))
				{
					this.OnVST_OMOChanging(value);
					this.SendPropertyChanging();
					this._VST_OMO = value;
					this.SendPropertyChanged("VST_OMO");
					this.OnVST_OMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitUserFullName", DbType="NVarChar(50)")]
		public string AdmitUserFullName
		{
			get
			{
				return this._AdmitUserFullName;
			}
			set
			{
				if ((this._AdmitUserFullName != value))
				{
					this.OnAdmitUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._AdmitUserFullName = value;
					this.SendPropertyChanged("AdmitUserFullName");
					this.OnAdmitUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BedReservation", Storage="_BedReservations", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<BedReservation> BedReservations
		{
			get
			{
				return this._BedReservations;
			}
			set
			{
				this._BedReservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BreastExamination", Storage="_BreastExaminations", ThisKey="ID", OtherKey="GsmID")]
		public EntitySet<BreastExamination> BreastExaminations
		{
			get
			{
				return this._BreastExaminations;
			}
			set
			{
				this._BreastExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_BreastVisit", Storage="_BreastVisit", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public BreastVisit BreastVisit
		{
			get
			{
				return this._BreastVisit.Entity;
			}
			set
			{
				BreastVisit previousValue = this._BreastVisit.Entity;
				if (((previousValue != value) 
							|| (this._BreastVisit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BreastVisit.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._BreastVisit.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("BreastVisit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="GsmID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_DoctorComment", Storage="_DoctorComments", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<DoctorComment> DoctorComments
		{
			get
			{
				return this._DoctorComments;
			}
			set
			{
				this._DoctorComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenDiagnosticServiceM", Storage="_GivenDiagnosticServiceM", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public GivenDiagnosticServiceM GivenDiagnosticServiceM
		{
			get
			{
				return this._GivenDiagnosticServiceM.Entity;
			}
			set
			{
				GivenDiagnosticServiceM previousValue = this._GivenDiagnosticServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenDiagnosticServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenDiagnosticServiceM.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._GivenDiagnosticServiceM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("GivenDiagnosticServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_MedicalRecord", Storage="_MedicalRecords", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<MedicalRecord> MedicalRecords
		{
			get
			{
				return this._MedicalRecords;
			}
			set
			{
				this._MedicalRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Optometry", Storage="_Optometry", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Optometry Optometry
		{
			get
			{
				return this._Optometry.Entity;
			}
			set
			{
				Optometry previousValue = this._Optometry.Entity;
				if (((previousValue != value) 
							|| (this._Optometry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Optometry.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Optometry.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Optometry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Period", Storage="_Periods", ThisKey="ID", OtherKey="GsmID")]
		public EntitySet<Period> Periods
		{
			get
			{
				return this._Periods;
			}
			set
			{
				this._Periods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Presentation", Storage="_Presentation", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Presentation Presentation
		{
			get
			{
				return this._Presentation.Entity;
			}
			set
			{
				Presentation previousValue = this._Presentation.Entity;
				if (((previousValue != value) 
							|| (this._Presentation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Presentation.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Presentation.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Presentation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_QAs", ThisKey="ID", OtherKey="IDGivenServiceM")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QAPlus", Storage="_QAPlus", ThisKey="ID", OtherKey="IDGivenServiceM")]
		public EntitySet<QAPlus> QAPlus
		{
			get
			{
				return this._QAPlus;
			}
			set
			{
				this._QAPlus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_References", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_RefResult", Storage="_RefResults", ThisKey="ID", OtherKey="IDGsm")]
		public EntitySet<RefResult> RefResults
		{
			get
			{
				return this._RefResults;
			}
			set
			{
				this._RefResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Rest", Storage="_Rests", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<Rest> Rests
		{
			get
			{
				return this._Rests;
			}
			set
			{
				this._Rests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Transfer", Storage="_Transfers", ThisKey="ID", OtherKey="GivenServiceMID")]
		public EntitySet<Transfer> Transfers
		{
			get
			{
				return this._Transfers;
			}
			set
			{
				this._Transfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TransmissionOfPatient", Storage="_TransmissionOfPatients", ThisKey="ID", OtherKey="GSMID")]
		public EntitySet<TransmissionOfPatient> TransmissionOfPatients
		{
			get
			{
				return this._TransmissionOfPatients;
			}
			set
			{
				this._TransmissionOfPatients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TreatmentProgress", Storage="_TreatmentProgresses", ThisKey="ID", OtherKey="GivenserviceMID")]
		public EntitySet<TreatmentProgress> TreatmentProgresses
		{
			get
			{
				return this._TreatmentProgresses;
			}
			set
			{
				this._TreatmentProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Triage", Storage="_Triages", ThisKey="ID", OtherKey="GivenMID")]
		public EntitySet<Triage> Triages
		{
			get
			{
				return this._Triages;
			}
			set
			{
				this._Triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TriageDossierEM", Storage="_TriageDossierEMs", ThisKey="ID", OtherKey="GivenMID")]
		public EntitySet<TriageDossierEM> TriageDossierEMs
		{
			get
			{
				return this._TriageDossierEMs;
			}
			set
			{
				this._TriageDossierEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Visit", Storage="_Visit", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Visit Visit
		{
			get
			{
				return this._Visit.Entity;
			}
			set
			{
				Visit previousValue = this._Visit.Entity;
				if (((previousValue != value) 
							|| (this._Visit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Visit.Entity = null;
						previousValue.GivenServiceM = null;
					}
					this._Visit.Entity = value;
					if ((value != null))
					{
						value.GivenServiceM = this;
					}
					this.SendPropertyChanged("Visit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bed_GivenServiceM", Storage="_Bed", ThisKey="BedID", OtherKey="ID", IsForeignKey=true)]
		public Bed Bed
		{
			get
			{
				return this._Bed.Entity;
			}
			set
			{
				Bed previousValue = this._Bed.Entity;
				if (((previousValue != value) 
							|| (this._Bed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bed.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Bed.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._BedID = value.ID;
					}
					else
					{
						this._BedID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Bed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM", Storage="_Definition", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_GivenServiceM1", Storage="_Definition1", ThisKey="VisitType", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._VisitType = value.ID;
					}
					else
					{
						this._VisitType = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_GivenServiceM", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceM1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM1
		{
			get
			{
				return this._GivenServiceM1.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM1.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._GivenServiceM1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicCalender_GivenServiceM", Storage="_PeriodicCalender", ThisKey="PeriodicCalendeID", OtherKey="ID", IsForeignKey=true)]
		public PeriodicCalender PeriodicCalender
		{
			get
			{
				return this._PeriodicCalender.Entity;
			}
			set
			{
				PeriodicCalender previousValue = this._PeriodicCalender.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicCalender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicCalender.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._PeriodicCalender.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PeriodicCalendeID = value.ID;
					}
					else
					{
						this._PeriodicCalendeID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PeriodicCalender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhysiotherapyOrderM_GivenServiceM", Storage="_PhysiotherapyOrderM", ThisKey="PhysioOrderMID", OtherKey="ID", IsForeignKey=true)]
		public PhysiotherapyOrderM PhysiotherapyOrderM
		{
			get
			{
				return this._PhysiotherapyOrderM.Entity;
			}
			set
			{
				PhysiotherapyOrderM previousValue = this._PhysiotherapyOrderM.Entity;
				if (((previousValue != value) 
							|| (this._PhysiotherapyOrderM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhysiotherapyOrderM.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._PhysiotherapyOrderM.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PhysioOrderMID = value.ID;
					}
					else
					{
						this._PhysioOrderMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PhysiotherapyOrderM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recall_GivenServiceM", Storage="_Recall", ThisKey="RecallID", OtherKey="ID", IsForeignKey=true)]
		public Recall Recall
		{
			get
			{
				return this._Recall.Entity;
			}
			set
			{
				Recall previousValue = this._Recall.Entity;
				if (((previousValue != value) 
							|| (this._Recall.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recall.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Recall.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RecallID = value.ID;
					}
					else
					{
						this._RecallID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Recall");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_Reference", ThisKey="RefrenceID", OtherKey="ID", IsForeignKey=true)]
		public Reference Reference
		{
			get
			{
				return this._Reference.Entity;
			}
			set
			{
				Reference previousValue = this._Reference.Entity;
				if (((previousValue != value) 
							|| (this._Reference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reference.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Reference.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RefrenceID = value.ID;
					}
					else
					{
						this._RefrenceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Reference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_ServiceCategory", ThisKey="ServiceCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ServiceCategoryID = value.ID;
					}
					else
					{
						this._ServiceCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_Staff1", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_Staff2", ThisKey="TechnicianID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.GivenServiceMs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs2.Add(this);
						this._TechnicianID = value.ID;
					}
					else
					{
						this._TechnicianID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_Agenda", ThisKey="AgendaID", OtherKey="ID", IsForeignKey=true)]
		public Agenda Agenda
		{
			get
			{
				return this._Agenda.Entity;
			}
			set
			{
				Agenda previousValue = this._Agenda.Entity;
				if (((previousValue != value) 
							|| (this._Agenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agenda.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Agenda.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._AgendaID = value.ID;
					}
					else
					{
						this._AgendaID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Agenda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_BedReservations(BedReservation entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_BreastExaminations(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_BreastExaminations(BreastExamination entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_DoctorComments(DoctorComment entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_DoctorComments(DoctorComment entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = null;
		}
		
		private void attach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_MedicalRecords(MedicalRecord entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Periods(Period entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Periods(Period entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_RefResults(RefResult entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_RefResults(RefResult entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Rests(Rest entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Rests(Rest entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_TransmissionOfPatients(TransmissionOfPatient entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_TransmissionOfPatients(TransmissionOfPatient entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_TreatmentProgresses(TreatmentProgress entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HealthDailyResult")]
	public partial class HealthDailyResult
	{
		
		private System.Nullable<double> _IndexCode;
		
		private System.Nullable<int> _Count;
		
		private short _IDValidCenter;
		
		private byte _IDValidCenterZone;
		
		private string _Date;
		
		public HealthDailyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexCode", DbType="Float")]
		public System.Nullable<double> IndexCode
		{
			get
			{
				return this._IndexCode;
			}
			set
			{
				if ((this._IndexCode != value))
				{
					this._IndexCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", DbType="SmallInt NOT NULL")]
		public short IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this._IDValidCenter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="TinyInt NOT NULL")]
		public byte IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this._IDValidCenterZone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HealthDailyResultbyFunc")]
	public partial class HealthDailyResultbyFunc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DenoteDetailID;
		
		private System.Nullable<double> _Answer;
		
		private string _Date;
		
		private System.Nullable<int> _IDValidCenter;
		
		private System.Nullable<int> _IDValidCenterZone;
		
		private string _Da;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDenoteDetailIDChanging(System.Nullable<int> value);
    partial void OnDenoteDetailIDChanged();
    partial void OnAnswerChanging(System.Nullable<double> value);
    partial void OnAnswerChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnIDValidCenterChanging(System.Nullable<int> value);
    partial void OnIDValidCenterChanged();
    partial void OnIDValidCenterZoneChanging(System.Nullable<int> value);
    partial void OnIDValidCenterZoneChanged();
    partial void OnDaChanging(string value);
    partial void OnDaChanged();
    #endregion
		
		public HealthDailyResultbyFunc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenoteDetailID", DbType="Int")]
		public System.Nullable<int> DenoteDetailID
		{
			get
			{
				return this._DenoteDetailID;
			}
			set
			{
				if ((this._DenoteDetailID != value))
				{
					this.OnDenoteDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DenoteDetailID = value;
					this.SendPropertyChanged("DenoteDetailID");
					this.OnDenoteDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="Float")]
		public System.Nullable<double> Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenter", DbType="Int")]
		public System.Nullable<int> IDValidCenter
		{
			get
			{
				return this._IDValidCenter;
			}
			set
			{
				if ((this._IDValidCenter != value))
				{
					this.OnIDValidCenterChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenter = value;
					this.SendPropertyChanged("IDValidCenter");
					this.OnIDValidCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValidCenterZone", DbType="Int")]
		public System.Nullable<int> IDValidCenterZone
		{
			get
			{
				return this._IDValidCenterZone;
			}
			set
			{
				if ((this._IDValidCenterZone != value))
				{
					this.OnIDValidCenterZoneChanging(value);
					this.SendPropertyChanging();
					this._IDValidCenterZone = value;
					this.SendPropertyChanged("IDValidCenterZone");
					this.OnIDValidCenterZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Da", DbType="NVarChar(50)")]
		public string Da
		{
			get
			{
				return this._Da;
			}
			set
			{
				if ((this._Da != value))
				{
					this.OnDaChanging(value);
					this.SendPropertyChanging();
					this._Da = value;
					this.SendPropertyChanged("Da");
					this.OnDaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HealthSoratDetail")]
	public partial class HealthSoratDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Func_NAme;
		
		private string _Param1;
		
		private string _Param2;
		
		private string _Param3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFunc_NAmeChanging(string value);
    partial void OnFunc_NAmeChanged();
    partial void OnParam1Changing(string value);
    partial void OnParam1Changed();
    partial void OnParam2Changing(string value);
    partial void OnParam2Changed();
    partial void OnParam3Changing(string value);
    partial void OnParam3Changed();
    #endregion
		
		public HealthSoratDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Func_NAme", DbType="NVarChar(1000)")]
		public string Func_NAme
		{
			get
			{
				return this._Func_NAme;
			}
			set
			{
				if ((this._Func_NAme != value))
				{
					this.OnFunc_NAmeChanging(value);
					this.SendPropertyChanging();
					this._Func_NAme = value;
					this.SendPropertyChanged("Func_NAme");
					this.OnFunc_NAmeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param1", DbType="NVarChar(100)")]
		public string Param1
		{
			get
			{
				return this._Param1;
			}
			set
			{
				if ((this._Param1 != value))
				{
					this.OnParam1Changing(value);
					this.SendPropertyChanging();
					this._Param1 = value;
					this.SendPropertyChanged("Param1");
					this.OnParam1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param2", DbType="NVarChar(50)")]
		public string Param2
		{
			get
			{
				return this._Param2;
			}
			set
			{
				if ((this._Param2 != value))
				{
					this.OnParam2Changing(value);
					this.SendPropertyChanging();
					this._Param2 = value;
					this.SendPropertyChanged("Param2");
					this.OnParam2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param3", DbType="NVarChar(50)")]
		public string Param3
		{
			get
			{
				return this._Param3;
			}
			set
			{
				if ((this._Param3 != value))
				{
					this.OnParam3Changing(value);
					this.SendPropertyChanging();
					this._Param3 = value;
					this.SendPropertyChanged("Param3");
					this.OnParam3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holiday")]
	public partial class Holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private System.Nullable<bool> _Holiday1;
		
		private string _Cermony;
		
		private string _CreationDate;
		
		private string _CreationUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnHoliday1Changing(System.Nullable<bool> value);
    partial void OnHoliday1Changed();
    partial void OnCermonyChanging(string value);
    partial void OnCermonyChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(string value);
    partial void OnCreationUserChanged();
    #endregion
		
		public Holiday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Holiday", Storage="_Holiday1", DbType="Bit")]
		public System.Nullable<bool> Holiday1
		{
			get
			{
				return this._Holiday1;
			}
			set
			{
				if ((this._Holiday1 != value))
				{
					this.OnHoliday1Changing(value);
					this.SendPropertyChanging();
					this._Holiday1 = value;
					this.SendPropertyChanged("Holiday1");
					this.OnHoliday1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cermony", DbType="NVarChar(50)")]
		public string Cermony
		{
			get
			{
				return this._Cermony;
			}
			set
			{
				if ((this._Cermony != value))
				{
					this.OnCermonyChanging(value);
					this.SendPropertyChanging();
					this._Cermony = value;
					this.SendPropertyChanged("Cermony");
					this.OnCermonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="NVarChar(50)")]
		public string CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICD10")]
	public partial class ICD10 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDParent;
		
		private string _NameF;
		
		private string _NameE;
		
		private string _ICDCode;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<byte> _CodeType;
		
		private System.Nullable<int> _ReportCodeType;
		
		private EntitySet<BreastVisit> _BreastVisits;
		
		private EntitySet<BreastVisit> _BreastVisits1;
		
		private EntitySet<BreastVisit> _BreastVisits2;
		
		private EntitySet<FavoriteICD10> _FavoriteICD10s;
		
		private EntitySet<Visit> _Visits;
		
		private EntitySet<Visit> _Visits1;
		
		private EntitySet<Visit> _Visits2;
		
		private EntitySet<VisitHistory> _VisitHistories;
		
		private EntitySet<VisitHistory> _VisitHistories1;
		
		private EntitySet<VisitHistory> _VisitHistories2;
		
		private EntityRef<TypeOfICDCode> _TypeOfICDCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDParentChanging(System.Nullable<int> value);
    partial void OnIDParentChanged();
    partial void OnNameFChanging(string value);
    partial void OnNameFChanged();
    partial void OnNameEChanging(string value);
    partial void OnNameEChanged();
    partial void OnICDCodeChanging(string value);
    partial void OnICDCodeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCodeTypeChanging(System.Nullable<byte> value);
    partial void OnCodeTypeChanged();
    partial void OnReportCodeTypeChanging(System.Nullable<int> value);
    partial void OnReportCodeTypeChanged();
    #endregion
		
		public ICD10()
		{
			this._BreastVisits = new EntitySet<BreastVisit>(new Action<BreastVisit>(this.attach_BreastVisits), new Action<BreastVisit>(this.detach_BreastVisits));
			this._BreastVisits1 = new EntitySet<BreastVisit>(new Action<BreastVisit>(this.attach_BreastVisits1), new Action<BreastVisit>(this.detach_BreastVisits1));
			this._BreastVisits2 = new EntitySet<BreastVisit>(new Action<BreastVisit>(this.attach_BreastVisits2), new Action<BreastVisit>(this.detach_BreastVisits2));
			this._FavoriteICD10s = new EntitySet<FavoriteICD10>(new Action<FavoriteICD10>(this.attach_FavoriteICD10s), new Action<FavoriteICD10>(this.detach_FavoriteICD10s));
			this._Visits = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits), new Action<Visit>(this.detach_Visits));
			this._Visits1 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits1), new Action<Visit>(this.detach_Visits1));
			this._Visits2 = new EntitySet<Visit>(new Action<Visit>(this.attach_Visits2), new Action<Visit>(this.detach_Visits2));
			this._VisitHistories = new EntitySet<VisitHistory>(new Action<VisitHistory>(this.attach_VisitHistories), new Action<VisitHistory>(this.detach_VisitHistories));
			this._VisitHistories1 = new EntitySet<VisitHistory>(new Action<VisitHistory>(this.attach_VisitHistories1), new Action<VisitHistory>(this.detach_VisitHistories1));
			this._VisitHistories2 = new EntitySet<VisitHistory>(new Action<VisitHistory>(this.attach_VisitHistories2), new Action<VisitHistory>(this.detach_VisitHistories2));
			this._TypeOfICDCode = default(EntityRef<TypeOfICDCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDParent", DbType="Int")]
		public System.Nullable<int> IDParent
		{
			get
			{
				return this._IDParent;
			}
			set
			{
				if ((this._IDParent != value))
				{
					this.OnIDParentChanging(value);
					this.SendPropertyChanging();
					this._IDParent = value;
					this.SendPropertyChanged("IDParent");
					this.OnIDParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameF", DbType="NVarChar(500)")]
		public string NameF
		{
			get
			{
				return this._NameF;
			}
			set
			{
				if ((this._NameF != value))
				{
					this.OnNameFChanging(value);
					this.SendPropertyChanging();
					this._NameF = value;
					this.SendPropertyChanged("NameF");
					this.OnNameFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameE", DbType="NVarChar(500)")]
		public string NameE
		{
			get
			{
				return this._NameE;
			}
			set
			{
				if ((this._NameE != value))
				{
					this.OnNameEChanging(value);
					this.SendPropertyChanging();
					this._NameE = value;
					this.SendPropertyChanged("NameE");
					this.OnNameEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDCode", DbType="NVarChar(20)")]
		public string ICDCode
		{
			get
			{
				return this._ICDCode;
			}
			set
			{
				if ((this._ICDCode != value))
				{
					this.OnICDCodeChanging(value);
					this.SendPropertyChanging();
					this._ICDCode = value;
					this.SendPropertyChanged("ICDCode");
					this.OnICDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeType", DbType="TinyInt")]
		public System.Nullable<byte> CodeType
		{
			get
			{
				return this._CodeType;
			}
			set
			{
				if ((this._CodeType != value))
				{
					this.OnCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._CodeType = value;
					this.SendPropertyChanged("CodeType");
					this.OnCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportCodeType", DbType="Int")]
		public System.Nullable<int> ReportCodeType
		{
			get
			{
				return this._ReportCodeType;
			}
			set
			{
				if ((this._ReportCodeType != value))
				{
					if (this._TypeOfICDCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportCodeType = value;
					this.SendPropertyChanged("ReportCodeType");
					this.OnReportCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_BreastVisit", Storage="_BreastVisits", ThisKey="ID", OtherKey="IMP")]
		public EntitySet<BreastVisit> BreastVisits
		{
			get
			{
				return this._BreastVisits;
			}
			set
			{
				this._BreastVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_BreastVisit1", Storage="_BreastVisits1", ThisKey="ID", OtherKey="DDx1")]
		public EntitySet<BreastVisit> BreastVisits1
		{
			get
			{
				return this._BreastVisits1;
			}
			set
			{
				this._BreastVisits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_BreastVisit2", Storage="_BreastVisits2", ThisKey="ID", OtherKey="DDx2")]
		public EntitySet<BreastVisit> BreastVisits2
		{
			get
			{
				return this._BreastVisits2;
			}
			set
			{
				this._BreastVisits2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_FavoriteICD10", Storage="_FavoriteICD10s", ThisKey="ID", OtherKey="ICD10ID")]
		public EntitySet<FavoriteICD10> FavoriteICD10s
		{
			get
			{
				return this._FavoriteICD10s;
			}
			set
			{
				this._FavoriteICD10s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit", Storage="_Visits", ThisKey="ID", OtherKey="IMP")]
		public EntitySet<Visit> Visits
		{
			get
			{
				return this._Visits;
			}
			set
			{
				this._Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit1", Storage="_Visits1", ThisKey="ID", OtherKey="DDx1")]
		public EntitySet<Visit> Visits1
		{
			get
			{
				return this._Visits1;
			}
			set
			{
				this._Visits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit2", Storage="_Visits2", ThisKey="ID", OtherKey="DDx2")]
		public EntitySet<Visit> Visits2
		{
			get
			{
				return this._Visits2;
			}
			set
			{
				this._Visits2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_VisitHistory", Storage="_VisitHistories", ThisKey="ID", OtherKey="IMP")]
		public EntitySet<VisitHistory> VisitHistories
		{
			get
			{
				return this._VisitHistories;
			}
			set
			{
				this._VisitHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_VisitHistory1", Storage="_VisitHistories1", ThisKey="ID", OtherKey="DDx1")]
		public EntitySet<VisitHistory> VisitHistories1
		{
			get
			{
				return this._VisitHistories1;
			}
			set
			{
				this._VisitHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_VisitHistory2", Storage="_VisitHistories2", ThisKey="ID", OtherKey="DDx2")]
		public EntitySet<VisitHistory> VisitHistories2
		{
			get
			{
				return this._VisitHistories2;
			}
			set
			{
				this._VisitHistories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeOfICDCode_ICD10", Storage="_TypeOfICDCode", ThisKey="ReportCodeType", OtherKey="ID", IsForeignKey=true)]
		public TypeOfICDCode TypeOfICDCode
		{
			get
			{
				return this._TypeOfICDCode.Entity;
			}
			set
			{
				TypeOfICDCode previousValue = this._TypeOfICDCode.Entity;
				if (((previousValue != value) 
							|| (this._TypeOfICDCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeOfICDCode.Entity = null;
						previousValue.ICD10s.Remove(this);
					}
					this._TypeOfICDCode.Entity = value;
					if ((value != null))
					{
						value.ICD10s.Add(this);
						this._ReportCodeType = value.ID;
					}
					else
					{
						this._ReportCodeType = default(Nullable<int>);
					}
					this.SendPropertyChanged("TypeOfICDCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BreastVisits(BreastVisit entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = this;
		}
		
		private void detach_BreastVisits(BreastVisit entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = null;
		}
		
		private void attach_BreastVisits1(BreastVisit entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = this;
		}
		
		private void detach_BreastVisits1(BreastVisit entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = null;
		}
		
		private void attach_BreastVisits2(BreastVisit entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = this;
		}
		
		private void detach_BreastVisits2(BreastVisit entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = null;
		}
		
		private void attach_FavoriteICD10s(FavoriteICD10 entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = this;
		}
		
		private void detach_FavoriteICD10s(FavoriteICD10 entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = null;
		}
		
		private void attach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = this;
		}
		
		private void detach_Visits(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = null;
		}
		
		private void attach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = this;
		}
		
		private void detach_Visits1(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = null;
		}
		
		private void attach_Visits2(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = this;
		}
		
		private void detach_Visits2(Visit entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = null;
		}
		
		private void attach_VisitHistories(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = this;
		}
		
		private void detach_VisitHistories(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.ICD10 = null;
		}
		
		private void attach_VisitHistories1(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = this;
		}
		
		private void detach_VisitHistories1(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.ICD101 = null;
		}
		
		private void attach_VisitHistories2(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = this;
		}
		
		private void detach_VisitHistories2(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.ICD102 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndexDetail")]
	public partial class IndexDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IndexID;
		
		private string _VaksanName;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private EntityRef<IndexDetail> _IndexDetail2;
		
		private EntityRef<IndexDetail> _IndexDetail1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIndexIDChanging(int value);
    partial void OnIndexIDChanged();
    partial void OnVaksanNameChanging(string value);
    partial void OnVaksanNameChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public IndexDetail()
		{
			this._IndexDetail2 = default(EntityRef<IndexDetail>);
			this._IndexDetail1 = default(EntityRef<IndexDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._IndexDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexID", DbType="Int NOT NULL")]
		public int IndexID
		{
			get
			{
				return this._IndexID;
			}
			set
			{
				if ((this._IndexID != value))
				{
					this.OnIndexIDChanging(value);
					this.SendPropertyChanging();
					this._IndexID = value;
					this.SendPropertyChanged("IndexID");
					this.OnIndexIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaksanName", DbType="NVarChar(100)")]
		public string VaksanName
		{
			get
			{
				return this._VaksanName;
			}
			set
			{
				if ((this._VaksanName != value))
				{
					this.OnVaksanNameChanging(value);
					this.SendPropertyChanging();
					this._VaksanName = value;
					this.SendPropertyChanged("VaksanName");
					this.OnVaksanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IndexDetail_IndexDetail", Storage="_IndexDetail2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public IndexDetail IndexDetail2
		{
			get
			{
				return this._IndexDetail2.Entity;
			}
			set
			{
				IndexDetail previousValue = this._IndexDetail2.Entity;
				if (((previousValue != value) 
							|| (this._IndexDetail2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IndexDetail2.Entity = null;
						previousValue.IndexDetail1 = null;
					}
					this._IndexDetail2.Entity = value;
					if ((value != null))
					{
						value.IndexDetail1 = this;
					}
					this.SendPropertyChanged("IndexDetail2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IndexDetail_IndexDetail", Storage="_IndexDetail1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public IndexDetail IndexDetail1
		{
			get
			{
				return this._IndexDetail1.Entity;
			}
			set
			{
				IndexDetail previousValue = this._IndexDetail1.Entity;
				if (((previousValue != value) 
							|| (this._IndexDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IndexDetail1.Entity = null;
						previousValue.IndexDetail2 = null;
					}
					this._IndexDetail1.Entity = value;
					if ((value != null))
					{
						value.IndexDetail2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("IndexDetail1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndexTeh")]
	public partial class IndexTeh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<double> _ردیف;
		
		private string _نام_شاخص;
		
		private string _فرمول;
		
		private string _روش_محاسبه;
		
		private string _F5;
		
		private string _فایل_محاسبه;
		
		private System.Nullable<System.Guid> _IDQuestion;
		
		private System.Nullable<System.Guid> _IDGroup;
		
		private System.Nullable<System.Guid> _MainParent;
		
		private string _Description;
		
		private string _SqlCommandSorat;
		
		private string _SqlCommandMakhraj;
		
		private string _FilterType;
		
		private string _AnswerFilter;
		
		private System.Nullable<int> _DenoteType;
		
		private string _DenoteParametr;
		
		private System.Nullable<int> _SoratFunc;
		
		private System.Nullable<int> _SoratFuncDetail;
		
		private System.Nullable<int> _MinAge;
		
		private System.Nullable<int> _MaxAge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnردیفChanging(System.Nullable<double> value);
    partial void OnردیفChanged();
    partial void Onنام_شاخصChanging(string value);
    partial void Onنام_شاخصChanged();
    partial void OnفرمولChanging(string value);
    partial void OnفرمولChanged();
    partial void Onروش_محاسبهChanging(string value);
    partial void Onروش_محاسبهChanged();
    partial void OnF5Changing(string value);
    partial void OnF5Changed();
    partial void Onفایل_محاسبهChanging(string value);
    partial void Onفایل_محاسبهChanged();
    partial void OnIDQuestionChanging(System.Nullable<System.Guid> value);
    partial void OnIDQuestionChanged();
    partial void OnIDGroupChanging(System.Nullable<System.Guid> value);
    partial void OnIDGroupChanged();
    partial void OnMainParentChanging(System.Nullable<System.Guid> value);
    partial void OnMainParentChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSqlCommandSoratChanging(string value);
    partial void OnSqlCommandSoratChanged();
    partial void OnSqlCommandMakhrajChanging(string value);
    partial void OnSqlCommandMakhrajChanged();
    partial void OnFilterTypeChanging(string value);
    partial void OnFilterTypeChanged();
    partial void OnAnswerFilterChanging(string value);
    partial void OnAnswerFilterChanged();
    partial void OnDenoteTypeChanging(System.Nullable<int> value);
    partial void OnDenoteTypeChanged();
    partial void OnDenoteParametrChanging(string value);
    partial void OnDenoteParametrChanged();
    partial void OnSoratFuncChanging(System.Nullable<int> value);
    partial void OnSoratFuncChanged();
    partial void OnSoratFuncDetailChanging(System.Nullable<int> value);
    partial void OnSoratFuncDetailChanged();
    partial void OnMinAgeChanging(System.Nullable<int> value);
    partial void OnMinAgeChanged();
    partial void OnMaxAgeChanging(System.Nullable<int> value);
    partial void OnMaxAgeChanged();
    #endregion
		
		public IndexTeh()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ردیف", DbType="Float")]
		public System.Nullable<double> ردیف
		{
			get
			{
				return this._ردیف;
			}
			set
			{
				if ((this._ردیف != value))
				{
					this.OnردیفChanging(value);
					this.SendPropertyChanging();
					this._ردیف = value;
					this.SendPropertyChanged("ردیف");
					this.OnردیفChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نام شاخص]", Storage="_نام_شاخص", DbType="NVarChar(255)")]
		public string نام_شاخص
		{
			get
			{
				return this._نام_شاخص;
			}
			set
			{
				if ((this._نام_شاخص != value))
				{
					this.Onنام_شاخصChanging(value);
					this.SendPropertyChanging();
					this._نام_شاخص = value;
					this.SendPropertyChanged("نام_شاخص");
					this.Onنام_شاخصChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_فرمول", DbType="NVarChar(255)")]
		public string فرمول
		{
			get
			{
				return this._فرمول;
			}
			set
			{
				if ((this._فرمول != value))
				{
					this.OnفرمولChanging(value);
					this.SendPropertyChanging();
					this._فرمول = value;
					this.SendPropertyChanged("فرمول");
					this.OnفرمولChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[روش محاسبه]", Storage="_روش_محاسبه", DbType="NVarChar(255)")]
		public string روش_محاسبه
		{
			get
			{
				return this._روش_محاسبه;
			}
			set
			{
				if ((this._روش_محاسبه != value))
				{
					this.Onروش_محاسبهChanging(value);
					this.SendPropertyChanging();
					this._روش_محاسبه = value;
					this.SendPropertyChanged("روش_محاسبه");
					this.Onروش_محاسبهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F5", DbType="NVarChar(255)")]
		public string F5
		{
			get
			{
				return this._F5;
			}
			set
			{
				if ((this._F5 != value))
				{
					this.OnF5Changing(value);
					this.SendPropertyChanging();
					this._F5 = value;
					this.SendPropertyChanged("F5");
					this.OnF5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[فایل محاسبه]", Storage="_فایل_محاسبه", DbType="NVarChar(255)")]
		public string فایل_محاسبه
		{
			get
			{
				return this._فایل_محاسبه;
			}
			set
			{
				if ((this._فایل_محاسبه != value))
				{
					this.Onفایل_محاسبهChanging(value);
					this.SendPropertyChanging();
					this._فایل_محاسبه = value;
					this.SendPropertyChanged("فایل_محاسبه");
					this.Onفایل_محاسبهChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuestion", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDQuestion
		{
			get
			{
				return this._IDQuestion;
			}
			set
			{
				if ((this._IDQuestion != value))
				{
					this.OnIDQuestionChanging(value);
					this.SendPropertyChanging();
					this._IDQuestion = value;
					this.SendPropertyChanged("IDQuestion");
					this.OnIDQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGroup", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGroup
		{
			get
			{
				return this._IDGroup;
			}
			set
			{
				if ((this._IDGroup != value))
				{
					this.OnIDGroupChanging(value);
					this.SendPropertyChanging();
					this._IDGroup = value;
					this.SendPropertyChanged("IDGroup");
					this.OnIDGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainParent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MainParent
		{
			get
			{
				return this._MainParent;
			}
			set
			{
				if ((this._MainParent != value))
				{
					this.OnMainParentChanging(value);
					this.SendPropertyChanging();
					this._MainParent = value;
					this.SendPropertyChanged("MainParent");
					this.OnMainParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SqlCommandSorat", DbType="NVarChar(255)")]
		public string SqlCommandSorat
		{
			get
			{
				return this._SqlCommandSorat;
			}
			set
			{
				if ((this._SqlCommandSorat != value))
				{
					this.OnSqlCommandSoratChanging(value);
					this.SendPropertyChanging();
					this._SqlCommandSorat = value;
					this.SendPropertyChanged("SqlCommandSorat");
					this.OnSqlCommandSoratChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SqlCommandMakhraj", DbType="NVarChar(255)")]
		public string SqlCommandMakhraj
		{
			get
			{
				return this._SqlCommandMakhraj;
			}
			set
			{
				if ((this._SqlCommandMakhraj != value))
				{
					this.OnSqlCommandMakhrajChanging(value);
					this.SendPropertyChanging();
					this._SqlCommandMakhraj = value;
					this.SendPropertyChanged("SqlCommandMakhraj");
					this.OnSqlCommandMakhrajChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterType", DbType="NVarChar(50)")]
		public string FilterType
		{
			get
			{
				return this._FilterType;
			}
			set
			{
				if ((this._FilterType != value))
				{
					this.OnFilterTypeChanging(value);
					this.SendPropertyChanging();
					this._FilterType = value;
					this.SendPropertyChanged("FilterType");
					this.OnFilterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerFilter", DbType="NVarChar(150)")]
		public string AnswerFilter
		{
			get
			{
				return this._AnswerFilter;
			}
			set
			{
				if ((this._AnswerFilter != value))
				{
					this.OnAnswerFilterChanging(value);
					this.SendPropertyChanging();
					this._AnswerFilter = value;
					this.SendPropertyChanged("AnswerFilter");
					this.OnAnswerFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenoteType", DbType="Int")]
		public System.Nullable<int> DenoteType
		{
			get
			{
				return this._DenoteType;
			}
			set
			{
				if ((this._DenoteType != value))
				{
					this.OnDenoteTypeChanging(value);
					this.SendPropertyChanging();
					this._DenoteType = value;
					this.SendPropertyChanged("DenoteType");
					this.OnDenoteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenoteParametr", DbType="NVarChar(500)")]
		public string DenoteParametr
		{
			get
			{
				return this._DenoteParametr;
			}
			set
			{
				if ((this._DenoteParametr != value))
				{
					this.OnDenoteParametrChanging(value);
					this.SendPropertyChanging();
					this._DenoteParametr = value;
					this.SendPropertyChanged("DenoteParametr");
					this.OnDenoteParametrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoratFunc", DbType="Int")]
		public System.Nullable<int> SoratFunc
		{
			get
			{
				return this._SoratFunc;
			}
			set
			{
				if ((this._SoratFunc != value))
				{
					this.OnSoratFuncChanging(value);
					this.SendPropertyChanging();
					this._SoratFunc = value;
					this.SendPropertyChanged("SoratFunc");
					this.OnSoratFuncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoratFuncDetail", DbType="Int")]
		public System.Nullable<int> SoratFuncDetail
		{
			get
			{
				return this._SoratFuncDetail;
			}
			set
			{
				if ((this._SoratFuncDetail != value))
				{
					this.OnSoratFuncDetailChanging(value);
					this.SendPropertyChanging();
					this._SoratFuncDetail = value;
					this.SendPropertyChanged("SoratFuncDetail");
					this.OnSoratFuncDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinAge", DbType="Int")]
		public System.Nullable<int> MinAge
		{
			get
			{
				return this._MinAge;
			}
			set
			{
				if ((this._MinAge != value))
				{
					this.OnMinAgeChanging(value);
					this.SendPropertyChanging();
					this._MinAge = value;
					this.SendPropertyChanged("MinAge");
					this.OnMinAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAge", DbType="Int")]
		public System.Nullable<int> MaxAge
		{
			get
			{
				return this._MaxAge;
			}
			set
			{
				if ((this._MaxAge != value))
				{
					this.OnMaxAgeChanging(value);
					this.SendPropertyChanging();
					this._MaxAge = value;
					this.SendPropertyChanged("MaxAge");
					this.OnMaxAgeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurance")]
	public partial class Insurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Name;
		
		private System.Nullable<bool> _HasContract;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<int> _ParentID;
		
		private string _CompanyType;
		
		private bool _CheckingExpDate;
		
		private bool _AllowChoose;
		
		private bool _CheckBookletPageNumber;
		
		private bool _CheckbookletCode;
		
		private bool _Complementray;
		
		private bool _NeedAdvancePayment;
		
		private bool _OMO;
		
		private EntitySet<DepAdvancePayment> _DepAdvancePayments;
		
		private EntitySet<DoctorInsurance> _DoctorInsurances;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Insurance> _Insurances;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntityRef<Insurance> _Insurance1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasContractChanging(System.Nullable<bool> value);
    partial void OnHasContractChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    partial void OnCheckingExpDateChanging(bool value);
    partial void OnCheckingExpDateChanged();
    partial void OnAllowChooseChanging(bool value);
    partial void OnAllowChooseChanged();
    partial void OnCheckBookletPageNumberChanging(bool value);
    partial void OnCheckBookletPageNumberChanged();
    partial void OnCheckbookletCodeChanging(bool value);
    partial void OnCheckbookletCodeChanged();
    partial void OnComplementrayChanging(bool value);
    partial void OnComplementrayChanged();
    partial void OnNeedAdvancePaymentChanging(bool value);
    partial void OnNeedAdvancePaymentChanged();
    partial void OnOMOChanging(bool value);
    partial void OnOMOChanged();
    #endregion
		
		public Insurance()
		{
			this._DepAdvancePayments = new EntitySet<DepAdvancePayment>(new Action<DepAdvancePayment>(this.attach_DepAdvancePayments), new Action<DepAdvancePayment>(this.detach_DepAdvancePayments));
			this._DoctorInsurances = new EntitySet<DoctorInsurance>(new Action<DoctorInsurance>(this.attach_DoctorInsurances), new Action<DoctorInsurance>(this.detach_DoctorInsurances));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Insurances = new EntitySet<Insurance>(new Action<Insurance>(this.attach_Insurances), new Action<Insurance>(this.detach_Insurances));
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._Insurance1 = default(EntityRef<Insurance>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasContract", DbType="Bit")]
		public System.Nullable<bool> HasContract
		{
			get
			{
				return this._HasContract;
			}
			set
			{
				if ((this._HasContract != value))
				{
					this.OnHasContractChanging(value);
					this.SendPropertyChanging();
					this._HasContract = value;
					this.SendPropertyChanged("HasContract");
					this.OnHasContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Insurance1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(10)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingExpDate", DbType="Bit NOT NULL")]
		public bool CheckingExpDate
		{
			get
			{
				return this._CheckingExpDate;
			}
			set
			{
				if ((this._CheckingExpDate != value))
				{
					this.OnCheckingExpDateChanging(value);
					this.SendPropertyChanging();
					this._CheckingExpDate = value;
					this.SendPropertyChanged("CheckingExpDate");
					this.OnCheckingExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowChoose", DbType="Bit NOT NULL")]
		public bool AllowChoose
		{
			get
			{
				return this._AllowChoose;
			}
			set
			{
				if ((this._AllowChoose != value))
				{
					this.OnAllowChooseChanging(value);
					this.SendPropertyChanging();
					this._AllowChoose = value;
					this.SendPropertyChanged("AllowChoose");
					this.OnAllowChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBookletPageNumber", DbType="Bit NOT NULL")]
		public bool CheckBookletPageNumber
		{
			get
			{
				return this._CheckBookletPageNumber;
			}
			set
			{
				if ((this._CheckBookletPageNumber != value))
				{
					this.OnCheckBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckBookletPageNumber = value;
					this.SendPropertyChanged("CheckBookletPageNumber");
					this.OnCheckBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckbookletCode", DbType="Bit NOT NULL")]
		public bool CheckbookletCode
		{
			get
			{
				return this._CheckbookletCode;
			}
			set
			{
				if ((this._CheckbookletCode != value))
				{
					this.OnCheckbookletCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckbookletCode = value;
					this.SendPropertyChanged("CheckbookletCode");
					this.OnCheckbookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complementray", DbType="Bit NOT NULL")]
		public bool Complementray
		{
			get
			{
				return this._Complementray;
			}
			set
			{
				if ((this._Complementray != value))
				{
					this.OnComplementrayChanging(value);
					this.SendPropertyChanging();
					this._Complementray = value;
					this.SendPropertyChanged("Complementray");
					this.OnComplementrayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedAdvancePayment", DbType="Bit NOT NULL")]
		public bool NeedAdvancePayment
		{
			get
			{
				return this._NeedAdvancePayment;
			}
			set
			{
				if ((this._NeedAdvancePayment != value))
				{
					this.OnNeedAdvancePaymentChanging(value);
					this.SendPropertyChanging();
					this._NeedAdvancePayment = value;
					this.SendPropertyChanged("NeedAdvancePayment");
					this.OnNeedAdvancePaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OMO", DbType="Bit NOT NULL")]
		public bool OMO
		{
			get
			{
				return this._OMO;
			}
			set
			{
				if ((this._OMO != value))
				{
					this.OnOMOChanging(value);
					this.SendPropertyChanging();
					this._OMO = value;
					this.SendPropertyChanged("OMO");
					this.OnOMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_DepAdvancePayment", Storage="_DepAdvancePayments", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<DepAdvancePayment> DepAdvancePayments
		{
			get
			{
				return this._DepAdvancePayments;
			}
			set
			{
				this._DepAdvancePayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_DoctorInsurance", Storage="_DoctorInsurances", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<DoctorInsurance> DoctorInsurances
		{
			get
			{
				return this._DoctorInsurances;
			}
			set
			{
				this._DoctorInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="XInsuranceID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Insurance", Storage="_Insurances", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Insurance> Insurances
		{
			get
			{
				return this._Insurances;
			}
			set
			{
				this._Insurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="InsuranceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Insurance", Storage="_Insurance1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance1
		{
			get
			{
				return this._Insurance1.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance1.Entity;
				if (((previousValue != value) 
							|| (this._Insurance1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance1.Entity = null;
						previousValue.Insurances.Remove(this);
					}
					this._Insurance1.Entity = value;
					if ((value != null))
					{
						value.Insurances.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DepAdvancePayments(DepAdvancePayment entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_DepAdvancePayments(DepAdvancePayment entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
		
		private void attach_Insurances(Insurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance1 = this;
		}
		
		private void detach_Insurances(Insurance entity)
		{
			this.SendPropertyChanging();
			entity.Insurance1 = null;
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Insurance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabAntiBiogram")]
	public partial class LabAntiBiogram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public LabAntiBiogram()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabGroup")]
	public partial class LabGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GoupName;
		
		private System.Nullable<int> _OldID;
		
		private string _EName;
		
		private EntitySet<LaboratoryServiceDetail> _LaboratoryServiceDetails;
		
		private EntitySet<LabSubGroup> _LabSubGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGoupNameChanging(string value);
    partial void OnGoupNameChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnENameChanging(string value);
    partial void OnENameChanged();
    #endregion
		
		public LabGroup()
		{
			this._LaboratoryServiceDetails = new EntitySet<LaboratoryServiceDetail>(new Action<LaboratoryServiceDetail>(this.attach_LaboratoryServiceDetails), new Action<LaboratoryServiceDetail>(this.detach_LaboratoryServiceDetails));
			this._LabSubGroups = new EntitySet<LabSubGroup>(new Action<LabSubGroup>(this.attach_LabSubGroups), new Action<LabSubGroup>(this.detach_LabSubGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoupName", DbType="NVarChar(50)")]
		public string GoupName
		{
			get
			{
				return this._GoupName;
			}
			set
			{
				if ((this._GoupName != value))
				{
					this.OnGoupNameChanging(value);
					this.SendPropertyChanging();
					this._GoupName = value;
					this.SendPropertyChanged("GoupName");
					this.OnGoupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EName", DbType="NVarChar(50)")]
		public string EName
		{
			get
			{
				return this._EName;
			}
			set
			{
				if ((this._EName != value))
				{
					this.OnENameChanging(value);
					this.SendPropertyChanging();
					this._EName = value;
					this.SendPropertyChanged("EName");
					this.OnENameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LaboratoryServiceDetail", Storage="_LaboratoryServiceDetails", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<LaboratoryServiceDetail> LaboratoryServiceDetails
		{
			get
			{
				return this._LaboratoryServiceDetails;
			}
			set
			{
				this._LaboratoryServiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LabSubGroup", Storage="_LabSubGroups", ThisKey="ID", OtherKey="LabGroupID")]
		public EntitySet<LabSubGroup> LabSubGroups
		{
			get
			{
				return this._LabSubGroups;
			}
			set
			{
				this._LabSubGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LaboratoryServiceDetails(LaboratoryServiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = this;
		}
		
		private void detach_LaboratoryServiceDetails(LaboratoryServiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = null;
		}
		
		private void attach_LabSubGroups(LabSubGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = this;
		}
		
		private void detach_LabSubGroups(LabSubGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LaboratoryServiceDetail")]
	public partial class LaboratoryServiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _TestCode;
		
		private System.Nullable<bool> _TestOnly;
		
		private System.Nullable<short> _TestNo;
		
		private string _MeasurementUnit;
		
		private string _AbbreviationName;
		
		private string _TestType;
		
		private string _UpperBound;
		
		private string _LowerBound;
		
		private string _NormalRange;
		
		private bool _Show;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _OldGroupID;
		
		private EntityRef<LabGroup> _LabGroup;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTestCodeChanging(int value);
    partial void OnTestCodeChanged();
    partial void OnTestOnlyChanging(System.Nullable<bool> value);
    partial void OnTestOnlyChanged();
    partial void OnTestNoChanging(System.Nullable<short> value);
    partial void OnTestNoChanged();
    partial void OnMeasurementUnitChanging(string value);
    partial void OnMeasurementUnitChanged();
    partial void OnAbbreviationNameChanging(string value);
    partial void OnAbbreviationNameChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnUpperBoundChanging(string value);
    partial void OnUpperBoundChanged();
    partial void OnLowerBoundChanging(string value);
    partial void OnLowerBoundChanged();
    partial void OnNormalRangeChanging(string value);
    partial void OnNormalRangeChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnOldGroupIDChanging(System.Nullable<int> value);
    partial void OnOldGroupIDChanged();
    #endregion
		
		public LaboratoryServiceDetail()
		{
			this._LabGroup = default(EntityRef<LabGroup>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCode", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TestCode
		{
			get
			{
				return this._TestCode;
			}
			set
			{
				if ((this._TestCode != value))
				{
					this.OnTestCodeChanging(value);
					this.SendPropertyChanging();
					this._TestCode = value;
					this.SendPropertyChanged("TestCode");
					this.OnTestCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestOnly", DbType="Bit")]
		public System.Nullable<bool> TestOnly
		{
			get
			{
				return this._TestOnly;
			}
			set
			{
				if ((this._TestOnly != value))
				{
					this.OnTestOnlyChanging(value);
					this.SendPropertyChanging();
					this._TestOnly = value;
					this.SendPropertyChanged("TestOnly");
					this.OnTestOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNo", DbType="SmallInt")]
		public System.Nullable<short> TestNo
		{
			get
			{
				return this._TestNo;
			}
			set
			{
				if ((this._TestNo != value))
				{
					this.OnTestNoChanging(value);
					this.SendPropertyChanging();
					this._TestNo = value;
					this.SendPropertyChanged("TestNo");
					this.OnTestNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnit", DbType="NVarChar(50)")]
		public string MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit;
			}
			set
			{
				if ((this._MeasurementUnit != value))
				{
					this.OnMeasurementUnitChanging(value);
					this.SendPropertyChanging();
					this._MeasurementUnit = value;
					this.SendPropertyChanged("MeasurementUnit");
					this.OnMeasurementUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbbreviationName", DbType="NVarChar(50)")]
		public string AbbreviationName
		{
			get
			{
				return this._AbbreviationName;
			}
			set
			{
				if ((this._AbbreviationName != value))
				{
					this.OnAbbreviationNameChanging(value);
					this.SendPropertyChanging();
					this._AbbreviationName = value;
					this.SendPropertyChanged("AbbreviationName");
					this.OnAbbreviationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="NVarChar(20)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperBound", DbType="NVarChar(50)")]
		public string UpperBound
		{
			get
			{
				return this._UpperBound;
			}
			set
			{
				if ((this._UpperBound != value))
				{
					this.OnUpperBoundChanging(value);
					this.SendPropertyChanging();
					this._UpperBound = value;
					this.SendPropertyChanged("UpperBound");
					this.OnUpperBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerBound", DbType="NVarChar(50)")]
		public string LowerBound
		{
			get
			{
				return this._LowerBound;
			}
			set
			{
				if ((this._LowerBound != value))
				{
					this.OnLowerBoundChanging(value);
					this.SendPropertyChanging();
					this._LowerBound = value;
					this.SendPropertyChanged("LowerBound");
					this.OnLowerBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this.OnNormalRangeChanging(value);
					this.SendPropertyChanging();
					this._NormalRange = value;
					this.SendPropertyChanged("NormalRange");
					this.OnNormalRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._LabGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldGroupID", DbType="Int")]
		public System.Nullable<int> OldGroupID
		{
			get
			{
				return this._OldGroupID;
			}
			set
			{
				if ((this._OldGroupID != value))
				{
					this.OnOldGroupIDChanging(value);
					this.SendPropertyChanging();
					this._OldGroupID = value;
					this.SendPropertyChanged("OldGroupID");
					this.OnOldGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LaboratoryServiceDetail", Storage="_LabGroup", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public LabGroup LabGroup
		{
			get
			{
				return this._LabGroup.Entity;
			}
			set
			{
				LabGroup previousValue = this._LabGroup.Entity;
				if (((previousValue != value) 
							|| (this._LabGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabGroup.Entity = null;
						previousValue.LaboratoryServiceDetails.Remove(this);
					}
					this._LabGroup.Entity = value;
					if ((value != null))
					{
						value.LaboratoryServiceDetails.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LaboratoryServiceDetail", Storage="_Service", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LaboratoryServiceDetail = null;
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LaboratoryServiceDetail = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabSubGroup")]
	public partial class LabSubGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SubGroupName;
		
		private System.Nullable<int> _LabGroupID;
		
		private System.Nullable<int> _OldID;
		
		private EntitySet<LabTestGroup> _LabTestGroups;
		
		private EntityRef<LabGroup> _LabGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubGroupNameChanging(string value);
    partial void OnSubGroupNameChanged();
    partial void OnLabGroupIDChanging(System.Nullable<int> value);
    partial void OnLabGroupIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    #endregion
		
		public LabSubGroup()
		{
			this._LabTestGroups = new EntitySet<LabTestGroup>(new Action<LabTestGroup>(this.attach_LabTestGroups), new Action<LabTestGroup>(this.detach_LabTestGroups));
			this._LabGroup = default(EntityRef<LabGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGroupName", DbType="NVarChar(50)")]
		public string SubGroupName
		{
			get
			{
				return this._SubGroupName;
			}
			set
			{
				if ((this._SubGroupName != value))
				{
					this.OnSubGroupNameChanging(value);
					this.SendPropertyChanging();
					this._SubGroupName = value;
					this.SendPropertyChanged("SubGroupName");
					this.OnSubGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabGroupID", DbType="Int")]
		public System.Nullable<int> LabGroupID
		{
			get
			{
				return this._LabGroupID;
			}
			set
			{
				if ((this._LabGroupID != value))
				{
					if (this._LabGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabGroupIDChanging(value);
					this.SendPropertyChanging();
					this._LabGroupID = value;
					this.SendPropertyChanged("LabGroupID");
					this.OnLabGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabSubGroup_LabTestGroup", Storage="_LabTestGroups", ThisKey="ID", OtherKey="LabSubGroupID")]
		public EntitySet<LabTestGroup> LabTestGroups
		{
			get
			{
				return this._LabTestGroups;
			}
			set
			{
				this._LabTestGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabGroup_LabSubGroup", Storage="_LabGroup", ThisKey="LabGroupID", OtherKey="ID", IsForeignKey=true)]
		public LabGroup LabGroup
		{
			get
			{
				return this._LabGroup.Entity;
			}
			set
			{
				LabGroup previousValue = this._LabGroup.Entity;
				if (((previousValue != value) 
							|| (this._LabGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabGroup.Entity = null;
						previousValue.LabSubGroups.Remove(this);
					}
					this._LabGroup.Entity = value;
					if ((value != null))
					{
						value.LabSubGroups.Add(this);
						this._LabGroupID = value.ID;
					}
					else
					{
						this._LabGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabSubGroup = this;
		}
		
		private void detach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.LabSubGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabTerm")]
	public partial class LabTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ShortcutKey;
		
		private string _TermText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShortcutKeyChanging(string value);
    partial void OnShortcutKeyChanged();
    partial void OnTermTextChanging(string value);
    partial void OnTermTextChanged();
    #endregion
		
		public LabTerm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortcutKey", DbType="NVarChar(20)")]
		public string ShortcutKey
		{
			get
			{
				return this._ShortcutKey;
			}
			set
			{
				if ((this._ShortcutKey != value))
				{
					this.OnShortcutKeyChanging(value);
					this.SendPropertyChanging();
					this._ShortcutKey = value;
					this.SendPropertyChanged("ShortcutKey");
					this.OnShortcutKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermText", DbType="NVarChar(MAX)")]
		public string TermText
		{
			get
			{
				return this._TermText;
			}
			set
			{
				if ((this._TermText != value))
				{
					this.OnTermTextChanging(value);
					this.SendPropertyChanging();
					this._TermText = value;
					this.SendPropertyChanged("TermText");
					this.OnTermTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabTestGroup")]
	public partial class LabTestGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LabSubGroupID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<bool> _Flg;
		
		private EntityRef<LabSubGroup> _LabSubGroup;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLabSubGroupIDChanging(System.Nullable<int> value);
    partial void OnLabSubGroupIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnFlgChanging(System.Nullable<bool> value);
    partial void OnFlgChanged();
    #endregion
		
		public LabTestGroup()
		{
			this._LabSubGroup = default(EntityRef<LabSubGroup>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabSubGroupID", DbType="Int")]
		public System.Nullable<int> LabSubGroupID
		{
			get
			{
				return this._LabSubGroupID;
			}
			set
			{
				if ((this._LabSubGroupID != value))
				{
					if (this._LabSubGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabSubGroupIDChanging(value);
					this.SendPropertyChanging();
					this._LabSubGroupID = value;
					this.SendPropertyChanged("LabSubGroupID");
					this.OnLabSubGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flg", DbType="Bit")]
		public System.Nullable<bool> Flg
		{
			get
			{
				return this._Flg;
			}
			set
			{
				if ((this._Flg != value))
				{
					this.OnFlgChanging(value);
					this.SendPropertyChanging();
					this._Flg = value;
					this.SendPropertyChanged("Flg");
					this.OnFlgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabSubGroup_LabTestGroup", Storage="_LabSubGroup", ThisKey="LabSubGroupID", OtherKey="ID", IsForeignKey=true)]
		public LabSubGroup LabSubGroup
		{
			get
			{
				return this._LabSubGroup.Entity;
			}
			set
			{
				LabSubGroup previousValue = this._LabSubGroup.Entity;
				if (((previousValue != value) 
							|| (this._LabSubGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabSubGroup.Entity = null;
						previousValue.LabTestGroups.Remove(this);
					}
					this._LabSubGroup.Entity = value;
					if ((value != null))
					{
						value.LabTestGroups.Add(this);
						this._LabSubGroupID = value.ID;
					}
					else
					{
						this._LabSubGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabSubGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LabTestGroup", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LabTestGroups.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LabTestGroups.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabWorksheet")]
	public partial class LabWorksheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private EntitySet<LabWorksheetService> _LabWorksheetServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public LabWorksheet()
		{
			this._LabWorksheetServices = new EntitySet<LabWorksheetService>(new Action<LabWorksheetService>(this.attach_LabWorksheetServices), new Action<LabWorksheetService>(this.detach_LabWorksheetServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabWorksheet_LabWorksheetService", Storage="_LabWorksheetServices", ThisKey="ID", OtherKey="LabWorksheetID")]
		public EntitySet<LabWorksheetService> LabWorksheetServices
		{
			get
			{
				return this._LabWorksheetServices;
			}
			set
			{
				this._LabWorksheetServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabWorksheetServices(LabWorksheetService entity)
		{
			this.SendPropertyChanging();
			entity.LabWorksheet = this;
		}
		
		private void detach_LabWorksheetServices(LabWorksheetService entity)
		{
			this.SendPropertyChanging();
			entity.LabWorksheet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabWorksheetService")]
	public partial class LabWorksheetService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _LabWorksheetID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private EntityRef<LabWorksheet> _LabWorksheet;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnLabWorksheetIDChanging(System.Nullable<System.Guid> value);
    partial void OnLabWorksheetIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public LabWorksheetService()
		{
			this._LabWorksheet = default(EntityRef<LabWorksheet>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabWorksheetID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> LabWorksheetID
		{
			get
			{
				return this._LabWorksheetID;
			}
			set
			{
				if ((this._LabWorksheetID != value))
				{
					if (this._LabWorksheet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabWorksheetIDChanging(value);
					this.SendPropertyChanging();
					this._LabWorksheetID = value;
					this.SendPropertyChanged("LabWorksheetID");
					this.OnLabWorksheetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabWorksheet_LabWorksheetService", Storage="_LabWorksheet", ThisKey="LabWorksheetID", OtherKey="ID", IsForeignKey=true)]
		public LabWorksheet LabWorksheet
		{
			get
			{
				return this._LabWorksheet.Entity;
			}
			set
			{
				LabWorksheet previousValue = this._LabWorksheet.Entity;
				if (((previousValue != value) 
							|| (this._LabWorksheet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabWorksheet.Entity = null;
						previousValue.LabWorksheetServices.Remove(this);
					}
					this._LabWorksheet.Entity = value;
					if ((value != null))
					{
						value.LabWorksheetServices.Add(this);
						this._LabWorksheetID = value.ID;
					}
					else
					{
						this._LabWorksheetID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("LabWorksheet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LabWorksheetService", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LabWorksheetServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LabWorksheetServices.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laundry")]
	public partial class Laundry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _DeliveryDate;
		
		private string _Deliverer;
		
		private string _Size;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnDelivererChanging(string value);
    partial void OnDelivererChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    #endregion
		
		public Laundry()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(10)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deliverer", DbType="NVarChar(100)")]
		public string Deliverer
		{
			get
			{
				return this._Deliverer;
			}
			set
			{
				if ((this._Deliverer != value))
				{
					this.OnDelivererChanging(value);
					this.SendPropertyChanging();
					this._Deliverer = value;
					this.SendPropertyChanged("Deliverer");
					this.OnDelivererChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Laundry", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.Laundry = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.Laundry = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeasurementDefinition")]
	public partial class MeasurementDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MeasurementDefinitionReg;
		
		private string _MeasurementName;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMeasurementDefinitionRegChanging(System.Nullable<int> value);
    partial void OnMeasurementDefinitionRegChanged();
    partial void OnMeasurementNameChanging(string value);
    partial void OnMeasurementNameChanged();
    #endregion
		
		public MeasurementDefinition()
		{
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementDefinitionReg", DbType="Int")]
		public System.Nullable<int> MeasurementDefinitionReg
		{
			get
			{
				return this._MeasurementDefinitionReg;
			}
			set
			{
				if ((this._MeasurementDefinitionReg != value))
				{
					this.OnMeasurementDefinitionRegChanging(value);
					this.SendPropertyChanging();
					this._MeasurementDefinitionReg = value;
					this.SendPropertyChanged("MeasurementDefinitionReg");
					this.OnMeasurementDefinitionRegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementName", DbType="NVarChar(50)")]
		public string MeasurementName
		{
			get
			{
				return this._MeasurementName;
			}
			set
			{
				if ((this._MeasurementName != value))
				{
					this.OnMeasurementNameChanging(value);
					this.SendPropertyChanging();
					this._MeasurementName = value;
					this.SendPropertyChanged("MeasurementName");
					this.OnMeasurementNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementDefinition_Service", Storage="_Services", ThisKey="ID", OtherKey="IDMeasurement")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementDefinition = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicalRecord")]
	public partial class MedicalRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private System.Nullable<bool> _I;
		
		private System.Nullable<bool> _C;
		
		private System.Nullable<bool> _B;
		
		private System.Nullable<bool> _Allergy;
		
		private System.Nullable<bool> _Surgery;
		
		private System.Nullable<bool> _Lung;
		
		private System.Nullable<bool> _Liver;
		
		private System.Nullable<bool> _Urine;
		
		private System.Nullable<bool> _Eye;
		
		private System.Nullable<bool> _Psychiatry;
		
		private System.Nullable<bool> _Ear;
		
		private System.Nullable<bool> _Oncology;
		
		private System.Nullable<bool> _Accident;
		
		private System.Nullable<bool> _Genetic;
		
		private System.Nullable<bool> _Musculoskeletal;
		
		private System.Nullable<bool> _Texture;
		
		private System.Nullable<bool> _Blood;
		
		private System.Nullable<bool> _Heart;
		
		private System.Nullable<bool> _Neurology;
		
		private System.Nullable<bool> _Skin;
		
		private System.Nullable<bool> _Mouth;
		
		private System.Nullable<bool> _Infectious;
		
		private System.Nullable<bool> _Nutrition;
		
		private System.Nullable<bool> _Women;
		
		private System.Nullable<bool> _glands;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnIChanging(System.Nullable<bool> value);
    partial void OnIChanged();
    partial void OnCChanging(System.Nullable<bool> value);
    partial void OnCChanged();
    partial void OnBChanging(System.Nullable<bool> value);
    partial void OnBChanged();
    partial void OnAllergyChanging(System.Nullable<bool> value);
    partial void OnAllergyChanged();
    partial void OnSurgeryChanging(System.Nullable<bool> value);
    partial void OnSurgeryChanged();
    partial void OnLungChanging(System.Nullable<bool> value);
    partial void OnLungChanged();
    partial void OnLiverChanging(System.Nullable<bool> value);
    partial void OnLiverChanged();
    partial void OnUrineChanging(System.Nullable<bool> value);
    partial void OnUrineChanged();
    partial void OnEyeChanging(System.Nullable<bool> value);
    partial void OnEyeChanged();
    partial void OnPsychiatryChanging(System.Nullable<bool> value);
    partial void OnPsychiatryChanged();
    partial void OnEarChanging(System.Nullable<bool> value);
    partial void OnEarChanged();
    partial void OnOncologyChanging(System.Nullable<bool> value);
    partial void OnOncologyChanged();
    partial void OnAccidentChanging(System.Nullable<bool> value);
    partial void OnAccidentChanged();
    partial void OnGeneticChanging(System.Nullable<bool> value);
    partial void OnGeneticChanged();
    partial void OnMusculoskeletalChanging(System.Nullable<bool> value);
    partial void OnMusculoskeletalChanged();
    partial void OnTextureChanging(System.Nullable<bool> value);
    partial void OnTextureChanged();
    partial void OnBloodChanging(System.Nullable<bool> value);
    partial void OnBloodChanged();
    partial void OnHeartChanging(System.Nullable<bool> value);
    partial void OnHeartChanged();
    partial void OnNeurologyChanging(System.Nullable<bool> value);
    partial void OnNeurologyChanged();
    partial void OnSkinChanging(System.Nullable<bool> value);
    partial void OnSkinChanged();
    partial void OnMouthChanging(System.Nullable<bool> value);
    partial void OnMouthChanged();
    partial void OnInfectiousChanging(System.Nullable<bool> value);
    partial void OnInfectiousChanged();
    partial void OnNutritionChanging(System.Nullable<bool> value);
    partial void OnNutritionChanged();
    partial void OnWomenChanging(System.Nullable<bool> value);
    partial void OnWomenChanged();
    partial void OnglandsChanging(System.Nullable<bool> value);
    partial void OnglandsChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public MedicalRecord()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I", DbType="Bit")]
		public System.Nullable<bool> I
		{
			get
			{
				return this._I;
			}
			set
			{
				if ((this._I != value))
				{
					this.OnIChanging(value);
					this.SendPropertyChanging();
					this._I = value;
					this.SendPropertyChanged("I");
					this.OnIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="Bit")]
		public System.Nullable<bool> C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="Bit")]
		public System.Nullable<bool> B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allergy", DbType="Bit")]
		public System.Nullable<bool> Allergy
		{
			get
			{
				return this._Allergy;
			}
			set
			{
				if ((this._Allergy != value))
				{
					this.OnAllergyChanging(value);
					this.SendPropertyChanging();
					this._Allergy = value;
					this.SendPropertyChanged("Allergy");
					this.OnAllergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surgery", DbType="Bit")]
		public System.Nullable<bool> Surgery
		{
			get
			{
				return this._Surgery;
			}
			set
			{
				if ((this._Surgery != value))
				{
					this.OnSurgeryChanging(value);
					this.SendPropertyChanging();
					this._Surgery = value;
					this.SendPropertyChanged("Surgery");
					this.OnSurgeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lung", DbType="Bit")]
		public System.Nullable<bool> Lung
		{
			get
			{
				return this._Lung;
			}
			set
			{
				if ((this._Lung != value))
				{
					this.OnLungChanging(value);
					this.SendPropertyChanging();
					this._Lung = value;
					this.SendPropertyChanged("Lung");
					this.OnLungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liver", DbType="Bit")]
		public System.Nullable<bool> Liver
		{
			get
			{
				return this._Liver;
			}
			set
			{
				if ((this._Liver != value))
				{
					this.OnLiverChanging(value);
					this.SendPropertyChanging();
					this._Liver = value;
					this.SendPropertyChanged("Liver");
					this.OnLiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urine", DbType="Bit")]
		public System.Nullable<bool> Urine
		{
			get
			{
				return this._Urine;
			}
			set
			{
				if ((this._Urine != value))
				{
					this.OnUrineChanging(value);
					this.SendPropertyChanging();
					this._Urine = value;
					this.SendPropertyChanged("Urine");
					this.OnUrineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="Bit")]
		public System.Nullable<bool> Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this.OnEyeChanging(value);
					this.SendPropertyChanging();
					this._Eye = value;
					this.SendPropertyChanged("Eye");
					this.OnEyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psychiatry", DbType="Bit")]
		public System.Nullable<bool> Psychiatry
		{
			get
			{
				return this._Psychiatry;
			}
			set
			{
				if ((this._Psychiatry != value))
				{
					this.OnPsychiatryChanging(value);
					this.SendPropertyChanging();
					this._Psychiatry = value;
					this.SendPropertyChanged("Psychiatry");
					this.OnPsychiatryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ear", DbType="Bit")]
		public System.Nullable<bool> Ear
		{
			get
			{
				return this._Ear;
			}
			set
			{
				if ((this._Ear != value))
				{
					this.OnEarChanging(value);
					this.SendPropertyChanging();
					this._Ear = value;
					this.SendPropertyChanged("Ear");
					this.OnEarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oncology", DbType="Bit")]
		public System.Nullable<bool> Oncology
		{
			get
			{
				return this._Oncology;
			}
			set
			{
				if ((this._Oncology != value))
				{
					this.OnOncologyChanging(value);
					this.SendPropertyChanging();
					this._Oncology = value;
					this.SendPropertyChanged("Oncology");
					this.OnOncologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accident", DbType="Bit")]
		public System.Nullable<bool> Accident
		{
			get
			{
				return this._Accident;
			}
			set
			{
				if ((this._Accident != value))
				{
					this.OnAccidentChanging(value);
					this.SendPropertyChanging();
					this._Accident = value;
					this.SendPropertyChanged("Accident");
					this.OnAccidentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genetic", DbType="Bit")]
		public System.Nullable<bool> Genetic
		{
			get
			{
				return this._Genetic;
			}
			set
			{
				if ((this._Genetic != value))
				{
					this.OnGeneticChanging(value);
					this.SendPropertyChanging();
					this._Genetic = value;
					this.SendPropertyChanged("Genetic");
					this.OnGeneticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Musculoskeletal", DbType="Bit")]
		public System.Nullable<bool> Musculoskeletal
		{
			get
			{
				return this._Musculoskeletal;
			}
			set
			{
				if ((this._Musculoskeletal != value))
				{
					this.OnMusculoskeletalChanging(value);
					this.SendPropertyChanging();
					this._Musculoskeletal = value;
					this.SendPropertyChanged("Musculoskeletal");
					this.OnMusculoskeletalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texture", DbType="Bit")]
		public System.Nullable<bool> Texture
		{
			get
			{
				return this._Texture;
			}
			set
			{
				if ((this._Texture != value))
				{
					this.OnTextureChanging(value);
					this.SendPropertyChanging();
					this._Texture = value;
					this.SendPropertyChanged("Texture");
					this.OnTextureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="Bit")]
		public System.Nullable<bool> Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heart", DbType="Bit")]
		public System.Nullable<bool> Heart
		{
			get
			{
				return this._Heart;
			}
			set
			{
				if ((this._Heart != value))
				{
					this.OnHeartChanging(value);
					this.SendPropertyChanging();
					this._Heart = value;
					this.SendPropertyChanged("Heart");
					this.OnHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neurology", DbType="Bit")]
		public System.Nullable<bool> Neurology
		{
			get
			{
				return this._Neurology;
			}
			set
			{
				if ((this._Neurology != value))
				{
					this.OnNeurologyChanging(value);
					this.SendPropertyChanging();
					this._Neurology = value;
					this.SendPropertyChanged("Neurology");
					this.OnNeurologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skin", DbType="Bit")]
		public System.Nullable<bool> Skin
		{
			get
			{
				return this._Skin;
			}
			set
			{
				if ((this._Skin != value))
				{
					this.OnSkinChanging(value);
					this.SendPropertyChanging();
					this._Skin = value;
					this.SendPropertyChanged("Skin");
					this.OnSkinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mouth", DbType="Bit")]
		public System.Nullable<bool> Mouth
		{
			get
			{
				return this._Mouth;
			}
			set
			{
				if ((this._Mouth != value))
				{
					this.OnMouthChanging(value);
					this.SendPropertyChanging();
					this._Mouth = value;
					this.SendPropertyChanged("Mouth");
					this.OnMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Infectious", DbType="Bit")]
		public System.Nullable<bool> Infectious
		{
			get
			{
				return this._Infectious;
			}
			set
			{
				if ((this._Infectious != value))
				{
					this.OnInfectiousChanging(value);
					this.SendPropertyChanging();
					this._Infectious = value;
					this.SendPropertyChanged("Infectious");
					this.OnInfectiousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nutrition", DbType="Bit")]
		public System.Nullable<bool> Nutrition
		{
			get
			{
				return this._Nutrition;
			}
			set
			{
				if ((this._Nutrition != value))
				{
					this.OnNutritionChanging(value);
					this.SendPropertyChanging();
					this._Nutrition = value;
					this.SendPropertyChanged("Nutrition");
					this.OnNutritionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Women", DbType="Bit")]
		public System.Nullable<bool> Women
		{
			get
			{
				return this._Women;
			}
			set
			{
				if ((this._Women != value))
				{
					this.OnWomenChanging(value);
					this.SendPropertyChanging();
					this._Women = value;
					this.SendPropertyChanged("Women");
					this.OnWomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_glands", DbType="Bit")]
		public System.Nullable<bool> glands
		{
			get
			{
				return this._glands;
			}
			set
			{
				if ((this._glands != value))
				{
					this.OnglandsChanging(value);
					this.SendPropertyChanging();
					this._glands = value;
					this.SendPropertyChanged("glands");
					this.OnglandsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_MedicalRecord", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.MedicalRecords.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.MedicalRecords.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MentalHealthHistory")]
	public partial class MentalHealthHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Date;
		
		private string _Expert;
		
		private string _PsychologicalTesting;
		
		private string _Result;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnExpertChanging(string value);
    partial void OnExpertChanged();
    partial void OnPsychologicalTestingChanging(string value);
    partial void OnPsychologicalTestingChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public MentalHealthHistory()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expert", DbType="NVarChar(50)")]
		public string Expert
		{
			get
			{
				return this._Expert;
			}
			set
			{
				if ((this._Expert != value))
				{
					this.OnExpertChanging(value);
					this.SendPropertyChanging();
					this._Expert = value;
					this.SendPropertyChanged("Expert");
					this.OnExpertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsychologicalTesting", DbType="NVarChar(100)")]
		public string PsychologicalTesting
		{
			get
			{
				return this._PsychologicalTesting;
			}
			set
			{
				if ((this._PsychologicalTesting != value))
				{
					this.OnPsychologicalTestingChanging(value);
					this.SendPropertyChanging();
					this._PsychologicalTesting = value;
					this.SendPropertyChanged("PsychologicalTesting");
					this.OnPsychologicalTestingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_MentalHealthHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.MentalHealthHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.MentalHealthHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModularServices")]
	public partial class ModularService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GsdID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<double> _K;
		
		private string _Name;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsdIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsdIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public ModularService()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsdID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsdID
		{
			get
			{
				return this._GsdID;
			}
			set
			{
				if ((this._GsdID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsdIDChanging(value);
					this.SendPropertyChanging();
					this._GsdID = value;
					this.SendPropertyChanged("GsdID");
					this.OnGsdIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_ModularService", Storage="_GivenServiceD", ThisKey="GsdID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.ModularServices.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.ModularServices.Add(this);
						this._GsdID = value.ID;
					}
					else
					{
						this._GsdID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ModularService", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ModularServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ModularServices.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NutritionHistory")]
	public partial class NutritionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private string _Date;
		
		private string _Nutritionist;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnNutritionistChanging(string value);
    partial void OnNutritionistChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public NutritionHistory()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nutritionist", DbType="NVarChar(50)")]
		public string Nutritionist
		{
			get
			{
				return this._Nutritionist;
			}
			set
			{
				if ((this._Nutritionist != value))
				{
					this.OnNutritionistChanging(value);
					this.SendPropertyChanging();
					this._Nutritionist = value;
					this.SendPropertyChanged("Nutritionist");
					this.OnNutritionistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_NutritionHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.NutritionHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.NutritionHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ONcall")]
	public partial class ONcall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private System.Nullable<int> _GroupID;
		
		private string _ONCall1;
		
		private string _PersonelORDoctor;
		
		private System.Nullable<int> _ShiftID;
		
		private string _Description;
		
		private string _History;
		
		private System.Nullable<bool> _Confirm;
		
		private string _ConfirmUser;
		
		private string _CreationDate;
		
		private string _CreationUser;
		
		private System.Nullable<System.Guid> _PersonGID;
		
		private string _Day;
		
		private bool _IsHoliday;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Shift> _Shift;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnONCall1Changing(string value);
    partial void OnONCall1Changed();
    partial void OnPersonelORDoctorChanging(string value);
    partial void OnPersonelORDoctorChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHistoryChanging(string value);
    partial void OnHistoryChanged();
    partial void OnConfirmChanging(System.Nullable<bool> value);
    partial void OnConfirmChanged();
    partial void OnConfirmUserChanging(string value);
    partial void OnConfirmUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(string value);
    partial void OnCreationUserChanged();
    partial void OnPersonGIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonGIDChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnIsHolidayChanging(bool value);
    partial void OnIsHolidayChanged();
    #endregion
		
		public ONcall()
		{
			this._Person = default(EntityRef<Person>);
			this._Shift = default(EntityRef<Shift>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Char(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ONCall", Storage="_ONCall1", DbType="NVarChar(50)")]
		public string ONCall1
		{
			get
			{
				return this._ONCall1;
			}
			set
			{
				if ((this._ONCall1 != value))
				{
					this.OnONCall1Changing(value);
					this.SendPropertyChanging();
					this._ONCall1 = value;
					this.SendPropertyChanged("ONCall1");
					this.OnONCall1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelORDoctor", DbType="NVarChar(50)")]
		public string PersonelORDoctor
		{
			get
			{
				return this._PersonelORDoctor;
			}
			set
			{
				if ((this._PersonelORDoctor != value))
				{
					this.OnPersonelORDoctorChanging(value);
					this.SendPropertyChanging();
					this._PersonelORDoctor = value;
					this.SendPropertyChanged("PersonelORDoctor");
					this.OnPersonelORDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Shift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_History", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string History
		{
			get
			{
				return this._History;
			}
			set
			{
				if ((this._History != value))
				{
					this.OnHistoryChanging(value);
					this.SendPropertyChanging();
					this._History = value;
					this.SendPropertyChanged("History");
					this.OnHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
		public System.Nullable<bool> Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmUser", DbType="NVarChar(50)")]
		public string ConfirmUser
		{
			get
			{
				return this._ConfirmUser;
			}
			set
			{
				if ((this._ConfirmUser != value))
				{
					this.OnConfirmUserChanging(value);
					this.SendPropertyChanging();
					this._ConfirmUser = value;
					this.SendPropertyChanged("ConfirmUser");
					this.OnConfirmUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="NVarChar(50)")]
		public string CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonGID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonGID
		{
			get
			{
				return this._PersonGID;
			}
			set
			{
				if ((this._PersonGID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonGIDChanging(value);
					this.SendPropertyChanging();
					this._PersonGID = value;
					this.SendPropertyChanged("PersonGID");
					this.OnPersonGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(50)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHoliday", DbType="Bit NOT NULL")]
		public bool IsHoliday
		{
			get
			{
				return this._IsHoliday;
			}
			set
			{
				if ((this._IsHoliday != value))
				{
					this.OnIsHolidayChanging(value);
					this.SendPropertyChanging();
					this._IsHoliday = value;
					this.SendPropertyChanged("IsHoliday");
					this.OnIsHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ONcall", Storage="_Person", ThisKey="PersonGID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.ONcalls.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.ONcalls.Add(this);
						this._PersonGID = value.ID;
					}
					else
					{
						this._PersonGID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_ONcall", Storage="_Shift", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Shift Shift
		{
			get
			{
				return this._Shift.Entity;
			}
			set
			{
				Shift previousValue = this._Shift.Entity;
				if (((previousValue != value) 
							|| (this._Shift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift.Entity = null;
						previousValue.ONcalls.Remove(this);
					}
					this._Shift.Entity = value;
					if ((value != null))
					{
						value.ONcalls.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_ONcall", Storage="_Speciality", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.ONcalls.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.ONcalls.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Optometry")]
	public partial class Optometry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _SL;
		
		private string _SR;
		
		private string _CL;
		
		private string _CR;
		
		private string _AL;
		
		private string _AR;
		
		private string _SLReading;
		
		private string _SRREading;
		
		private string _CLReading;
		
		private string _CRReading;
		
		private string _ALReading;
		
		private string _ARReading;
		
		private string _FarPD;
		
		private string _NearPD;
		
		private System.Nullable<bool> _Strabinums;
		
		private System.Nullable<bool> _Amblyopia;
		
		private System.Nullable<bool> _MinusAdd;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnSLChanging(string value);
    partial void OnSLChanged();
    partial void OnSRChanging(string value);
    partial void OnSRChanged();
    partial void OnCLChanging(string value);
    partial void OnCLChanged();
    partial void OnCRChanging(string value);
    partial void OnCRChanged();
    partial void OnALChanging(string value);
    partial void OnALChanged();
    partial void OnARChanging(string value);
    partial void OnARChanged();
    partial void OnSLReadingChanging(string value);
    partial void OnSLReadingChanged();
    partial void OnSRREadingChanging(string value);
    partial void OnSRREadingChanged();
    partial void OnCLReadingChanging(string value);
    partial void OnCLReadingChanged();
    partial void OnCRReadingChanging(string value);
    partial void OnCRReadingChanged();
    partial void OnALReadingChanging(string value);
    partial void OnALReadingChanged();
    partial void OnARReadingChanging(string value);
    partial void OnARReadingChanged();
    partial void OnFarPDChanging(string value);
    partial void OnFarPDChanged();
    partial void OnNearPDChanging(string value);
    partial void OnNearPDChanged();
    partial void OnStrabinumsChanging(System.Nullable<bool> value);
    partial void OnStrabinumsChanged();
    partial void OnAmblyopiaChanging(System.Nullable<bool> value);
    partial void OnAmblyopiaChanged();
    partial void OnMinusAddChanging(System.Nullable<bool> value);
    partial void OnMinusAddChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Optometry()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="NVarChar(10)")]
		public string SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SR", DbType="NVarChar(10)")]
		public string SR
		{
			get
			{
				return this._SR;
			}
			set
			{
				if ((this._SR != value))
				{
					this.OnSRChanging(value);
					this.SendPropertyChanging();
					this._SR = value;
					this.SendPropertyChanged("SR");
					this.OnSRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CL", DbType="NVarChar(10)")]
		public string CL
		{
			get
			{
				return this._CL;
			}
			set
			{
				if ((this._CL != value))
				{
					this.OnCLChanging(value);
					this.SendPropertyChanging();
					this._CL = value;
					this.SendPropertyChanged("CL");
					this.OnCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CR", DbType="NVarChar(10)")]
		public string CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this.OnCRChanging(value);
					this.SendPropertyChanging();
					this._CR = value;
					this.SendPropertyChanged("CR");
					this.OnCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AL", DbType="NVarChar(10)")]
		public string AL
		{
			get
			{
				return this._AL;
			}
			set
			{
				if ((this._AL != value))
				{
					this.OnALChanging(value);
					this.SendPropertyChanging();
					this._AL = value;
					this.SendPropertyChanged("AL");
					this.OnALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AR", DbType="NVarChar(10)")]
		public string AR
		{
			get
			{
				return this._AR;
			}
			set
			{
				if ((this._AR != value))
				{
					this.OnARChanging(value);
					this.SendPropertyChanging();
					this._AR = value;
					this.SendPropertyChanged("AR");
					this.OnARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLReading", DbType="NVarChar(10)")]
		public string SLReading
		{
			get
			{
				return this._SLReading;
			}
			set
			{
				if ((this._SLReading != value))
				{
					this.OnSLReadingChanging(value);
					this.SendPropertyChanging();
					this._SLReading = value;
					this.SendPropertyChanged("SLReading");
					this.OnSLReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRREading", DbType="NVarChar(10)")]
		public string SRREading
		{
			get
			{
				return this._SRREading;
			}
			set
			{
				if ((this._SRREading != value))
				{
					this.OnSRREadingChanging(value);
					this.SendPropertyChanging();
					this._SRREading = value;
					this.SendPropertyChanged("SRREading");
					this.OnSRREadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLReading", DbType="NVarChar(10)")]
		public string CLReading
		{
			get
			{
				return this._CLReading;
			}
			set
			{
				if ((this._CLReading != value))
				{
					this.OnCLReadingChanging(value);
					this.SendPropertyChanging();
					this._CLReading = value;
					this.SendPropertyChanged("CLReading");
					this.OnCLReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRReading", DbType="NVarChar(10)")]
		public string CRReading
		{
			get
			{
				return this._CRReading;
			}
			set
			{
				if ((this._CRReading != value))
				{
					this.OnCRReadingChanging(value);
					this.SendPropertyChanging();
					this._CRReading = value;
					this.SendPropertyChanged("CRReading");
					this.OnCRReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALReading", DbType="NVarChar(10)")]
		public string ALReading
		{
			get
			{
				return this._ALReading;
			}
			set
			{
				if ((this._ALReading != value))
				{
					this.OnALReadingChanging(value);
					this.SendPropertyChanging();
					this._ALReading = value;
					this.SendPropertyChanged("ALReading");
					this.OnALReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARReading", DbType="NVarChar(10)")]
		public string ARReading
		{
			get
			{
				return this._ARReading;
			}
			set
			{
				if ((this._ARReading != value))
				{
					this.OnARReadingChanging(value);
					this.SendPropertyChanging();
					this._ARReading = value;
					this.SendPropertyChanged("ARReading");
					this.OnARReadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FarPD", DbType="NVarChar(10)")]
		public string FarPD
		{
			get
			{
				return this._FarPD;
			}
			set
			{
				if ((this._FarPD != value))
				{
					this.OnFarPDChanging(value);
					this.SendPropertyChanging();
					this._FarPD = value;
					this.SendPropertyChanged("FarPD");
					this.OnFarPDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearPD", DbType="NVarChar(10)")]
		public string NearPD
		{
			get
			{
				return this._NearPD;
			}
			set
			{
				if ((this._NearPD != value))
				{
					this.OnNearPDChanging(value);
					this.SendPropertyChanging();
					this._NearPD = value;
					this.SendPropertyChanged("NearPD");
					this.OnNearPDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strabinums", DbType="Bit")]
		public System.Nullable<bool> Strabinums
		{
			get
			{
				return this._Strabinums;
			}
			set
			{
				if ((this._Strabinums != value))
				{
					this.OnStrabinumsChanging(value);
					this.SendPropertyChanging();
					this._Strabinums = value;
					this.SendPropertyChanged("Strabinums");
					this.OnStrabinumsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amblyopia", DbType="Bit")]
		public System.Nullable<bool> Amblyopia
		{
			get
			{
				return this._Amblyopia;
			}
			set
			{
				if ((this._Amblyopia != value))
				{
					this.OnAmblyopiaChanging(value);
					this.SendPropertyChanging();
					this._Amblyopia = value;
					this.SendPropertyChanged("Amblyopia");
					this.OnAmblyopiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinusAdd", DbType="Bit")]
		public System.Nullable<bool> MinusAdd
		{
			get
			{
				return this._MinusAdd;
			}
			set
			{
				if ((this._MinusAdd != value))
				{
					this.OnMinusAddChanging(value);
					this.SendPropertyChanging();
					this._MinusAdd = value;
					this.SendPropertyChanged("MinusAdd");
					this.OnMinusAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Optometry", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Optometry = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Optometry = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ReqDID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<System.Guid> _CompanyID;
		
		private System.Nullable<int> _Amount;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _CreatorUserFullName;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<RequestD> _RequestD;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnReqDIDChanging(System.Nullable<System.Guid> value);
    partial void OnReqDIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<System.Guid> value);
    partial void OnCompanyIDChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    #endregion
		
		public Order()
		{
			this._Company = default(EntityRef<Company>);
			this._RequestD = default(EntityRef<RequestD>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReqDID
		{
			get
			{
				return this._ReqDID;
			}
			set
			{
				if ((this._ReqDID != value))
				{
					if (this._RequestD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReqDIDChanging(value);
					this.SendPropertyChanging();
					this._ReqDID = value;
					this.SendPropertyChanged("ReqDID");
					this.OnReqDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(100)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Order", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestD_Order", Storage="_RequestD", ThisKey="ReqDID", OtherKey="ID", IsForeignKey=true)]
		public RequestD RequestD
		{
			get
			{
				return this._RequestD.Entity;
			}
			set
			{
				RequestD previousValue = this._RequestD.Entity;
				if (((previousValue != value) 
							|| (this._RequestD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestD.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._RequestD.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ReqDID = value.ID;
					}
					else
					{
						this._ReqDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RequestD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Order", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organs")]
	public partial class Organ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Organ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PacsDateCheck")]
	public partial class PacsDateCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public PacsDateCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParaClinicServiceHistory")]
	public partial class ParaClinicServiceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _PersonID;
		
		private System.Guid _ServiceID;
		
		private string _Date;
		
		private string _Comment;
		
		private string _Result;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _IsReq;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnServiceIDChanging(System.Guid value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnIsReqChanging(bool value);
    partial void OnIsReqChanged();
    #endregion
		
		public ParaClinicServiceHistory()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(100)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReq", DbType="Bit NOT NULL")]
		public bool IsReq
		{
			get
			{
				return this._IsReq;
			}
			set
			{
				if ((this._IsReq != value))
				{
					this.OnIsReqChanging(value);
					this.SendPropertyChanging();
					this._IsReq = value;
					this.SendPropertyChanged("IsReq");
					this.OnIsReqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ParaClinicServiceHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.ParaClinicServiceHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.ParaClinicServiceHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ParaClinicServiceHistory", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ParaClinicServiceHistories.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ParaClinicServiceHistories.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternD")]
	public partial class PatternD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PatternMID;
		
		private System.Nullable<System.Guid> _ServiceDID;
		
		private double _Amount;
		
		private EntityRef<PatternM> _PatternM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternMIDChanging(System.Nullable<int> value);
    partial void OnPatternMIDChanged();
    partial void OnServiceDIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceDIDChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public PatternD()
		{
			this._PatternM = default(EntityRef<PatternM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternMID", DbType="Int")]
		public System.Nullable<int> PatternMID
		{
			get
			{
				return this._PatternMID;
			}
			set
			{
				if ((this._PatternMID != value))
				{
					if (this._PatternM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternMIDChanging(value);
					this.SendPropertyChanging();
					this._PatternMID = value;
					this.SendPropertyChanged("PatternMID");
					this.OnPatternMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceDID
		{
			get
			{
				return this._ServiceDID;
			}
			set
			{
				if ((this._ServiceDID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceDIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceDID = value;
					this.SendPropertyChanged("ServiceDID");
					this.OnServiceDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternM", ThisKey="PatternMID", OtherKey="ID", IsForeignKey=true)]
		public PatternM PatternM
		{
			get
			{
				return this._PatternM.Entity;
			}
			set
			{
				PatternM previousValue = this._PatternM.Entity;
				if (((previousValue != value) 
							|| (this._PatternM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatternM.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._PatternM.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._PatternMID = value.ID;
					}
					else
					{
						this._PatternMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PatternM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_Service", ThisKey="ServiceDID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternDs.Add(this);
						this._ServiceDID = value.ID;
					}
					else
					{
						this._ServiceDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatternM")]
	public partial class PatternM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PatternNumber;
		
		private string _PatternName;
		
		private System.Nullable<System.Guid> _ServiceMID;
		
		private string _Date;
		
		private string _Time;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatternNumberChanging(int value);
    partial void OnPatternNumberChanged();
    partial void OnPatternNameChanging(string value);
    partial void OnPatternNameChanged();
    partial void OnServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceMIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public PatternM()
		{
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternNumber", DbType="Int NOT NULL")]
		public int PatternNumber
		{
			get
			{
				return this._PatternNumber;
			}
			set
			{
				if ((this._PatternNumber != value))
				{
					this.OnPatternNumberChanging(value);
					this.SendPropertyChanging();
					this._PatternNumber = value;
					this.SendPropertyChanged("PatternNumber");
					this.OnPatternNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternName", DbType="NVarChar(100)")]
		public string PatternName
		{
			get
			{
				return this._PatternName;
			}
			set
			{
				if ((this._PatternName != value))
				{
					this.OnPatternNameChanging(value);
					this.SendPropertyChanging();
					this._PatternName = value;
					this.SendPropertyChanged("PatternName");
					this.OnPatternNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceMID
		{
			get
			{
				return this._ServiceMID;
			}
			set
			{
				if ((this._ServiceMID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceMID = value;
					this.SendPropertyChanged("ServiceMID");
					this.OnServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatternM_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="PatternMID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_Service", ThisKey="ServiceMID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PatternMs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PatternMs.Add(this);
						this._ServiceMID = value.ID;
					}
					else
					{
						this._ServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.PatternM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private decimal _Price;
		
		private string _Date;
		
		private string _Type;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private bool _PayBack;
		
		private string _Description;
		
		private string _Time;
		
		private System.Nullable<long> _DossierID;
		
		private string _TransactionID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorFullName;
		
		private System.Nullable<int> _ModificatorUserID;
		
		private string _ModificatorFullName;
		
		private System.Nullable<System.Guid> _PayBackID;
		
		private int _SerialNumber;
		
		private string _PayBackType;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _InstallMent;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private string _GhabzCode;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<Payment> _Payment1;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnPayBackChanging(bool value);
    partial void OnPayBackChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnTransactionIDChanging(string value);
    partial void OnTransactionIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorFullNameChanging(string value);
    partial void OnCreatorFullNameChanged();
    partial void OnModificatorUserIDChanging(System.Nullable<int> value);
    partial void OnModificatorUserIDChanged();
    partial void OnModificatorFullNameChanging(string value);
    partial void OnModificatorFullNameChanged();
    partial void OnPayBackIDChanging(System.Nullable<System.Guid> value);
    partial void OnPayBackIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnPayBackTypeChanging(string value);
    partial void OnPayBackTypeChanged();
    partial void OnCaseNumberChanging(System.Nullable<int> value);
    partial void OnCaseNumberChanged();
    partial void OnInstallMentChanging(string value);
    partial void OnInstallMentChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnGhabzCodeChanging(string value);
    partial void OnGhabzCodeChanged();
    #endregion
		
		public Payment()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Dossier = default(EntityRef<Dossier>);
			this._Payment1 = default(EntityRef<Payment>);
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBack", DbType="Bit NOT NULL")]
		public bool PayBack
		{
			get
			{
				return this._PayBack;
			}
			set
			{
				if ((this._PayBack != value))
				{
					this.OnPayBackChanging(value);
					this.SendPropertyChanging();
					this._PayBack = value;
					this.SendPropertyChanged("PayBack");
					this.OnPayBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="NVarChar(50)")]
		public string TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorFullName", DbType="NVarChar(100)")]
		public string CreatorFullName
		{
			get
			{
				return this._CreatorFullName;
			}
			set
			{
				if ((this._CreatorFullName != value))
				{
					this.OnCreatorFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorFullName = value;
					this.SendPropertyChanged("CreatorFullName");
					this.OnCreatorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorUserID", DbType="Int")]
		public System.Nullable<int> ModificatorUserID
		{
			get
			{
				return this._ModificatorUserID;
			}
			set
			{
				if ((this._ModificatorUserID != value))
				{
					this.OnModificatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModificatorUserID = value;
					this.SendPropertyChanged("ModificatorUserID");
					this.OnModificatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificatorFullName", DbType="NVarChar(100)")]
		public string ModificatorFullName
		{
			get
			{
				return this._ModificatorFullName;
			}
			set
			{
				if ((this._ModificatorFullName != value))
				{
					this.OnModificatorFullNameChanging(value);
					this.SendPropertyChanging();
					this._ModificatorFullName = value;
					this.SendPropertyChanged("ModificatorFullName");
					this.OnModificatorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PayBackID
		{
			get
			{
				return this._PayBackID;
			}
			set
			{
				if ((this._PayBackID != value))
				{
					if (this._Payment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayBackIDChanging(value);
					this.SendPropertyChanging();
					this._PayBackID = value;
					this.SendPropertyChanged("PayBackID");
					this.OnPayBackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayBackType", DbType="NVarChar(20)")]
		public string PayBackType
		{
			get
			{
				return this._PayBackType;
			}
			set
			{
				if ((this._PayBackType != value))
				{
					this.OnPayBackTypeChanging(value);
					this.SendPropertyChanging();
					this._PayBackType = value;
					this.SendPropertyChanged("PayBackType");
					this.OnPayBackTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this.OnCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._CaseNumber = value;
					this.SendPropertyChanged("CaseNumber");
					this.OnCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallMent", DbType="NVarChar(50)")]
		public string InstallMent
		{
			get
			{
				return this._InstallMent;
			}
			set
			{
				if ((this._InstallMent != value))
				{
					this.OnInstallMentChanging(value);
					this.SendPropertyChanging();
					this._InstallMent = value;
					this.SendPropertyChanged("InstallMent");
					this.OnInstallMentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhabzCode", DbType="NVarChar(50)")]
		public string GhabzCode
		{
			get
			{
				return this._GhabzCode;
			}
			set
			{
				if ((this._GhabzCode != value))
				{
					this.OnGhabzCodeChanging(value);
					this.SendPropertyChanging();
					this._GhabzCode = value;
					this.SendPropertyChanged("GhabzCode");
					this.OnGhabzCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment", Storage="_Payments", ThisKey="ID", OtherKey="PayBackID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_Payment", Storage="_Dossier", ThisKey="DossierID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._DossierID = value.ID;
					}
					else
					{
						this._DossierID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Payment", Storage="_Payment1", ThisKey="PayBackID", OtherKey="ID", IsForeignKey=true)]
		public Payment Payment1
		{
			get
			{
				return this._Payment1.Entity;
			}
			set
			{
				Payment previousValue = this._Payment1.Entity;
				if (((previousValue != value) 
							|| (this._Payment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment1.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Payment1.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PayBackID = value.ID;
					}
					else
					{
						this._PayBackID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Payment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Payment", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Payment", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment1 = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Payment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Period")]
	public partial class Period : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _GsmID;
		
		private string _LastPeriodDate;
		
		private string _PeriodDuration;
		
		private string _AmountOfBleeding;
		
		private string _Breaks;
		
		private string _Comment;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUser;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsmIDChanging(System.Guid value);
    partial void OnGsmIDChanged();
    partial void OnLastPeriodDateChanging(string value);
    partial void OnLastPeriodDateChanged();
    partial void OnPeriodDurationChanging(string value);
    partial void OnPeriodDurationChanged();
    partial void OnAmountOfBleedingChanging(string value);
    partial void OnAmountOfBleedingChanged();
    partial void OnBreaksChanging(string value);
    partial void OnBreaksChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    #endregion
		
		public Period()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GsmID
		{
			get
			{
				return this._GsmID;
			}
			set
			{
				if ((this._GsmID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsmIDChanging(value);
					this.SendPropertyChanging();
					this._GsmID = value;
					this.SendPropertyChanged("GsmID");
					this.OnGsmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPeriodDate", DbType="NVarChar(10)")]
		public string LastPeriodDate
		{
			get
			{
				return this._LastPeriodDate;
			}
			set
			{
				if ((this._LastPeriodDate != value))
				{
					this.OnLastPeriodDateChanging(value);
					this.SendPropertyChanging();
					this._LastPeriodDate = value;
					this.SendPropertyChanged("LastPeriodDate");
					this.OnLastPeriodDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodDuration", DbType="NVarChar(50)")]
		public string PeriodDuration
		{
			get
			{
				return this._PeriodDuration;
			}
			set
			{
				if ((this._PeriodDuration != value))
				{
					this.OnPeriodDurationChanging(value);
					this.SendPropertyChanging();
					this._PeriodDuration = value;
					this.SendPropertyChanged("PeriodDuration");
					this.OnPeriodDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountOfBleeding", DbType="NVarChar(20)")]
		public string AmountOfBleeding
		{
			get
			{
				return this._AmountOfBleeding;
			}
			set
			{
				if ((this._AmountOfBleeding != value))
				{
					this.OnAmountOfBleedingChanging(value);
					this.SendPropertyChanging();
					this._AmountOfBleeding = value;
					this.SendPropertyChanged("AmountOfBleeding");
					this.OnAmountOfBleedingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breaks", DbType="NVarChar(20)")]
		public string Breaks
		{
			get
			{
				return this._Breaks;
			}
			set
			{
				if ((this._Breaks != value))
				{
					this.OnBreaksChanging(value);
					this.SendPropertyChanging();
					this._Breaks = value;
					this.SendPropertyChanged("Breaks");
					this.OnBreaksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Period", Storage="_GivenServiceM", ThisKey="GsmID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Periods.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Periods.Add(this);
						this._GsmID = value.ID;
					}
					else
					{
						this._GsmID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodicCalender")]
	public partial class PeriodicCalender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _InaccessibleCapacity;
		
		private string _FromDate;
		
		private string _ToDate;
		
		private string _FromClock;
		
		private string _ToClock;
		
		private System.Nullable<bool> _Shanbeh;
		
		private System.Nullable<bool> _YekShanbeh;
		
		private System.Nullable<bool> _DoShanbeh;
		
		private System.Nullable<bool> _SeShanbeh;
		
		private System.Nullable<bool> _ChaharShanbeh;
		
		private System.Nullable<bool> _PanjShanbeh;
		
		private System.Nullable<bool> _Jomeh;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnInaccessibleCapacityChanging(System.Nullable<int> value);
    partial void OnInaccessibleCapacityChanged();
    partial void OnFromDateChanging(string value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(string value);
    partial void OnToDateChanged();
    partial void OnFromClockChanging(string value);
    partial void OnFromClockChanged();
    partial void OnToClockChanging(string value);
    partial void OnToClockChanged();
    partial void OnShanbehChanging(System.Nullable<bool> value);
    partial void OnShanbehChanged();
    partial void OnYekShanbehChanging(System.Nullable<bool> value);
    partial void OnYekShanbehChanged();
    partial void OnDoShanbehChanging(System.Nullable<bool> value);
    partial void OnDoShanbehChanged();
    partial void OnSeShanbehChanging(System.Nullable<bool> value);
    partial void OnSeShanbehChanged();
    partial void OnChaharShanbehChanging(System.Nullable<bool> value);
    partial void OnChaharShanbehChanged();
    partial void OnPanjShanbehChanging(System.Nullable<bool> value);
    partial void OnPanjShanbehChanged();
    partial void OnJomehChanging(System.Nullable<bool> value);
    partial void OnJomehChanged();
    #endregion
		
		public PeriodicCalender()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Definition = default(EntityRef<Definition>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InaccessibleCapacity", DbType="Int")]
		public System.Nullable<int> InaccessibleCapacity
		{
			get
			{
				return this._InaccessibleCapacity;
			}
			set
			{
				if ((this._InaccessibleCapacity != value))
				{
					this.OnInaccessibleCapacityChanging(value);
					this.SendPropertyChanging();
					this._InaccessibleCapacity = value;
					this.SendPropertyChanged("InaccessibleCapacity");
					this.OnInaccessibleCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="NVarChar(10)")]
		public string FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="NVarChar(10)")]
		public string ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromClock", DbType="NVarChar(8)")]
		public string FromClock
		{
			get
			{
				return this._FromClock;
			}
			set
			{
				if ((this._FromClock != value))
				{
					this.OnFromClockChanging(value);
					this.SendPropertyChanging();
					this._FromClock = value;
					this.SendPropertyChanged("FromClock");
					this.OnFromClockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToClock", DbType="NVarChar(8)")]
		public string ToClock
		{
			get
			{
				return this._ToClock;
			}
			set
			{
				if ((this._ToClock != value))
				{
					this.OnToClockChanging(value);
					this.SendPropertyChanging();
					this._ToClock = value;
					this.SendPropertyChanged("ToClock");
					this.OnToClockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shanbeh", DbType="Bit")]
		public System.Nullable<bool> Shanbeh
		{
			get
			{
				return this._Shanbeh;
			}
			set
			{
				if ((this._Shanbeh != value))
				{
					this.OnShanbehChanging(value);
					this.SendPropertyChanging();
					this._Shanbeh = value;
					this.SendPropertyChanged("Shanbeh");
					this.OnShanbehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YekShanbeh", DbType="Bit")]
		public System.Nullable<bool> YekShanbeh
		{
			get
			{
				return this._YekShanbeh;
			}
			set
			{
				if ((this._YekShanbeh != value))
				{
					this.OnYekShanbehChanging(value);
					this.SendPropertyChanging();
					this._YekShanbeh = value;
					this.SendPropertyChanged("YekShanbeh");
					this.OnYekShanbehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoShanbeh", DbType="Bit")]
		public System.Nullable<bool> DoShanbeh
		{
			get
			{
				return this._DoShanbeh;
			}
			set
			{
				if ((this._DoShanbeh != value))
				{
					this.OnDoShanbehChanging(value);
					this.SendPropertyChanging();
					this._DoShanbeh = value;
					this.SendPropertyChanged("DoShanbeh");
					this.OnDoShanbehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeShanbeh", DbType="Bit")]
		public System.Nullable<bool> SeShanbeh
		{
			get
			{
				return this._SeShanbeh;
			}
			set
			{
				if ((this._SeShanbeh != value))
				{
					this.OnSeShanbehChanging(value);
					this.SendPropertyChanging();
					this._SeShanbeh = value;
					this.SendPropertyChanged("SeShanbeh");
					this.OnSeShanbehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaharShanbeh", DbType="Bit")]
		public System.Nullable<bool> ChaharShanbeh
		{
			get
			{
				return this._ChaharShanbeh;
			}
			set
			{
				if ((this._ChaharShanbeh != value))
				{
					this.OnChaharShanbehChanging(value);
					this.SendPropertyChanging();
					this._ChaharShanbeh = value;
					this.SendPropertyChanged("ChaharShanbeh");
					this.OnChaharShanbehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PanjShanbeh", DbType="Bit")]
		public System.Nullable<bool> PanjShanbeh
		{
			get
			{
				return this._PanjShanbeh;
			}
			set
			{
				if ((this._PanjShanbeh != value))
				{
					this.OnPanjShanbehChanging(value);
					this.SendPropertyChanging();
					this._PanjShanbeh = value;
					this.SendPropertyChanged("PanjShanbeh");
					this.OnPanjShanbehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jomeh", DbType="Bit")]
		public System.Nullable<bool> Jomeh
		{
			get
			{
				return this._Jomeh;
			}
			set
			{
				if ((this._Jomeh != value))
				{
					this.OnJomehChanging(value);
					this.SendPropertyChanging();
					this._Jomeh = value;
					this.SendPropertyChanged("Jomeh");
					this.OnJomehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicCalender_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PeriodicCalendeID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicCalender_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="PeriodicCalenderID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_PeriodicCalender", Storage="_Definition", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.PeriodicCalenders.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.PeriodicCalenders.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_PeriodicCalender", Storage="_ServiceCategory", ThisKey="ServiceCategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.PeriodicCalenders.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.PeriodicCalenders.Add(this);
						this._ServiceCategoryID = value.ID;
					}
					else
					{
						this._ServiceCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicCalender = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicCalender = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicCalender = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.PeriodicCalender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _IDInt;
		
		private string _MedicalID;
		
		private string _FamilyNumber;
		
		private System.Nullable<System.Guid> _FamilyDoctor;
		
		private System.Nullable<System.Guid> _FamilyNurse;
		
		private System.Nullable<System.Guid> _FDDepartment;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _IdentityNumber;
		
		private string _IdentityPlace;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _BirthPlace;
		
		private string _Phone;
		
		private string _CellularPhone;
		
		private string _WorkPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Address;
		
		private string _WorkAddress;
		
		private string _InsuranceName;
		
		private string _InsuranceNo;
		
		private string _Education;
		
		private string _Comment;
		
		private string _MaritalStatus;
		
		private string _Religion;
		
		private string _CurrentJob;
		
		private string _BloodType;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _Barcode;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _BookletExpireDate;
		
		private bool _AllowInstallment;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		private bool _Death;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private string _DialectLanguage;
		
		private bool _Forieng;
		
		private string _Nationality;
		
		private string _PassportNumber;
		
		private System.Nullable<System.DateTime> _TS;
		
		private System.Nullable<System.DateTime> _InsertTime;
		
		private string _FamilyHealthNurse;
		
		private string _FamilyHealthResponsible;
		
		private string _GrowthMonitorExpert;
		
		private string _MentalExpert;
		
		private string _NutritionExpert;
		
		private System.Nullable<bool> _NotificationWhiteList;
		
		private string _DeviceID;
		
		private string _DevicePusheID;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<DrugAllergy> _DrugAllergies;
		
		private EntitySet<DrugHistory> _DrugHistories;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<MentalHealthHistory> _MentalHealthHistories;
		
		private EntitySet<NutritionHistory> _NutritionHistories;
		
		private EntitySet<ONcall> _ONcalls;
		
		private EntitySet<ParaClinicServiceHistory> _ParaClinicServiceHistories;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
		private EntitySet<PersonDisease> _PersonDiseases;
		
		private EntitySet<PhysiotherapyOrderM> _PhysiotherapyOrderMs;
		
		private EntitySet<PreventingDeviceRecive> _PreventingDeviceRecives;
		
		private EntitySet<PreventingStartAndEnd> _PreventingStartAndEnds;
		
		private EntitySet<Recall> _Recalls;
		
		private EntitySet<RiskFactorHistory> _RiskFactorHistories;
		
		private EntitySet<RVCauseOfReferral> _RVCauseOfReferrals;
		
		private EntitySet<RVInitialInterview> _RVInitialInterviews;
		
		private EntitySet<RVPersonalInformation> _RVPersonalInformations;
		
		private EntitySet<RVPsychiatricIntervention> _RVPsychiatricInterventions;
		
		private EntitySet<RVRecordsOfIntervention> _RVRecordsOfInterventions;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<SurgeyHistory> _SurgeyHistories;
		
		private EntitySet<TestHistory> _TestHistories;
		
		private EntitySet<Triage> _Triages;
		
		private EntitySet<TriageCPR> _TriageCPRs;
		
		private EntitySet<TriageDossierEM> _TriageDossierEMs;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
		private EntitySet<TriageEMGAccident> _TriageEMGAccidents;
		
		private EntitySet<TriageEMGincident> _TriageEMGincidents;
		
		private EntitySet<TriageEMGkhodkoshi> _TriageEMGkhodkoshis;
		
		private EntitySet<VisitHistory> _VisitHistories;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Person> _Person1;
		
		private EntityRef<Person> _Person2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFamilyNumberChanging(string value);
    partial void OnFamilyNumberChanged();
    partial void OnFamilyDoctorChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyDoctorChanged();
    partial void OnFamilyNurseChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyNurseChanged();
    partial void OnFDDepartmentChanging(System.Nullable<System.Guid> value);
    partial void OnFDDepartmentChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnPersonalCodeChanging(string value);
    partial void OnPersonalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnIdentityPlaceChanging(string value);
    partial void OnIdentityPlaceChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellularPhoneChanging(string value);
    partial void OnCellularPhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkAddressChanging(string value);
    partial void OnWorkAddressChanged();
    partial void OnInsuranceNameChanging(string value);
    partial void OnInsuranceNameChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnBarcodeChanging(System.Nullable<int> value);
    partial void OnBarcodeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAllowInstallmentChanging(bool value);
    partial void OnAllowInstallmentChanged();
    partial void OnNotUseChanging(bool value);
    partial void OnNotUseChanged();
    partial void OnVisibelChanging(bool value);
    partial void OnVisibelChanged();
    partial void OnDeathChanging(bool value);
    partial void OnDeathChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDialectLanguageChanging(string value);
    partial void OnDialectLanguageChanged();
    partial void OnForiengChanging(bool value);
    partial void OnForiengChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnTSChanging(System.Nullable<System.DateTime> value);
    partial void OnTSChanged();
    partial void OnInsertTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertTimeChanged();
    partial void OnFamilyHealthNurseChanging(string value);
    partial void OnFamilyHealthNurseChanged();
    partial void OnFamilyHealthResponsibleChanging(string value);
    partial void OnFamilyHealthResponsibleChanged();
    partial void OnGrowthMonitorExpertChanging(string value);
    partial void OnGrowthMonitorExpertChanged();
    partial void OnMentalExpertChanging(string value);
    partial void OnMentalExpertChanged();
    partial void OnNutritionExpertChanging(string value);
    partial void OnNutritionExpertChanged();
    partial void OnNotificationWhiteListChanging(System.Nullable<bool> value);
    partial void OnNotificationWhiteListChanged();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnDevicePusheIDChanging(string value);
    partial void OnDevicePusheIDChanged();
    #endregion
		
		public Person()
		{
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._DrugAllergies = new EntitySet<DrugAllergy>(new Action<DrugAllergy>(this.attach_DrugAllergies), new Action<DrugAllergy>(this.detach_DrugAllergies));
			this._DrugHistories = new EntitySet<DrugHistory>(new Action<DrugHistory>(this.attach_DrugHistories), new Action<DrugHistory>(this.detach_DrugHistories));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._MentalHealthHistories = new EntitySet<MentalHealthHistory>(new Action<MentalHealthHistory>(this.attach_MentalHealthHistories), new Action<MentalHealthHistory>(this.detach_MentalHealthHistories));
			this._NutritionHistories = new EntitySet<NutritionHistory>(new Action<NutritionHistory>(this.attach_NutritionHistories), new Action<NutritionHistory>(this.detach_NutritionHistories));
			this._ONcalls = new EntitySet<ONcall>(new Action<ONcall>(this.attach_ONcalls), new Action<ONcall>(this.detach_ONcalls));
			this._ParaClinicServiceHistories = new EntitySet<ParaClinicServiceHistory>(new Action<ParaClinicServiceHistory>(this.attach_ParaClinicServiceHistories), new Action<ParaClinicServiceHistory>(this.detach_ParaClinicServiceHistories));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			this._PersonDiseases = new EntitySet<PersonDisease>(new Action<PersonDisease>(this.attach_PersonDiseases), new Action<PersonDisease>(this.detach_PersonDiseases));
			this._PhysiotherapyOrderMs = new EntitySet<PhysiotherapyOrderM>(new Action<PhysiotherapyOrderM>(this.attach_PhysiotherapyOrderMs), new Action<PhysiotherapyOrderM>(this.detach_PhysiotherapyOrderMs));
			this._PreventingDeviceRecives = new EntitySet<PreventingDeviceRecive>(new Action<PreventingDeviceRecive>(this.attach_PreventingDeviceRecives), new Action<PreventingDeviceRecive>(this.detach_PreventingDeviceRecives));
			this._PreventingStartAndEnds = new EntitySet<PreventingStartAndEnd>(new Action<PreventingStartAndEnd>(this.attach_PreventingStartAndEnds), new Action<PreventingStartAndEnd>(this.detach_PreventingStartAndEnds));
			this._Recalls = new EntitySet<Recall>(new Action<Recall>(this.attach_Recalls), new Action<Recall>(this.detach_Recalls));
			this._RiskFactorHistories = new EntitySet<RiskFactorHistory>(new Action<RiskFactorHistory>(this.attach_RiskFactorHistories), new Action<RiskFactorHistory>(this.detach_RiskFactorHistories));
			this._RVCauseOfReferrals = new EntitySet<RVCauseOfReferral>(new Action<RVCauseOfReferral>(this.attach_RVCauseOfReferrals), new Action<RVCauseOfReferral>(this.detach_RVCauseOfReferrals));
			this._RVInitialInterviews = new EntitySet<RVInitialInterview>(new Action<RVInitialInterview>(this.attach_RVInitialInterviews), new Action<RVInitialInterview>(this.detach_RVInitialInterviews));
			this._RVPersonalInformations = new EntitySet<RVPersonalInformation>(new Action<RVPersonalInformation>(this.attach_RVPersonalInformations), new Action<RVPersonalInformation>(this.detach_RVPersonalInformations));
			this._RVPsychiatricInterventions = new EntitySet<RVPsychiatricIntervention>(new Action<RVPsychiatricIntervention>(this.attach_RVPsychiatricInterventions), new Action<RVPsychiatricIntervention>(this.detach_RVPsychiatricInterventions));
			this._RVRecordsOfInterventions = new EntitySet<RVRecordsOfIntervention>(new Action<RVRecordsOfIntervention>(this.attach_RVRecordsOfInterventions), new Action<RVRecordsOfIntervention>(this.detach_RVRecordsOfInterventions));
			this._Staff = default(EntityRef<Staff>);
			this._SurgeyHistories = new EntitySet<SurgeyHistory>(new Action<SurgeyHistory>(this.attach_SurgeyHistories), new Action<SurgeyHistory>(this.detach_SurgeyHistories));
			this._TestHistories = new EntitySet<TestHistory>(new Action<TestHistory>(this.attach_TestHistories), new Action<TestHistory>(this.detach_TestHistories));
			this._Triages = new EntitySet<Triage>(new Action<Triage>(this.attach_Triages), new Action<Triage>(this.detach_Triages));
			this._TriageCPRs = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs), new Action<TriageCPR>(this.detach_TriageCPRs));
			this._TriageDossierEMs = new EntitySet<TriageDossierEM>(new Action<TriageDossierEM>(this.attach_TriageDossierEMs), new Action<TriageDossierEM>(this.detach_TriageDossierEMs));
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			this._TriageEMGAccidents = new EntitySet<TriageEMGAccident>(new Action<TriageEMGAccident>(this.attach_TriageEMGAccidents), new Action<TriageEMGAccident>(this.detach_TriageEMGAccidents));
			this._TriageEMGincidents = new EntitySet<TriageEMGincident>(new Action<TriageEMGincident>(this.attach_TriageEMGincidents), new Action<TriageEMGincident>(this.detach_TriageEMGincidents));
			this._TriageEMGkhodkoshis = new EntitySet<TriageEMGkhodkoshi>(new Action<TriageEMGkhodkoshi>(this.attach_TriageEMGkhodkoshis), new Action<TriageEMGkhodkoshi>(this.detach_TriageEMGkhodkoshis));
			this._VisitHistories = new EntitySet<VisitHistory>(new Action<VisitHistory>(this.attach_VisitHistories), new Action<VisitHistory>(this.detach_VisitHistories));
			this._Department = default(EntityRef<Department>);
			this._Person1 = default(EntityRef<Person>);
			this._Person2 = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNumber", DbType="NVarChar(10)")]
		public string FamilyNumber
		{
			get
			{
				return this._FamilyNumber;
			}
			set
			{
				if ((this._FamilyNumber != value))
				{
					this.OnFamilyNumberChanging(value);
					this.SendPropertyChanging();
					this._FamilyNumber = value;
					this.SendPropertyChanged("FamilyNumber");
					this.OnFamilyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDoctor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyDoctor
		{
			get
			{
				return this._FamilyDoctor;
			}
			set
			{
				if ((this._FamilyDoctor != value))
				{
					if (this._Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyDoctorChanging(value);
					this.SendPropertyChanging();
					this._FamilyDoctor = value;
					this.SendPropertyChanged("FamilyDoctor");
					this.OnFamilyDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNurse", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyNurse
		{
			get
			{
				return this._FamilyNurse;
			}
			set
			{
				if ((this._FamilyNurse != value))
				{
					if (this._Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyNurse = value;
					this.SendPropertyChanged("FamilyNurse");
					this.OnFamilyNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDDepartment", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FDDepartment
		{
			get
			{
				return this._FDDepartment;
			}
			set
			{
				if ((this._FDDepartment != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFDDepartmentChanging(value);
					this.SendPropertyChanging();
					this._FDDepartment = value;
					this.SendPropertyChanged("FDDepartment");
					this.OnFDDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this.OnPersonalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonalCode = value;
					this.SendPropertyChanged("PersonalCode");
					this.OnPersonalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this.OnIdentityPlaceChanging(value);
					this.SendPropertyChanging();
					this._IdentityPlace = value;
					this.SendPropertyChanged("IdentityPlace");
					this.OnIdentityPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellularPhone", DbType="NVarChar(25)")]
		public string CellularPhone
		{
			get
			{
				return this._CellularPhone;
			}
			set
			{
				if ((this._CellularPhone != value))
				{
					this.OnCellularPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellularPhone = value;
					this.SendPropertyChanged("CellularPhone");
					this.OnCellularPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAddress", DbType="NVarChar(300)")]
		public string WorkAddress
		{
			get
			{
				return this._WorkAddress;
			}
			set
			{
				if ((this._WorkAddress != value))
				{
					this.OnWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkAddress = value;
					this.SendPropertyChanged("WorkAddress");
					this.OnWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this.OnInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._InsuranceName = value;
					this.SendPropertyChanged("InsuranceName");
					this.OnInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(100)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(500)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(20)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Int")]
		public System.Nullable<int> Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInstallment", DbType="Bit NOT NULL")]
		public bool AllowInstallment
		{
			get
			{
				return this._AllowInstallment;
			}
			set
			{
				if ((this._AllowInstallment != value))
				{
					this.OnAllowInstallmentChanging(value);
					this.SendPropertyChanging();
					this._AllowInstallment = value;
					this.SendPropertyChanged("AllowInstallment");
					this.OnAllowInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this.OnNotUseChanging(value);
					this.SendPropertyChanging();
					this._NotUse = value;
					this.SendPropertyChanged("NotUse");
					this.OnNotUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this.OnVisibelChanging(value);
					this.SendPropertyChanging();
					this._Visibel = value;
					this.SendPropertyChanged("Visibel");
					this.OnVisibelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Death", DbType="Bit NOT NULL")]
		public bool Death
		{
			get
			{
				return this._Death;
			}
			set
			{
				if ((this._Death != value))
				{
					this.OnDeathChanging(value);
					this.SendPropertyChanging();
					this._Death = value;
					this.SendPropertyChanged("Death");
					this.OnDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NVarChar(8)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NVarChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectLanguage", DbType="NVarChar(50)")]
		public string DialectLanguage
		{
			get
			{
				return this._DialectLanguage;
			}
			set
			{
				if ((this._DialectLanguage != value))
				{
					this.OnDialectLanguageChanging(value);
					this.SendPropertyChanging();
					this._DialectLanguage = value;
					this.SendPropertyChanged("DialectLanguage");
					this.OnDialectLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forieng", DbType="Bit NOT NULL")]
		public bool Forieng
		{
			get
			{
				return this._Forieng;
			}
			set
			{
				if ((this._Forieng != value))
				{
					this.OnForiengChanging(value);
					this.SendPropertyChanging();
					this._Forieng = value;
					this.SendPropertyChanged("Forieng");
					this.OnForiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(50)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertTime", DbType="DateTime2")]
		public System.Nullable<System.DateTime> InsertTime
		{
			get
			{
				return this._InsertTime;
			}
			set
			{
				if ((this._InsertTime != value))
				{
					this.OnInsertTimeChanging(value);
					this.SendPropertyChanging();
					this._InsertTime = value;
					this.SendPropertyChanged("InsertTime");
					this.OnInsertTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyHealthNurse", DbType="NVarChar(150)")]
		public string FamilyHealthNurse
		{
			get
			{
				return this._FamilyHealthNurse;
			}
			set
			{
				if ((this._FamilyHealthNurse != value))
				{
					this.OnFamilyHealthNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyHealthNurse = value;
					this.SendPropertyChanged("FamilyHealthNurse");
					this.OnFamilyHealthNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyHealthResponsible", DbType="NVarChar(150)")]
		public string FamilyHealthResponsible
		{
			get
			{
				return this._FamilyHealthResponsible;
			}
			set
			{
				if ((this._FamilyHealthResponsible != value))
				{
					this.OnFamilyHealthResponsibleChanging(value);
					this.SendPropertyChanging();
					this._FamilyHealthResponsible = value;
					this.SendPropertyChanged("FamilyHealthResponsible");
					this.OnFamilyHealthResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthMonitorExpert", DbType="NVarChar(150)")]
		public string GrowthMonitorExpert
		{
			get
			{
				return this._GrowthMonitorExpert;
			}
			set
			{
				if ((this._GrowthMonitorExpert != value))
				{
					this.OnGrowthMonitorExpertChanging(value);
					this.SendPropertyChanging();
					this._GrowthMonitorExpert = value;
					this.SendPropertyChanged("GrowthMonitorExpert");
					this.OnGrowthMonitorExpertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MentalExpert", DbType="NVarChar(150)")]
		public string MentalExpert
		{
			get
			{
				return this._MentalExpert;
			}
			set
			{
				if ((this._MentalExpert != value))
				{
					this.OnMentalExpertChanging(value);
					this.SendPropertyChanging();
					this._MentalExpert = value;
					this.SendPropertyChanged("MentalExpert");
					this.OnMentalExpertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutritionExpert", DbType="NVarChar(150)")]
		public string NutritionExpert
		{
			get
			{
				return this._NutritionExpert;
			}
			set
			{
				if ((this._NutritionExpert != value))
				{
					this.OnNutritionExpertChanging(value);
					this.SendPropertyChanging();
					this._NutritionExpert = value;
					this.SendPropertyChanged("NutritionExpert");
					this.OnNutritionExpertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationWhiteList", DbType="Bit")]
		public System.Nullable<bool> NotificationWhiteList
		{
			get
			{
				return this._NotificationWhiteList;
			}
			set
			{
				if ((this._NotificationWhiteList != value))
				{
					this.OnNotificationWhiteListChanging(value);
					this.SendPropertyChanging();
					this._NotificationWhiteList = value;
					this.SendPropertyChanged("NotificationWhiteList");
					this.OnNotificationWhiteListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="NVarChar(30)")]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevicePusheID", DbType="NVarChar(30)")]
		public string DevicePusheID
		{
			get
			{
				return this._DevicePusheID;
			}
			set
			{
				if ((this._DevicePusheID != value))
				{
					this.OnDevicePusheIDChanging(value);
					this.SendPropertyChanging();
					this._DevicePusheID = value;
					this.SendPropertyChanged("DevicePusheID");
					this.OnDevicePusheIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugAllergy", Storage="_DrugAllergies", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugAllergy> DrugAllergies
		{
			get
			{
				return this._DrugAllergies;
			}
			set
			{
				this._DrugAllergies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_DrugHistory", Storage="_DrugHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<DrugHistory> DrugHistories
		{
			get
			{
				return this._DrugHistories;
			}
			set
			{
				this._DrugHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_MentalHealthHistory", Storage="_MentalHealthHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<MentalHealthHistory> MentalHealthHistories
		{
			get
			{
				return this._MentalHealthHistories;
			}
			set
			{
				this._MentalHealthHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_NutritionHistory", Storage="_NutritionHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<NutritionHistory> NutritionHistories
		{
			get
			{
				return this._NutritionHistories;
			}
			set
			{
				this._NutritionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ONcall", Storage="_ONcalls", ThisKey="ID", OtherKey="PersonGID")]
		public EntitySet<ONcall> ONcalls
		{
			get
			{
				return this._ONcalls;
			}
			set
			{
				this._ONcalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ParaClinicServiceHistory", Storage="_ParaClinicServiceHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<ParaClinicServiceHistory> ParaClinicServiceHistories
		{
			get
			{
				return this._ParaClinicServiceHistories;
			}
			set
			{
				this._ParaClinicServiceHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Payment", Storage="_Payments", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Persons", ThisKey="ID", OtherKey="FamilyDoctor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="FamilyNurse")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonDisease", Storage="_PersonDiseases", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<PersonDisease> PersonDiseases
		{
			get
			{
				return this._PersonDiseases;
			}
			set
			{
				this._PersonDiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PhysiotherapyOrderM", Storage="_PhysiotherapyOrderMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<PhysiotherapyOrderM> PhysiotherapyOrderMs
		{
			get
			{
				return this._PhysiotherapyOrderMs;
			}
			set
			{
				this._PhysiotherapyOrderMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PreventingDeviceRecive", Storage="_PreventingDeviceRecives", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<PreventingDeviceRecive> PreventingDeviceRecives
		{
			get
			{
				return this._PreventingDeviceRecives;
			}
			set
			{
				this._PreventingDeviceRecives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PreventingStartAndEnd", Storage="_PreventingStartAndEnds", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<PreventingStartAndEnd> PreventingStartAndEnds
		{
			get
			{
				return this._PreventingStartAndEnds;
			}
			set
			{
				this._PreventingStartAndEnds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Recall", Storage="_Recalls", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<Recall> Recalls
		{
			get
			{
				return this._Recalls;
			}
			set
			{
				this._Recalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RiskFactorHistory", Storage="_RiskFactorHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<RiskFactorHistory> RiskFactorHistories
		{
			get
			{
				return this._RiskFactorHistories;
			}
			set
			{
				this._RiskFactorHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVCauseOfReferral", Storage="_RVCauseOfReferrals", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<RVCauseOfReferral> RVCauseOfReferrals
		{
			get
			{
				return this._RVCauseOfReferrals;
			}
			set
			{
				this._RVCauseOfReferrals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVInitialInterview", Storage="_RVInitialInterviews", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<RVInitialInterview> RVInitialInterviews
		{
			get
			{
				return this._RVInitialInterviews;
			}
			set
			{
				this._RVInitialInterviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVPersonalInformation", Storage="_RVPersonalInformations", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<RVPersonalInformation> RVPersonalInformations
		{
			get
			{
				return this._RVPersonalInformations;
			}
			set
			{
				this._RVPersonalInformations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVPsychiatricIntervention", Storage="_RVPsychiatricInterventions", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<RVPsychiatricIntervention> RVPsychiatricInterventions
		{
			get
			{
				return this._RVPsychiatricInterventions;
			}
			set
			{
				this._RVPsychiatricInterventions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVRecordsOfIntervention", Storage="_RVRecordsOfInterventions", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<RVRecordsOfIntervention> RVRecordsOfInterventions
		{
			get
			{
				return this._RVRecordsOfInterventions;
			}
			set
			{
				this._RVRecordsOfInterventions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_SurgeyHistory", Storage="_SurgeyHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<SurgeyHistory> SurgeyHistories
		{
			get
			{
				return this._SurgeyHistories;
			}
			set
			{
				this._SurgeyHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TestHistory", Storage="_TestHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<TestHistory> TestHistories
		{
			get
			{
				return this._TestHistories;
			}
			set
			{
				this._TestHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Triage", Storage="_Triages", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<Triage> Triages
		{
			get
			{
				return this._Triages;
			}
			set
			{
				this._Triages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageCPR", Storage="_TriageCPRs", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageCPR> TriageCPRs
		{
			get
			{
				return this._TriageCPRs;
			}
			set
			{
				this._TriageCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageDossierEM", Storage="_TriageDossierEMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<TriageDossierEM> TriageDossierEMs
		{
			get
			{
				return this._TriageDossierEMs;
			}
			set
			{
				this._TriageDossierEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGAccident", Storage="_TriageEMGAccidents", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEMGAccident> TriageEMGAccidents
		{
			get
			{
				return this._TriageEMGAccidents;
			}
			set
			{
				this._TriageEMGAccidents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGincident", Storage="_TriageEMGincidents", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEMGincident> TriageEMGincidents
		{
			get
			{
				return this._TriageEMGincidents;
			}
			set
			{
				this._TriageEMGincidents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGkhodkoshi", Storage="_TriageEMGkhodkoshis", ThisKey="ID", OtherKey="IDPerson")]
		public EntitySet<TriageEMGkhodkoshi> TriageEMGkhodkoshis
		{
			get
			{
				return this._TriageEMGkhodkoshis;
			}
			set
			{
				this._TriageEMGkhodkoshis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_VisitHistory", Storage="_VisitHistories", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<VisitHistory> VisitHistories
		{
			get
			{
				return this._VisitHistories;
			}
			set
			{
				this._VisitHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Person", Storage="_Department", ThisKey="FDDepartment", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FDDepartment = value.ID;
					}
					else
					{
						this._FDDepartment = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Person1", ThisKey="FamilyDoctor", OtherKey="ID", IsForeignKey=true)]
		public Person Person1
		{
			get
			{
				return this._Person1.Entity;
			}
			set
			{
				Person previousValue = this._Person1.Entity;
				if (((previousValue != value) 
							|| (this._Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person1.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Person1.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FamilyDoctor = value.ID;
					}
					else
					{
						this._FamilyDoctor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Person2", ThisKey="FamilyNurse", OtherKey="ID", IsForeignKey=true)]
		public Person Person2
		{
			get
			{
				return this._Person2.Entity;
			}
			set
			{
				Person previousValue = this._Person2.Entity;
				if (((previousValue != value) 
							|| (this._Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person2.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._Person2.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._FamilyNurse = value.ID;
					}
					else
					{
						this._FamilyNurse = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_MentalHealthHistories(MentalHealthHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_MentalHealthHistories(MentalHealthHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_NutritionHistories(NutritionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_NutritionHistories(NutritionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_ONcalls(ONcall entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_ONcalls(ONcall entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_ParaClinicServiceHistories(ParaClinicServiceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_ParaClinicServiceHistories(ParaClinicServiceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = null;
		}
		
		private void attach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PhysiotherapyOrderMs(PhysiotherapyOrderM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PhysiotherapyOrderMs(PhysiotherapyOrderM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PreventingDeviceRecives(PreventingDeviceRecive entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PreventingDeviceRecives(PreventingDeviceRecive entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PreventingStartAndEnds(PreventingStartAndEnd entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PreventingStartAndEnds(PreventingStartAndEnd entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_RiskFactorHistories(RiskFactorHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_RiskFactorHistories(RiskFactorHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_RVCauseOfReferrals(RVCauseOfReferral entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_RVCauseOfReferrals(RVCauseOfReferral entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_RVInitialInterviews(RVInitialInterview entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_RVInitialInterviews(RVInitialInterview entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_RVPersonalInformations(RVPersonalInformation entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_RVPersonalInformations(RVPersonalInformation entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_RVPsychiatricInterventions(RVPsychiatricIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_RVPsychiatricInterventions(RVPsychiatricIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_RVRecordsOfInterventions(RVRecordsOfIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_RVRecordsOfInterventions(RVRecordsOfIntervention entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_SurgeyHistories(SurgeyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_SurgeyHistories(SurgeyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TestHistories(TestHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TestHistories(TestHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Triages(Triage entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageDossierEMs(TriageDossierEM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEMGAccidents(TriageEMGAccident entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEMGAccidents(TriageEMGAccident entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEMGincidents(TriageEMGincident entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEMGincidents(TriageEMGincident entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_TriageEMGkhodkoshis(TriageEMGkhodkoshi entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_TriageEMGkhodkoshis(TriageEMGkhodkoshi entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_VisitHistories(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_VisitHistories(VisitHistory entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonDisease")]
	public partial class PersonDisease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<int> _Disease;
		
		private string _DateOfDiscovery;
		
		private System.Nullable<System.Guid> _DoctorDiagnostic;
		
		private bool _Referred;
		
		private string _TypeOfTreatment;
		
		private string _TimeOfTreatment;
		
		private bool _FamilyHistory;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<SpecialDisease> _SpecialDisease;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnDiseaseChanging(System.Nullable<int> value);
    partial void OnDiseaseChanged();
    partial void OnDateOfDiscoveryChanging(string value);
    partial void OnDateOfDiscoveryChanged();
    partial void OnDoctorDiagnosticChanging(System.Nullable<System.Guid> value);
    partial void OnDoctorDiagnosticChanged();
    partial void OnReferredChanging(bool value);
    partial void OnReferredChanged();
    partial void OnTypeOfTreatmentChanging(string value);
    partial void OnTypeOfTreatmentChanged();
    partial void OnTimeOfTreatmentChanging(string value);
    partial void OnTimeOfTreatmentChanged();
    partial void OnFamilyHistoryChanging(bool value);
    partial void OnFamilyHistoryChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public PersonDisease()
		{
			this._Person = default(EntityRef<Person>);
			this._SpecialDisease = default(EntityRef<SpecialDisease>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disease", DbType="Int")]
		public System.Nullable<int> Disease
		{
			get
			{
				return this._Disease;
			}
			set
			{
				if ((this._Disease != value))
				{
					if (this._SpecialDisease.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiseaseChanging(value);
					this.SendPropertyChanging();
					this._Disease = value;
					this.SendPropertyChanged("Disease");
					this.OnDiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfDiscovery", DbType="NVarChar(10)")]
		public string DateOfDiscovery
		{
			get
			{
				return this._DateOfDiscovery;
			}
			set
			{
				if ((this._DateOfDiscovery != value))
				{
					this.OnDateOfDiscoveryChanging(value);
					this.SendPropertyChanging();
					this._DateOfDiscovery = value;
					this.SendPropertyChanged("DateOfDiscovery");
					this.OnDateOfDiscoveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDiagnostic", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DoctorDiagnostic
		{
			get
			{
				return this._DoctorDiagnostic;
			}
			set
			{
				if ((this._DoctorDiagnostic != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoctorDiagnosticChanging(value);
					this.SendPropertyChanging();
					this._DoctorDiagnostic = value;
					this.SendPropertyChanged("DoctorDiagnostic");
					this.OnDoctorDiagnosticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referred", DbType="Bit NOT NULL")]
		public bool Referred
		{
			get
			{
				return this._Referred;
			}
			set
			{
				if ((this._Referred != value))
				{
					this.OnReferredChanging(value);
					this.SendPropertyChanging();
					this._Referred = value;
					this.SendPropertyChanged("Referred");
					this.OnReferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfTreatment", DbType="NVarChar(100)")]
		public string TypeOfTreatment
		{
			get
			{
				return this._TypeOfTreatment;
			}
			set
			{
				if ((this._TypeOfTreatment != value))
				{
					this.OnTypeOfTreatmentChanging(value);
					this.SendPropertyChanging();
					this._TypeOfTreatment = value;
					this.SendPropertyChanged("TypeOfTreatment");
					this.OnTypeOfTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfTreatment", DbType="NVarChar(50)")]
		public string TimeOfTreatment
		{
			get
			{
				return this._TimeOfTreatment;
			}
			set
			{
				if ((this._TimeOfTreatment != value))
				{
					this.OnTimeOfTreatmentChanging(value);
					this.SendPropertyChanging();
					this._TimeOfTreatment = value;
					this.SendPropertyChanged("TimeOfTreatment");
					this.OnTimeOfTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyHistory", DbType="Bit NOT NULL")]
		public bool FamilyHistory
		{
			get
			{
				return this._FamilyHistory;
			}
			set
			{
				if ((this._FamilyHistory != value))
				{
					this.OnFamilyHistoryChanging(value);
					this.SendPropertyChanging();
					this._FamilyHistory = value;
					this.SendPropertyChanged("FamilyHistory");
					this.OnFamilyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonDisease", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonDiseases.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonDiseases.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialDisease_PersonDisease", Storage="_SpecialDisease", ThisKey="Disease", OtherKey="ID", IsForeignKey=true)]
		public SpecialDisease SpecialDisease
		{
			get
			{
				return this._SpecialDisease.Entity;
			}
			set
			{
				SpecialDisease previousValue = this._SpecialDisease.Entity;
				if (((previousValue != value) 
							|| (this._SpecialDisease.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialDisease.Entity = null;
						previousValue.PersonDiseases.Remove(this);
					}
					this._SpecialDisease.Entity = value;
					if ((value != null))
					{
						value.PersonDiseases.Add(this);
						this._Disease = value.ID;
					}
					else
					{
						this._Disease = default(Nullable<int>);
					}
					this.SendPropertyChanged("SpecialDisease");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PersonDisease", Storage="_Staff", ThisKey="DoctorDiagnostic", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.PersonDiseases.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.PersonDiseases.Add(this);
						this._DoctorDiagnostic = value.ID;
					}
					else
					{
						this._DoctorDiagnostic = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pharmacy")]
	public partial class Pharmacy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _HIXCode;
		
		private string _PharmacyCode;
		
		private string _PostalCode;
		
		private string _Adreess;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.Guid> _TechnicalID;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _TechnicalID1;
		
		private bool _InWard;
		
		private bool _PharmacyStore;
		
		private bool _OtherPharmacy;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnPharmacyCodeChanging(string value);
    partial void OnPharmacyCodeChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnAdreessChanging(string value);
    partial void OnAdreessChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnTechnicalIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicalIDChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnTechnicalID1Changing(System.Nullable<int> value);
    partial void OnTechnicalID1Changed();
    partial void OnInWardChanging(bool value);
    partial void OnInWardChanged();
    partial void OnPharmacyStoreChanging(bool value);
    partial void OnPharmacyStoreChanged();
    partial void OnOtherPharmacyChanging(bool value);
    partial void OnOtherPharmacyChanged();
    #endregion
		
		public Pharmacy()
		{
			this._Department = default(EntityRef<Department>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyCode", DbType="NVarChar(50)")]
		public string PharmacyCode
		{
			get
			{
				return this._PharmacyCode;
			}
			set
			{
				if ((this._PharmacyCode != value))
				{
					this.OnPharmacyCodeChanging(value);
					this.SendPropertyChanging();
					this._PharmacyCode = value;
					this.SendPropertyChanged("PharmacyCode");
					this.OnPharmacyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adreess", DbType="NVarChar(200)")]
		public string Adreess
		{
			get
			{
				return this._Adreess;
			}
			set
			{
				if ((this._Adreess != value))
				{
					this.OnAdreessChanging(value);
					this.SendPropertyChanging();
					this._Adreess = value;
					this.SendPropertyChanged("Adreess");
					this.OnAdreessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicalID
		{
			get
			{
				return this._TechnicalID;
			}
			set
			{
				if ((this._TechnicalID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicalIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicalID = value;
					this.SendPropertyChanged("TechnicalID");
					this.OnTechnicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalID1", DbType="Int")]
		public System.Nullable<int> TechnicalID1
		{
			get
			{
				return this._TechnicalID1;
			}
			set
			{
				if ((this._TechnicalID1 != value))
				{
					this.OnTechnicalID1Changing(value);
					this.SendPropertyChanging();
					this._TechnicalID1 = value;
					this.SendPropertyChanged("TechnicalID1");
					this.OnTechnicalID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InWard", DbType="Bit NOT NULL")]
		public bool InWard
		{
			get
			{
				return this._InWard;
			}
			set
			{
				if ((this._InWard != value))
				{
					this.OnInWardChanging(value);
					this.SendPropertyChanging();
					this._InWard = value;
					this.SendPropertyChanged("InWard");
					this.OnInWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyStore", DbType="Bit NOT NULL")]
		public bool PharmacyStore
		{
			get
			{
				return this._PharmacyStore;
			}
			set
			{
				if ((this._PharmacyStore != value))
				{
					this.OnPharmacyStoreChanging(value);
					this.SendPropertyChanging();
					this._PharmacyStore = value;
					this.SendPropertyChanged("PharmacyStore");
					this.OnPharmacyStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherPharmacy", DbType="Bit NOT NULL")]
		public bool OtherPharmacy
		{
			get
			{
				return this._OtherPharmacy;
			}
			set
			{
				if ((this._OtherPharmacy != value))
				{
					this.OnOtherPharmacyChanging(value);
					this.SendPropertyChanging();
					this._OtherPharmacy = value;
					this.SendPropertyChanged("OtherPharmacy");
					this.OnOtherPharmacyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Pharmacy", Storage="_Department", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Pharmacy = null;
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Pharmacy = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Pharmacy", Storage="_Staff", ThisKey="TechnicalID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Pharmacies.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Pharmacies.Add(this);
						this._TechnicalID = value.ID;
					}
					else
					{
						this._TechnicalID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PharmacyDrug")]
	public partial class PharmacyDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PharmacyID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private bool _NIS;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _NISDate;
		
		private string _NISTime;
		
		private System.Nullable<int> _NISUserID;
		
		private string _NISUserIFullName;
		
		private System.Nullable<int> _NISLastModificator;
		
		private string _NISLastModificationDate;
		
		private string _NISLastModificationTime;
		
		private string _NISLastMUserIFullName;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPharmacyIDChanging(System.Nullable<System.Guid> value);
    partial void OnPharmacyIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnNISChanging(bool value);
    partial void OnNISChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnNISDateChanging(string value);
    partial void OnNISDateChanged();
    partial void OnNISTimeChanging(string value);
    partial void OnNISTimeChanged();
    partial void OnNISUserIDChanging(System.Nullable<int> value);
    partial void OnNISUserIDChanged();
    partial void OnNISUserIFullNameChanging(string value);
    partial void OnNISUserIFullNameChanged();
    partial void OnNISLastModificatorChanging(System.Nullable<int> value);
    partial void OnNISLastModificatorChanged();
    partial void OnNISLastModificationDateChanging(string value);
    partial void OnNISLastModificationDateChanged();
    partial void OnNISLastModificationTimeChanging(string value);
    partial void OnNISLastModificationTimeChanged();
    partial void OnNISLastMUserIFullNameChanging(string value);
    partial void OnNISLastMUserIFullNameChanged();
    #endregion
		
		public PharmacyDrug()
		{
			this._Department = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PharmacyID
		{
			get
			{
				return this._PharmacyID;
			}
			set
			{
				if ((this._PharmacyID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPharmacyIDChanging(value);
					this.SendPropertyChanging();
					this._PharmacyID = value;
					this.SendPropertyChanged("PharmacyID");
					this.OnPharmacyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit NOT NULL")]
		public bool NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISDate", DbType="NVarChar(10)")]
		public string NISDate
		{
			get
			{
				return this._NISDate;
			}
			set
			{
				if ((this._NISDate != value))
				{
					this.OnNISDateChanging(value);
					this.SendPropertyChanging();
					this._NISDate = value;
					this.SendPropertyChanged("NISDate");
					this.OnNISDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISTime", DbType="NVarChar(8)")]
		public string NISTime
		{
			get
			{
				return this._NISTime;
			}
			set
			{
				if ((this._NISTime != value))
				{
					this.OnNISTimeChanging(value);
					this.SendPropertyChanging();
					this._NISTime = value;
					this.SendPropertyChanged("NISTime");
					this.OnNISTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISUserID", DbType="Int")]
		public System.Nullable<int> NISUserID
		{
			get
			{
				return this._NISUserID;
			}
			set
			{
				if ((this._NISUserID != value))
				{
					this.OnNISUserIDChanging(value);
					this.SendPropertyChanging();
					this._NISUserID = value;
					this.SendPropertyChanged("NISUserID");
					this.OnNISUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISUserIFullName", DbType="NVarChar(50)")]
		public string NISUserIFullName
		{
			get
			{
				return this._NISUserIFullName;
			}
			set
			{
				if ((this._NISUserIFullName != value))
				{
					this.OnNISUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._NISUserIFullName = value;
					this.SendPropertyChanged("NISUserIFullName");
					this.OnNISUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastModificator", DbType="Int")]
		public System.Nullable<int> NISLastModificator
		{
			get
			{
				return this._NISLastModificator;
			}
			set
			{
				if ((this._NISLastModificator != value))
				{
					this.OnNISLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._NISLastModificator = value;
					this.SendPropertyChanged("NISLastModificator");
					this.OnNISLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastModificationDate", DbType="NVarChar(10)")]
		public string NISLastModificationDate
		{
			get
			{
				return this._NISLastModificationDate;
			}
			set
			{
				if ((this._NISLastModificationDate != value))
				{
					this.OnNISLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._NISLastModificationDate = value;
					this.SendPropertyChanged("NISLastModificationDate");
					this.OnNISLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastModificationTime", DbType="NVarChar(8)")]
		public string NISLastModificationTime
		{
			get
			{
				return this._NISLastModificationTime;
			}
			set
			{
				if ((this._NISLastModificationTime != value))
				{
					this.OnNISLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._NISLastModificationTime = value;
					this.SendPropertyChanged("NISLastModificationTime");
					this.OnNISLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NISLastMUserIFullName", DbType="NVarChar(50)")]
		public string NISLastMUserIFullName
		{
			get
			{
				return this._NISLastMUserIFullName;
			}
			set
			{
				if ((this._NISLastMUserIFullName != value))
				{
					this.OnNISLastMUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._NISLastMUserIFullName = value;
					this.SendPropertyChanged("NISLastMUserIFullName");
					this.OnNISLastMUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PharmacyDrug", Storage="_Department", ThisKey="PharmacyID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._PharmacyID = value.ID;
					}
					else
					{
						this._PharmacyID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PharmacyDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PharmacyDrugs.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhysiotherapyOrderD")]
	public partial class PhysiotherapyOrderD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PhysiotherapyOrderMID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Position;
		
		private string _Commnet;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<PhysiotherapyOrderM> _PhysiotherapyOrderM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPhysiotherapyOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysiotherapyOrderMIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnCommnetChanging(string value);
    partial void OnCommnetChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public PhysiotherapyOrderD()
		{
			this._PhysiotherapyOrderM = default(EntityRef<PhysiotherapyOrderM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysiotherapyOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysiotherapyOrderMID
		{
			get
			{
				return this._PhysiotherapyOrderMID;
			}
			set
			{
				if ((this._PhysiotherapyOrderMID != value))
				{
					if (this._PhysiotherapyOrderM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhysiotherapyOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysiotherapyOrderMID = value;
					this.SendPropertyChanged("PhysiotherapyOrderMID");
					this.OnPhysiotherapyOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commnet", DbType="NVarChar(MAX)")]
		public string Commnet
		{
			get
			{
				return this._Commnet;
			}
			set
			{
				if ((this._Commnet != value))
				{
					this.OnCommnetChanging(value);
					this.SendPropertyChanging();
					this._Commnet = value;
					this.SendPropertyChanged("Commnet");
					this.OnCommnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhysiotherapyOrderM_PhysiotherapyOrderD", Storage="_PhysiotherapyOrderM", ThisKey="PhysiotherapyOrderMID", OtherKey="ID", IsForeignKey=true)]
		public PhysiotherapyOrderM PhysiotherapyOrderM
		{
			get
			{
				return this._PhysiotherapyOrderM.Entity;
			}
			set
			{
				PhysiotherapyOrderM previousValue = this._PhysiotherapyOrderM.Entity;
				if (((previousValue != value) 
							|| (this._PhysiotherapyOrderM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhysiotherapyOrderM.Entity = null;
						previousValue.PhysiotherapyOrderDs.Remove(this);
					}
					this._PhysiotherapyOrderM.Entity = value;
					if ((value != null))
					{
						value.PhysiotherapyOrderDs.Add(this);
						this._PhysiotherapyOrderMID = value.ID;
					}
					else
					{
						this._PhysiotherapyOrderMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PhysiotherapyOrderM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PhysiotherapyOrderD", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.PhysiotherapyOrderDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.PhysiotherapyOrderDs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhysiotherapyOrderM")]
	public partial class PhysiotherapyOrderM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _RequestedTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private string _Date;
		
		private string _Time;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<PhysiotherapyOrderD> _PhysiotherapyOrderDs;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public PhysiotherapyOrderM()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._PhysiotherapyOrderDs = new EntitySet<PhysiotherapyOrderD>(new Action<PhysiotherapyOrderD>(this.attach_PhysiotherapyOrderDs), new Action<PhysiotherapyOrderD>(this.detach_PhysiotherapyOrderDs));
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhysiotherapyOrderM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PhysioOrderMID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhysiotherapyOrderM_PhysiotherapyOrderD", Storage="_PhysiotherapyOrderDs", ThisKey="ID", OtherKey="PhysiotherapyOrderMID")]
		public EntitySet<PhysiotherapyOrderD> PhysiotherapyOrderDs
		{
			get
			{
				return this._PhysiotherapyOrderDs;
			}
			set
			{
				this._PhysiotherapyOrderDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PhysiotherapyOrderM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PhysiotherapyOrderMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PhysiotherapyOrderMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PhysiotherapyOrderM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.PhysiotherapyOrderMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.PhysiotherapyOrderMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.PhysiotherapyOrderM = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.PhysiotherapyOrderM = null;
		}
		
		private void attach_PhysiotherapyOrderDs(PhysiotherapyOrderD entity)
		{
			this.SendPropertyChanging();
			entity.PhysiotherapyOrderM = this;
		}
		
		private void detach_PhysiotherapyOrderDs(PhysiotherapyOrderD entity)
		{
			this.SendPropertyChanging();
			entity.PhysiotherapyOrderM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Presentation")]
	public partial class Presentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _PatientCondition;
		
		private string _PresentationDescribed;
		
		private string _Symptomatic;
		
		private string _historyOfCurrentDiseases;
		
		private string _HistoryOfPastDiseases;
		
		private string _UsingDrug;
		
		private string _Allergy;
		
		private string _FamilyHistory;
		
		private string _Summery;
		
		private string _PrimDiag;
		
		private System.Nullable<bool> _EyeCheck;
		
		private string _Eye;
		
		private System.Nullable<bool> _NoseCheck;
		
		private string _Nose;
		
		private System.Nullable<bool> _MouthCheck;
		
		private string _Mouth;
		
		private System.Nullable<bool> _ThroatCheck;
		
		private string _Throat;
		
		private System.Nullable<bool> _LymphaticNodesCheck;
		
		private string _LymphaticNodes;
		
		private System.Nullable<bool> _ChestCheck;
		
		private string _Chest;
		
		private System.Nullable<bool> _BreastCheck;
		
		private string _Breast;
		
		private System.Nullable<bool> _HeartCheck;
		
		private string _Heart;
		
		private System.Nullable<bool> _LungCkeck;
		
		private string _Lung;
		
		private System.Nullable<bool> _VesslesCheck;
		
		private string _Vessles;
		
		private System.Nullable<bool> _AbdomenCheck;
		
		private string _Abdomen;
		
		private System.Nullable<bool> _GenitalOrgansMaleCheck;
		
		private string _GenitalOrgansMale;
		
		private System.Nullable<bool> _GenitalOrgansFmaleCheck;
		
		private string _GenitalOrgansFmale;
		
		private System.Nullable<bool> _RectumCheck;
		
		private string _Rectum;
		
		private System.Nullable<bool> _NervousSystemCheck;
		
		private string _NervousSystem;
		
		private System.Nullable<bool> _ExtermititiesCheck;
		
		private string _Extermitities;
		
		private System.Nullable<bool> _BoneJointsMuscelesCheck;
		
		private string _BoneJointsMusceles;
		
		private System.Nullable<bool> _NeckCheck;
		
		private string _Neck;
		
		private System.Nullable<bool> _OrgansCheck;
		
		private string _Organs;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPatientConditionChanging(System.Nullable<int> value);
    partial void OnPatientConditionChanged();
    partial void OnPresentationDescribedChanging(string value);
    partial void OnPresentationDescribedChanged();
    partial void OnSymptomaticChanging(string value);
    partial void OnSymptomaticChanged();
    partial void OnhistoryOfCurrentDiseasesChanging(string value);
    partial void OnhistoryOfCurrentDiseasesChanged();
    partial void OnHistoryOfPastDiseasesChanging(string value);
    partial void OnHistoryOfPastDiseasesChanged();
    partial void OnUsingDrugChanging(string value);
    partial void OnUsingDrugChanged();
    partial void OnAllergyChanging(string value);
    partial void OnAllergyChanged();
    partial void OnFamilyHistoryChanging(string value);
    partial void OnFamilyHistoryChanged();
    partial void OnSummeryChanging(string value);
    partial void OnSummeryChanged();
    partial void OnPrimDiagChanging(string value);
    partial void OnPrimDiagChanged();
    partial void OnEyeCheckChanging(System.Nullable<bool> value);
    partial void OnEyeCheckChanged();
    partial void OnEyeChanging(string value);
    partial void OnEyeChanged();
    partial void OnNoseCheckChanging(System.Nullable<bool> value);
    partial void OnNoseCheckChanged();
    partial void OnNoseChanging(string value);
    partial void OnNoseChanged();
    partial void OnMouthCheckChanging(System.Nullable<bool> value);
    partial void OnMouthCheckChanged();
    partial void OnMouthChanging(string value);
    partial void OnMouthChanged();
    partial void OnThroatCheckChanging(System.Nullable<bool> value);
    partial void OnThroatCheckChanged();
    partial void OnThroatChanging(string value);
    partial void OnThroatChanged();
    partial void OnLymphaticNodesCheckChanging(System.Nullable<bool> value);
    partial void OnLymphaticNodesCheckChanged();
    partial void OnLymphaticNodesChanging(string value);
    partial void OnLymphaticNodesChanged();
    partial void OnChestCheckChanging(System.Nullable<bool> value);
    partial void OnChestCheckChanged();
    partial void OnChestChanging(string value);
    partial void OnChestChanged();
    partial void OnBreastCheckChanging(System.Nullable<bool> value);
    partial void OnBreastCheckChanged();
    partial void OnBreastChanging(string value);
    partial void OnBreastChanged();
    partial void OnHeartCheckChanging(System.Nullable<bool> value);
    partial void OnHeartCheckChanged();
    partial void OnHeartChanging(string value);
    partial void OnHeartChanged();
    partial void OnLungCkeckChanging(System.Nullable<bool> value);
    partial void OnLungCkeckChanged();
    partial void OnLungChanging(string value);
    partial void OnLungChanged();
    partial void OnVesslesCheckChanging(System.Nullable<bool> value);
    partial void OnVesslesCheckChanged();
    partial void OnVesslesChanging(string value);
    partial void OnVesslesChanged();
    partial void OnAbdomenCheckChanging(System.Nullable<bool> value);
    partial void OnAbdomenCheckChanged();
    partial void OnAbdomenChanging(string value);
    partial void OnAbdomenChanged();
    partial void OnGenitalOrgansMaleCheckChanging(System.Nullable<bool> value);
    partial void OnGenitalOrgansMaleCheckChanged();
    partial void OnGenitalOrgansMaleChanging(string value);
    partial void OnGenitalOrgansMaleChanged();
    partial void OnGenitalOrgansFmaleCheckChanging(System.Nullable<bool> value);
    partial void OnGenitalOrgansFmaleCheckChanged();
    partial void OnGenitalOrgansFmaleChanging(string value);
    partial void OnGenitalOrgansFmaleChanged();
    partial void OnRectumCheckChanging(System.Nullable<bool> value);
    partial void OnRectumCheckChanged();
    partial void OnRectumChanging(string value);
    partial void OnRectumChanged();
    partial void OnNervousSystemCheckChanging(System.Nullable<bool> value);
    partial void OnNervousSystemCheckChanged();
    partial void OnNervousSystemChanging(string value);
    partial void OnNervousSystemChanged();
    partial void OnExtermititiesCheckChanging(System.Nullable<bool> value);
    partial void OnExtermititiesCheckChanged();
    partial void OnExtermititiesChanging(string value);
    partial void OnExtermititiesChanged();
    partial void OnBoneJointsMuscelesCheckChanging(System.Nullable<bool> value);
    partial void OnBoneJointsMuscelesCheckChanged();
    partial void OnBoneJointsMuscelesChanging(string value);
    partial void OnBoneJointsMuscelesChanged();
    partial void OnNeckCheckChanging(System.Nullable<bool> value);
    partial void OnNeckCheckChanged();
    partial void OnNeckChanging(string value);
    partial void OnNeckChanged();
    partial void OnOrgansCheckChanging(System.Nullable<bool> value);
    partial void OnOrgansCheckChanged();
    partial void OnOrgansChanging(string value);
    partial void OnOrgansChanged();
    #endregion
		
		public Presentation()
		{
			this._Definition = default(EntityRef<Definition>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientCondition", DbType="Int")]
		public System.Nullable<int> PatientCondition
		{
			get
			{
				return this._PatientCondition;
			}
			set
			{
				if ((this._PatientCondition != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientConditionChanging(value);
					this.SendPropertyChanging();
					this._PatientCondition = value;
					this.SendPropertyChanged("PatientCondition");
					this.OnPatientConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentationDescribed", DbType="NVarChar(50)")]
		public string PresentationDescribed
		{
			get
			{
				return this._PresentationDescribed;
			}
			set
			{
				if ((this._PresentationDescribed != value))
				{
					this.OnPresentationDescribedChanging(value);
					this.SendPropertyChanging();
					this._PresentationDescribed = value;
					this.SendPropertyChanged("PresentationDescribed");
					this.OnPresentationDescribedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symptomatic", DbType="NVarChar(100)")]
		public string Symptomatic
		{
			get
			{
				return this._Symptomatic;
			}
			set
			{
				if ((this._Symptomatic != value))
				{
					this.OnSymptomaticChanging(value);
					this.SendPropertyChanging();
					this._Symptomatic = value;
					this.SendPropertyChanged("Symptomatic");
					this.OnSymptomaticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_historyOfCurrentDiseases", DbType="NVarChar(100)")]
		public string historyOfCurrentDiseases
		{
			get
			{
				return this._historyOfCurrentDiseases;
			}
			set
			{
				if ((this._historyOfCurrentDiseases != value))
				{
					this.OnhistoryOfCurrentDiseasesChanging(value);
					this.SendPropertyChanging();
					this._historyOfCurrentDiseases = value;
					this.SendPropertyChanged("historyOfCurrentDiseases");
					this.OnhistoryOfCurrentDiseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryOfPastDiseases", DbType="NVarChar(100)")]
		public string HistoryOfPastDiseases
		{
			get
			{
				return this._HistoryOfPastDiseases;
			}
			set
			{
				if ((this._HistoryOfPastDiseases != value))
				{
					this.OnHistoryOfPastDiseasesChanging(value);
					this.SendPropertyChanging();
					this._HistoryOfPastDiseases = value;
					this.SendPropertyChanged("HistoryOfPastDiseases");
					this.OnHistoryOfPastDiseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsingDrug", DbType="NVarChar(500)")]
		public string UsingDrug
		{
			get
			{
				return this._UsingDrug;
			}
			set
			{
				if ((this._UsingDrug != value))
				{
					this.OnUsingDrugChanging(value);
					this.SendPropertyChanging();
					this._UsingDrug = value;
					this.SendPropertyChanged("UsingDrug");
					this.OnUsingDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allergy", DbType="NVarChar(100)")]
		public string Allergy
		{
			get
			{
				return this._Allergy;
			}
			set
			{
				if ((this._Allergy != value))
				{
					this.OnAllergyChanging(value);
					this.SendPropertyChanging();
					this._Allergy = value;
					this.SendPropertyChanged("Allergy");
					this.OnAllergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyHistory", DbType="NVarChar(100)")]
		public string FamilyHistory
		{
			get
			{
				return this._FamilyHistory;
			}
			set
			{
				if ((this._FamilyHistory != value))
				{
					this.OnFamilyHistoryChanging(value);
					this.SendPropertyChanging();
					this._FamilyHistory = value;
					this.SendPropertyChanged("FamilyHistory");
					this.OnFamilyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summery", DbType="NVarChar(4000)")]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this.OnSummeryChanging(value);
					this.SendPropertyChanging();
					this._Summery = value;
					this.SendPropertyChanged("Summery");
					this.OnSummeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimDiag", DbType="NVarChar(100)")]
		public string PrimDiag
		{
			get
			{
				return this._PrimDiag;
			}
			set
			{
				if ((this._PrimDiag != value))
				{
					this.OnPrimDiagChanging(value);
					this.SendPropertyChanging();
					this._PrimDiag = value;
					this.SendPropertyChanged("PrimDiag");
					this.OnPrimDiagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeCheck", DbType="Bit")]
		public System.Nullable<bool> EyeCheck
		{
			get
			{
				return this._EyeCheck;
			}
			set
			{
				if ((this._EyeCheck != value))
				{
					this.OnEyeCheckChanging(value);
					this.SendPropertyChanging();
					this._EyeCheck = value;
					this.SendPropertyChanged("EyeCheck");
					this.OnEyeCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye", DbType="NVarChar(100)")]
		public string Eye
		{
			get
			{
				return this._Eye;
			}
			set
			{
				if ((this._Eye != value))
				{
					this.OnEyeChanging(value);
					this.SendPropertyChanging();
					this._Eye = value;
					this.SendPropertyChanged("Eye");
					this.OnEyeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoseCheck", DbType="Bit")]
		public System.Nullable<bool> NoseCheck
		{
			get
			{
				return this._NoseCheck;
			}
			set
			{
				if ((this._NoseCheck != value))
				{
					this.OnNoseCheckChanging(value);
					this.SendPropertyChanging();
					this._NoseCheck = value;
					this.SendPropertyChanged("NoseCheck");
					this.OnNoseCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nose", DbType="NVarChar(100)")]
		public string Nose
		{
			get
			{
				return this._Nose;
			}
			set
			{
				if ((this._Nose != value))
				{
					this.OnNoseChanging(value);
					this.SendPropertyChanging();
					this._Nose = value;
					this.SendPropertyChanged("Nose");
					this.OnNoseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MouthCheck", DbType="Bit")]
		public System.Nullable<bool> MouthCheck
		{
			get
			{
				return this._MouthCheck;
			}
			set
			{
				if ((this._MouthCheck != value))
				{
					this.OnMouthCheckChanging(value);
					this.SendPropertyChanging();
					this._MouthCheck = value;
					this.SendPropertyChanged("MouthCheck");
					this.OnMouthCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mouth", DbType="NVarChar(100)")]
		public string Mouth
		{
			get
			{
				return this._Mouth;
			}
			set
			{
				if ((this._Mouth != value))
				{
					this.OnMouthChanging(value);
					this.SendPropertyChanging();
					this._Mouth = value;
					this.SendPropertyChanged("Mouth");
					this.OnMouthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThroatCheck", DbType="Bit")]
		public System.Nullable<bool> ThroatCheck
		{
			get
			{
				return this._ThroatCheck;
			}
			set
			{
				if ((this._ThroatCheck != value))
				{
					this.OnThroatCheckChanging(value);
					this.SendPropertyChanging();
					this._ThroatCheck = value;
					this.SendPropertyChanged("ThroatCheck");
					this.OnThroatCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Throat", DbType="NVarChar(100)")]
		public string Throat
		{
			get
			{
				return this._Throat;
			}
			set
			{
				if ((this._Throat != value))
				{
					this.OnThroatChanging(value);
					this.SendPropertyChanging();
					this._Throat = value;
					this.SendPropertyChanged("Throat");
					this.OnThroatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LymphaticNodesCheck", DbType="Bit")]
		public System.Nullable<bool> LymphaticNodesCheck
		{
			get
			{
				return this._LymphaticNodesCheck;
			}
			set
			{
				if ((this._LymphaticNodesCheck != value))
				{
					this.OnLymphaticNodesCheckChanging(value);
					this.SendPropertyChanging();
					this._LymphaticNodesCheck = value;
					this.SendPropertyChanged("LymphaticNodesCheck");
					this.OnLymphaticNodesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LymphaticNodes", DbType="NVarChar(100)")]
		public string LymphaticNodes
		{
			get
			{
				return this._LymphaticNodes;
			}
			set
			{
				if ((this._LymphaticNodes != value))
				{
					this.OnLymphaticNodesChanging(value);
					this.SendPropertyChanging();
					this._LymphaticNodes = value;
					this.SendPropertyChanged("LymphaticNodes");
					this.OnLymphaticNodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChestCheck", DbType="Bit")]
		public System.Nullable<bool> ChestCheck
		{
			get
			{
				return this._ChestCheck;
			}
			set
			{
				if ((this._ChestCheck != value))
				{
					this.OnChestCheckChanging(value);
					this.SendPropertyChanging();
					this._ChestCheck = value;
					this.SendPropertyChanged("ChestCheck");
					this.OnChestCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chest", DbType="NVarChar(100)")]
		public string Chest
		{
			get
			{
				return this._Chest;
			}
			set
			{
				if ((this._Chest != value))
				{
					this.OnChestChanging(value);
					this.SendPropertyChanging();
					this._Chest = value;
					this.SendPropertyChanged("Chest");
					this.OnChestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreastCheck", DbType="Bit")]
		public System.Nullable<bool> BreastCheck
		{
			get
			{
				return this._BreastCheck;
			}
			set
			{
				if ((this._BreastCheck != value))
				{
					this.OnBreastCheckChanging(value);
					this.SendPropertyChanging();
					this._BreastCheck = value;
					this.SendPropertyChanged("BreastCheck");
					this.OnBreastCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breast", DbType="NVarChar(100)")]
		public string Breast
		{
			get
			{
				return this._Breast;
			}
			set
			{
				if ((this._Breast != value))
				{
					this.OnBreastChanging(value);
					this.SendPropertyChanging();
					this._Breast = value;
					this.SendPropertyChanged("Breast");
					this.OnBreastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartCheck", DbType="Bit")]
		public System.Nullable<bool> HeartCheck
		{
			get
			{
				return this._HeartCheck;
			}
			set
			{
				if ((this._HeartCheck != value))
				{
					this.OnHeartCheckChanging(value);
					this.SendPropertyChanging();
					this._HeartCheck = value;
					this.SendPropertyChanged("HeartCheck");
					this.OnHeartCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heart", DbType="NVarChar(100)")]
		public string Heart
		{
			get
			{
				return this._Heart;
			}
			set
			{
				if ((this._Heart != value))
				{
					this.OnHeartChanging(value);
					this.SendPropertyChanging();
					this._Heart = value;
					this.SendPropertyChanged("Heart");
					this.OnHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LungCkeck", DbType="Bit")]
		public System.Nullable<bool> LungCkeck
		{
			get
			{
				return this._LungCkeck;
			}
			set
			{
				if ((this._LungCkeck != value))
				{
					this.OnLungCkeckChanging(value);
					this.SendPropertyChanging();
					this._LungCkeck = value;
					this.SendPropertyChanged("LungCkeck");
					this.OnLungCkeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lung", DbType="NVarChar(100)")]
		public string Lung
		{
			get
			{
				return this._Lung;
			}
			set
			{
				if ((this._Lung != value))
				{
					this.OnLungChanging(value);
					this.SendPropertyChanging();
					this._Lung = value;
					this.SendPropertyChanged("Lung");
					this.OnLungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VesslesCheck", DbType="Bit")]
		public System.Nullable<bool> VesslesCheck
		{
			get
			{
				return this._VesslesCheck;
			}
			set
			{
				if ((this._VesslesCheck != value))
				{
					this.OnVesslesCheckChanging(value);
					this.SendPropertyChanging();
					this._VesslesCheck = value;
					this.SendPropertyChanged("VesslesCheck");
					this.OnVesslesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vessles", DbType="NVarChar(100)")]
		public string Vessles
		{
			get
			{
				return this._Vessles;
			}
			set
			{
				if ((this._Vessles != value))
				{
					this.OnVesslesChanging(value);
					this.SendPropertyChanging();
					this._Vessles = value;
					this.SendPropertyChanged("Vessles");
					this.OnVesslesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbdomenCheck", DbType="Bit")]
		public System.Nullable<bool> AbdomenCheck
		{
			get
			{
				return this._AbdomenCheck;
			}
			set
			{
				if ((this._AbdomenCheck != value))
				{
					this.OnAbdomenCheckChanging(value);
					this.SendPropertyChanging();
					this._AbdomenCheck = value;
					this.SendPropertyChanged("AbdomenCheck");
					this.OnAbdomenCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abdomen", DbType="NVarChar(100)")]
		public string Abdomen
		{
			get
			{
				return this._Abdomen;
			}
			set
			{
				if ((this._Abdomen != value))
				{
					this.OnAbdomenChanging(value);
					this.SendPropertyChanging();
					this._Abdomen = value;
					this.SendPropertyChanged("Abdomen");
					this.OnAbdomenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansMaleCheck", DbType="Bit")]
		public System.Nullable<bool> GenitalOrgansMaleCheck
		{
			get
			{
				return this._GenitalOrgansMaleCheck;
			}
			set
			{
				if ((this._GenitalOrgansMaleCheck != value))
				{
					this.OnGenitalOrgansMaleCheckChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansMaleCheck = value;
					this.SendPropertyChanged("GenitalOrgansMaleCheck");
					this.OnGenitalOrgansMaleCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansMale", DbType="NVarChar(100)")]
		public string GenitalOrgansMale
		{
			get
			{
				return this._GenitalOrgansMale;
			}
			set
			{
				if ((this._GenitalOrgansMale != value))
				{
					this.OnGenitalOrgansMaleChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansMale = value;
					this.SendPropertyChanged("GenitalOrgansMale");
					this.OnGenitalOrgansMaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansFmaleCheck", DbType="Bit")]
		public System.Nullable<bool> GenitalOrgansFmaleCheck
		{
			get
			{
				return this._GenitalOrgansFmaleCheck;
			}
			set
			{
				if ((this._GenitalOrgansFmaleCheck != value))
				{
					this.OnGenitalOrgansFmaleCheckChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansFmaleCheck = value;
					this.SendPropertyChanged("GenitalOrgansFmaleCheck");
					this.OnGenitalOrgansFmaleCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenitalOrgansFmale", DbType="NVarChar(100)")]
		public string GenitalOrgansFmale
		{
			get
			{
				return this._GenitalOrgansFmale;
			}
			set
			{
				if ((this._GenitalOrgansFmale != value))
				{
					this.OnGenitalOrgansFmaleChanging(value);
					this.SendPropertyChanging();
					this._GenitalOrgansFmale = value;
					this.SendPropertyChanged("GenitalOrgansFmale");
					this.OnGenitalOrgansFmaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectumCheck", DbType="Bit")]
		public System.Nullable<bool> RectumCheck
		{
			get
			{
				return this._RectumCheck;
			}
			set
			{
				if ((this._RectumCheck != value))
				{
					this.OnRectumCheckChanging(value);
					this.SendPropertyChanging();
					this._RectumCheck = value;
					this.SendPropertyChanged("RectumCheck");
					this.OnRectumCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectum", DbType="NVarChar(100)")]
		public string Rectum
		{
			get
			{
				return this._Rectum;
			}
			set
			{
				if ((this._Rectum != value))
				{
					this.OnRectumChanging(value);
					this.SendPropertyChanging();
					this._Rectum = value;
					this.SendPropertyChanged("Rectum");
					this.OnRectumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSystemCheck", DbType="Bit")]
		public System.Nullable<bool> NervousSystemCheck
		{
			get
			{
				return this._NervousSystemCheck;
			}
			set
			{
				if ((this._NervousSystemCheck != value))
				{
					this.OnNervousSystemCheckChanging(value);
					this.SendPropertyChanging();
					this._NervousSystemCheck = value;
					this.SendPropertyChanged("NervousSystemCheck");
					this.OnNervousSystemCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NervousSystem", DbType="NVarChar(100)")]
		public string NervousSystem
		{
			get
			{
				return this._NervousSystem;
			}
			set
			{
				if ((this._NervousSystem != value))
				{
					this.OnNervousSystemChanging(value);
					this.SendPropertyChanging();
					this._NervousSystem = value;
					this.SendPropertyChanged("NervousSystem");
					this.OnNervousSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtermititiesCheck", DbType="Bit")]
		public System.Nullable<bool> ExtermititiesCheck
		{
			get
			{
				return this._ExtermititiesCheck;
			}
			set
			{
				if ((this._ExtermititiesCheck != value))
				{
					this.OnExtermititiesCheckChanging(value);
					this.SendPropertyChanging();
					this._ExtermititiesCheck = value;
					this.SendPropertyChanged("ExtermititiesCheck");
					this.OnExtermititiesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extermitities", DbType="NVarChar(100)")]
		public string Extermitities
		{
			get
			{
				return this._Extermitities;
			}
			set
			{
				if ((this._Extermitities != value))
				{
					this.OnExtermititiesChanging(value);
					this.SendPropertyChanging();
					this._Extermitities = value;
					this.SendPropertyChanged("Extermitities");
					this.OnExtermititiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneJointsMuscelesCheck", DbType="Bit")]
		public System.Nullable<bool> BoneJointsMuscelesCheck
		{
			get
			{
				return this._BoneJointsMuscelesCheck;
			}
			set
			{
				if ((this._BoneJointsMuscelesCheck != value))
				{
					this.OnBoneJointsMuscelesCheckChanging(value);
					this.SendPropertyChanging();
					this._BoneJointsMuscelesCheck = value;
					this.SendPropertyChanged("BoneJointsMuscelesCheck");
					this.OnBoneJointsMuscelesCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoneJointsMusceles", DbType="NVarChar(100)")]
		public string BoneJointsMusceles
		{
			get
			{
				return this._BoneJointsMusceles;
			}
			set
			{
				if ((this._BoneJointsMusceles != value))
				{
					this.OnBoneJointsMuscelesChanging(value);
					this.SendPropertyChanging();
					this._BoneJointsMusceles = value;
					this.SendPropertyChanged("BoneJointsMusceles");
					this.OnBoneJointsMuscelesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeckCheck", DbType="Bit")]
		public System.Nullable<bool> NeckCheck
		{
			get
			{
				return this._NeckCheck;
			}
			set
			{
				if ((this._NeckCheck != value))
				{
					this.OnNeckCheckChanging(value);
					this.SendPropertyChanging();
					this._NeckCheck = value;
					this.SendPropertyChanged("NeckCheck");
					this.OnNeckCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neck", DbType="NVarChar(100)")]
		public string Neck
		{
			get
			{
				return this._Neck;
			}
			set
			{
				if ((this._Neck != value))
				{
					this.OnNeckChanging(value);
					this.SendPropertyChanging();
					this._Neck = value;
					this.SendPropertyChanged("Neck");
					this.OnNeckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgansCheck", DbType="Bit")]
		public System.Nullable<bool> OrgansCheck
		{
			get
			{
				return this._OrgansCheck;
			}
			set
			{
				if ((this._OrgansCheck != value))
				{
					this.OnOrgansCheckChanging(value);
					this.SendPropertyChanging();
					this._OrgansCheck = value;
					this.SendPropertyChanged("OrgansCheck");
					this.OnOrgansCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organs", DbType="NVarChar(100)")]
		public string Organs
		{
			get
			{
				return this._Organs;
			}
			set
			{
				if ((this._Organs != value))
				{
					this.OnOrgansChanging(value);
					this.SendPropertyChanging();
					this._Organs = value;
					this.SendPropertyChanged("Organs");
					this.OnOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Presentation", Storage="_Definition", ThisKey="PatientCondition", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Presentations.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Presentations.Add(this);
						this._PatientCondition = value.ID;
					}
					else
					{
						this._PatientCondition = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Presentation", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Presentation = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Presentation = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreventingDeviceRecive")]
	public partial class PreventingDeviceRecive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PreventDevice;
		
		private System.Nullable<int> _Amount;
		
		private string _Date;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUser;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPreventDeviceChanging(string value);
    partial void OnPreventDeviceChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    #endregion
		
		public PreventingDeviceRecive()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreventDevice", DbType="NVarChar(100)")]
		public string PreventDevice
		{
			get
			{
				return this._PreventDevice;
			}
			set
			{
				if ((this._PreventDevice != value))
				{
					this.OnPreventDeviceChanging(value);
					this.SendPropertyChanging();
					this._PreventDevice = value;
					this.SendPropertyChanged("PreventDevice");
					this.OnPreventDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PreventingDeviceRecive", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PreventingDeviceRecives.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PreventingDeviceRecives.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreventingStartAndEnd")]
	public partial class PreventingStartAndEnd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _PereventionDevice;
		
		private string _BeginTime;
		
		private string _DateOfUsing;
		
		private string _NextPereventDate;
		
		private string _ResonOfEnd;
		
		private string _EndPereventDate;
		
		private System.Nullable<bool> _IsEndInPeriod;
		
		private string _CancelWayReson;
		
		private string _PatientProblem;
		
		private string _DurationofUse;
		
		private string _ComplicationsDate;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUser;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private EntitySet<QAPlus> _QAPlus;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<QuestionnaireGroup> _QuestionnaireGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPereventionDeviceChanging(System.Nullable<System.Guid> value);
    partial void OnPereventionDeviceChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnDateOfUsingChanging(string value);
    partial void OnDateOfUsingChanged();
    partial void OnNextPereventDateChanging(string value);
    partial void OnNextPereventDateChanged();
    partial void OnResonOfEndChanging(string value);
    partial void OnResonOfEndChanged();
    partial void OnEndPereventDateChanging(string value);
    partial void OnEndPereventDateChanged();
    partial void OnIsEndInPeriodChanging(System.Nullable<bool> value);
    partial void OnIsEndInPeriodChanged();
    partial void OnCancelWayResonChanging(string value);
    partial void OnCancelWayResonChanged();
    partial void OnPatientProblemChanging(string value);
    partial void OnPatientProblemChanged();
    partial void OnDurationofUseChanging(string value);
    partial void OnDurationofUseChanged();
    partial void OnComplicationsDateChanging(string value);
    partial void OnComplicationsDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    #endregion
		
		public PreventingStartAndEnd()
		{
			this._QAPlus = new EntitySet<QAPlus>(new Action<QAPlus>(this.attach_QAPlus), new Action<QAPlus>(this.detach_QAPlus));
			this._Person = default(EntityRef<Person>);
			this._QuestionnaireGroup = default(EntityRef<QuestionnaireGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PereventionDevice", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PereventionDevice
		{
			get
			{
				return this._PereventionDevice;
			}
			set
			{
				if ((this._PereventionDevice != value))
				{
					if (this._QuestionnaireGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPereventionDeviceChanging(value);
					this.SendPropertyChanging();
					this._PereventionDevice = value;
					this.SendPropertyChanged("PereventionDevice");
					this.OnPereventionDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="NVarChar(100)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfUsing", DbType="NVarChar(10)")]
		public string DateOfUsing
		{
			get
			{
				return this._DateOfUsing;
			}
			set
			{
				if ((this._DateOfUsing != value))
				{
					this.OnDateOfUsingChanging(value);
					this.SendPropertyChanging();
					this._DateOfUsing = value;
					this.SendPropertyChanged("DateOfUsing");
					this.OnDateOfUsingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPereventDate", DbType="NVarChar(10)")]
		public string NextPereventDate
		{
			get
			{
				return this._NextPereventDate;
			}
			set
			{
				if ((this._NextPereventDate != value))
				{
					this.OnNextPereventDateChanging(value);
					this.SendPropertyChanging();
					this._NextPereventDate = value;
					this.SendPropertyChanged("NextPereventDate");
					this.OnNextPereventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResonOfEnd", DbType="NVarChar(100)")]
		public string ResonOfEnd
		{
			get
			{
				return this._ResonOfEnd;
			}
			set
			{
				if ((this._ResonOfEnd != value))
				{
					this.OnResonOfEndChanging(value);
					this.SendPropertyChanging();
					this._ResonOfEnd = value;
					this.SendPropertyChanged("ResonOfEnd");
					this.OnResonOfEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPereventDate", DbType="NVarChar(10)")]
		public string EndPereventDate
		{
			get
			{
				return this._EndPereventDate;
			}
			set
			{
				if ((this._EndPereventDate != value))
				{
					this.OnEndPereventDateChanging(value);
					this.SendPropertyChanging();
					this._EndPereventDate = value;
					this.SendPropertyChanged("EndPereventDate");
					this.OnEndPereventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndInPeriod", DbType="Bit")]
		public System.Nullable<bool> IsEndInPeriod
		{
			get
			{
				return this._IsEndInPeriod;
			}
			set
			{
				if ((this._IsEndInPeriod != value))
				{
					this.OnIsEndInPeriodChanging(value);
					this.SendPropertyChanging();
					this._IsEndInPeriod = value;
					this.SendPropertyChanged("IsEndInPeriod");
					this.OnIsEndInPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelWayReson", DbType="NVarChar(50)")]
		public string CancelWayReson
		{
			get
			{
				return this._CancelWayReson;
			}
			set
			{
				if ((this._CancelWayReson != value))
				{
					this.OnCancelWayResonChanging(value);
					this.SendPropertyChanging();
					this._CancelWayReson = value;
					this.SendPropertyChanged("CancelWayReson");
					this.OnCancelWayResonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientProblem", DbType="NVarChar(100)")]
		public string PatientProblem
		{
			get
			{
				return this._PatientProblem;
			}
			set
			{
				if ((this._PatientProblem != value))
				{
					this.OnPatientProblemChanging(value);
					this.SendPropertyChanging();
					this._PatientProblem = value;
					this.SendPropertyChanged("PatientProblem");
					this.OnPatientProblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationofUse", DbType="NVarChar(10)")]
		public string DurationofUse
		{
			get
			{
				return this._DurationofUse;
			}
			set
			{
				if ((this._DurationofUse != value))
				{
					this.OnDurationofUseChanging(value);
					this.SendPropertyChanging();
					this._DurationofUse = value;
					this.SendPropertyChanged("DurationofUse");
					this.OnDurationofUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplicationsDate", DbType="NVarChar(10)")]
		public string ComplicationsDate
		{
			get
			{
				return this._ComplicationsDate;
			}
			set
			{
				if ((this._ComplicationsDate != value))
				{
					this.OnComplicationsDateChanging(value);
					this.SendPropertyChanging();
					this._ComplicationsDate = value;
					this.SendPropertyChanged("ComplicationsDate");
					this.OnComplicationsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreventingStartAndEnd_QAPlus", Storage="_QAPlus", ThisKey="ID", OtherKey="PereventID")]
		public EntitySet<QAPlus> QAPlus
		{
			get
			{
				return this._QAPlus;
			}
			set
			{
				this._QAPlus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PreventingStartAndEnd", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PreventingStartAndEnds.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PreventingStartAndEnds.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_PreventingStartAndEnd", Storage="_QuestionnaireGroup", ThisKey="PereventionDevice", OtherKey="ID", IsForeignKey=true)]
		public QuestionnaireGroup QuestionnaireGroup
		{
			get
			{
				return this._QuestionnaireGroup.Entity;
			}
			set
			{
				QuestionnaireGroup previousValue = this._QuestionnaireGroup.Entity;
				if (((previousValue != value) 
							|| (this._QuestionnaireGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionnaireGroup.Entity = null;
						previousValue.PreventingStartAndEnds.Remove(this);
					}
					this._QuestionnaireGroup.Entity = value;
					if ((value != null))
					{
						value.PreventingStartAndEnds.Add(this);
						this._PereventionDevice = value.ID;
					}
					else
					{
						this._PereventionDevice = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("QuestionnaireGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.PreventingStartAndEnd = this;
		}
		
		private void detach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.PreventingStartAndEnd = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QA")]
	public partial class QA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDGivenServiceM;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _QuestionnariID;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private System.Nullable<System.Guid> _GivenServiceDID;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Service> _Service1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGivenServiceMChanging(System.Nullable<System.Guid> value);
    partial void OnIDGivenServiceMChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnQuestionnariIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnariIDChanged();
    partial void OnResultNChanging(System.Nullable<int> value);
    partial void OnResultNChanged();
    partial void OnResultCHKChanging(System.Nullable<bool> value);
    partial void OnResultCHKChanged();
    partial void OnMResultChanging(string value);
    partial void OnMResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnGivenServiceDIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceDIDChanged();
    #endregion
		
		public QA()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Service = default(EntityRef<Service>);
			this._Service1 = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGivenServiceM", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGivenServiceM
		{
			get
			{
				return this._IDGivenServiceM;
			}
			set
			{
				if ((this._IDGivenServiceM != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGivenServiceMChanging(value);
					this.SendPropertyChanging();
					this._IDGivenServiceM = value;
					this.SendPropertyChanged("IDGivenServiceM");
					this.OnIDGivenServiceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnariID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnariID
		{
			get
			{
				return this._QuestionnariID;
			}
			set
			{
				if ((this._QuestionnariID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnariIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnariID = value;
					this.SendPropertyChanged("QuestionnariID");
					this.OnQuestionnariIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this.OnResultNChanging(value);
					this.SendPropertyChanging();
					this._ResultN = value;
					this.SendPropertyChanged("ResultN");
					this.OnResultNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this.OnResultCHKChanging(value);
					this.SendPropertyChanging();
					this._ResultCHK = value;
					this.SendPropertyChanged("ResultCHK");
					this.OnResultCHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this.OnMResultChanging(value);
					this.SendPropertyChanging();
					this._MResult = value;
					this.SendPropertyChanged("MResult");
					this.OnMResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceDID
		{
			get
			{
				return this._GivenServiceDID;
			}
			set
			{
				if ((this._GivenServiceDID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceDIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceDID = value;
					this.SendPropertyChanged("GivenServiceDID");
					this.OnGivenServiceDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_QA", Storage="_GivenServiceD", ThisKey="GivenServiceDID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._GivenServiceDID = value.ID;
					}
					else
					{
						this._GivenServiceDID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_GivenServiceM", ThisKey="IDGivenServiceM", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._IDGivenServiceM = value.ID;
					}
					else
					{
						this._IDGivenServiceM = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_Service", ThisKey="QuestionnariID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._QuestionnariID = value.ID;
					}
					else
					{
						this._QuestionnariID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.QAs1.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.QAs1.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QAPlus")]
	public partial class QAPlus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDGivenServiceM;
		
		private System.Nullable<System.Guid> _QuestionnariID;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private System.Nullable<int> _PereventID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreationUser;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<PreventingStartAndEnd> _PreventingStartAndEnd;
		
		private EntityRef<Questionnaire> _Questionnaire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGivenServiceMChanging(System.Nullable<System.Guid> value);
    partial void OnIDGivenServiceMChanged();
    partial void OnQuestionnariIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnariIDChanged();
    partial void OnResultNChanging(System.Nullable<int> value);
    partial void OnResultNChanged();
    partial void OnResultCHKChanging(System.Nullable<bool> value);
    partial void OnResultCHKChanged();
    partial void OnMResultChanging(string value);
    partial void OnMResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPereventIDChanging(System.Nullable<int> value);
    partial void OnPereventIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    #endregion
		
		public QAPlus()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._PreventingStartAndEnd = default(EntityRef<PreventingStartAndEnd>);
			this._Questionnaire = default(EntityRef<Questionnaire>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGivenServiceM", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGivenServiceM
		{
			get
			{
				return this._IDGivenServiceM;
			}
			set
			{
				if ((this._IDGivenServiceM != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGivenServiceMChanging(value);
					this.SendPropertyChanging();
					this._IDGivenServiceM = value;
					this.SendPropertyChanged("IDGivenServiceM");
					this.OnIDGivenServiceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnariID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnariID
		{
			get
			{
				return this._QuestionnariID;
			}
			set
			{
				if ((this._QuestionnariID != value))
				{
					if (this._Questionnaire.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnariIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnariID = value;
					this.SendPropertyChanged("QuestionnariID");
					this.OnQuestionnariIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this.OnResultNChanging(value);
					this.SendPropertyChanging();
					this._ResultN = value;
					this.SendPropertyChanged("ResultN");
					this.OnResultNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this.OnResultCHKChanging(value);
					this.SendPropertyChanging();
					this._ResultCHK = value;
					this.SendPropertyChanged("ResultCHK");
					this.OnResultCHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this.OnMResultChanging(value);
					this.SendPropertyChanging();
					this._MResult = value;
					this.SendPropertyChanged("MResult");
					this.OnMResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PereventID", DbType="Int")]
		public System.Nullable<int> PereventID
		{
			get
			{
				return this._PereventID;
			}
			set
			{
				if ((this._PereventID != value))
				{
					if (this._PreventingStartAndEnd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPereventIDChanging(value);
					this.SendPropertyChanging();
					this._PereventID = value;
					this.SendPropertyChanged("PereventID");
					this.OnPereventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QAPlus", Storage="_GivenServiceM", ThisKey="IDGivenServiceM", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.QAPlus.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.QAPlus.Add(this);
						this._IDGivenServiceM = value.ID;
					}
					else
					{
						this._IDGivenServiceM = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreventingStartAndEnd_QAPlus", Storage="_PreventingStartAndEnd", ThisKey="PereventID", OtherKey="ID", IsForeignKey=true)]
		public PreventingStartAndEnd PreventingStartAndEnd
		{
			get
			{
				return this._PreventingStartAndEnd.Entity;
			}
			set
			{
				PreventingStartAndEnd previousValue = this._PreventingStartAndEnd.Entity;
				if (((previousValue != value) 
							|| (this._PreventingStartAndEnd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreventingStartAndEnd.Entity = null;
						previousValue.QAPlus.Remove(this);
					}
					this._PreventingStartAndEnd.Entity = value;
					if ((value != null))
					{
						value.QAPlus.Add(this);
						this._PereventID = value.ID;
					}
					else
					{
						this._PereventID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PreventingStartAndEnd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QAPlus", Storage="_Questionnaire", ThisKey="QuestionnariID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Questionnaire Questionnaire
		{
			get
			{
				return this._Questionnaire.Entity;
			}
			set
			{
				Questionnaire previousValue = this._Questionnaire.Entity;
				if (((previousValue != value) 
							|| (this._Questionnaire.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Questionnaire.Entity = null;
						previousValue.QAPlus.Remove(this);
					}
					this._Questionnaire.Entity = value;
					if ((value != null))
					{
						value.QAPlus.Add(this);
						this._QuestionnariID = value.ID;
					}
					else
					{
						this._QuestionnariID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Questionnaire");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualitativePoints")]
	public partial class QualitativePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _StaffID;
		
		private string _Date;
		
		private System.Nullable<int> _Education;
		
		private System.Nullable<int> _WorkExperience;
		
		private System.Nullable<int> _PhysicalPresence;
		
		private System.Nullable<int> _ResponsibleTheory;
		
		private System.Nullable<int> _WorkQuality;
		
		private System.Nullable<int> _Patientdissatisfaction;
		
		private System.Nullable<int> _Nosave;
		
		private System.Nullable<int> _Total;
		
		private System.Nullable<double> _TotalPoint;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnEducationChanging(System.Nullable<int> value);
    partial void OnEducationChanged();
    partial void OnWorkExperienceChanging(System.Nullable<int> value);
    partial void OnWorkExperienceChanged();
    partial void OnPhysicalPresenceChanging(System.Nullable<int> value);
    partial void OnPhysicalPresenceChanged();
    partial void OnResponsibleTheoryChanging(System.Nullable<int> value);
    partial void OnResponsibleTheoryChanged();
    partial void OnWorkQualityChanging(System.Nullable<int> value);
    partial void OnWorkQualityChanged();
    partial void OnPatientdissatisfactionChanging(System.Nullable<int> value);
    partial void OnPatientdissatisfactionChanged();
    partial void OnNosaveChanging(System.Nullable<int> value);
    partial void OnNosaveChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnTotalPointChanging(System.Nullable<double> value);
    partial void OnTotalPointChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public QualitativePoint()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="Int")]
		public System.Nullable<int> Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkExperience", DbType="Int")]
		public System.Nullable<int> WorkExperience
		{
			get
			{
				return this._WorkExperience;
			}
			set
			{
				if ((this._WorkExperience != value))
				{
					this.OnWorkExperienceChanging(value);
					this.SendPropertyChanging();
					this._WorkExperience = value;
					this.SendPropertyChanged("WorkExperience");
					this.OnWorkExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalPresence", DbType="Int")]
		public System.Nullable<int> PhysicalPresence
		{
			get
			{
				return this._PhysicalPresence;
			}
			set
			{
				if ((this._PhysicalPresence != value))
				{
					this.OnPhysicalPresenceChanging(value);
					this.SendPropertyChanging();
					this._PhysicalPresence = value;
					this.SendPropertyChanged("PhysicalPresence");
					this.OnPhysicalPresenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleTheory", DbType="Int")]
		public System.Nullable<int> ResponsibleTheory
		{
			get
			{
				return this._ResponsibleTheory;
			}
			set
			{
				if ((this._ResponsibleTheory != value))
				{
					this.OnResponsibleTheoryChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleTheory = value;
					this.SendPropertyChanged("ResponsibleTheory");
					this.OnResponsibleTheoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQuality", DbType="Int")]
		public System.Nullable<int> WorkQuality
		{
			get
			{
				return this._WorkQuality;
			}
			set
			{
				if ((this._WorkQuality != value))
				{
					this.OnWorkQualityChanging(value);
					this.SendPropertyChanging();
					this._WorkQuality = value;
					this.SendPropertyChanged("WorkQuality");
					this.OnWorkQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patientdissatisfaction", DbType="Int")]
		public System.Nullable<int> Patientdissatisfaction
		{
			get
			{
				return this._Patientdissatisfaction;
			}
			set
			{
				if ((this._Patientdissatisfaction != value))
				{
					this.OnPatientdissatisfactionChanging(value);
					this.SendPropertyChanging();
					this._Patientdissatisfaction = value;
					this.SendPropertyChanged("Patientdissatisfaction");
					this.OnPatientdissatisfactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nosave", DbType="Int")]
		public System.Nullable<int> Nosave
		{
			get
			{
				return this._Nosave;
			}
			set
			{
				if ((this._Nosave != value))
				{
					this.OnNosaveChanging(value);
					this.SendPropertyChanging();
					this._Nosave = value;
					this.SendPropertyChanged("Nosave");
					this.OnNosaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
		public System.Nullable<int> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPoint", DbType="Float")]
		public System.Nullable<double> TotalPoint
		{
			get
			{
				return this._TotalPoint;
			}
			set
			{
				if ((this._TotalPoint != value))
				{
					this.OnTotalPointChanging(value);
					this.SendPropertyChanging();
					this._TotalPoint = value;
					this.SendPropertyChanged("TotalPoint");
					this.OnTotalPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(100)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_QualitativePoint", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.QualitativePoints.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.QualitativePoints.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questionnaire")]
	public partial class Questionnaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _IDGroup;
		
		private string _Name;
		
		private string _Editor;
		
		private string _Answers;
		
		private System.Nullable<int> _SortCol;
		
		private bool _YesNo;
		
		private EntitySet<QAPlus> _QAPlus;
		
		private EntityRef<QuestionnaireGroup> _QuestionnaireGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDGroupChanging(System.Guid value);
    partial void OnIDGroupChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEditorChanging(string value);
    partial void OnEditorChanged();
    partial void OnAnswersChanging(string value);
    partial void OnAnswersChanged();
    partial void OnSortColChanging(System.Nullable<int> value);
    partial void OnSortColChanged();
    partial void OnYesNoChanging(bool value);
    partial void OnYesNoChanged();
    #endregion
		
		public Questionnaire()
		{
			this._QAPlus = new EntitySet<QAPlus>(new Action<QAPlus>(this.attach_QAPlus), new Action<QAPlus>(this.detach_QAPlus));
			this._QuestionnaireGroup = default(EntityRef<QuestionnaireGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGroup", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IDGroup
		{
			get
			{
				return this._IDGroup;
			}
			set
			{
				if ((this._IDGroup != value))
				{
					if (this._QuestionnaireGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGroupChanging(value);
					this.SendPropertyChanging();
					this._IDGroup = value;
					this.SendPropertyChanged("IDGroup");
					this.OnIDGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editor", DbType="NVarChar(70)")]
		public string Editor
		{
			get
			{
				return this._Editor;
			}
			set
			{
				if ((this._Editor != value))
				{
					this.OnEditorChanging(value);
					this.SendPropertyChanging();
					this._Editor = value;
					this.SendPropertyChanged("Editor");
					this.OnEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answers", DbType="NVarChar(1500)")]
		public string Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				if ((this._Answers != value))
				{
					this.OnAnswersChanging(value);
					this.SendPropertyChanging();
					this._Answers = value;
					this.SendPropertyChanged("Answers");
					this.OnAnswersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this.OnSortColChanging(value);
					this.SendPropertyChanging();
					this._SortCol = value;
					this.SendPropertyChanged("SortCol");
					this.OnSortColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesNo", DbType="Bit NOT NULL")]
		public bool YesNo
		{
			get
			{
				return this._YesNo;
			}
			set
			{
				if ((this._YesNo != value))
				{
					this.OnYesNoChanging(value);
					this.SendPropertyChanging();
					this._YesNo = value;
					this.SendPropertyChanged("YesNo");
					this.OnYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Questionnaire_QAPlus", Storage="_QAPlus", ThisKey="ID", OtherKey="QuestionnariID")]
		public EntitySet<QAPlus> QAPlus
		{
			get
			{
				return this._QAPlus;
			}
			set
			{
				this._QAPlus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_Questionnaire", Storage="_QuestionnaireGroup", ThisKey="IDGroup", OtherKey="ID", IsForeignKey=true)]
		public QuestionnaireGroup QuestionnaireGroup
		{
			get
			{
				return this._QuestionnaireGroup.Entity;
			}
			set
			{
				QuestionnaireGroup previousValue = this._QuestionnaireGroup.Entity;
				if (((previousValue != value) 
							|| (this._QuestionnaireGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionnaireGroup.Entity = null;
						previousValue.Questionnaires.Remove(this);
					}
					this._QuestionnaireGroup.Entity = value;
					if ((value != null))
					{
						value.Questionnaires.Add(this);
						this._IDGroup = value.ID;
					}
					else
					{
						this._IDGroup = default(System.Guid);
					}
					this.SendPropertyChanged("QuestionnaireGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = this;
		}
		
		private void detach_QAPlus(QAPlus entity)
		{
			this.SendPropertyChanging();
			entity.Questionnaire = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionnaireGroup")]
	public partial class QuestionnaireGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _IDParent;
		
		private string _Name;
		
		private int _IDint;
		
		private EntitySet<PreventingStartAndEnd> _PreventingStartAndEnds;
		
		private EntitySet<Questionnaire> _Questionnaires;
		
		private EntitySet<QuestionnaireGroup> _QuestionnaireGroups;
		
		private EntityRef<QuestionnaireGroup> _QuestionnaireGroup1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDParentChanging(System.Nullable<System.Guid> value);
    partial void OnIDParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public QuestionnaireGroup()
		{
			this._PreventingStartAndEnds = new EntitySet<PreventingStartAndEnd>(new Action<PreventingStartAndEnd>(this.attach_PreventingStartAndEnds), new Action<PreventingStartAndEnd>(this.detach_PreventingStartAndEnds));
			this._Questionnaires = new EntitySet<Questionnaire>(new Action<Questionnaire>(this.attach_Questionnaires), new Action<Questionnaire>(this.detach_Questionnaires));
			this._QuestionnaireGroups = new EntitySet<QuestionnaireGroup>(new Action<QuestionnaireGroup>(this.attach_QuestionnaireGroups), new Action<QuestionnaireGroup>(this.detach_QuestionnaireGroups));
			this._QuestionnaireGroup1 = default(EntityRef<QuestionnaireGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDParent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDParent
		{
			get
			{
				return this._IDParent;
			}
			set
			{
				if ((this._IDParent != value))
				{
					if (this._QuestionnaireGroup1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDParentChanging(value);
					this.SendPropertyChanging();
					this._IDParent = value;
					this.SendPropertyChanged("IDParent");
					this.OnIDParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_PreventingStartAndEnd", Storage="_PreventingStartAndEnds", ThisKey="ID", OtherKey="PereventionDevice")]
		public EntitySet<PreventingStartAndEnd> PreventingStartAndEnds
		{
			get
			{
				return this._PreventingStartAndEnds;
			}
			set
			{
				this._PreventingStartAndEnds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_Questionnaire", Storage="_Questionnaires", ThisKey="ID", OtherKey="IDGroup")]
		public EntitySet<Questionnaire> Questionnaires
		{
			get
			{
				return this._Questionnaires;
			}
			set
			{
				this._Questionnaires.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_QuestionnaireGroup", Storage="_QuestionnaireGroups", ThisKey="ID", OtherKey="IDParent")]
		public EntitySet<QuestionnaireGroup> QuestionnaireGroups
		{
			get
			{
				return this._QuestionnaireGroups;
			}
			set
			{
				this._QuestionnaireGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionnaireGroup_QuestionnaireGroup", Storage="_QuestionnaireGroup1", ThisKey="IDParent", OtherKey="ID", IsForeignKey=true)]
		public QuestionnaireGroup QuestionnaireGroup1
		{
			get
			{
				return this._QuestionnaireGroup1.Entity;
			}
			set
			{
				QuestionnaireGroup previousValue = this._QuestionnaireGroup1.Entity;
				if (((previousValue != value) 
							|| (this._QuestionnaireGroup1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionnaireGroup1.Entity = null;
						previousValue.QuestionnaireGroups.Remove(this);
					}
					this._QuestionnaireGroup1.Entity = value;
					if ((value != null))
					{
						value.QuestionnaireGroups.Add(this);
						this._IDParent = value.ID;
					}
					else
					{
						this._IDParent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("QuestionnaireGroup1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreventingStartAndEnds(PreventingStartAndEnd entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup = this;
		}
		
		private void detach_PreventingStartAndEnds(PreventingStartAndEnd entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup = null;
		}
		
		private void attach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup = this;
		}
		
		private void detach_Questionnaires(Questionnaire entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup = null;
		}
		
		private void attach_QuestionnaireGroups(QuestionnaireGroup entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup1 = this;
		}
		
		private void detach_QuestionnaireGroups(QuestionnaireGroup entity)
		{
			this.SendPropertyChanging();
			entity.QuestionnaireGroup1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recall")]
	public partial class Recall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _IDScreening;
		
		private string _ScreeningDate;
		
		private bool _Admitted;
		
		private string _AdmitDate;
		
		private string _RecallCause;
		
		private string _RecallDate;
		
		private string _RecallResult;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Screening> _Screening;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnIDScreeningChanging(System.Nullable<System.Guid> value);
    partial void OnIDScreeningChanged();
    partial void OnScreeningDateChanging(string value);
    partial void OnScreeningDateChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnRecallCauseChanging(string value);
    partial void OnRecallCauseChanged();
    partial void OnRecallDateChanging(string value);
    partial void OnRecallDateChanged();
    partial void OnRecallResultChanging(string value);
    partial void OnRecallResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public Recall()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Person = default(EntityRef<Person>);
			this._Screening = default(EntityRef<Screening>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDScreening", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDScreening
		{
			get
			{
				return this._IDScreening;
			}
			set
			{
				if ((this._IDScreening != value))
				{
					if (this._Screening.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDScreeningChanging(value);
					this.SendPropertyChanging();
					this._IDScreening = value;
					this.SendPropertyChanged("IDScreening");
					this.OnIDScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningDate", DbType="NVarChar(10)")]
		public string ScreeningDate
		{
			get
			{
				return this._ScreeningDate;
			}
			set
			{
				if ((this._ScreeningDate != value))
				{
					this.OnScreeningDateChanging(value);
					this.SendPropertyChanging();
					this._ScreeningDate = value;
					this.SendPropertyChanged("ScreeningDate");
					this.OnScreeningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallCause", DbType="NVarChar(200)")]
		public string RecallCause
		{
			get
			{
				return this._RecallCause;
			}
			set
			{
				if ((this._RecallCause != value))
				{
					this.OnRecallCauseChanging(value);
					this.SendPropertyChanging();
					this._RecallCause = value;
					this.SendPropertyChanged("RecallCause");
					this.OnRecallCauseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallDate", DbType="NVarChar(10)")]
		public string RecallDate
		{
			get
			{
				return this._RecallDate;
			}
			set
			{
				if ((this._RecallDate != value))
				{
					this.OnRecallDateChanging(value);
					this.SendPropertyChanging();
					this._RecallDate = value;
					this.SendPropertyChanged("RecallDate");
					this.OnRecallDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecallResult", DbType="NVarChar(100)")]
		public string RecallResult
		{
			get
			{
				return this._RecallResult;
			}
			set
			{
				if ((this._RecallResult != value))
				{
					this.OnRecallResultChanging(value);
					this.SendPropertyChanging();
					this._RecallResult = value;
					this.SendPropertyChanged("RecallResult");
					this.OnRecallResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recall_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RecallID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Recall", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Recalls.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Recalls.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_Recall", Storage="_Screening", ThisKey="IDScreening", OtherKey="ID", IsForeignKey=true)]
		public Screening Screening
		{
			get
			{
				return this._Screening.Entity;
			}
			set
			{
				Screening previousValue = this._Screening.Entity;
				if (((previousValue != value) 
							|| (this._Screening.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Screening.Entity = null;
						previousValue.Recalls.Remove(this);
					}
					this._Screening.Entity = value;
					if ((value != null))
					{
						value.Recalls.Add(this);
						this._IDScreening = value.ID;
					}
					else
					{
						this._IDScreening = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Screening");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Recall = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Recall = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenServiceMID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<System.Guid> _StaffID;
		
		private bool _Priority;
		
		private System.Nullable<System.Guid> _DestinationWard;
		
		private string _SuggestedDate;
		
		private string _SuggestedTime;
		
		private string _StartDateLicense;
		
		private string _EndDateLicense;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private int _AdmitDateCount;
		
		private string _Comment;
		
		private bool _Hide;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceMIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnStaffIDChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnDestinationWardChanging(System.Nullable<System.Guid> value);
    partial void OnDestinationWardChanged();
    partial void OnSuggestedDateChanging(string value);
    partial void OnSuggestedDateChanged();
    partial void OnSuggestedTimeChanging(string value);
    partial void OnSuggestedTimeChanged();
    partial void OnStartDateLicenseChanging(string value);
    partial void OnStartDateLicenseChanged();
    partial void OnEndDateLicenseChanging(string value);
    partial void OnEndDateLicenseChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnAdmitDateCountChanging(int value);
    partial void OnAdmitDateCountChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    #endregion
		
		public Reference()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationWard", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DestinationWard
		{
			get
			{
				return this._DestinationWard;
			}
			set
			{
				if ((this._DestinationWard != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDestinationWardChanging(value);
					this.SendPropertyChanging();
					this._DestinationWard = value;
					this.SendPropertyChanged("DestinationWard");
					this.OnDestinationWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedDate", DbType="NVarChar(10)")]
		public string SuggestedDate
		{
			get
			{
				return this._SuggestedDate;
			}
			set
			{
				if ((this._SuggestedDate != value))
				{
					this.OnSuggestedDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestedDate = value;
					this.SendPropertyChanged("SuggestedDate");
					this.OnSuggestedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedTime", DbType="NVarChar(8)")]
		public string SuggestedTime
		{
			get
			{
				return this._SuggestedTime;
			}
			set
			{
				if ((this._SuggestedTime != value))
				{
					this.OnSuggestedTimeChanging(value);
					this.SendPropertyChanging();
					this._SuggestedTime = value;
					this.SendPropertyChanged("SuggestedTime");
					this.OnSuggestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateLicense", DbType="NVarChar(10)")]
		public string StartDateLicense
		{
			get
			{
				return this._StartDateLicense;
			}
			set
			{
				if ((this._StartDateLicense != value))
				{
					this.OnStartDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._StartDateLicense = value;
					this.SendPropertyChanged("StartDateLicense");
					this.OnStartDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateLicense", DbType="NVarChar(10)")]
		public string EndDateLicense
		{
			get
			{
				return this._EndDateLicense;
			}
			set
			{
				if ((this._EndDateLicense != value))
				{
					this.OnEndDateLicenseChanging(value);
					this.SendPropertyChanging();
					this._EndDateLicense = value;
					this.SendPropertyChanged("EndDateLicense");
					this.OnEndDateLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDateCount", DbType="Int NOT NULL")]
		public int AdmitDateCount
		{
			get
			{
				return this._AdmitDateCount;
			}
			set
			{
				if ((this._AdmitDateCount != value))
				{
					this.OnAdmitDateCountChanging(value);
					this.SendPropertyChanging();
					this._AdmitDateCount = value;
					this.SendPropertyChanged("AdmitDateCount");
					this.OnAdmitDateCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reference_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RefrenceID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference", Storage="_Department", ThisKey="DestinationWard", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._DestinationWard = value.ID;
					}
					else
					{
						this._DestinationWard = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Reference1", Storage="_Department1", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.References1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.References1.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Reference", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.References.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Reference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RefResult")]
	public partial class RefResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDGsm;
		
		private string _RefDate;
		
		private string _Item;
		
		private string _RL;
		
		private System.Nullable<System.Guid> _DepID;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreationUserID;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGsmChanging(System.Nullable<System.Guid> value);
    partial void OnIDGsmChanged();
    partial void OnRefDateChanging(string value);
    partial void OnRefDateChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnRLChanging(string value);
    partial void OnRLChanged();
    partial void OnDepIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserIDChanging(System.Nullable<int> value);
    partial void OnCreationUserIDChanged();
    #endregion
		
		public RefResult()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGsm", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGsm
		{
			get
			{
				return this._IDGsm;
			}
			set
			{
				if ((this._IDGsm != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGsmChanging(value);
					this.SendPropertyChanging();
					this._IDGsm = value;
					this.SendPropertyChanged("IDGsm");
					this.OnIDGsmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefDate", DbType="NChar(10)")]
		public string RefDate
		{
			get
			{
				return this._RefDate;
			}
			set
			{
				if ((this._RefDate != value))
				{
					this.OnRefDateChanging(value);
					this.SendPropertyChanging();
					this._RefDate = value;
					this.SendPropertyChanged("RefDate");
					this.OnRefDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="NVarChar(15)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RL", DbType="NChar(10)")]
		public string RL
		{
			get
			{
				return this._RL;
			}
			set
			{
				if ((this._RL != value))
				{
					this.OnRLChanging(value);
					this.SendPropertyChanging();
					this._RL = value;
					this.SendPropertyChanged("RL");
					this.OnRLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepID
		{
			get
			{
				return this._DepID;
			}
			set
			{
				if ((this._DepID != value))
				{
					this.OnDepIDChanging(value);
					this.SendPropertyChanging();
					this._DepID = value;
					this.SendPropertyChanged("DepID");
					this.OnDepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="Int")]
		public System.Nullable<int> CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_RefResult", Storage="_GivenServiceM", ThisKey="IDGsm", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.RefResults.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.RefResults.Add(this);
						this._IDGsm = value.ID;
					}
					else
					{
						this._IDGsm = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestD")]
	public partial class RequestD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _ReqMID;
		
		private System.Nullable<System.Guid> _Drug;
		
		private System.Nullable<int> _Amount;
		
		private bool _DrugDelivery;
		
		private string _Comment;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _WarhouseKeeper;
		
		private System.Nullable<int> _AgoAmountDelivery;
		
		private System.Nullable<int> _AmountDelivery;
		
		private bool _Indent;
		
		private string _WarhouseKeeperDate;
		
		private string _WarhouseKeeperTime;
		
		private System.Nullable<int> _WarhouseKeeperUSER;
		
		private string _WarhouseKeeperUSERFullName;
		
		private bool _DRConfirm;
		
		private bool _Factor;
		
		private string _DRConfirmDate;
		
		private string _DRConfirmTime;
		
		private string _AmountDeliveryDate;
		
		private string _AmountDeliveryTime;
		
		private System.Nullable<int> _AmountDeliveryUser;
		
		private System.Nullable<System.Guid> _ParentRequest;
		
		private bool _AmountDeliveryBit;
		
		private bool _Lock;
		
		private int _IDint;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<RequestM> _RequestM;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnReqMIDChanging(System.Nullable<System.Guid> value);
    partial void OnReqMIDChanged();
    partial void OnDrugChanging(System.Nullable<System.Guid> value);
    partial void OnDrugChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnDrugDeliveryChanging(bool value);
    partial void OnDrugDeliveryChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnWarhouseKeeperChanging(bool value);
    partial void OnWarhouseKeeperChanged();
    partial void OnAgoAmountDeliveryChanging(System.Nullable<int> value);
    partial void OnAgoAmountDeliveryChanged();
    partial void OnAmountDeliveryChanging(System.Nullable<int> value);
    partial void OnAmountDeliveryChanged();
    partial void OnIndentChanging(bool value);
    partial void OnIndentChanged();
    partial void OnWarhouseKeeperDateChanging(string value);
    partial void OnWarhouseKeeperDateChanged();
    partial void OnWarhouseKeeperTimeChanging(string value);
    partial void OnWarhouseKeeperTimeChanged();
    partial void OnWarhouseKeeperUSERChanging(System.Nullable<int> value);
    partial void OnWarhouseKeeperUSERChanged();
    partial void OnWarhouseKeeperUSERFullNameChanging(string value);
    partial void OnWarhouseKeeperUSERFullNameChanged();
    partial void OnDRConfirmChanging(bool value);
    partial void OnDRConfirmChanged();
    partial void OnFactorChanging(bool value);
    partial void OnFactorChanged();
    partial void OnDRConfirmDateChanging(string value);
    partial void OnDRConfirmDateChanged();
    partial void OnDRConfirmTimeChanging(string value);
    partial void OnDRConfirmTimeChanged();
    partial void OnAmountDeliveryDateChanging(string value);
    partial void OnAmountDeliveryDateChanged();
    partial void OnAmountDeliveryTimeChanging(string value);
    partial void OnAmountDeliveryTimeChanged();
    partial void OnAmountDeliveryUserChanging(System.Nullable<int> value);
    partial void OnAmountDeliveryUserChanged();
    partial void OnParentRequestChanging(System.Nullable<System.Guid> value);
    partial void OnParentRequestChanged();
    partial void OnAmountDeliveryBitChanging(bool value);
    partial void OnAmountDeliveryBitChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public RequestD()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._RequestM = default(EntityRef<RequestM>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReqMID
		{
			get
			{
				return this._ReqMID;
			}
			set
			{
				if ((this._ReqMID != value))
				{
					if (this._RequestM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReqMIDChanging(value);
					this.SendPropertyChanging();
					this._ReqMID = value;
					this.SendPropertyChanged("ReqMID");
					this.OnReqMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drug", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Drug
		{
			get
			{
				return this._Drug;
			}
			set
			{
				if ((this._Drug != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugChanging(value);
					this.SendPropertyChanging();
					this._Drug = value;
					this.SendPropertyChanged("Drug");
					this.OnDrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugDelivery", DbType="Bit NOT NULL")]
		public bool DrugDelivery
		{
			get
			{
				return this._DrugDelivery;
			}
			set
			{
				if ((this._DrugDelivery != value))
				{
					this.OnDrugDeliveryChanging(value);
					this.SendPropertyChanging();
					this._DrugDelivery = value;
					this.SendPropertyChanged("DrugDelivery");
					this.OnDrugDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeper", DbType="Bit NOT NULL")]
		public bool WarhouseKeeper
		{
			get
			{
				return this._WarhouseKeeper;
			}
			set
			{
				if ((this._WarhouseKeeper != value))
				{
					this.OnWarhouseKeeperChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeper = value;
					this.SendPropertyChanged("WarhouseKeeper");
					this.OnWarhouseKeeperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgoAmountDelivery", DbType="Int")]
		public System.Nullable<int> AgoAmountDelivery
		{
			get
			{
				return this._AgoAmountDelivery;
			}
			set
			{
				if ((this._AgoAmountDelivery != value))
				{
					this.OnAgoAmountDeliveryChanging(value);
					this.SendPropertyChanging();
					this._AgoAmountDelivery = value;
					this.SendPropertyChanged("AgoAmountDelivery");
					this.OnAgoAmountDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDelivery", DbType="Int")]
		public System.Nullable<int> AmountDelivery
		{
			get
			{
				return this._AmountDelivery;
			}
			set
			{
				if ((this._AmountDelivery != value))
				{
					this.OnAmountDeliveryChanging(value);
					this.SendPropertyChanging();
					this._AmountDelivery = value;
					this.SendPropertyChanged("AmountDelivery");
					this.OnAmountDeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indent", DbType="Bit NOT NULL")]
		public bool Indent
		{
			get
			{
				return this._Indent;
			}
			set
			{
				if ((this._Indent != value))
				{
					this.OnIndentChanging(value);
					this.SendPropertyChanging();
					this._Indent = value;
					this.SendPropertyChanged("Indent");
					this.OnIndentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperDate", DbType="NVarChar(10)")]
		public string WarhouseKeeperDate
		{
			get
			{
				return this._WarhouseKeeperDate;
			}
			set
			{
				if ((this._WarhouseKeeperDate != value))
				{
					this.OnWarhouseKeeperDateChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperDate = value;
					this.SendPropertyChanged("WarhouseKeeperDate");
					this.OnWarhouseKeeperDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperTime", DbType="NVarChar(8)")]
		public string WarhouseKeeperTime
		{
			get
			{
				return this._WarhouseKeeperTime;
			}
			set
			{
				if ((this._WarhouseKeeperTime != value))
				{
					this.OnWarhouseKeeperTimeChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperTime = value;
					this.SendPropertyChanged("WarhouseKeeperTime");
					this.OnWarhouseKeeperTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperUSER", DbType="Int")]
		public System.Nullable<int> WarhouseKeeperUSER
		{
			get
			{
				return this._WarhouseKeeperUSER;
			}
			set
			{
				if ((this._WarhouseKeeperUSER != value))
				{
					this.OnWarhouseKeeperUSERChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperUSER = value;
					this.SendPropertyChanged("WarhouseKeeperUSER");
					this.OnWarhouseKeeperUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarhouseKeeperUSERFullName", DbType="NVarChar(100)")]
		public string WarhouseKeeperUSERFullName
		{
			get
			{
				return this._WarhouseKeeperUSERFullName;
			}
			set
			{
				if ((this._WarhouseKeeperUSERFullName != value))
				{
					this.OnWarhouseKeeperUSERFullNameChanging(value);
					this.SendPropertyChanging();
					this._WarhouseKeeperUSERFullName = value;
					this.SendPropertyChanged("WarhouseKeeperUSERFullName");
					this.OnWarhouseKeeperUSERFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRConfirm", DbType="Bit NOT NULL")]
		public bool DRConfirm
		{
			get
			{
				return this._DRConfirm;
			}
			set
			{
				if ((this._DRConfirm != value))
				{
					this.OnDRConfirmChanging(value);
					this.SendPropertyChanging();
					this._DRConfirm = value;
					this.SendPropertyChanged("DRConfirm");
					this.OnDRConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Bit NOT NULL")]
		public bool Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRConfirmDate", DbType="NVarChar(10)")]
		public string DRConfirmDate
		{
			get
			{
				return this._DRConfirmDate;
			}
			set
			{
				if ((this._DRConfirmDate != value))
				{
					this.OnDRConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._DRConfirmDate = value;
					this.SendPropertyChanged("DRConfirmDate");
					this.OnDRConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRConfirmTime", DbType="NVarChar(8)")]
		public string DRConfirmTime
		{
			get
			{
				return this._DRConfirmTime;
			}
			set
			{
				if ((this._DRConfirmTime != value))
				{
					this.OnDRConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._DRConfirmTime = value;
					this.SendPropertyChanged("DRConfirmTime");
					this.OnDRConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryDate", DbType="NVarChar(10)")]
		public string AmountDeliveryDate
		{
			get
			{
				return this._AmountDeliveryDate;
			}
			set
			{
				if ((this._AmountDeliveryDate != value))
				{
					this.OnAmountDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryDate = value;
					this.SendPropertyChanged("AmountDeliveryDate");
					this.OnAmountDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryTime", DbType="NVarChar(8)")]
		public string AmountDeliveryTime
		{
			get
			{
				return this._AmountDeliveryTime;
			}
			set
			{
				if ((this._AmountDeliveryTime != value))
				{
					this.OnAmountDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryTime = value;
					this.SendPropertyChanged("AmountDeliveryTime");
					this.OnAmountDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryUser", DbType="Int")]
		public System.Nullable<int> AmountDeliveryUser
		{
			get
			{
				return this._AmountDeliveryUser;
			}
			set
			{
				if ((this._AmountDeliveryUser != value))
				{
					this.OnAmountDeliveryUserChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryUser = value;
					this.SendPropertyChanged("AmountDeliveryUser");
					this.OnAmountDeliveryUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRequest", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentRequest
		{
			get
			{
				return this._ParentRequest;
			}
			set
			{
				if ((this._ParentRequest != value))
				{
					this.OnParentRequestChanging(value);
					this.SendPropertyChanging();
					this._ParentRequest = value;
					this.SendPropertyChanged("ParentRequest");
					this.OnParentRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDeliveryBit", DbType="Bit NOT NULL")]
		public bool AmountDeliveryBit
		{
			get
			{
				return this._AmountDeliveryBit;
			}
			set
			{
				if ((this._AmountDeliveryBit != value))
				{
					this.OnAmountDeliveryBitChanging(value);
					this.SendPropertyChanging();
					this._AmountDeliveryBit = value;
					this.SendPropertyChanged("AmountDeliveryBit");
					this.OnAmountDeliveryBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestD_Order", Storage="_Orders", ThisKey="ID", OtherKey="ReqDID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestM_RequestD", Storage="_RequestM", ThisKey="ReqMID", OtherKey="ID", IsForeignKey=true)]
		public RequestM RequestM
		{
			get
			{
				return this._RequestM.Entity;
			}
			set
			{
				RequestM previousValue = this._RequestM.Entity;
				if (((previousValue != value) 
							|| (this._RequestM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestM.Entity = null;
						previousValue.RequestDs.Remove(this);
					}
					this._RequestM.Entity = value;
					if ((value != null))
					{
						value.RequestDs.Add(this);
						this._ReqMID = value.ID;
					}
					else
					{
						this._ReqMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RequestM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_RequestD", Storage="_Service", ThisKey="Drug", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.RequestDs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.RequestDs.Add(this);
						this._Drug = value.ID;
					}
					else
					{
						this._Drug = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.RequestD = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.RequestD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestM")]
	public partial class RequestM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _FromUnit;
		
		private System.Nullable<System.Guid> _ToUnit;
		
		private string _Date;
		
		private string _Time;
		
		private string _Comment;
		
		private bool _Request;
		
		private bool _Confirm;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _FromWard;
		
		private string _UserFullname;
		
		private int _IDint;
		
		private EntitySet<RequestD> _RequestDs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnFromUnitChanging(System.Nullable<System.Guid> value);
    partial void OnFromUnitChanged();
    partial void OnToUnitChanging(System.Nullable<System.Guid> value);
    partial void OnToUnitChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRequestChanging(bool value);
    partial void OnRequestChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnFromWardChanging(bool value);
    partial void OnFromWardChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    #endregion
		
		public RequestM()
		{
			this._RequestDs = new EntitySet<RequestD>(new Action<RequestD>(this.attach_RequestDs), new Action<RequestD>(this.detach_RequestDs));
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUnit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FromUnit
		{
			get
			{
				return this._FromUnit;
			}
			set
			{
				if ((this._FromUnit != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUnitChanging(value);
					this.SendPropertyChanging();
					this._FromUnit = value;
					this.SendPropertyChanged("FromUnit");
					this.OnFromUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUnit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ToUnit
		{
			get
			{
				return this._ToUnit;
			}
			set
			{
				if ((this._ToUnit != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToUnitChanging(value);
					this.SendPropertyChanging();
					this._ToUnit = value;
					this.SendPropertyChanged("ToUnit");
					this.OnToUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Request", DbType="Bit NOT NULL")]
		public bool Request
		{
			get
			{
				return this._Request;
			}
			set
			{
				if ((this._Request != value))
				{
					this.OnRequestChanging(value);
					this.SendPropertyChanging();
					this._Request = value;
					this.SendPropertyChanged("Request");
					this.OnRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromWard", DbType="Bit NOT NULL")]
		public bool FromWard
		{
			get
			{
				return this._FromWard;
			}
			set
			{
				if ((this._FromWard != value))
				{
					this.OnFromWardChanging(value);
					this.SendPropertyChanging();
					this._FromWard = value;
					this.SendPropertyChanged("FromWard");
					this.OnFromWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestM_RequestD", Storage="_RequestDs", ThisKey="ID", OtherKey="ReqMID")]
		public EntitySet<RequestD> RequestDs
		{
			get
			{
				return this._RequestDs;
			}
			set
			{
				this._RequestDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM", Storage="_Department", ThisKey="FromUnit", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.RequestMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.RequestMs.Add(this);
						this._FromUnit = value.ID;
					}
					else
					{
						this._FromUnit = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestM1", Storage="_Department1", ThisKey="ToUnit", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.RequestMs1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.RequestMs1.Add(this);
						this._ToUnit = value.ID;
					}
					else
					{
						this._ToUnit = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.RequestM = this;
		}
		
		private void detach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.RequestM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestPermission")]
	public partial class RequestPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _FromUnit;
		
		private System.Nullable<System.Guid> _ToUnit;
		
		private System.Nullable<bool> _Permission;
		
		private System.Nullable<int> _CreatiorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModifactor;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _Department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFromUnitChanging(System.Nullable<System.Guid> value);
    partial void OnFromUnitChanged();
    partial void OnToUnitChanging(System.Nullable<System.Guid> value);
    partial void OnToUnitChanged();
    partial void OnPermissionChanging(System.Nullable<bool> value);
    partial void OnPermissionChanged();
    partial void OnCreatiorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatiorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifactorChanging(System.Nullable<int> value);
    partial void OnLastModifactorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RequestPermission()
		{
			this._Department = default(EntityRef<Department>);
			this._Department1 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUnit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FromUnit
		{
			get
			{
				return this._FromUnit;
			}
			set
			{
				if ((this._FromUnit != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromUnitChanging(value);
					this.SendPropertyChanging();
					this._FromUnit = value;
					this.SendPropertyChanged("FromUnit");
					this.OnFromUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUnit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ToUnit
		{
			get
			{
				return this._ToUnit;
			}
			set
			{
				if ((this._ToUnit != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToUnitChanging(value);
					this.SendPropertyChanging();
					this._ToUnit = value;
					this.SendPropertyChanged("ToUnit");
					this.OnToUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="Bit")]
		public System.Nullable<bool> Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatiorUserID", DbType="Int")]
		public System.Nullable<int> CreatiorUserID
		{
			get
			{
				return this._CreatiorUserID;
			}
			set
			{
				if ((this._CreatiorUserID != value))
				{
					this.OnCreatiorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatiorUserID = value;
					this.SendPropertyChanged("CreatiorUserID");
					this.OnCreatiorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifactor", DbType="Int")]
		public System.Nullable<int> LastModifactor
		{
			get
			{
				return this._LastModifactor;
			}
			set
			{
				if ((this._LastModifactor != value))
				{
					this.OnLastModifactorChanging(value);
					this.SendPropertyChanging();
					this._LastModifactor = value;
					this.SendPropertyChanged("LastModifactor");
					this.OnLastModifactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestPermission", Storage="_Department", ThisKey="FromUnit", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.RequestPermissions.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.RequestPermissions.Add(this);
						this._FromUnit = value.ID;
					}
					else
					{
						this._FromUnit = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_RequestPermission1", Storage="_Department1", ThisKey="ToUnit", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.RequestPermissions1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.RequestPermissions1.Add(this);
						this._ToUnit = value.ID;
					}
					else
					{
						this._ToUnit = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rest")]
	public partial class Rest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private string _Diagnosis;
		
		private string _FromDate;
		
		private System.Nullable<int> _ForPeriod;
		
		private string _ReviewDate;
		
		private System.Nullable<bool> _GivingBirth;
		
		private string _GivingBirthComment;
		
		private System.Nullable<int> _CreaatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnDiagnosisChanging(string value);
    partial void OnDiagnosisChanged();
    partial void OnFromDateChanging(string value);
    partial void OnFromDateChanged();
    partial void OnForPeriodChanging(System.Nullable<int> value);
    partial void OnForPeriodChanged();
    partial void OnReviewDateChanging(string value);
    partial void OnReviewDateChanged();
    partial void OnGivingBirthChanging(System.Nullable<bool> value);
    partial void OnGivingBirthChanged();
    partial void OnGivingBirthCommentChanging(string value);
    partial void OnGivingBirthCommentChanged();
    partial void OnCreaatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreaatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public Rest()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnosis", DbType="NVarChar(MAX)")]
		public string Diagnosis
		{
			get
			{
				return this._Diagnosis;
			}
			set
			{
				if ((this._Diagnosis != value))
				{
					this.OnDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._Diagnosis = value;
					this.SendPropertyChanged("Diagnosis");
					this.OnDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="NVarChar(10)")]
		public string FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForPeriod", DbType="Int")]
		public System.Nullable<int> ForPeriod
		{
			get
			{
				return this._ForPeriod;
			}
			set
			{
				if ((this._ForPeriod != value))
				{
					this.OnForPeriodChanging(value);
					this.SendPropertyChanging();
					this._ForPeriod = value;
					this.SendPropertyChanged("ForPeriod");
					this.OnForPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewDate", DbType="NVarChar(10)")]
		public string ReviewDate
		{
			get
			{
				return this._ReviewDate;
			}
			set
			{
				if ((this._ReviewDate != value))
				{
					this.OnReviewDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewDate = value;
					this.SendPropertyChanged("ReviewDate");
					this.OnReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivingBirth", DbType="Bit")]
		public System.Nullable<bool> GivingBirth
		{
			get
			{
				return this._GivingBirth;
			}
			set
			{
				if ((this._GivingBirth != value))
				{
					this.OnGivingBirthChanging(value);
					this.SendPropertyChanging();
					this._GivingBirth = value;
					this.SendPropertyChanged("GivingBirth");
					this.OnGivingBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivingBirthComment", DbType="NVarChar(MAX)")]
		public string GivingBirthComment
		{
			get
			{
				return this._GivingBirthComment;
			}
			set
			{
				if ((this._GivingBirthComment != value))
				{
					this.OnGivingBirthCommentChanging(value);
					this.SendPropertyChanging();
					this._GivingBirthComment = value;
					this.SendPropertyChanged("GivingBirthComment");
					this.OnGivingBirthCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreaatorUserID", DbType="Int")]
		public System.Nullable<int> CreaatorUserID
		{
			get
			{
				return this._CreaatorUserID;
			}
			set
			{
				if ((this._CreaatorUserID != value))
				{
					this.OnCreaatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreaatorUserID = value;
					this.SendPropertyChanged("CreaatorUserID");
					this.OnCreaatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Rest", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Rests.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Rests.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RiskFactorHistory")]
	public partial class RiskFactorHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Date;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    #endregion
		
		public RiskFactorHistory()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RiskFactorHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.RiskFactorHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.RiskFactorHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVCauseOfReferral")]
	public partial class RVCauseOfReferral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _Historydisease;
		
		private string _Medicalhistory;
		
		private string _Causereferral;
		
		private string _Typeofpsychiatricdisorders;
		
		private string _doctor;
		
		private string _Kindofadvice;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnHistorydiseaseChanging(string value);
    partial void OnHistorydiseaseChanged();
    partial void OnMedicalhistoryChanging(string value);
    partial void OnMedicalhistoryChanged();
    partial void OnCausereferralChanging(string value);
    partial void OnCausereferralChanged();
    partial void OnTypeofpsychiatricdisordersChanging(string value);
    partial void OnTypeofpsychiatricdisordersChanged();
    partial void OndoctorChanging(string value);
    partial void OndoctorChanged();
    partial void OnKindofadviceChanging(string value);
    partial void OnKindofadviceChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RVCauseOfReferral()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Historydisease", DbType="NVarChar(100)")]
		public string Historydisease
		{
			get
			{
				return this._Historydisease;
			}
			set
			{
				if ((this._Historydisease != value))
				{
					this.OnHistorydiseaseChanging(value);
					this.SendPropertyChanging();
					this._Historydisease = value;
					this.SendPropertyChanged("Historydisease");
					this.OnHistorydiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medicalhistory", DbType="NVarChar(100)")]
		public string Medicalhistory
		{
			get
			{
				return this._Medicalhistory;
			}
			set
			{
				if ((this._Medicalhistory != value))
				{
					this.OnMedicalhistoryChanging(value);
					this.SendPropertyChanging();
					this._Medicalhistory = value;
					this.SendPropertyChanged("Medicalhistory");
					this.OnMedicalhistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Causereferral", DbType="NVarChar(100)")]
		public string Causereferral
		{
			get
			{
				return this._Causereferral;
			}
			set
			{
				if ((this._Causereferral != value))
				{
					this.OnCausereferralChanging(value);
					this.SendPropertyChanging();
					this._Causereferral = value;
					this.SendPropertyChanged("Causereferral");
					this.OnCausereferralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typeofpsychiatricdisorders", DbType="NVarChar(100)")]
		public string Typeofpsychiatricdisorders
		{
			get
			{
				return this._Typeofpsychiatricdisorders;
			}
			set
			{
				if ((this._Typeofpsychiatricdisorders != value))
				{
					this.OnTypeofpsychiatricdisordersChanging(value);
					this.SendPropertyChanging();
					this._Typeofpsychiatricdisorders = value;
					this.SendPropertyChanged("Typeofpsychiatricdisorders");
					this.OnTypeofpsychiatricdisordersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor", DbType="NVarChar(100)")]
		public string doctor
		{
			get
			{
				return this._doctor;
			}
			set
			{
				if ((this._doctor != value))
				{
					this.OndoctorChanging(value);
					this.SendPropertyChanging();
					this._doctor = value;
					this.SendPropertyChanged("doctor");
					this.OndoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kindofadvice", DbType="NVarChar(100)")]
		public string Kindofadvice
		{
			get
			{
				return this._Kindofadvice;
			}
			set
			{
				if ((this._Kindofadvice != value))
				{
					this.OnKindofadviceChanging(value);
					this.SendPropertyChanging();
					this._Kindofadvice = value;
					this.SendPropertyChanged("Kindofadvice");
					this.OnKindofadviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVCauseOfReferral", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.RVCauseOfReferrals.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.RVCauseOfReferrals.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVInitialInterview")]
	public partial class RVInitialInterview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _CauseOfReferral;
		
		private string _Personalhistory;
		
		private string _Problemstatement;
		
		private string _Familyhistory;
		
		private string _MultiaxialSensing;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnCauseOfReferralChanging(string value);
    partial void OnCauseOfReferralChanged();
    partial void OnPersonalhistoryChanging(string value);
    partial void OnPersonalhistoryChanged();
    partial void OnProblemstatementChanging(string value);
    partial void OnProblemstatementChanged();
    partial void OnFamilyhistoryChanging(string value);
    partial void OnFamilyhistoryChanged();
    partial void OnMultiaxialSensingChanging(string value);
    partial void OnMultiaxialSensingChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RVInitialInterview()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseOfReferral", DbType="NVarChar(50)")]
		public string CauseOfReferral
		{
			get
			{
				return this._CauseOfReferral;
			}
			set
			{
				if ((this._CauseOfReferral != value))
				{
					this.OnCauseOfReferralChanging(value);
					this.SendPropertyChanging();
					this._CauseOfReferral = value;
					this.SendPropertyChanged("CauseOfReferral");
					this.OnCauseOfReferralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personalhistory", DbType="NVarChar(MAX)")]
		public string Personalhistory
		{
			get
			{
				return this._Personalhistory;
			}
			set
			{
				if ((this._Personalhistory != value))
				{
					this.OnPersonalhistoryChanging(value);
					this.SendPropertyChanging();
					this._Personalhistory = value;
					this.SendPropertyChanged("Personalhistory");
					this.OnPersonalhistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Problemstatement", DbType="NVarChar(MAX)")]
		public string Problemstatement
		{
			get
			{
				return this._Problemstatement;
			}
			set
			{
				if ((this._Problemstatement != value))
				{
					this.OnProblemstatementChanging(value);
					this.SendPropertyChanging();
					this._Problemstatement = value;
					this.SendPropertyChanged("Problemstatement");
					this.OnProblemstatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Familyhistory", DbType="NVarChar(MAX)")]
		public string Familyhistory
		{
			get
			{
				return this._Familyhistory;
			}
			set
			{
				if ((this._Familyhistory != value))
				{
					this.OnFamilyhistoryChanging(value);
					this.SendPropertyChanging();
					this._Familyhistory = value;
					this.SendPropertyChanged("Familyhistory");
					this.OnFamilyhistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiaxialSensing", DbType="NVarChar(MAX)")]
		public string MultiaxialSensing
		{
			get
			{
				return this._MultiaxialSensing;
			}
			set
			{
				if ((this._MultiaxialSensing != value))
				{
					this.OnMultiaxialSensingChanging(value);
					this.SendPropertyChanging();
					this._MultiaxialSensing = value;
					this.SendPropertyChanged("MultiaxialSensing");
					this.OnMultiaxialSensingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVInitialInterview", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.RVInitialInterviews.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.RVInitialInterviews.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVPersonalInformation")]
	public partial class RVPersonalInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _name;
		
		private string _relation;
		
		private string _age;
		
		private string _birthday;
		
		private string _maritalstatus;
		
		private string _conditionbirth;
		
		private string _education;
		
		private string _fathereducation;
		
		private string _mathereducation;
		
		private string _brothernumber;
		
		private string _sisternumber;
		
		private string _littlechild;
		
		private string _typehusing;
		
		private string _address;
		
		private string _tel;
		
		private string _Marriageterm;
		
		private string _job;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnrelationChanging(string value);
    partial void OnrelationChanged();
    partial void OnageChanging(string value);
    partial void OnageChanged();
    partial void OnbirthdayChanging(string value);
    partial void OnbirthdayChanged();
    partial void OnmaritalstatusChanging(string value);
    partial void OnmaritalstatusChanged();
    partial void OnconditionbirthChanging(string value);
    partial void OnconditionbirthChanged();
    partial void OneducationChanging(string value);
    partial void OneducationChanged();
    partial void OnfathereducationChanging(string value);
    partial void OnfathereducationChanged();
    partial void OnmathereducationChanging(string value);
    partial void OnmathereducationChanged();
    partial void OnbrothernumberChanging(string value);
    partial void OnbrothernumberChanged();
    partial void OnsisternumberChanging(string value);
    partial void OnsisternumberChanged();
    partial void OnlittlechildChanging(string value);
    partial void OnlittlechildChanged();
    partial void OntypehusingChanging(string value);
    partial void OntypehusingChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnMarriagetermChanging(string value);
    partial void OnMarriagetermChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RVPersonalInformation()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relation", DbType="NVarChar(50)")]
		public string relation
		{
			get
			{
				return this._relation;
			}
			set
			{
				if ((this._relation != value))
				{
					this.OnrelationChanging(value);
					this.SendPropertyChanging();
					this._relation = value;
					this.SendPropertyChanged("relation");
					this.OnrelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="NVarChar(50)")]
		public string age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="NVarChar(50)")]
		public string birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maritalstatus", DbType="NVarChar(50)")]
		public string maritalstatus
		{
			get
			{
				return this._maritalstatus;
			}
			set
			{
				if ((this._maritalstatus != value))
				{
					this.OnmaritalstatusChanging(value);
					this.SendPropertyChanging();
					this._maritalstatus = value;
					this.SendPropertyChanged("maritalstatus");
					this.OnmaritalstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conditionbirth", DbType="NVarChar(50)")]
		public string conditionbirth
		{
			get
			{
				return this._conditionbirth;
			}
			set
			{
				if ((this._conditionbirth != value))
				{
					this.OnconditionbirthChanging(value);
					this.SendPropertyChanging();
					this._conditionbirth = value;
					this.SendPropertyChanged("conditionbirth");
					this.OnconditionbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_education", DbType="NVarChar(50)")]
		public string education
		{
			get
			{
				return this._education;
			}
			set
			{
				if ((this._education != value))
				{
					this.OneducationChanging(value);
					this.SendPropertyChanging();
					this._education = value;
					this.SendPropertyChanged("education");
					this.OneducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fathereducation", DbType="NVarChar(50)")]
		public string fathereducation
		{
			get
			{
				return this._fathereducation;
			}
			set
			{
				if ((this._fathereducation != value))
				{
					this.OnfathereducationChanging(value);
					this.SendPropertyChanging();
					this._fathereducation = value;
					this.SendPropertyChanged("fathereducation");
					this.OnfathereducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mathereducation", DbType="NVarChar(50)")]
		public string mathereducation
		{
			get
			{
				return this._mathereducation;
			}
			set
			{
				if ((this._mathereducation != value))
				{
					this.OnmathereducationChanging(value);
					this.SendPropertyChanging();
					this._mathereducation = value;
					this.SendPropertyChanged("mathereducation");
					this.OnmathereducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brothernumber", DbType="NVarChar(50)")]
		public string brothernumber
		{
			get
			{
				return this._brothernumber;
			}
			set
			{
				if ((this._brothernumber != value))
				{
					this.OnbrothernumberChanging(value);
					this.SendPropertyChanging();
					this._brothernumber = value;
					this.SendPropertyChanged("brothernumber");
					this.OnbrothernumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sisternumber", DbType="NVarChar(50)")]
		public string sisternumber
		{
			get
			{
				return this._sisternumber;
			}
			set
			{
				if ((this._sisternumber != value))
				{
					this.OnsisternumberChanging(value);
					this.SendPropertyChanging();
					this._sisternumber = value;
					this.SendPropertyChanged("sisternumber");
					this.OnsisternumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_littlechild", DbType="NVarChar(50)")]
		public string littlechild
		{
			get
			{
				return this._littlechild;
			}
			set
			{
				if ((this._littlechild != value))
				{
					this.OnlittlechildChanging(value);
					this.SendPropertyChanging();
					this._littlechild = value;
					this.SendPropertyChanged("littlechild");
					this.OnlittlechildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typehusing", DbType="NVarChar(50)")]
		public string typehusing
		{
			get
			{
				return this._typehusing;
			}
			set
			{
				if ((this._typehusing != value))
				{
					this.OntypehusingChanging(value);
					this.SendPropertyChanging();
					this._typehusing = value;
					this.SendPropertyChanged("typehusing");
					this.OntypehusingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(50)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriageterm", DbType="NVarChar(50)")]
		public string Marriageterm
		{
			get
			{
				return this._Marriageterm;
			}
			set
			{
				if ((this._Marriageterm != value))
				{
					this.OnMarriagetermChanging(value);
					this.SendPropertyChanging();
					this._Marriageterm = value;
					this.SendPropertyChanged("Marriageterm");
					this.OnMarriagetermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(50)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVPersonalInformation", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.RVPersonalInformations.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.RVPersonalInformations.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVPsychiatricIntervention")]
	public partial class RVPsychiatricIntervention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _date;
		
		private string _description;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RVPsychiatricIntervention()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="NVarChar(10)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVPsychiatricIntervention", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.RVPsychiatricInterventions.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.RVPsychiatricInterventions.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVPsychometricRecord")]
	public partial class RVPsychometricRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _TypeOfTest;
		
		private string _DateOfTest;
		
		private string _Result;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnTypeOfTestChanging(string value);
    partial void OnTypeOfTestChanged();
    partial void OnDateOfTestChanging(string value);
    partial void OnDateOfTestChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RVPsychometricRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfTest", DbType="NVarChar(50)")]
		public string TypeOfTest
		{
			get
			{
				return this._TypeOfTest;
			}
			set
			{
				if ((this._TypeOfTest != value))
				{
					this.OnTypeOfTestChanging(value);
					this.SendPropertyChanging();
					this._TypeOfTest = value;
					this.SendPropertyChanged("TypeOfTest");
					this.OnTypeOfTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfTest", DbType="NVarChar(50)")]
		public string DateOfTest
		{
			get
			{
				return this._DateOfTest;
			}
			set
			{
				if ((this._DateOfTest != value))
				{
					this.OnDateOfTestChanging(value);
					this.SendPropertyChanging();
					this._DateOfTest = value;
					this.SendPropertyChanged("DateOfTest");
					this.OnDateOfTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVRecordsOfInterventions")]
	public partial class RVRecordsOfIntervention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _Date;
		
		private string _Treatment;
		
		private string _description;
		
		private string _History;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreatorUserFullName;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTreatmentChanging(string value);
    partial void OnTreatmentChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnHistoryChanging(string value);
    partial void OnHistoryChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorUserFullNameChanging(string value);
    partial void OnCreatorUserFullNameChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    #endregion
		
		public RVRecordsOfIntervention()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Treatment", DbType="NVarChar(50)")]
		public string Treatment
		{
			get
			{
				return this._Treatment;
			}
			set
			{
				if ((this._Treatment != value))
				{
					this.OnTreatmentChanging(value);
					this.SendPropertyChanging();
					this._Treatment = value;
					this.SendPropertyChanged("Treatment");
					this.OnTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_History", DbType="NVarChar(MAX)")]
		public string History
		{
			get
			{
				return this._History;
			}
			set
			{
				if ((this._History != value))
				{
					this.OnHistoryChanging(value);
					this.SendPropertyChanging();
					this._History = value;
					this.SendPropertyChanged("History");
					this.OnHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserFullName", DbType="NVarChar(50)")]
		public string CreatorUserFullName
		{
			get
			{
				return this._CreatorUserFullName;
			}
			set
			{
				if ((this._CreatorUserFullName != value))
				{
					this.OnCreatorUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserFullName = value;
					this.SendPropertyChanged("CreatorUserFullName");
					this.OnCreatorUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(MAX)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_RVRecordsOfIntervention", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.RVRecordsOfInterventions.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.RVRecordsOfInterventions.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVU")]
	public partial class RVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Dastgah;
		
		private string _Sarfasl_Khedmati;
		
		private string _Gorooh_Khedmati;
		
		private string _Khosoosiat_Code;
		
		private System.Nullable<double> _Code_Melli;
		
		private System.Nullable<double> _Code_Namayande;
		
		private System.Nullable<double> _Sayer_Codaye_Tajmi_Shode;
		
		private string _Sharhe_Codaye_Tajmi_Shode;
		
		private System.Nullable<double> _Arzesh_Nesbi;
		
		private System.Nullable<double> _Joze_Herfeyi_26;
		
		private System.Nullable<double> _Joze_Fanni_27;
		
		private System.Nullable<double> _Arzesh_Paye_Bihooshi;
		
		private string _NationalID;
		
		private string _Comment;
		
		private System.Nullable<double> _RelativeValue;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<double> _Version;
		
		private bool _Deleted;
		
		private string _TerminologyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDastgahChanging(string value);
    partial void OnDastgahChanged();
    partial void OnSarfasl_KhedmatiChanging(string value);
    partial void OnSarfasl_KhedmatiChanged();
    partial void OnGorooh_KhedmatiChanging(string value);
    partial void OnGorooh_KhedmatiChanged();
    partial void OnKhosoosiat_CodeChanging(string value);
    partial void OnKhosoosiat_CodeChanged();
    partial void OnCode_MelliChanging(System.Nullable<double> value);
    partial void OnCode_MelliChanged();
    partial void OnCode_NamayandeChanging(System.Nullable<double> value);
    partial void OnCode_NamayandeChanged();
    partial void OnSayer_Codaye_Tajmi_ShodeChanging(System.Nullable<double> value);
    partial void OnSayer_Codaye_Tajmi_ShodeChanged();
    partial void OnSharhe_Codaye_Tajmi_ShodeChanging(string value);
    partial void OnSharhe_Codaye_Tajmi_ShodeChanged();
    partial void OnArzesh_NesbiChanging(System.Nullable<double> value);
    partial void OnArzesh_NesbiChanged();
    partial void OnJoze_Herfeyi_26Changing(System.Nullable<double> value);
    partial void OnJoze_Herfeyi_26Changed();
    partial void OnJoze_Fanni_27Changing(System.Nullable<double> value);
    partial void OnJoze_Fanni_27Changed();
    partial void OnArzesh_Paye_BihooshiChanging(System.Nullable<double> value);
    partial void OnArzesh_Paye_BihooshiChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRelativeValueChanging(System.Nullable<double> value);
    partial void OnRelativeValueChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnVersionChanging(System.Nullable<double> value);
    partial void OnVersionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnTerminologyIdChanging(string value);
    partial void OnTerminologyIdChanged();
    #endregion
		
		public RVU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dastgah", DbType="NVarChar(255)")]
		public string Dastgah
		{
			get
			{
				return this._Dastgah;
			}
			set
			{
				if ((this._Dastgah != value))
				{
					this.OnDastgahChanging(value);
					this.SendPropertyChanging();
					this._Dastgah = value;
					this.SendPropertyChanged("Dastgah");
					this.OnDastgahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sarfasl_Khedmati", DbType="NVarChar(255)")]
		public string Sarfasl_Khedmati
		{
			get
			{
				return this._Sarfasl_Khedmati;
			}
			set
			{
				if ((this._Sarfasl_Khedmati != value))
				{
					this.OnSarfasl_KhedmatiChanging(value);
					this.SendPropertyChanging();
					this._Sarfasl_Khedmati = value;
					this.SendPropertyChanged("Sarfasl_Khedmati");
					this.OnSarfasl_KhedmatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gorooh_Khedmati", DbType="NVarChar(255)")]
		public string Gorooh_Khedmati
		{
			get
			{
				return this._Gorooh_Khedmati;
			}
			set
			{
				if ((this._Gorooh_Khedmati != value))
				{
					this.OnGorooh_KhedmatiChanging(value);
					this.SendPropertyChanging();
					this._Gorooh_Khedmati = value;
					this.SendPropertyChanged("Gorooh_Khedmati");
					this.OnGorooh_KhedmatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khosoosiat_Code", DbType="NVarChar(255)")]
		public string Khosoosiat_Code
		{
			get
			{
				return this._Khosoosiat_Code;
			}
			set
			{
				if ((this._Khosoosiat_Code != value))
				{
					this.OnKhosoosiat_CodeChanging(value);
					this.SendPropertyChanging();
					this._Khosoosiat_Code = value;
					this.SendPropertyChanged("Khosoosiat_Code");
					this.OnKhosoosiat_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_Melli", DbType="Float")]
		public System.Nullable<double> Code_Melli
		{
			get
			{
				return this._Code_Melli;
			}
			set
			{
				if ((this._Code_Melli != value))
				{
					this.OnCode_MelliChanging(value);
					this.SendPropertyChanging();
					this._Code_Melli = value;
					this.SendPropertyChanged("Code_Melli");
					this.OnCode_MelliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_Namayande", DbType="Float")]
		public System.Nullable<double> Code_Namayande
		{
			get
			{
				return this._Code_Namayande;
			}
			set
			{
				if ((this._Code_Namayande != value))
				{
					this.OnCode_NamayandeChanging(value);
					this.SendPropertyChanging();
					this._Code_Namayande = value;
					this.SendPropertyChanged("Code_Namayande");
					this.OnCode_NamayandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sayer_Codaye_Tajmi_Shode", DbType="Float")]
		public System.Nullable<double> Sayer_Codaye_Tajmi_Shode
		{
			get
			{
				return this._Sayer_Codaye_Tajmi_Shode;
			}
			set
			{
				if ((this._Sayer_Codaye_Tajmi_Shode != value))
				{
					this.OnSayer_Codaye_Tajmi_ShodeChanging(value);
					this.SendPropertyChanging();
					this._Sayer_Codaye_Tajmi_Shode = value;
					this.SendPropertyChanged("Sayer_Codaye_Tajmi_Shode");
					this.OnSayer_Codaye_Tajmi_ShodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sharhe_Codaye_Tajmi_Shode", DbType="NVarChar(MAX)")]
		public string Sharhe_Codaye_Tajmi_Shode
		{
			get
			{
				return this._Sharhe_Codaye_Tajmi_Shode;
			}
			set
			{
				if ((this._Sharhe_Codaye_Tajmi_Shode != value))
				{
					this.OnSharhe_Codaye_Tajmi_ShodeChanging(value);
					this.SendPropertyChanging();
					this._Sharhe_Codaye_Tajmi_Shode = value;
					this.SendPropertyChanged("Sharhe_Codaye_Tajmi_Shode");
					this.OnSharhe_Codaye_Tajmi_ShodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arzesh_Nesbi", DbType="Float")]
		public System.Nullable<double> Arzesh_Nesbi
		{
			get
			{
				return this._Arzesh_Nesbi;
			}
			set
			{
				if ((this._Arzesh_Nesbi != value))
				{
					this.OnArzesh_NesbiChanging(value);
					this.SendPropertyChanging();
					this._Arzesh_Nesbi = value;
					this.SendPropertyChanged("Arzesh_Nesbi");
					this.OnArzesh_NesbiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfeyi_26", DbType="Float")]
		public System.Nullable<double> Joze_Herfeyi_26
		{
			get
			{
				return this._Joze_Herfeyi_26;
			}
			set
			{
				if ((this._Joze_Herfeyi_26 != value))
				{
					this.OnJoze_Herfeyi_26Changing(value);
					this.SendPropertyChanging();
					this._Joze_Herfeyi_26 = value;
					this.SendPropertyChanged("Joze_Herfeyi_26");
					this.OnJoze_Herfeyi_26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni_27", DbType="Float")]
		public System.Nullable<double> Joze_Fanni_27
		{
			get
			{
				return this._Joze_Fanni_27;
			}
			set
			{
				if ((this._Joze_Fanni_27 != value))
				{
					this.OnJoze_Fanni_27Changing(value);
					this.SendPropertyChanging();
					this._Joze_Fanni_27 = value;
					this.SendPropertyChanged("Joze_Fanni_27");
					this.OnJoze_Fanni_27Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arzesh_Paye_Bihooshi", DbType="Float")]
		public System.Nullable<double> Arzesh_Paye_Bihooshi
		{
			get
			{
				return this._Arzesh_Paye_Bihooshi;
			}
			set
			{
				if ((this._Arzesh_Paye_Bihooshi != value))
				{
					this.OnArzesh_Paye_BihooshiChanging(value);
					this.SendPropertyChanging();
					this._Arzesh_Paye_Bihooshi = value;
					this.SendPropertyChanged("Arzesh_Paye_Bihooshi");
					this.OnArzesh_Paye_BihooshiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(15)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeValue", DbType="Float")]
		public System.Nullable<double> RelativeValue
		{
			get
			{
				return this._RelativeValue;
			}
			set
			{
				if ((this._RelativeValue != value))
				{
					this.OnRelativeValueChanging(value);
					this.SendPropertyChanging();
					this._RelativeValue = value;
					this.SendPropertyChanged("RelativeValue");
					this.OnRelativeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(5)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(5)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Float")]
		public System.Nullable<double> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminologyId", DbType="NVarChar(255)")]
		public string TerminologyId
		{
			get
			{
				return this._TerminologyId;
			}
			set
			{
				if ((this._TerminologyId != value))
				{
					this.OnTerminologyIdChanging(value);
					this.SendPropertyChanging();
					this._TerminologyId = value;
					this.SendPropertyChanged("TerminologyId");
					this.OnTerminologyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleAnswer")]
	public partial class SampleAnswer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GroupServiceID;
		
		private string _Title;
		
		private string _Description;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGroupServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnGroupServiceIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SampleAnswer()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GroupServiceID
		{
			get
			{
				return this._GroupServiceID;
			}
			set
			{
				if ((this._GroupServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupServiceIDChanging(value);
					this.SendPropertyChanging();
					this._GroupServiceID = value;
					this.SendPropertyChanged("GroupServiceID");
					this.OnGroupServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SampleAnswer", Storage="_Service", ThisKey="GroupServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.SampleAnswers.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.SampleAnswers.Add(this);
						this._GroupServiceID = value.ID;
					}
					else
					{
						this._GroupServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Screening")]
	public partial class Screening : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Number;
		
		private string _Goal;
		
		private string _Date;
		
		private bool _Finish;
		
		private EntitySet<Recall> _Recalls;
		
		private EntitySet<ScreeningItem> _ScreeningItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnGoalChanging(string value);
    partial void OnGoalChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnFinishChanging(bool value);
    partial void OnFinishChanged();
    #endregion
		
		public Screening()
		{
			this._Recalls = new EntitySet<Recall>(new Action<Recall>(this.attach_Recalls), new Action<Recall>(this.detach_Recalls));
			this._ScreeningItems = new EntitySet<ScreeningItem>(new Action<ScreeningItem>(this.attach_ScreeningItems), new Action<ScreeningItem>(this.detach_ScreeningItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goal", DbType="NVarChar(100)")]
		public string Goal
		{
			get
			{
				return this._Goal;
			}
			set
			{
				if ((this._Goal != value))
				{
					this.OnGoalChanging(value);
					this.SendPropertyChanging();
					this._Goal = value;
					this.SendPropertyChanged("Goal");
					this.OnGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finish", DbType="Bit NOT NULL")]
		public bool Finish
		{
			get
			{
				return this._Finish;
			}
			set
			{
				if ((this._Finish != value))
				{
					this.OnFinishChanging(value);
					this.SendPropertyChanging();
					this._Finish = value;
					this.SendPropertyChanged("Finish");
					this.OnFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_Recall", Storage="_Recalls", ThisKey="ID", OtherKey="IDScreening")]
		public EntitySet<Recall> Recalls
		{
			get
			{
				return this._Recalls;
			}
			set
			{
				this._Recalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_ScreeningItem", Storage="_ScreeningItems", ThisKey="ID", OtherKey="ScreeningID")]
		public EntitySet<ScreeningItem> ScreeningItems
		{
			get
			{
				return this._ScreeningItems;
			}
			set
			{
				this._ScreeningItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Screening = this;
		}
		
		private void detach_Recalls(Recall entity)
		{
			this.SendPropertyChanging();
			entity.Screening = null;
		}
		
		private void attach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Screening = this;
		}
		
		private void detach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Screening = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScreeningItem")]
	public partial class ScreeningItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _ScreeningID;
		
		private System.Guid _ItmeID;
		
		private string _Comment;
		
		private EntityRef<Screening> _Screening;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnScreeningIDChanging(System.Guid value);
    partial void OnScreeningIDChanged();
    partial void OnItmeIDChanging(System.Guid value);
    partial void OnItmeIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ScreeningItem()
		{
			this._Screening = default(EntityRef<Screening>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreeningID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ScreeningID
		{
			get
			{
				return this._ScreeningID;
			}
			set
			{
				if ((this._ScreeningID != value))
				{
					if (this._Screening.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScreeningIDChanging(value);
					this.SendPropertyChanging();
					this._ScreeningID = value;
					this.SendPropertyChanged("ScreeningID");
					this.OnScreeningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItmeID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ItmeID
		{
			get
			{
				return this._ItmeID;
			}
			set
			{
				if ((this._ItmeID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItmeIDChanging(value);
					this.SendPropertyChanging();
					this._ItmeID = value;
					this.SendPropertyChanged("ItmeID");
					this.OnItmeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Screening_ScreeningItem", Storage="_Screening", ThisKey="ScreeningID", OtherKey="ID", IsForeignKey=true)]
		public Screening Screening
		{
			get
			{
				return this._Screening.Entity;
			}
			set
			{
				Screening previousValue = this._Screening.Entity;
				if (((previousValue != value) 
							|| (this._Screening.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Screening.Entity = null;
						previousValue.ScreeningItems.Remove(this);
					}
					this._Screening.Entity = value;
					if ((value != null))
					{
						value.ScreeningItems.Add(this);
						this._ScreeningID = value.ID;
					}
					else
					{
						this._ScreeningID = default(System.Guid);
					}
					this.SendPropertyChanged("Screening");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ScreeningItem", Storage="_Service", ThisKey="ItmeID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ScreeningItems.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ScreeningItems.Add(this);
						this._ItmeID = value.ID;
					}
					else
					{
						this._ItmeID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SerialNumber")]
	public partial class SerialNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RequestNumber;
		
		private string _SerialNumber1;
		
		private bool _Confirmation;
		
		private string _ConfirmTime;
		
		private string _ConfirmDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestNumberChanging(string value);
    partial void OnRequestNumberChanged();
    partial void OnSerialNumber1Changing(string value);
    partial void OnSerialNumber1Changed();
    partial void OnConfirmationChanging(bool value);
    partial void OnConfirmationChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    #endregion
		
		public SerialNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumber", DbType="NVarChar(200)")]
		public string RequestNumber
		{
			get
			{
				return this._RequestNumber;
			}
			set
			{
				if ((this._RequestNumber != value))
				{
					this.OnRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._RequestNumber = value;
					this.SendPropertyChanged("RequestNumber");
					this.OnRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SerialNumber", Storage="_SerialNumber1", DbType="NVarChar(200)")]
		public string SerialNumber1
		{
			get
			{
				return this._SerialNumber1;
			}
			set
			{
				if ((this._SerialNumber1 != value))
				{
					this.OnSerialNumber1Changing(value);
					this.SendPropertyChanging();
					this._SerialNumber1 = value;
					this.SendPropertyChanged("SerialNumber1");
					this.OnSerialNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmation", DbType="Bit NOT NULL")]
		public bool Confirmation
		{
			get
			{
				return this._Confirmation;
			}
			set
			{
				if ((this._Confirmation != value))
				{
					this.OnConfirmationChanging(value);
					this.SendPropertyChanging();
					this._Confirmation = value;
					this.SendPropertyChanged("Confirmation");
					this.OnConfirmationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="VarChar(5)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="VarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _OldParentID;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Name_En;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Shape;
		
		private string _MESCCode_No;
		
		private System.Nullable<bool> _NIS;
		
		private bool _EmergencyFav;
		
		private string _HIXCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _BasicK;
		
		private System.Nullable<double> _SupplementBasicK;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _ResultType;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _RetireeID;
		
		private System.Nullable<double> _DoctorK;
		
		private System.Nullable<int> _IDMeasurement;
		
		private string _LastMUserIFullName;
		
		private string _LastModificationTime;
		
		private string _LastModificationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _CreationUserIFullName;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private bool _DrugCount;
		
		private bool _DrugDeleted;
		
		private bool _Hide;
		
		private System.Nullable<long> _SATACode;
		
		private int _IDint;
		
		private System.Nullable<int> _AllowedAmount;
		
		private System.Nullable<int> _TimeSpan;
		
		private bool _CheckValidation;
		
		private System.Nullable<int> _DocPaymentCatOffical;
		
		private System.Nullable<int> _DocPaymentCatNonOffical;
		
		private System.Nullable<int> _DoctorServiceCategory;
		
		private System.Nullable<int> _FDOirDrugCode;
		
		private System.Nullable<int> _FDOirShapeCode;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<DiagnosticServiceDetail> _DiagnosticServiceDetail;
		
		private EntitySet<Diet> _Diets;
		
		private EntitySet<DoctorContract> _DoctorContracts;
		
		private EntitySet<DoctorFunction> _DoctorFunctions;
		
		private EntitySet<DrugAllergy> _DrugAllergies;
		
		private EntitySet<DrugHistory> _DrugHistories;
		
		private EntitySet<DrugTempelateForWard> _DrugTempelateForWards;
		
		private EntitySet<FavoriteService> _FavoriteServices;
		
		private EntitySet<GivenDrug> _GivenDrugs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntityRef<LaboratoryServiceDetail> _LaboratoryServiceDetail;
		
		private EntitySet<LabTestGroup> _LabTestGroups;
		
		private EntitySet<LabWorksheetService> _LabWorksheetServices;
		
		private EntitySet<ModularService> _ModularServices;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<ParaClinicServiceHistory> _ParaClinicServiceHistories;
		
		private EntitySet<PatternD> _PatternDs;
		
		private EntitySet<PatternM> _PatternMs;
		
		private EntitySet<PharmacyDrug> _PharmacyDrugs;
		
		private EntitySet<PhysiotherapyOrderD> _PhysiotherapyOrderDs;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<QA> _QAs1;
		
		private EntitySet<RequestD> _RequestDs;
		
		private EntitySet<SampleAnswer> _SampleAnswers;
		
		private EntitySet<ScreeningItem> _ScreeningItems;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<SpecialityDrug> _SpecialityDrugs;
		
		private EntitySet<Surgery> _Surgeries;
		
		private EntitySet<SurgeyHistory> _SurgeyHistories;
		
		private EntitySet<Tariff> _Tariffs;
		
		private EntitySet<TestHistory> _TestHistories;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<DoctorPaymentCategory> _DoctorPaymentCategory;
		
		private EntityRef<DoctorPaymentCategory> _DoctorPaymentCategory1;
		
		private EntityRef<MeasurementDefinition> _MeasurementDefinition;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<ServiceCategory> _ServiceCategory;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnOldParentIDChanging(System.Nullable<int> value);
    partial void OnOldParentIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnName_EnChanging(string value);
    partial void OnName_EnChanged();
    partial void OnCaliforniaCodeChanging(string value);
    partial void OnCaliforniaCodeChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShapeChanging(string value);
    partial void OnShapeChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnEmergencyFavChanging(bool value);
    partial void OnEmergencyFavChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnBasicKChanging(System.Nullable<double> value);
    partial void OnBasicKChanged();
    partial void OnSupplementBasicKChanging(System.Nullable<double> value);
    partial void OnSupplementBasicKChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRetireeIDChanging(System.Nullable<int> value);
    partial void OnRetireeIDChanged();
    partial void OnDoctorKChanging(System.Nullable<double> value);
    partial void OnDoctorKChanged();
    partial void OnIDMeasurementChanging(System.Nullable<int> value);
    partial void OnIDMeasurementChanged();
    partial void OnLastMUserIFullNameChanging(string value);
    partial void OnLastMUserIFullNameChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnCreationUserIFullNameChanging(string value);
    partial void OnCreationUserIFullNameChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnDrugCountChanging(bool value);
    partial void OnDrugCountChanged();
    partial void OnDrugDeletedChanging(bool value);
    partial void OnDrugDeletedChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    partial void OnSATACodeChanging(System.Nullable<long> value);
    partial void OnSATACodeChanged();
    partial void OnIDintChanging(int value);
    partial void OnIDintChanged();
    partial void OnAllowedAmountChanging(System.Nullable<int> value);
    partial void OnAllowedAmountChanged();
    partial void OnTimeSpanChanging(System.Nullable<int> value);
    partial void OnTimeSpanChanged();
    partial void OnCheckValidationChanging(bool value);
    partial void OnCheckValidationChanged();
    partial void OnDocPaymentCatOfficalChanging(System.Nullable<int> value);
    partial void OnDocPaymentCatOfficalChanged();
    partial void OnDocPaymentCatNonOfficalChanging(System.Nullable<int> value);
    partial void OnDocPaymentCatNonOfficalChanged();
    partial void OnDoctorServiceCategoryChanging(System.Nullable<int> value);
    partial void OnDoctorServiceCategoryChanged();
    partial void OnFDOirDrugCodeChanging(System.Nullable<int> value);
    partial void OnFDOirDrugCodeChanged();
    partial void OnFDOirShapeCodeChanging(System.Nullable<int> value);
    partial void OnFDOirShapeCodeChanged();
    #endregion
		
		public Service()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._DiagnosticServiceDetail = default(EntityRef<DiagnosticServiceDetail>);
			this._Diets = new EntitySet<Diet>(new Action<Diet>(this.attach_Diets), new Action<Diet>(this.detach_Diets));
			this._DoctorContracts = new EntitySet<DoctorContract>(new Action<DoctorContract>(this.attach_DoctorContracts), new Action<DoctorContract>(this.detach_DoctorContracts));
			this._DoctorFunctions = new EntitySet<DoctorFunction>(new Action<DoctorFunction>(this.attach_DoctorFunctions), new Action<DoctorFunction>(this.detach_DoctorFunctions));
			this._DrugAllergies = new EntitySet<DrugAllergy>(new Action<DrugAllergy>(this.attach_DrugAllergies), new Action<DrugAllergy>(this.detach_DrugAllergies));
			this._DrugHistories = new EntitySet<DrugHistory>(new Action<DrugHistory>(this.attach_DrugHistories), new Action<DrugHistory>(this.detach_DrugHistories));
			this._DrugTempelateForWards = new EntitySet<DrugTempelateForWard>(new Action<DrugTempelateForWard>(this.attach_DrugTempelateForWards), new Action<DrugTempelateForWard>(this.detach_DrugTempelateForWards));
			this._FavoriteServices = new EntitySet<FavoriteService>(new Action<FavoriteService>(this.attach_FavoriteServices), new Action<FavoriteService>(this.detach_FavoriteServices));
			this._GivenDrugs = new EntitySet<GivenDrug>(new Action<GivenDrug>(this.attach_GivenDrugs), new Action<GivenDrug>(this.detach_GivenDrugs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._LaboratoryServiceDetail = default(EntityRef<LaboratoryServiceDetail>);
			this._LabTestGroups = new EntitySet<LabTestGroup>(new Action<LabTestGroup>(this.attach_LabTestGroups), new Action<LabTestGroup>(this.detach_LabTestGroups));
			this._LabWorksheetServices = new EntitySet<LabWorksheetService>(new Action<LabWorksheetService>(this.attach_LabWorksheetServices), new Action<LabWorksheetService>(this.detach_LabWorksheetServices));
			this._ModularServices = new EntitySet<ModularService>(new Action<ModularService>(this.attach_ModularServices), new Action<ModularService>(this.detach_ModularServices));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._ParaClinicServiceHistories = new EntitySet<ParaClinicServiceHistory>(new Action<ParaClinicServiceHistory>(this.attach_ParaClinicServiceHistories), new Action<ParaClinicServiceHistory>(this.detach_ParaClinicServiceHistories));
			this._PatternDs = new EntitySet<PatternD>(new Action<PatternD>(this.attach_PatternDs), new Action<PatternD>(this.detach_PatternDs));
			this._PatternMs = new EntitySet<PatternM>(new Action<PatternM>(this.attach_PatternMs), new Action<PatternM>(this.detach_PatternMs));
			this._PharmacyDrugs = new EntitySet<PharmacyDrug>(new Action<PharmacyDrug>(this.attach_PharmacyDrugs), new Action<PharmacyDrug>(this.detach_PharmacyDrugs));
			this._PhysiotherapyOrderDs = new EntitySet<PhysiotherapyOrderD>(new Action<PhysiotherapyOrderD>(this.attach_PhysiotherapyOrderDs), new Action<PhysiotherapyOrderD>(this.detach_PhysiotherapyOrderDs));
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._QAs1 = new EntitySet<QA>(new Action<QA>(this.attach_QAs1), new Action<QA>(this.detach_QAs1));
			this._RequestDs = new EntitySet<RequestD>(new Action<RequestD>(this.attach_RequestDs), new Action<RequestD>(this.detach_RequestDs));
			this._SampleAnswers = new EntitySet<SampleAnswer>(new Action<SampleAnswer>(this.attach_SampleAnswers), new Action<SampleAnswer>(this.detach_SampleAnswers));
			this._ScreeningItems = new EntitySet<ScreeningItem>(new Action<ScreeningItem>(this.attach_ScreeningItems), new Action<ScreeningItem>(this.detach_ScreeningItems));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._SpecialityDrugs = new EntitySet<SpecialityDrug>(new Action<SpecialityDrug>(this.attach_SpecialityDrugs), new Action<SpecialityDrug>(this.detach_SpecialityDrugs));
			this._Surgeries = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries), new Action<Surgery>(this.detach_Surgeries));
			this._SurgeyHistories = new EntitySet<SurgeyHistory>(new Action<SurgeyHistory>(this.attach_SurgeyHistories), new Action<SurgeyHistory>(this.detach_SurgeyHistories));
			this._Tariffs = new EntitySet<Tariff>(new Action<Tariff>(this.attach_Tariffs), new Action<Tariff>(this.detach_Tariffs));
			this._TestHistories = new EntitySet<TestHistory>(new Action<TestHistory>(this.attach_TestHistories), new Action<TestHistory>(this.detach_TestHistories));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._DoctorPaymentCategory = default(EntityRef<DoctorPaymentCategory>);
			this._DoctorPaymentCategory1 = default(EntityRef<DoctorPaymentCategory>);
			this._MeasurementDefinition = default(EntityRef<MeasurementDefinition>);
			this._Service1 = default(EntityRef<Service>);
			this._ServiceCategory = default(EntityRef<ServiceCategory>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldParentID", DbType="Int")]
		public System.Nullable<int> OldParentID
		{
			get
			{
				return this._OldParentID;
			}
			set
			{
				if ((this._OldParentID != value))
				{
					this.OnOldParentIDChanging(value);
					this.SendPropertyChanging();
					this._OldParentID = value;
					this.SendPropertyChanged("OldParentID");
					this.OnOldParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ServiceCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_En", DbType="NVarChar(MAX)")]
		public string Name_En
		{
			get
			{
				return this._Name_En;
			}
			set
			{
				if ((this._Name_En != value))
				{
					this.OnName_EnChanging(value);
					this.SendPropertyChanging();
					this._Name_En = value;
					this.SendPropertyChanged("Name_En");
					this.OnName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this.OnCaliforniaCodeChanging(value);
					this.SendPropertyChanging();
					this._CaliforniaCode = value;
					this.SendPropertyChanged("CaliforniaCode");
					this.OnCaliforniaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this.OnShapeChanging(value);
					this.SendPropertyChanging();
					this._Shape = value;
					this.SendPropertyChanged("Shape");
					this.OnShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFav", DbType="Bit NOT NULL")]
		public bool EmergencyFav
		{
			get
			{
				return this._EmergencyFav;
			}
			set
			{
				if ((this._EmergencyFav != value))
				{
					this.OnEmergencyFavChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFav = value;
					this.SendPropertyChanged("EmergencyFav");
					this.OnEmergencyFavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicK", DbType="Float")]
		public System.Nullable<double> BasicK
		{
			get
			{
				return this._BasicK;
			}
			set
			{
				if ((this._BasicK != value))
				{
					this.OnBasicKChanging(value);
					this.SendPropertyChanging();
					this._BasicK = value;
					this.SendPropertyChanged("BasicK");
					this.OnBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementBasicK", DbType="Float")]
		public System.Nullable<double> SupplementBasicK
		{
			get
			{
				return this._SupplementBasicK;
			}
			set
			{
				if ((this._SupplementBasicK != value))
				{
					this.OnSupplementBasicKChanging(value);
					this.SendPropertyChanging();
					this._SupplementBasicK = value;
					this.SendPropertyChanged("SupplementBasicK");
					this.OnSupplementBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetireeID", DbType="Int")]
		public System.Nullable<int> RetireeID
		{
			get
			{
				return this._RetireeID;
			}
			set
			{
				if ((this._RetireeID != value))
				{
					this.OnRetireeIDChanging(value);
					this.SendPropertyChanging();
					this._RetireeID = value;
					this.SendPropertyChanged("RetireeID");
					this.OnRetireeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorK", DbType="Float")]
		public System.Nullable<double> DoctorK
		{
			get
			{
				return this._DoctorK;
			}
			set
			{
				if ((this._DoctorK != value))
				{
					this.OnDoctorKChanging(value);
					this.SendPropertyChanging();
					this._DoctorK = value;
					this.SendPropertyChanged("DoctorK");
					this.OnDoctorKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMeasurement", DbType="Int")]
		public System.Nullable<int> IDMeasurement
		{
			get
			{
				return this._IDMeasurement;
			}
			set
			{
				if ((this._IDMeasurement != value))
				{
					if (this._MeasurementDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMeasurementChanging(value);
					this.SendPropertyChanging();
					this._IDMeasurement = value;
					this.SendPropertyChanged("IDMeasurement");
					this.OnIDMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMUserIFullName", DbType="NVarChar(50)")]
		public string LastMUserIFullName
		{
			get
			{
				return this._LastMUserIFullName;
			}
			set
			{
				if ((this._LastMUserIFullName != value))
				{
					this.OnLastMUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._LastMUserIFullName = value;
					this.SendPropertyChanged("LastMUserIFullName");
					this.OnLastMUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserIFullName", DbType="NVarChar(50)")]
		public string CreationUserIFullName
		{
			get
			{
				return this._CreationUserIFullName;
			}
			set
			{
				if ((this._CreationUserIFullName != value))
				{
					this.OnCreationUserIFullNameChanging(value);
					this.SendPropertyChanging();
					this._CreationUserIFullName = value;
					this.SendPropertyChanged("CreationUserIFullName");
					this.OnCreationUserIFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugCount", DbType="Bit NOT NULL")]
		public bool DrugCount
		{
			get
			{
				return this._DrugCount;
			}
			set
			{
				if ((this._DrugCount != value))
				{
					this.OnDrugCountChanging(value);
					this.SendPropertyChanging();
					this._DrugCount = value;
					this.SendPropertyChanged("DrugCount");
					this.OnDrugCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugDeleted", DbType="Bit NOT NULL")]
		public bool DrugDeleted
		{
			get
			{
				return this._DrugDeleted;
			}
			set
			{
				if ((this._DrugDeleted != value))
				{
					this.OnDrugDeletedChanging(value);
					this.SendPropertyChanging();
					this._DrugDeleted = value;
					this.SendPropertyChanged("DrugDeleted");
					this.OnDrugDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATACode", DbType="BigInt")]
		public System.Nullable<long> SATACode
		{
			get
			{
				return this._SATACode;
			}
			set
			{
				if ((this._SATACode != value))
				{
					this.OnSATACodeChanging(value);
					this.SendPropertyChanging();
					this._SATACode = value;
					this.SendPropertyChanged("SATACode");
					this.OnSATACodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDint", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDint
		{
			get
			{
				return this._IDint;
			}
			set
			{
				if ((this._IDint != value))
				{
					this.OnIDintChanging(value);
					this.SendPropertyChanging();
					this._IDint = value;
					this.SendPropertyChanged("IDint");
					this.OnIDintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedAmount", DbType="Int")]
		public System.Nullable<int> AllowedAmount
		{
			get
			{
				return this._AllowedAmount;
			}
			set
			{
				if ((this._AllowedAmount != value))
				{
					this.OnAllowedAmountChanging(value);
					this.SendPropertyChanging();
					this._AllowedAmount = value;
					this.SendPropertyChanged("AllowedAmount");
					this.OnAllowedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSpan", DbType="Int")]
		public System.Nullable<int> TimeSpan
		{
			get
			{
				return this._TimeSpan;
			}
			set
			{
				if ((this._TimeSpan != value))
				{
					this.OnTimeSpanChanging(value);
					this.SendPropertyChanging();
					this._TimeSpan = value;
					this.SendPropertyChanged("TimeSpan");
					this.OnTimeSpanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckValidation", DbType="Bit NOT NULL")]
		public bool CheckValidation
		{
			get
			{
				return this._CheckValidation;
			}
			set
			{
				if ((this._CheckValidation != value))
				{
					this.OnCheckValidationChanging(value);
					this.SendPropertyChanging();
					this._CheckValidation = value;
					this.SendPropertyChanged("CheckValidation");
					this.OnCheckValidationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPaymentCatOffical", DbType="Int")]
		public System.Nullable<int> DocPaymentCatOffical
		{
			get
			{
				return this._DocPaymentCatOffical;
			}
			set
			{
				if ((this._DocPaymentCatOffical != value))
				{
					if (this._DoctorPaymentCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocPaymentCatOfficalChanging(value);
					this.SendPropertyChanging();
					this._DocPaymentCatOffical = value;
					this.SendPropertyChanged("DocPaymentCatOffical");
					this.OnDocPaymentCatOfficalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPaymentCatNonOffical", DbType="Int")]
		public System.Nullable<int> DocPaymentCatNonOffical
		{
			get
			{
				return this._DocPaymentCatNonOffical;
			}
			set
			{
				if ((this._DocPaymentCatNonOffical != value))
				{
					if (this._DoctorPaymentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocPaymentCatNonOfficalChanging(value);
					this.SendPropertyChanging();
					this._DocPaymentCatNonOffical = value;
					this.SendPropertyChanged("DocPaymentCatNonOffical");
					this.OnDocPaymentCatNonOfficalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorServiceCategory", DbType="Int")]
		public System.Nullable<int> DoctorServiceCategory
		{
			get
			{
				return this._DoctorServiceCategory;
			}
			set
			{
				if ((this._DoctorServiceCategory != value))
				{
					this.OnDoctorServiceCategoryChanging(value);
					this.SendPropertyChanging();
					this._DoctorServiceCategory = value;
					this.SendPropertyChanged("DoctorServiceCategory");
					this.OnDoctorServiceCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDOirDrugCode", DbType="Int")]
		public System.Nullable<int> FDOirDrugCode
		{
			get
			{
				return this._FDOirDrugCode;
			}
			set
			{
				if ((this._FDOirDrugCode != value))
				{
					this.OnFDOirDrugCodeChanging(value);
					this.SendPropertyChanging();
					this._FDOirDrugCode = value;
					this.SendPropertyChanged("FDOirDrugCode");
					this.OnFDOirDrugCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDOirShapeCode", DbType="Int")]
		public System.Nullable<int> FDOirShapeCode
		{
			get
			{
				return this._FDOirShapeCode;
			}
			set
			{
				if ((this._FDOirShapeCode != value))
				{
					this.OnFDOirShapeCodeChanging(value);
					this.SendPropertyChanging();
					this._FDOirShapeCode = value;
					this.SendPropertyChanged("FDOirShapeCode");
					this.OnFDOirShapeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Departments", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DiagnosticServiceDetail", Storage="_DiagnosticServiceDetail", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public DiagnosticServiceDetail DiagnosticServiceDetail
		{
			get
			{
				return this._DiagnosticServiceDetail.Entity;
			}
			set
			{
				DiagnosticServiceDetail previousValue = this._DiagnosticServiceDetail.Entity;
				if (((previousValue != value) 
							|| (this._DiagnosticServiceDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiagnosticServiceDetail.Entity = null;
						previousValue.Service = null;
					}
					this._DiagnosticServiceDetail.Entity = value;
					if ((value != null))
					{
						value.Service = this;
					}
					this.SendPropertyChanged("DiagnosticServiceDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Diet", Storage="_Diets", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Diet> Diets
		{
			get
			{
				return this._Diets;
			}
			set
			{
				this._Diets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DoctorContract", Storage="_DoctorContracts", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<DoctorContract> DoctorContracts
		{
			get
			{
				return this._DoctorContracts;
			}
			set
			{
				this._DoctorContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DoctorFunction", Storage="_DoctorFunctions", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<DoctorFunction> DoctorFunctions
		{
			get
			{
				return this._DoctorFunctions;
			}
			set
			{
				this._DoctorFunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugAllergy", Storage="_DrugAllergies", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugAllergy> DrugAllergies
		{
			get
			{
				return this._DrugAllergies;
			}
			set
			{
				this._DrugAllergies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugHistory", Storage="_DrugHistories", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugHistory> DrugHistories
		{
			get
			{
				return this._DrugHistories;
			}
			set
			{
				this._DrugHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_DrugTempelateForWard", Storage="_DrugTempelateForWards", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<DrugTempelateForWard> DrugTempelateForWards
		{
			get
			{
				return this._DrugTempelateForWards;
			}
			set
			{
				this._DrugTempelateForWards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_FavoriteService", Storage="_FavoriteServices", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<FavoriteService> FavoriteServices
		{
			get
			{
				return this._FavoriteServices;
			}
			set
			{
				this._FavoriteServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenDrug", Storage="_GivenDrugs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenDrug> GivenDrugs
		{
			get
			{
				return this._GivenDrugs;
			}
			set
			{
				this._GivenDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LaboratoryServiceDetail", Storage="_LaboratoryServiceDetail", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public LaboratoryServiceDetail LaboratoryServiceDetail
		{
			get
			{
				return this._LaboratoryServiceDetail.Entity;
			}
			set
			{
				LaboratoryServiceDetail previousValue = this._LaboratoryServiceDetail.Entity;
				if (((previousValue != value) 
							|| (this._LaboratoryServiceDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LaboratoryServiceDetail.Entity = null;
						previousValue.Service = null;
					}
					this._LaboratoryServiceDetail.Entity = value;
					if ((value != null))
					{
						value.Service = this;
					}
					this.SendPropertyChanged("LaboratoryServiceDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LabTestGroup", Storage="_LabTestGroups", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<LabTestGroup> LabTestGroups
		{
			get
			{
				return this._LabTestGroups;
			}
			set
			{
				this._LabTestGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LabWorksheetService", Storage="_LabWorksheetServices", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<LabWorksheetService> LabWorksheetServices
		{
			get
			{
				return this._LabWorksheetServices;
			}
			set
			{
				this._LabWorksheetServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ModularService", Storage="_ModularServices", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<ModularService> ModularServices
		{
			get
			{
				return this._ModularServices;
			}
			set
			{
				this._ModularServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Order", Storage="_Orders", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ParaClinicServiceHistory", Storage="_ParaClinicServiceHistories", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<ParaClinicServiceHistory> ParaClinicServiceHistories
		{
			get
			{
				return this._ParaClinicServiceHistories;
			}
			set
			{
				this._ParaClinicServiceHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternD", Storage="_PatternDs", ThisKey="ID", OtherKey="ServiceDID")]
		public EntitySet<PatternD> PatternDs
		{
			get
			{
				return this._PatternDs;
			}
			set
			{
				this._PatternDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PatternM", Storage="_PatternMs", ThisKey="ID", OtherKey="ServiceMID")]
		public EntitySet<PatternM> PatternMs
		{
			get
			{
				return this._PatternMs;
			}
			set
			{
				this._PatternMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PharmacyDrug", Storage="_PharmacyDrugs", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<PharmacyDrug> PharmacyDrugs
		{
			get
			{
				return this._PharmacyDrugs;
			}
			set
			{
				this._PharmacyDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_PhysiotherapyOrderD", Storage="_PhysiotherapyOrderDs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<PhysiotherapyOrderD> PhysiotherapyOrderDs
		{
			get
			{
				return this._PhysiotherapyOrderDs;
			}
			set
			{
				this._PhysiotherapyOrderDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_QAs", ThisKey="ID", OtherKey="QuestionnariID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_QAs1", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<QA> QAs1
		{
			get
			{
				return this._QAs1;
			}
			set
			{
				this._QAs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_RequestD", Storage="_RequestDs", ThisKey="ID", OtherKey="Drug")]
		public EntitySet<RequestD> RequestDs
		{
			get
			{
				return this._RequestDs;
			}
			set
			{
				this._RequestDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SampleAnswer", Storage="_SampleAnswers", ThisKey="ID", OtherKey="GroupServiceID")]
		public EntitySet<SampleAnswer> SampleAnswers
		{
			get
			{
				return this._SampleAnswers;
			}
			set
			{
				this._SampleAnswers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ScreeningItem", Storage="_ScreeningItems", ThisKey="ID", OtherKey="ItmeID")]
		public EntitySet<ScreeningItem> ScreeningItems
		{
			get
			{
				return this._ScreeningItems;
			}
			set
			{
				this._ScreeningItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Services", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SpecialityDrug", Storage="_SpecialityDrugs", ThisKey="ID", OtherKey="DrugID")]
		public EntitySet<SpecialityDrug> SpecialityDrugs
		{
			get
			{
				return this._SpecialityDrugs;
			}
			set
			{
				this._SpecialityDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Surgery", Storage="_Surgeries", ThisKey="ID", OtherKey="ConfirmServiceID")]
		public EntitySet<Surgery> Surgeries
		{
			get
			{
				return this._Surgeries;
			}
			set
			{
				this._Surgeries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SurgeyHistory", Storage="_SurgeyHistories", ThisKey="ID", OtherKey="SurgeryID")]
		public EntitySet<SurgeyHistory> SurgeyHistories
		{
			get
			{
				return this._SurgeyHistories;
			}
			set
			{
				this._SurgeyHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Tariffs", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Tariff> Tariffs
		{
			get
			{
				return this._Tariffs;
			}
			set
			{
				this._Tariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_TestHistory", Storage="_TestHistories", ThisKey="ID", OtherKey="TestID")]
		public EntitySet<TestHistory> TestHistories
		{
			get
			{
				return this._TestHistories;
			}
			set
			{
				this._TestHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_Service", Storage="_DoctorPaymentCategory", ThisKey="DocPaymentCatNonOffical", OtherKey="ID", IsForeignKey=true)]
		public DoctorPaymentCategory DoctorPaymentCategory
		{
			get
			{
				return this._DoctorPaymentCategory.Entity;
			}
			set
			{
				DoctorPaymentCategory previousValue = this._DoctorPaymentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DoctorPaymentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorPaymentCategory.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._DoctorPaymentCategory.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._DocPaymentCatNonOffical = value.ID;
					}
					else
					{
						this._DocPaymentCatNonOffical = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoctorPaymentCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoctorPaymentCategory_Service1", Storage="_DoctorPaymentCategory1", ThisKey="DocPaymentCatOffical", OtherKey="ID", IsForeignKey=true)]
		public DoctorPaymentCategory DoctorPaymentCategory1
		{
			get
			{
				return this._DoctorPaymentCategory1.Entity;
			}
			set
			{
				DoctorPaymentCategory previousValue = this._DoctorPaymentCategory1.Entity;
				if (((previousValue != value) 
							|| (this._DoctorPaymentCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoctorPaymentCategory1.Entity = null;
						previousValue.Services1.Remove(this);
					}
					this._DoctorPaymentCategory1.Entity = value;
					if ((value != null))
					{
						value.Services1.Add(this);
						this._DocPaymentCatOffical = value.ID;
					}
					else
					{
						this._DocPaymentCatOffical = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoctorPaymentCategory1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementDefinition_Service", Storage="_MeasurementDefinition", ThisKey="IDMeasurement", OtherKey="ID", IsForeignKey=true)]
		public MeasurementDefinition MeasurementDefinition
		{
			get
			{
				return this._MeasurementDefinition.Entity;
			}
			set
			{
				MeasurementDefinition previousValue = this._MeasurementDefinition.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementDefinition.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._MeasurementDefinition.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._IDMeasurement = value.ID;
					}
					else
					{
						this._IDMeasurement = default(Nullable<int>);
					}
					this.SendPropertyChanged("MeasurementDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_ServiceCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public ServiceCategory ServiceCategory
		{
			get
			{
				return this._ServiceCategory.Entity;
			}
			set
			{
				ServiceCategory previousValue = this._ServiceCategory.Entity;
				if (((previousValue != value) 
							|| (this._ServiceCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceCategory.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceCategory.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Diets(Diet entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DoctorContracts(DoctorContract entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DoctorContracts(DoctorContract entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DoctorFunctions(DoctorFunction entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DoctorFunctions(DoctorFunction entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugAllergies(DrugAllergy entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugHistories(DrugHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_DrugTempelateForWards(DrugTempelateForWard entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_DrugTempelateForWards(DrugTempelateForWard entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_LabTestGroups(LabTestGroup entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_LabWorksheetServices(LabWorksheetService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_LabWorksheetServices(LabWorksheetService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ModularServices(ModularService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_ParaClinicServiceHistories(ParaClinicServiceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ParaClinicServiceHistories(ParaClinicServiceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternDs(PatternD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PatternMs(PatternM entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PharmacyDrugs(PharmacyDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_PhysiotherapyOrderDs(PhysiotherapyOrderD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_PhysiotherapyOrderDs(PhysiotherapyOrderD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_RequestDs(RequestD entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_SampleAnswers(SampleAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_SampleAnswers(SampleAnswer entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ScreeningItems(ScreeningItem entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_SurgeyHistories(SurgeyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_SurgeyHistories(SurgeyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Tariffs(Tariff entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_TestHistories(TestHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_TestHistories(TestHistory entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCategory")]
	public partial class ServiceCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _SortCol;
		
		private System.Nullable<int> _EmergencySort;
		
		private System.Nullable<int> _RetireeID;
		
		private System.Nullable<int> _SATAIdServiceGroup;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<PeriodicCalender> _PeriodicCalenders;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortColChanging(System.Nullable<int> value);
    partial void OnSortColChanged();
    partial void OnEmergencySortChanging(System.Nullable<int> value);
    partial void OnEmergencySortChanged();
    partial void OnRetireeIDChanging(System.Nullable<int> value);
    partial void OnRetireeIDChanged();
    partial void OnSATAIdServiceGroupChanging(System.Nullable<int> value);
    partial void OnSATAIdServiceGroupChanged();
    #endregion
		
		public ServiceCategory()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._PeriodicCalenders = new EntitySet<PeriodicCalender>(new Action<PeriodicCalender>(this.attach_PeriodicCalenders), new Action<PeriodicCalender>(this.detach_PeriodicCalenders));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCol", DbType="Int")]
		public System.Nullable<int> SortCol
		{
			get
			{
				return this._SortCol;
			}
			set
			{
				if ((this._SortCol != value))
				{
					this.OnSortColChanging(value);
					this.SendPropertyChanging();
					this._SortCol = value;
					this.SendPropertyChanged("SortCol");
					this.OnSortColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencySort", DbType="Int")]
		public System.Nullable<int> EmergencySort
		{
			get
			{
				return this._EmergencySort;
			}
			set
			{
				if ((this._EmergencySort != value))
				{
					this.OnEmergencySortChanging(value);
					this.SendPropertyChanging();
					this._EmergencySort = value;
					this.SendPropertyChanged("EmergencySort");
					this.OnEmergencySortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetireeID", DbType="Int")]
		public System.Nullable<int> RetireeID
		{
			get
			{
				return this._RetireeID;
			}
			set
			{
				if ((this._RetireeID != value))
				{
					this.OnRetireeIDChanging(value);
					this.SendPropertyChanging();
					this._RetireeID = value;
					this.SendPropertyChanged("RetireeID");
					this.OnRetireeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdServiceGroup", DbType="Int")]
		public System.Nullable<int> SATAIdServiceGroup
		{
			get
			{
				return this._SATAIdServiceGroup;
			}
			set
			{
				if ((this._SATAIdServiceGroup != value))
				{
					this.OnSATAIdServiceGroupChanging(value);
					this.SendPropertyChanging();
					this._SATAIdServiceGroup = value;
					this.SendPropertyChanged("SATAIdServiceGroup");
					this.OnSATAIdServiceGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ServiceCategoryID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_PeriodicCalender", Storage="_PeriodicCalenders", ThisKey="ID", OtherKey="ServiceCategoryID")]
		public EntitySet<PeriodicCalender> PeriodicCalenders
		{
			get
			{
				return this._PeriodicCalenders;
			}
			set
			{
				this._PeriodicCalenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceCategory_Service", Storage="_Services", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
		
		private void attach_PeriodicCalenders(PeriodicCalender entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_PeriodicCalenders(PeriodicCalender entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _ShiftName;
		
		private string _FTime;
		
		private string _ToTime;
		
		private string _CreationDate;
		
		private string _CreationUser;
		
		private EntitySet<ONcall> _ONcalls;
		
		private EntitySet<tblMngCprGroup> _tblMngCprGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnShiftNameChanging(string value);
    partial void OnShiftNameChanged();
    partial void OnFTimeChanging(string value);
    partial void OnFTimeChanged();
    partial void OnToTimeChanging(string value);
    partial void OnToTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(string value);
    partial void OnCreationUserChanged();
    #endregion
		
		public Shift()
		{
			this._ONcalls = new EntitySet<ONcall>(new Action<ONcall>(this.attach_ONcalls), new Action<ONcall>(this.detach_ONcalls));
			this._tblMngCprGroups = new EntitySet<tblMngCprGroup>(new Action<tblMngCprGroup>(this.attach_tblMngCprGroups), new Action<tblMngCprGroup>(this.detach_tblMngCprGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftName", DbType="NVarChar(50)")]
		public string ShiftName
		{
			get
			{
				return this._ShiftName;
			}
			set
			{
				if ((this._ShiftName != value))
				{
					this.OnShiftNameChanging(value);
					this.SendPropertyChanging();
					this._ShiftName = value;
					this.SendPropertyChanged("ShiftName");
					this.OnShiftNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTime", DbType="NVarChar(50)")]
		public string FTime
		{
			get
			{
				return this._FTime;
			}
			set
			{
				if ((this._FTime != value))
				{
					this.OnFTimeChanging(value);
					this.SendPropertyChanging();
					this._FTime = value;
					this.SendPropertyChanged("FTime");
					this.OnFTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTime", DbType="NVarChar(50)")]
		public string ToTime
		{
			get
			{
				return this._ToTime;
			}
			set
			{
				if ((this._ToTime != value))
				{
					this.OnToTimeChanging(value);
					this.SendPropertyChanging();
					this._ToTime = value;
					this.SendPropertyChanged("ToTime");
					this.OnToTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="NVarChar(50)")]
		public string CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_ONcall", Storage="_ONcalls", ThisKey="ID", OtherKey="ShiftID")]
		public EntitySet<ONcall> ONcalls
		{
			get
			{
				return this._ONcalls;
			}
			set
			{
				this._ONcalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_tblMngCprGroup", Storage="_tblMngCprGroups", ThisKey="ID", OtherKey="Shift")]
		public EntitySet<tblMngCprGroup> tblMngCprGroups
		{
			get
			{
				return this._tblMngCprGroups;
			}
			set
			{
				this._tblMngCprGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ONcalls(ONcall entity)
		{
			this.SendPropertyChanging();
			entity.Shift = this;
		}
		
		private void detach_ONcalls(ONcall entity)
		{
			this.SendPropertyChanging();
			entity.Shift = null;
		}
		
		private void attach_tblMngCprGroups(tblMngCprGroup entity)
		{
			this.SendPropertyChanging();
			entity.Shift1 = this;
		}
		
		private void detach_tblMngCprGroups(tblMngCprGroup entity)
		{
			this.SendPropertyChanging();
			entity.Shift1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialDiseases")]
	public partial class SpecialDisease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _Code;
		
		private bool _Special;
		
		private EntitySet<PersonDisease> _PersonDiseases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnSpecialChanging(bool value);
    partial void OnSpecialChanged();
    #endregion
		
		public SpecialDisease()
		{
			this._PersonDiseases = new EntitySet<PersonDisease>(new Action<PersonDisease>(this.attach_PersonDiseases), new Action<PersonDisease>(this.detach_PersonDiseases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special", DbType="Bit NOT NULL")]
		public bool Special
		{
			get
			{
				return this._Special;
			}
			set
			{
				if ((this._Special != value))
				{
					this.OnSpecialChanging(value);
					this.SendPropertyChanging();
					this._Special = value;
					this.SendPropertyChanged("Special");
					this.OnSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialDisease_PersonDisease", Storage="_PersonDiseases", ThisKey="ID", OtherKey="Disease")]
		public EntitySet<PersonDisease> PersonDiseases
		{
			get
			{
				return this._PersonDiseases;
			}
			set
			{
				this._PersonDiseases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.SpecialDisease = this;
		}
		
		private void detach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.SpecialDisease = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Speciality1;
		
		private System.Nullable<int> _HeadUserID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdProfessionType;
		
		private bool _HideInDocPayemnt;
		
		private EntitySet<Consultant> _Consultants;
		
		private EntitySet<DispatchReason> _DispatchReasons;
		
		private EntitySet<ONcall> _ONcalls;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<SpecialityDepartment> _SpecialityDepartments;
		
		private EntitySet<SpecialityDrug> _SpecialityDrugs;
		
		private EntitySet<Staff> _Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    partial void OnHeadUserIDChanging(System.Nullable<int> value);
    partial void OnHeadUserIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdProfessionTypeChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdProfessionTypeChanged();
    partial void OnHideInDocPayemntChanging(bool value);
    partial void OnHideInDocPayemntChanged();
    #endregion
		
		public Speciality()
		{
			this._Consultants = new EntitySet<Consultant>(new Action<Consultant>(this.attach_Consultants), new Action<Consultant>(this.detach_Consultants));
			this._DispatchReasons = new EntitySet<DispatchReason>(new Action<DispatchReason>(this.attach_DispatchReasons), new Action<DispatchReason>(this.detach_DispatchReasons));
			this._ONcalls = new EntitySet<ONcall>(new Action<ONcall>(this.attach_ONcalls), new Action<ONcall>(this.detach_ONcalls));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._SpecialityDepartments = new EntitySet<SpecialityDepartment>(new Action<SpecialityDepartment>(this.attach_SpecialityDepartments), new Action<SpecialityDepartment>(this.detach_SpecialityDepartments));
			this._SpecialityDrugs = new EntitySet<SpecialityDrug>(new Action<SpecialityDrug>(this.attach_SpecialityDrugs), new Action<SpecialityDrug>(this.detach_SpecialityDrugs));
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadUserID", DbType="Int")]
		public System.Nullable<int> HeadUserID
		{
			get
			{
				return this._HeadUserID;
			}
			set
			{
				if ((this._HeadUserID != value))
				{
					this.OnHeadUserIDChanging(value);
					this.SendPropertyChanging();
					this._HeadUserID = value;
					this.SendPropertyChanged("HeadUserID");
					this.OnHeadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdProfessionType", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdProfessionType
		{
			get
			{
				return this._SATAIdProfessionType;
			}
			set
			{
				if ((this._SATAIdProfessionType != value))
				{
					this.OnSATAIdProfessionTypeChanging(value);
					this.SendPropertyChanging();
					this._SATAIdProfessionType = value;
					this.SendPropertyChanged("SATAIdProfessionType");
					this.OnSATAIdProfessionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideInDocPayemnt", DbType="Bit NOT NULL")]
		public bool HideInDocPayemnt
		{
			get
			{
				return this._HideInDocPayemnt;
			}
			set
			{
				if ((this._HideInDocPayemnt != value))
				{
					this.OnHideInDocPayemntChanging(value);
					this.SendPropertyChanging();
					this._HideInDocPayemnt = value;
					this.SendPropertyChanged("HideInDocPayemnt");
					this.OnHideInDocPayemntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Consultant", Storage="_Consultants", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Consultant> Consultants
		{
			get
			{
				return this._Consultants;
			}
			set
			{
				this._Consultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_DispatchReason", Storage="_DispatchReasons", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<DispatchReason> DispatchReasons
		{
			get
			{
				return this._DispatchReasons;
			}
			set
			{
				this._DispatchReasons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_ONcall", Storage="_ONcalls", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<ONcall> ONcalls
		{
			get
			{
				return this._ONcalls;
			}
			set
			{
				this._ONcalls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Services", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_SpecialityDepartment", Storage="_SpecialityDepartments", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<SpecialityDepartment> SpecialityDepartments
		{
			get
			{
				return this._SpecialityDepartments;
			}
			set
			{
				this._SpecialityDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_SpecialityDrug", Storage="_SpecialityDrugs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<SpecialityDrug> SpecialityDrugs
		{
			get
			{
				return this._SpecialityDrugs;
			}
			set
			{
				this._SpecialityDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_DispatchReasons(DispatchReason entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_DispatchReasons(DispatchReason entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_ONcalls(ONcall entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_ONcalls(ONcall entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_SpecialityDepartments(SpecialityDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_SpecialityDepartments(SpecialityDepartment entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_SpecialityDrugs(SpecialityDrug entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialityDepartment")]
	public partial class SpecialityDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    #endregion
		
		public SpecialityDepartment()
		{
			this._Department = default(EntityRef<Department>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_SpecialityDepartment", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.SpecialityDepartments.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.SpecialityDepartments.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_SpecialityDepartment", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.SpecialityDepartments.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.SpecialityDepartments.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecialityDrugs")]
	public partial class SpecialityDrug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _DrugID;
		
		private System.Nullable<int> _SpecialityID;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDrugIDChanging(System.Nullable<System.Guid> value);
    partial void OnDrugIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    #endregion
		
		public SpecialityDrug()
		{
			this._Service = default(EntityRef<Service>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrugIDChanging(value);
					this.SendPropertyChanging();
					this._DrugID = value;
					this.SendPropertyChanged("DrugID");
					this.OnDrugIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SpecialityDrug", Storage="_Service", ThisKey="DrugID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.SpecialityDrugs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.SpecialityDrugs.Add(this);
						this._DrugID = value.ID;
					}
					else
					{
						this._DrugID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_SpecialityDrug", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.SpecialityDrugs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.SpecialityDrugs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private string _RoomNumber;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _UserTypeID;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private string _OrganizationLevel;
		
		private bool _Hide;
		
		private bool _ShowInMonitor;
		
		private System.Nullable<int> _ExternalID;
		
		private bool _Offical;
		
		private System.Nullable<int> _PositionID;
		
		private EntitySet<Consultant> _Consultants;
		
		private EntitySet<Discharge> _Discharges;
		
		private EntitySet<DoctorContract> _DoctorContracts;
		
		private EntitySet<DoctorContractM> _DoctorContractMs;
		
		private EntitySet<DoctorFunction> _DoctorFunctions;
		
		private EntitySet<DoctorInsurance> _DoctorInsurances;
		
		private EntitySet<DoctorSalaryParam> _DoctorSalaryParams;
		
		private EntitySet<Dossier> _Dossiers;
		
		private EntitySet<FavoriteICD10> _FavoriteICD10s;
		
		private EntitySet<FavoriteService> _FavoriteServices;
		
		private EntitySet<GivenDrug> _GivenDrugs;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs2;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<PersonDisease> _PersonDiseases;
		
		private EntitySet<Pharmacy> _Pharmacies;
		
		private EntitySet<PhysiotherapyOrderM> _PhysiotherapyOrderMs;
		
		private EntitySet<QualitativePoint> _QualitativePoints;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Surgery> _Surgeries;
		
		private EntitySet<Surgery> _Surgeries1;
		
		private EntitySet<Surgery> _Surgeries2;
		
		private EntitySet<SurgeyHistory> _SurgeyHistories;
		
		private EntitySet<Transfer> _Transfers;
		
		private EntitySet<Transfer> _Transfers1;
		
		private EntitySet<TransmissionOfPatient> _TransmissionOfPatients;
		
		private EntitySet<TransmissionOfPatient> _TransmissionOfPatients1;
		
		private EntitySet<TriageCPR> _TriageCPRs;
		
		private EntitySet<TriageCPR> _TriageCPRs1;
		
		private EntitySet<TriageCPR> _TriageCPRs2;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnUserTypeIDChanging(System.Nullable<int> value);
    partial void OnUserTypeIDChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    partial void OnOrganizationLevelChanging(string value);
    partial void OnOrganizationLevelChanged();
    partial void OnHideChanging(bool value);
    partial void OnHideChanged();
    partial void OnShowInMonitorChanging(bool value);
    partial void OnShowInMonitorChanged();
    partial void OnExternalIDChanging(System.Nullable<int> value);
    partial void OnExternalIDChanged();
    partial void OnOfficalChanging(bool value);
    partial void OnOfficalChanged();
    partial void OnPositionIDChanging(System.Nullable<int> value);
    partial void OnPositionIDChanged();
    #endregion
		
		public Staff()
		{
			this._Consultants = new EntitySet<Consultant>(new Action<Consultant>(this.attach_Consultants), new Action<Consultant>(this.detach_Consultants));
			this._Discharges = new EntitySet<Discharge>(new Action<Discharge>(this.attach_Discharges), new Action<Discharge>(this.detach_Discharges));
			this._DoctorContracts = new EntitySet<DoctorContract>(new Action<DoctorContract>(this.attach_DoctorContracts), new Action<DoctorContract>(this.detach_DoctorContracts));
			this._DoctorContractMs = new EntitySet<DoctorContractM>(new Action<DoctorContractM>(this.attach_DoctorContractMs), new Action<DoctorContractM>(this.detach_DoctorContractMs));
			this._DoctorFunctions = new EntitySet<DoctorFunction>(new Action<DoctorFunction>(this.attach_DoctorFunctions), new Action<DoctorFunction>(this.detach_DoctorFunctions));
			this._DoctorInsurances = new EntitySet<DoctorInsurance>(new Action<DoctorInsurance>(this.attach_DoctorInsurances), new Action<DoctorInsurance>(this.detach_DoctorInsurances));
			this._DoctorSalaryParams = new EntitySet<DoctorSalaryParam>(new Action<DoctorSalaryParam>(this.attach_DoctorSalaryParams), new Action<DoctorSalaryParam>(this.detach_DoctorSalaryParams));
			this._Dossiers = new EntitySet<Dossier>(new Action<Dossier>(this.attach_Dossiers), new Action<Dossier>(this.detach_Dossiers));
			this._FavoriteICD10s = new EntitySet<FavoriteICD10>(new Action<FavoriteICD10>(this.attach_FavoriteICD10s), new Action<FavoriteICD10>(this.detach_FavoriteICD10s));
			this._FavoriteServices = new EntitySet<FavoriteService>(new Action<FavoriteService>(this.attach_FavoriteServices), new Action<FavoriteService>(this.detach_FavoriteServices));
			this._GivenDrugs = new EntitySet<GivenDrug>(new Action<GivenDrug>(this.attach_GivenDrugs), new Action<GivenDrug>(this.detach_GivenDrugs));
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._GivenServiceMs2 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs2), new Action<GivenServiceM>(this.detach_GivenServiceMs2));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._PersonDiseases = new EntitySet<PersonDisease>(new Action<PersonDisease>(this.attach_PersonDiseases), new Action<PersonDisease>(this.detach_PersonDiseases));
			this._Pharmacies = new EntitySet<Pharmacy>(new Action<Pharmacy>(this.attach_Pharmacies), new Action<Pharmacy>(this.detach_Pharmacies));
			this._PhysiotherapyOrderMs = new EntitySet<PhysiotherapyOrderM>(new Action<PhysiotherapyOrderM>(this.attach_PhysiotherapyOrderMs), new Action<PhysiotherapyOrderM>(this.detach_PhysiotherapyOrderMs));
			this._QualitativePoints = new EntitySet<QualitativePoint>(new Action<QualitativePoint>(this.attach_QualitativePoints), new Action<QualitativePoint>(this.detach_QualitativePoints));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Surgeries = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries), new Action<Surgery>(this.detach_Surgeries));
			this._Surgeries1 = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries1), new Action<Surgery>(this.detach_Surgeries1));
			this._Surgeries2 = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries2), new Action<Surgery>(this.detach_Surgeries2));
			this._SurgeyHistories = new EntitySet<SurgeyHistory>(new Action<SurgeyHistory>(this.attach_SurgeyHistories), new Action<SurgeyHistory>(this.detach_SurgeyHistories));
			this._Transfers = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers), new Action<Transfer>(this.detach_Transfers));
			this._Transfers1 = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers1), new Action<Transfer>(this.detach_Transfers1));
			this._TransmissionOfPatients = new EntitySet<TransmissionOfPatient>(new Action<TransmissionOfPatient>(this.attach_TransmissionOfPatients), new Action<TransmissionOfPatient>(this.detach_TransmissionOfPatients));
			this._TransmissionOfPatients1 = new EntitySet<TransmissionOfPatient>(new Action<TransmissionOfPatient>(this.attach_TransmissionOfPatients1), new Action<TransmissionOfPatient>(this.detach_TransmissionOfPatients1));
			this._TriageCPRs = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs), new Action<TriageCPR>(this.detach_TriageCPRs));
			this._TriageCPRs1 = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs1), new Action<TriageCPR>(this.detach_TriageCPRs1));
			this._TriageCPRs2 = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs2), new Action<TriageCPR>(this.detach_TriageCPRs2));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Person = default(EntityRef<Person>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(200)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(100)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int")]
		public System.Nullable<int> UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationLevel", DbType="NVarChar(100)")]
		public string OrganizationLevel
		{
			get
			{
				return this._OrganizationLevel;
			}
			set
			{
				if ((this._OrganizationLevel != value))
				{
					this.OnOrganizationLevelChanging(value);
					this.SendPropertyChanging();
					this._OrganizationLevel = value;
					this.SendPropertyChanged("OrganizationLevel");
					this.OnOrganizationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit NOT NULL")]
		public bool Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInMonitor", DbType="Bit NOT NULL")]
		public bool ShowInMonitor
		{
			get
			{
				return this._ShowInMonitor;
			}
			set
			{
				if ((this._ShowInMonitor != value))
				{
					this.OnShowInMonitorChanging(value);
					this.SendPropertyChanging();
					this._ShowInMonitor = value;
					this.SendPropertyChanged("ShowInMonitor");
					this.OnShowInMonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="Int")]
		public System.Nullable<int> ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offical", DbType="Bit NOT NULL")]
		public bool Offical
		{
			get
			{
				return this._Offical;
			}
			set
			{
				if ((this._Offical != value))
				{
					this.OnOfficalChanging(value);
					this.SendPropertyChanging();
					this._Offical = value;
					this.SendPropertyChanged("Offical");
					this.OnOfficalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int")]
		public System.Nullable<int> PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Consultant", Storage="_Consultants", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Consultant> Consultants
		{
			get
			{
				return this._Consultants;
			}
			set
			{
				this._Consultants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Discharge", Storage="_Discharges", ThisKey="ID", OtherKey="DischargerStaffID")]
		public EntitySet<Discharge> Discharges
		{
			get
			{
				return this._Discharges;
			}
			set
			{
				this._Discharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorContract", Storage="_DoctorContracts", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<DoctorContract> DoctorContracts
		{
			get
			{
				return this._DoctorContracts;
			}
			set
			{
				this._DoctorContracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorContractM", Storage="_DoctorContractMs", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<DoctorContractM> DoctorContractMs
		{
			get
			{
				return this._DoctorContractMs;
			}
			set
			{
				this._DoctorContractMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorFunction", Storage="_DoctorFunctions", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<DoctorFunction> DoctorFunctions
		{
			get
			{
				return this._DoctorFunctions;
			}
			set
			{
				this._DoctorFunctions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorInsurance", Storage="_DoctorInsurances", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<DoctorInsurance> DoctorInsurances
		{
			get
			{
				return this._DoctorInsurances;
			}
			set
			{
				this._DoctorInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_DoctorSalaryParam", Storage="_DoctorSalaryParams", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<DoctorSalaryParam> DoctorSalaryParams
		{
			get
			{
				return this._DoctorSalaryParams;
			}
			set
			{
				this._DoctorSalaryParams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Dossier", Storage="_Dossiers", ThisKey="ID", OtherKey="StaffCure")]
		public EntitySet<Dossier> Dossiers
		{
			get
			{
				return this._Dossiers;
			}
			set
			{
				this._Dossiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteICD10", Storage="_FavoriteICD10s", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<FavoriteICD10> FavoriteICD10s
		{
			get
			{
				return this._FavoriteICD10s;
			}
			set
			{
				this._FavoriteICD10s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FavoriteService", Storage="_FavoriteServices", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<FavoriteService> FavoriteServices
		{
			get
			{
				return this._FavoriteServices;
			}
			set
			{
				this._FavoriteServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenDrug", Storage="_GivenDrugs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenDrug> GivenDrugs
		{
			get
			{
				return this._GivenDrugs;
			}
			set
			{
				this._GivenDrugs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceD", Storage="_GivenServiceDs", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_GivenServiceMs2", ThisKey="ID", OtherKey="TechnicianID")]
		public EntitySet<GivenServiceM> GivenServiceMs2
		{
			get
			{
				return this._GivenServiceMs2;
			}
			set
			{
				this._GivenServiceMs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Payment", Storage="_Payments", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PersonDisease", Storage="_PersonDiseases", ThisKey="ID", OtherKey="DoctorDiagnostic")]
		public EntitySet<PersonDisease> PersonDiseases
		{
			get
			{
				return this._PersonDiseases;
			}
			set
			{
				this._PersonDiseases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Pharmacy", Storage="_Pharmacies", ThisKey="ID", OtherKey="TechnicalID")]
		public EntitySet<Pharmacy> Pharmacies
		{
			get
			{
				return this._Pharmacies;
			}
			set
			{
				this._Pharmacies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_PhysiotherapyOrderM", Storage="_PhysiotherapyOrderMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<PhysiotherapyOrderM> PhysiotherapyOrderMs
		{
			get
			{
				return this._PhysiotherapyOrderMs;
			}
			set
			{
				this._PhysiotherapyOrderMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_QualitativePoint", Storage="_QualitativePoints", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<QualitativePoint> QualitativePoints
		{
			get
			{
				return this._QualitativePoints;
			}
			set
			{
				this._QualitativePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Reference", Storage="_References", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery", Storage="_Surgeries", ThisKey="ID", OtherKey="SurgeryHelpStaff1")]
		public EntitySet<Surgery> Surgeries
		{
			get
			{
				return this._Surgeries;
			}
			set
			{
				this._Surgeries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery1", Storage="_Surgeries1", ThisKey="ID", OtherKey="SurgeryHelpStaff2")]
		public EntitySet<Surgery> Surgeries1
		{
			get
			{
				return this._Surgeries1;
			}
			set
			{
				this._Surgeries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery2", Storage="_Surgeries2", ThisKey="ID", OtherKey="SurgeryHelpStaff3")]
		public EntitySet<Surgery> Surgeries2
		{
			get
			{
				return this._Surgeries2;
			}
			set
			{
				this._Surgeries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_SurgeyHistory", Storage="_SurgeyHistories", ThisKey="ID", OtherKey="DoctorID")]
		public EntitySet<SurgeyHistory> SurgeyHistories
		{
			get
			{
				return this._SurgeyHistories;
			}
			set
			{
				this._SurgeyHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer", Storage="_Transfers", ThisKey="ID", OtherKey="FromStaffID")]
		public EntitySet<Transfer> Transfers
		{
			get
			{
				return this._Transfers;
			}
			set
			{
				this._Transfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer1", Storage="_Transfers1", ThisKey="ID", OtherKey="ToStaffID")]
		public EntitySet<Transfer> Transfers1
		{
			get
			{
				return this._Transfers1;
			}
			set
			{
				this._Transfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TransmissionOfPatient", Storage="_TransmissionOfPatients", ThisKey="ID", OtherKey="FromStaff")]
		public EntitySet<TransmissionOfPatient> TransmissionOfPatients
		{
			get
			{
				return this._TransmissionOfPatients;
			}
			set
			{
				this._TransmissionOfPatients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TransmissionOfPatient1", Storage="_TransmissionOfPatients1", ThisKey="ID", OtherKey="ToStaff")]
		public EntitySet<TransmissionOfPatient> TransmissionOfPatients1
		{
			get
			{
				return this._TransmissionOfPatients1;
			}
			set
			{
				this._TransmissionOfPatients1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR", Storage="_TriageCPRs", ThisKey="ID", OtherKey="IDStaffpresent")]
		public EntitySet<TriageCPR> TriageCPRs
		{
			get
			{
				return this._TriageCPRs;
			}
			set
			{
				this._TriageCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR1", Storage="_TriageCPRs1", ThisKey="ID", OtherKey="IDStaffAnesthesia")]
		public EntitySet<TriageCPR> TriageCPRs1
		{
			get
			{
				return this._TriageCPRs1;
			}
			set
			{
				this._TriageCPRs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR2", Storage="_TriageCPRs2", ThisKey="ID", OtherKey="IDStaffpresent")]
		public EntitySet<TriageCPR> TriageCPRs2
		{
			get
			{
				return this._TriageCPRs2;
			}
			set
			{
				this._TriageCPRs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Consultants(Consultant entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Discharges(Discharge entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_DoctorContracts(DoctorContract entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_DoctorContracts(DoctorContract entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_DoctorContractMs(DoctorContractM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_DoctorContractMs(DoctorContractM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_DoctorFunctions(DoctorFunction entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_DoctorFunctions(DoctorFunction entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_DoctorInsurances(DoctorInsurance entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_DoctorSalaryParams(DoctorSalaryParam entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_DoctorSalaryParams(DoctorSalaryParam entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Dossiers(Dossier entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_FavoriteICD10s(FavoriteICD10 entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_FavoriteICD10s(FavoriteICD10 entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_FavoriteServices(FavoriteService entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenDrugs(GivenDrug entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_PersonDiseases(PersonDisease entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Pharmacies(Pharmacy entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Pharmacies(Pharmacy entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_PhysiotherapyOrderMs(PhysiotherapyOrderM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_PhysiotherapyOrderMs(PhysiotherapyOrderM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_QualitativePoints(QualitativePoint entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_QualitativePoints(QualitativePoint entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Surgeries1(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_Surgeries1(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_Surgeries2(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_Surgeries2(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_SurgeyHistories(SurgeyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_SurgeyHistories(SurgeyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Transfers1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_Transfers1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_TransmissionOfPatients(TransmissionOfPatient entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_TransmissionOfPatients(TransmissionOfPatient entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_TransmissionOfPatients1(TransmissionOfPatient entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_TransmissionOfPatients1(TransmissionOfPatient entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_TriageCPRs1(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_TriageCPRs1(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_TriageCPRs2(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_TriageCPRs2(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surgery")]
	public partial class Surgery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<double> _BasicSurgicalUnit;
		
		private System.Nullable<double> _SupplementaryUnit;
		
		private System.Nullable<double> _Other;
		
		private System.Nullable<double> _ConfirmOther;
		
		private System.Nullable<double> _UltimateSurgicalUnit;
		
		private System.Nullable<double> _FinalSupplementalUnit;
		
		private System.Nullable<double> _ConfirmUltimateSurgicalUnit;
		
		private System.Nullable<double> _ConfirmFinalSupplementalUnit;
		
		private System.Nullable<double> _ConfirmBasicSurgicalUnit;
		
		private System.Nullable<double> _ConfirmSupplementaryUnit;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private string _SurgeryTime;
		
		private System.Nullable<bool> _KindOfOperation;
		
		private string _PreOPDiagnosis;
		
		private string _PastOPDiagnosis;
		
		private string _TypeOfOperation;
		
		private string _Specimen;
		
		private string _SpecimenYes;
		
		private string _SpecimenNo;
		
		private string _SpecimenAmount;
		
		private string _ProcedureAndFinding;
		
		private System.Nullable<bool> _CountOfSwab;
		
		private System.Nullable<bool> _SentToLaboratory;
		
		private bool _FinanceConfirm;
		
		private System.Nullable<System.Guid> _ConfirmServiceID;
		
		private System.Nullable<int> _ConfirmTadilAreaID;
		
		private System.Nullable<System.Guid> _SurgeryHelpStaff1;
		
		private System.Nullable<System.Guid> _SurgeryHelpStaff2;
		
		private System.Nullable<System.Guid> _SurgeryHelpStaff3;
		
		private System.Nullable<double> _Joze_Fanni;
		
		private System.Nullable<double> _Joze_Herfei;
		
		private EntityRef<GivenServiceD> _GivenServiceD;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<TadilArea> _TadilArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBasicSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnBasicSurgicalUnitChanged();
    partial void OnSupplementaryUnitChanging(System.Nullable<double> value);
    partial void OnSupplementaryUnitChanged();
    partial void OnOtherChanging(System.Nullable<double> value);
    partial void OnOtherChanged();
    partial void OnConfirmOtherChanging(System.Nullable<double> value);
    partial void OnConfirmOtherChanged();
    partial void OnUltimateSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnUltimateSurgicalUnitChanged();
    partial void OnFinalSupplementalUnitChanging(System.Nullable<double> value);
    partial void OnFinalSupplementalUnitChanged();
    partial void OnConfirmUltimateSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnConfirmUltimateSurgicalUnitChanged();
    partial void OnConfirmFinalSupplementalUnitChanging(System.Nullable<double> value);
    partial void OnConfirmFinalSupplementalUnitChanged();
    partial void OnConfirmBasicSurgicalUnitChanging(System.Nullable<double> value);
    partial void OnConfirmBasicSurgicalUnitChanged();
    partial void OnConfirmSupplementaryUnitChanging(System.Nullable<double> value);
    partial void OnConfirmSupplementaryUnitChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnSurgeryTimeChanging(string value);
    partial void OnSurgeryTimeChanged();
    partial void OnKindOfOperationChanging(System.Nullable<bool> value);
    partial void OnKindOfOperationChanged();
    partial void OnPreOPDiagnosisChanging(string value);
    partial void OnPreOPDiagnosisChanged();
    partial void OnPastOPDiagnosisChanging(string value);
    partial void OnPastOPDiagnosisChanged();
    partial void OnTypeOfOperationChanging(string value);
    partial void OnTypeOfOperationChanged();
    partial void OnSpecimenChanging(string value);
    partial void OnSpecimenChanged();
    partial void OnSpecimenYesChanging(string value);
    partial void OnSpecimenYesChanged();
    partial void OnSpecimenNoChanging(string value);
    partial void OnSpecimenNoChanged();
    partial void OnSpecimenAmountChanging(string value);
    partial void OnSpecimenAmountChanged();
    partial void OnProcedureAndFindingChanging(string value);
    partial void OnProcedureAndFindingChanged();
    partial void OnCountOfSwabChanging(System.Nullable<bool> value);
    partial void OnCountOfSwabChanged();
    partial void OnSentToLaboratoryChanging(System.Nullable<bool> value);
    partial void OnSentToLaboratoryChanged();
    partial void OnFinanceConfirmChanging(bool value);
    partial void OnFinanceConfirmChanged();
    partial void OnConfirmServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnConfirmServiceIDChanged();
    partial void OnConfirmTadilAreaIDChanging(System.Nullable<int> value);
    partial void OnConfirmTadilAreaIDChanged();
    partial void OnSurgeryHelpStaff1Changing(System.Nullable<System.Guid> value);
    partial void OnSurgeryHelpStaff1Changed();
    partial void OnSurgeryHelpStaff2Changing(System.Nullable<System.Guid> value);
    partial void OnSurgeryHelpStaff2Changed();
    partial void OnSurgeryHelpStaff3Changing(System.Nullable<System.Guid> value);
    partial void OnSurgeryHelpStaff3Changed();
    partial void OnJoze_FanniChanging(System.Nullable<double> value);
    partial void OnJoze_FanniChanged();
    partial void OnJoze_HerfeiChanging(System.Nullable<double> value);
    partial void OnJoze_HerfeiChanged();
    #endregion
		
		public Surgery()
		{
			this._GivenServiceD = default(EntityRef<GivenServiceD>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._TadilArea = default(EntityRef<TadilArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicSurgicalUnit", DbType="Float")]
		public System.Nullable<double> BasicSurgicalUnit
		{
			get
			{
				return this._BasicSurgicalUnit;
			}
			set
			{
				if ((this._BasicSurgicalUnit != value))
				{
					this.OnBasicSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._BasicSurgicalUnit = value;
					this.SendPropertyChanged("BasicSurgicalUnit");
					this.OnBasicSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementaryUnit", DbType="Float")]
		public System.Nullable<double> SupplementaryUnit
		{
			get
			{
				return this._SupplementaryUnit;
			}
			set
			{
				if ((this._SupplementaryUnit != value))
				{
					this.OnSupplementaryUnitChanging(value);
					this.SendPropertyChanging();
					this._SupplementaryUnit = value;
					this.SendPropertyChanged("SupplementaryUnit");
					this.OnSupplementaryUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="Float")]
		public System.Nullable<double> Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmOther", DbType="Float")]
		public System.Nullable<double> ConfirmOther
		{
			get
			{
				return this._ConfirmOther;
			}
			set
			{
				if ((this._ConfirmOther != value))
				{
					this.OnConfirmOtherChanging(value);
					this.SendPropertyChanging();
					this._ConfirmOther = value;
					this.SendPropertyChanged("ConfirmOther");
					this.OnConfirmOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimateSurgicalUnit", DbType="Float")]
		public System.Nullable<double> UltimateSurgicalUnit
		{
			get
			{
				return this._UltimateSurgicalUnit;
			}
			set
			{
				if ((this._UltimateSurgicalUnit != value))
				{
					this.OnUltimateSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._UltimateSurgicalUnit = value;
					this.SendPropertyChanged("UltimateSurgicalUnit");
					this.OnUltimateSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalSupplementalUnit", DbType="Float")]
		public System.Nullable<double> FinalSupplementalUnit
		{
			get
			{
				return this._FinalSupplementalUnit;
			}
			set
			{
				if ((this._FinalSupplementalUnit != value))
				{
					this.OnFinalSupplementalUnitChanging(value);
					this.SendPropertyChanging();
					this._FinalSupplementalUnit = value;
					this.SendPropertyChanged("FinalSupplementalUnit");
					this.OnFinalSupplementalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmUltimateSurgicalUnit", DbType="Float")]
		public System.Nullable<double> ConfirmUltimateSurgicalUnit
		{
			get
			{
				return this._ConfirmUltimateSurgicalUnit;
			}
			set
			{
				if ((this._ConfirmUltimateSurgicalUnit != value))
				{
					this.OnConfirmUltimateSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmUltimateSurgicalUnit = value;
					this.SendPropertyChanged("ConfirmUltimateSurgicalUnit");
					this.OnConfirmUltimateSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinalSupplementalUnit", DbType="Float")]
		public System.Nullable<double> ConfirmFinalSupplementalUnit
		{
			get
			{
				return this._ConfirmFinalSupplementalUnit;
			}
			set
			{
				if ((this._ConfirmFinalSupplementalUnit != value))
				{
					this.OnConfirmFinalSupplementalUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinalSupplementalUnit = value;
					this.SendPropertyChanged("ConfirmFinalSupplementalUnit");
					this.OnConfirmFinalSupplementalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmBasicSurgicalUnit", DbType="Float")]
		public System.Nullable<double> ConfirmBasicSurgicalUnit
		{
			get
			{
				return this._ConfirmBasicSurgicalUnit;
			}
			set
			{
				if ((this._ConfirmBasicSurgicalUnit != value))
				{
					this.OnConfirmBasicSurgicalUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmBasicSurgicalUnit = value;
					this.SendPropertyChanged("ConfirmBasicSurgicalUnit");
					this.OnConfirmBasicSurgicalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmSupplementaryUnit", DbType="Float")]
		public System.Nullable<double> ConfirmSupplementaryUnit
		{
			get
			{
				return this._ConfirmSupplementaryUnit;
			}
			set
			{
				if ((this._ConfirmSupplementaryUnit != value))
				{
					this.OnConfirmSupplementaryUnitChanging(value);
					this.SendPropertyChanging();
					this._ConfirmSupplementaryUnit = value;
					this.SendPropertyChanged("ConfirmSupplementaryUnit");
					this.OnConfirmSupplementaryUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(8)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NVarChar(8)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryTime", DbType="NVarChar(8)")]
		public string SurgeryTime
		{
			get
			{
				return this._SurgeryTime;
			}
			set
			{
				if ((this._SurgeryTime != value))
				{
					this.OnSurgeryTimeChanging(value);
					this.SendPropertyChanging();
					this._SurgeryTime = value;
					this.SendPropertyChanged("SurgeryTime");
					this.OnSurgeryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindOfOperation", DbType="Bit")]
		public System.Nullable<bool> KindOfOperation
		{
			get
			{
				return this._KindOfOperation;
			}
			set
			{
				if ((this._KindOfOperation != value))
				{
					this.OnKindOfOperationChanging(value);
					this.SendPropertyChanging();
					this._KindOfOperation = value;
					this.SendPropertyChanged("KindOfOperation");
					this.OnKindOfOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreOPDiagnosis", DbType="NVarChar(MAX)")]
		public string PreOPDiagnosis
		{
			get
			{
				return this._PreOPDiagnosis;
			}
			set
			{
				if ((this._PreOPDiagnosis != value))
				{
					this.OnPreOPDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._PreOPDiagnosis = value;
					this.SendPropertyChanged("PreOPDiagnosis");
					this.OnPreOPDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastOPDiagnosis", DbType="NVarChar(MAX)")]
		public string PastOPDiagnosis
		{
			get
			{
				return this._PastOPDiagnosis;
			}
			set
			{
				if ((this._PastOPDiagnosis != value))
				{
					this.OnPastOPDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._PastOPDiagnosis = value;
					this.SendPropertyChanged("PastOPDiagnosis");
					this.OnPastOPDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfOperation", DbType="NVarChar(MAX)")]
		public string TypeOfOperation
		{
			get
			{
				return this._TypeOfOperation;
			}
			set
			{
				if ((this._TypeOfOperation != value))
				{
					this.OnTypeOfOperationChanging(value);
					this.SendPropertyChanging();
					this._TypeOfOperation = value;
					this.SendPropertyChanged("TypeOfOperation");
					this.OnTypeOfOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specimen", DbType="NVarChar(MAX)")]
		public string Specimen
		{
			get
			{
				return this._Specimen;
			}
			set
			{
				if ((this._Specimen != value))
				{
					this.OnSpecimenChanging(value);
					this.SendPropertyChanging();
					this._Specimen = value;
					this.SendPropertyChanged("Specimen");
					this.OnSpecimenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenYes", DbType="NVarChar(100)")]
		public string SpecimenYes
		{
			get
			{
				return this._SpecimenYes;
			}
			set
			{
				if ((this._SpecimenYes != value))
				{
					this.OnSpecimenYesChanging(value);
					this.SendPropertyChanging();
					this._SpecimenYes = value;
					this.SendPropertyChanged("SpecimenYes");
					this.OnSpecimenYesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenNo", DbType="NVarChar(100)")]
		public string SpecimenNo
		{
			get
			{
				return this._SpecimenNo;
			}
			set
			{
				if ((this._SpecimenNo != value))
				{
					this.OnSpecimenNoChanging(value);
					this.SendPropertyChanging();
					this._SpecimenNo = value;
					this.SendPropertyChanged("SpecimenNo");
					this.OnSpecimenNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecimenAmount", DbType="NVarChar(100)")]
		public string SpecimenAmount
		{
			get
			{
				return this._SpecimenAmount;
			}
			set
			{
				if ((this._SpecimenAmount != value))
				{
					this.OnSpecimenAmountChanging(value);
					this.SendPropertyChanging();
					this._SpecimenAmount = value;
					this.SendPropertyChanged("SpecimenAmount");
					this.OnSpecimenAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureAndFinding", DbType="NVarChar(MAX)")]
		public string ProcedureAndFinding
		{
			get
			{
				return this._ProcedureAndFinding;
			}
			set
			{
				if ((this._ProcedureAndFinding != value))
				{
					this.OnProcedureAndFindingChanging(value);
					this.SendPropertyChanging();
					this._ProcedureAndFinding = value;
					this.SendPropertyChanged("ProcedureAndFinding");
					this.OnProcedureAndFindingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountOfSwab", DbType="Bit")]
		public System.Nullable<bool> CountOfSwab
		{
			get
			{
				return this._CountOfSwab;
			}
			set
			{
				if ((this._CountOfSwab != value))
				{
					this.OnCountOfSwabChanging(value);
					this.SendPropertyChanging();
					this._CountOfSwab = value;
					this.SendPropertyChanged("CountOfSwab");
					this.OnCountOfSwabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentToLaboratory", DbType="Bit")]
		public System.Nullable<bool> SentToLaboratory
		{
			get
			{
				return this._SentToLaboratory;
			}
			set
			{
				if ((this._SentToLaboratory != value))
				{
					this.OnSentToLaboratoryChanging(value);
					this.SendPropertyChanging();
					this._SentToLaboratory = value;
					this.SendPropertyChanged("SentToLaboratory");
					this.OnSentToLaboratoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit NOT NULL")]
		public bool FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ConfirmServiceID
		{
			get
			{
				return this._ConfirmServiceID;
			}
			set
			{
				if ((this._ConfirmServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmServiceID = value;
					this.SendPropertyChanged("ConfirmServiceID");
					this.OnConfirmServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTadilAreaID", DbType="Int")]
		public System.Nullable<int> ConfirmTadilAreaID
		{
			get
			{
				return this._ConfirmTadilAreaID;
			}
			set
			{
				if ((this._ConfirmTadilAreaID != value))
				{
					if (this._TadilArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmTadilAreaIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTadilAreaID = value;
					this.SendPropertyChanged("ConfirmTadilAreaID");
					this.OnConfirmTadilAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryHelpStaff1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurgeryHelpStaff1
		{
			get
			{
				return this._SurgeryHelpStaff1;
			}
			set
			{
				if ((this._SurgeryHelpStaff1 != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryHelpStaff1Changing(value);
					this.SendPropertyChanging();
					this._SurgeryHelpStaff1 = value;
					this.SendPropertyChanged("SurgeryHelpStaff1");
					this.OnSurgeryHelpStaff1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryHelpStaff2", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurgeryHelpStaff2
		{
			get
			{
				return this._SurgeryHelpStaff2;
			}
			set
			{
				if ((this._SurgeryHelpStaff2 != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryHelpStaff2Changing(value);
					this.SendPropertyChanging();
					this._SurgeryHelpStaff2 = value;
					this.SendPropertyChanged("SurgeryHelpStaff2");
					this.OnSurgeryHelpStaff2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryHelpStaff3", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SurgeryHelpStaff3
		{
			get
			{
				return this._SurgeryHelpStaff3;
			}
			set
			{
				if ((this._SurgeryHelpStaff3 != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryHelpStaff3Changing(value);
					this.SendPropertyChanging();
					this._SurgeryHelpStaff3 = value;
					this.SendPropertyChanged("SurgeryHelpStaff3");
					this.OnSurgeryHelpStaff3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Fanni", DbType="Float")]
		public System.Nullable<double> Joze_Fanni
		{
			get
			{
				return this._Joze_Fanni;
			}
			set
			{
				if ((this._Joze_Fanni != value))
				{
					this.OnJoze_FanniChanging(value);
					this.SendPropertyChanging();
					this._Joze_Fanni = value;
					this.SendPropertyChanged("Joze_Fanni");
					this.OnJoze_FanniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joze_Herfei", DbType="Float")]
		public System.Nullable<double> Joze_Herfei
		{
			get
			{
				return this._Joze_Herfei;
			}
			set
			{
				if ((this._Joze_Herfei != value))
				{
					this.OnJoze_HerfeiChanging(value);
					this.SendPropertyChanging();
					this._Joze_Herfei = value;
					this.SendPropertyChanged("Joze_Herfei");
					this.OnJoze_HerfeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceD_Surgery", Storage="_GivenServiceD", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GivenServiceD GivenServiceD
		{
			get
			{
				return this._GivenServiceD.Entity;
			}
			set
			{
				GivenServiceD previousValue = this._GivenServiceD.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceD.Entity = null;
						previousValue.Surgery = null;
					}
					this._GivenServiceD.Entity = value;
					if ((value != null))
					{
						value.Surgery = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Surgery", Storage="_Service", ThisKey="ConfirmServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Surgeries.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Surgeries.Add(this);
						this._ConfirmServiceID = value.ID;
					}
					else
					{
						this._ConfirmServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery", Storage="_Staff", ThisKey="SurgeryHelpStaff1", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Surgeries.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Surgeries.Add(this);
						this._SurgeryHelpStaff1 = value.ID;
					}
					else
					{
						this._SurgeryHelpStaff1 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery1", Storage="_Staff1", ThisKey="SurgeryHelpStaff2", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.Surgeries1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.Surgeries1.Add(this);
						this._SurgeryHelpStaff2 = value.ID;
					}
					else
					{
						this._SurgeryHelpStaff2 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Surgery2", Storage="_Staff2", ThisKey="SurgeryHelpStaff3", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.Surgeries2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.Surgeries2.Add(this);
						this._SurgeryHelpStaff3 = value.ID;
					}
					else
					{
						this._SurgeryHelpStaff3 = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_Surgery", Storage="_TadilArea", ThisKey="ConfirmTadilAreaID", OtherKey="IDTadilPercent", IsForeignKey=true)]
		public TadilArea TadilArea
		{
			get
			{
				return this._TadilArea.Entity;
			}
			set
			{
				TadilArea previousValue = this._TadilArea.Entity;
				if (((previousValue != value) 
							|| (this._TadilArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TadilArea.Entity = null;
						previousValue.Surgeries.Remove(this);
					}
					this._TadilArea.Entity = value;
					if ((value != null))
					{
						value.Surgeries.Add(this);
						this._ConfirmTadilAreaID = value.IDTadilPercent;
					}
					else
					{
						this._ConfirmTadilAreaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TadilArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SurgeyHistory")]
	public partial class SurgeyHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _PersonID;
		
		private System.Guid _SurgeryID;
		
		private System.Guid _DoctorID;
		
		private string _Date;
		
		private string _Comment;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnSurgeryIDChanging(System.Guid value);
    partial void OnSurgeryIDChanged();
    partial void OnDoctorIDChanging(System.Guid value);
    partial void OnDoctorIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public SurgeyHistory()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SurgeryID
		{
			get
			{
				return this._SurgeryID;
			}
			set
			{
				if ((this._SurgeryID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSurgeryIDChanging(value);
					this.SendPropertyChanging();
					this._SurgeryID = value;
					this.SendPropertyChanged("SurgeryID");
					this.OnSurgeryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_SurgeyHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.SurgeyHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.SurgeyHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_SurgeyHistory", Storage="_Service", ThisKey="SurgeryID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.SurgeyHistories.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.SurgeyHistories.Add(this);
						this._SurgeryID = value.ID;
					}
					else
					{
						this._SurgeryID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_SurgeyHistory", Storage="_Staff", ThisKey="DoctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.SurgeyHistories.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.SurgeyHistories.Add(this);
						this._DoctorID = value.ID;
					}
					else
					{
						this._DoctorID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemError")]
	public partial class SystemError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<long> _DosID;
		
		private System.Nullable<System.Guid> _Dep;
		
		private string _Error;
		
		private string _Date;
		
		private string _Time;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDosIDChanging(System.Nullable<long> value);
    partial void OnDosIDChanged();
    partial void OnDepChanging(System.Nullable<System.Guid> value);
    partial void OnDepChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public SystemError()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosID", DbType="BigInt")]
		public System.Nullable<long> DosID
		{
			get
			{
				return this._DosID;
			}
			set
			{
				if ((this._DosID != value))
				{
					this.OnDosIDChanging(value);
					this.SendPropertyChanging();
					this._DosID = value;
					this.SendPropertyChanged("DosID");
					this.OnDosIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dep", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Dep
		{
			get
			{
				return this._Dep;
			}
			set
			{
				if ((this._Dep != value))
				{
					this.OnDepChanging(value);
					this.SendPropertyChanging();
					this._Dep = value;
					this.SendPropertyChanged("Dep");
					this.OnDepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="NVarChar(300)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TadilArea")]
	public partial class TadilArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTadilPercent;
		
		private string _TadilPercentNAme;
		
		private System.Nullable<int> _TadilpercentValue;
		
		private System.Nullable<int> _SurgeryNo;
		
		private System.Nullable<int> _SortColumn;
		
		private EntitySet<GivenServiceD> _GivenServiceDs;
		
		private EntitySet<Surgery> _Surgeries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTadilPercentChanging(int value);
    partial void OnIDTadilPercentChanged();
    partial void OnTadilPercentNAmeChanging(string value);
    partial void OnTadilPercentNAmeChanged();
    partial void OnTadilpercentValueChanging(System.Nullable<int> value);
    partial void OnTadilpercentValueChanged();
    partial void OnSurgeryNoChanging(System.Nullable<int> value);
    partial void OnSurgeryNoChanged();
    partial void OnSortColumnChanging(System.Nullable<int> value);
    partial void OnSortColumnChanged();
    #endregion
		
		public TadilArea()
		{
			this._GivenServiceDs = new EntitySet<GivenServiceD>(new Action<GivenServiceD>(this.attach_GivenServiceDs), new Action<GivenServiceD>(this.detach_GivenServiceDs));
			this._Surgeries = new EntitySet<Surgery>(new Action<Surgery>(this.attach_Surgeries), new Action<Surgery>(this.detach_Surgeries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTadilPercent", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTadilPercent
		{
			get
			{
				return this._IDTadilPercent;
			}
			set
			{
				if ((this._IDTadilPercent != value))
				{
					this.OnIDTadilPercentChanging(value);
					this.SendPropertyChanging();
					this._IDTadilPercent = value;
					this.SendPropertyChanged("IDTadilPercent");
					this.OnIDTadilPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilPercentNAme", DbType="NVarChar(200)")]
		public string TadilPercentNAme
		{
			get
			{
				return this._TadilPercentNAme;
			}
			set
			{
				if ((this._TadilPercentNAme != value))
				{
					this.OnTadilPercentNAmeChanging(value);
					this.SendPropertyChanging();
					this._TadilPercentNAme = value;
					this.SendPropertyChanged("TadilPercentNAme");
					this.OnTadilPercentNAmeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TadilpercentValue", DbType="Int")]
		public System.Nullable<int> TadilpercentValue
		{
			get
			{
				return this._TadilpercentValue;
			}
			set
			{
				if ((this._TadilpercentValue != value))
				{
					this.OnTadilpercentValueChanging(value);
					this.SendPropertyChanging();
					this._TadilpercentValue = value;
					this.SendPropertyChanged("TadilpercentValue");
					this.OnTadilpercentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurgeryNo", DbType="Int")]
		public System.Nullable<int> SurgeryNo
		{
			get
			{
				return this._SurgeryNo;
			}
			set
			{
				if ((this._SurgeryNo != value))
				{
					this.OnSurgeryNoChanging(value);
					this.SendPropertyChanging();
					this._SurgeryNo = value;
					this.SendPropertyChanged("SurgeryNo");
					this.OnSurgeryNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortColumn", DbType="Int")]
		public System.Nullable<int> SortColumn
		{
			get
			{
				return this._SortColumn;
			}
			set
			{
				if ((this._SortColumn != value))
				{
					this.OnSortColumnChanging(value);
					this.SendPropertyChanging();
					this._SortColumn = value;
					this.SendPropertyChanged("SortColumn");
					this.OnSortColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_GivenServiceD", Storage="_GivenServiceDs", ThisKey="IDTadilPercent", OtherKey="TadilAreaID")]
		public EntitySet<GivenServiceD> GivenServiceDs
		{
			get
			{
				return this._GivenServiceDs;
			}
			set
			{
				this._GivenServiceDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TadilArea_Surgery", Storage="_Surgeries", ThisKey="IDTadilPercent", OtherKey="ConfirmTadilAreaID")]
		public EntitySet<Surgery> Surgeries
		{
			get
			{
				return this._Surgeries;
			}
			set
			{
				this._Surgeries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = this;
		}
		
		private void detach_GivenServiceDs(GivenServiceD entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = null;
		}
		
		private void attach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = this;
		}
		
		private void detach_Surgeries(Surgery entity)
		{
			this.SendPropertyChanging();
			entity.TadilArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tariff")]
	public partial class Tariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private string _Date;
		
		private System.Nullable<decimal> _PatientShare;
		
		private System.Nullable<decimal> _OrganizationShare;
		
		private System.Nullable<decimal> _FreePrice;
		
		private System.Nullable<decimal> _GovernmentalPrice;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private bool _Lock;
		
		private EntityRef<Insurance> _Insurance;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPatientShareChanging(System.Nullable<decimal> value);
    partial void OnPatientShareChanged();
    partial void OnOrganizationShareChanging(System.Nullable<decimal> value);
    partial void OnOrganizationShareChanged();
    partial void OnFreePriceChanging(System.Nullable<decimal> value);
    partial void OnFreePriceChanged();
    partial void OnGovernmentalPriceChanging(System.Nullable<decimal> value);
    partial void OnGovernmentalPriceChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnLockChanging(bool value);
    partial void OnLockChanged();
    #endregion
		
		public Tariff()
		{
			this._Insurance = default(EntityRef<Insurance>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					if (this._Insurance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientShare", DbType="Money")]
		public System.Nullable<decimal> PatientShare
		{
			get
			{
				return this._PatientShare;
			}
			set
			{
				if ((this._PatientShare != value))
				{
					this.OnPatientShareChanging(value);
					this.SendPropertyChanging();
					this._PatientShare = value;
					this.SendPropertyChanged("PatientShare");
					this.OnPatientShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationShare", DbType="Money")]
		public System.Nullable<decimal> OrganizationShare
		{
			get
			{
				return this._OrganizationShare;
			}
			set
			{
				if ((this._OrganizationShare != value))
				{
					this.OnOrganizationShareChanging(value);
					this.SendPropertyChanging();
					this._OrganizationShare = value;
					this.SendPropertyChanged("OrganizationShare");
					this.OnOrganizationShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreePrice", DbType="Money")]
		public System.Nullable<decimal> FreePrice
		{
			get
			{
				return this._FreePrice;
			}
			set
			{
				if ((this._FreePrice != value))
				{
					this.OnFreePriceChanging(value);
					this.SendPropertyChanging();
					this._FreePrice = value;
					this.SendPropertyChanged("FreePrice");
					this.OnFreePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentalPrice", DbType="Money")]
		public System.Nullable<decimal> GovernmentalPrice
		{
			get
			{
				return this._GovernmentalPrice;
			}
			set
			{
				if ((this._GovernmentalPrice != value))
				{
					this.OnGovernmentalPriceChanging(value);
					this.SendPropertyChanging();
					this._GovernmentalPrice = value;
					this.SendPropertyChanged("GovernmentalPrice");
					this.OnGovernmentalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="Bit NOT NULL")]
		public bool Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurance_Tariff", Storage="_Insurance", ThisKey="InsuranceID", OtherKey="ID", IsForeignKey=true)]
		public Insurance Insurance
		{
			get
			{
				return this._Insurance.Entity;
			}
			set
			{
				Insurance previousValue = this._Insurance.Entity;
				if (((previousValue != value) 
							|| (this._Insurance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurance.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Insurance.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._InsuranceID = value.ID;
					}
					else
					{
						this._InsuranceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Insurance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Tariff", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Tariffs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Tariffs.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAllPhoneNumbers")]
	public partial class tblAllPhoneNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Interal;
		
		private string _PhoneType;
		
		private string _PhoneNumber;
		
		private string _DeliveryDate;
		
		private string _Date_Received;
		
		private string _LocationGroup;
		
		private string _Location;
		
		private string _Responsible;
		
		private string _Description;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInteralChanging(string value);
    partial void OnInteralChanged();
    partial void OnPhoneTypeChanging(string value);
    partial void OnPhoneTypeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnDate_ReceivedChanging(string value);
    partial void OnDate_ReceivedChanged();
    partial void OnLocationGroupChanging(string value);
    partial void OnLocationGroupChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnResponsibleChanging(string value);
    partial void OnResponsibleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public tblAllPhoneNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interal", DbType="NVarChar(50)")]
		public string Interal
		{
			get
			{
				return this._Interal;
			}
			set
			{
				if ((this._Interal != value))
				{
					this.OnInteralChanging(value);
					this.SendPropertyChanging();
					this._Interal = value;
					this.SendPropertyChanged("Interal");
					this.OnInteralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneType", DbType="NVarChar(50)")]
		public string PhoneType
		{
			get
			{
				return this._PhoneType;
			}
			set
			{
				if ((this._PhoneType != value))
				{
					this.OnPhoneTypeChanging(value);
					this.SendPropertyChanging();
					this._PhoneType = value;
					this.SendPropertyChanged("PhoneType");
					this.OnPhoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(10)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Date Received]", Storage="_Date_Received", DbType="NVarChar(10)")]
		public string Date_Received
		{
			get
			{
				return this._Date_Received;
			}
			set
			{
				if ((this._Date_Received != value))
				{
					this.OnDate_ReceivedChanging(value);
					this.SendPropertyChanging();
					this._Date_Received = value;
					this.SendPropertyChanged("Date_Received");
					this.OnDate_ReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGroup", DbType="NVarChar(50)")]
		public string LocationGroup
		{
			get
			{
				return this._LocationGroup;
			}
			set
			{
				if ((this._LocationGroup != value))
				{
					this.OnLocationGroupChanging(value);
					this.SendPropertyChanging();
					this._LocationGroup = value;
					this.SendPropertyChanged("LocationGroup");
					this.OnLocationGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(50)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this.OnResponsibleChanging(value);
					this.SendPropertyChanging();
					this._Responsible = value;
					this.SendPropertyChanged("Responsible");
					this.OnResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblHomeDefinition")]
	public partial class tblHomeDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PelakNumber;
		
		private string _Address;
		
		private string _Description;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPelakNumberChanging(string value);
    partial void OnPelakNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public tblHomeDefinition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PelakNumber", DbType="NVarChar(20)")]
		public string PelakNumber
		{
			get
			{
				return this._PelakNumber;
			}
			set
			{
				if ((this._PelakNumber != value))
				{
					this.OnPelakNumberChanging(value);
					this.SendPropertyChanging();
					this._PelakNumber = value;
					this.SendPropertyChanged("PelakNumber");
					this.OnPelakNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCarDriver")]
	public partial class tblMngCarDriver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Driver_ID;
		
		private string _Date_Delivery;
		
		private string _Description;
		
		private System.Nullable<int> _IDCar;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
		private EntityRef<tblMngtransportPersonel> _tblMngtransportPersonel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDriver_IDChanging(System.Nullable<int> value);
    partial void OnDriver_IDChanged();
    partial void OnDate_DeliveryChanging(string value);
    partial void OnDate_DeliveryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    #endregion
		
		public tblMngCarDriver()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			this._tblMngtransportPersonel = default(EntityRef<tblMngtransportPersonel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver_ID", DbType="Int")]
		public System.Nullable<int> Driver_ID
		{
			get
			{
				return this._Driver_ID;
			}
			set
			{
				if ((this._Driver_ID != value))
				{
					if (this._tblMngtransportPersonel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriver_IDChanging(value);
					this.SendPropertyChanging();
					this._Driver_ID = value;
					this.SendPropertyChanged("Driver_ID");
					this.OnDriver_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Delivery", DbType="NVarChar(10)")]
		public string Date_Delivery
		{
			get
			{
				return this._Date_Delivery;
			}
			set
			{
				if ((this._Date_Delivery != value))
				{
					this.OnDate_DeliveryChanging(value);
					this.SendPropertyChanging();
					this._Date_Delivery = value;
					this.SendPropertyChanged("Date_Delivery");
					this.OnDate_DeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarDriver", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngCarDrivers.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngCarDrivers.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngCarDriver", Storage="_tblMngtransportPersonel", ThisKey="Driver_ID", OtherKey="ID", IsForeignKey=true)]
		public tblMngtransportPersonel tblMngtransportPersonel
		{
			get
			{
				return this._tblMngtransportPersonel.Entity;
			}
			set
			{
				tblMngtransportPersonel previousValue = this._tblMngtransportPersonel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngtransportPersonel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngtransportPersonel.Entity = null;
						previousValue.tblMngCarDrivers.Remove(this);
					}
					this._tblMngtransportPersonel.Entity = value;
					if ((value != null))
					{
						value.tblMngCarDrivers.Add(this);
						this._Driver_ID = value.ID;
					}
					else
					{
						this._Driver_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngtransportPersonel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCarInsurance")]
	public partial class tblMngCarInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDCar;
		
		private string _Date_Insurance;
		
		private string _InsurNO;
		
		private string _Kind_INsurance;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    partial void OnDate_InsuranceChanging(string value);
    partial void OnDate_InsuranceChanged();
    partial void OnInsurNOChanging(string value);
    partial void OnInsurNOChanged();
    partial void OnKind_INsuranceChanging(string value);
    partial void OnKind_INsuranceChanged();
    #endregion
		
		public tblMngCarInsurance()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Insurance", DbType="NChar(10)")]
		public string Date_Insurance
		{
			get
			{
				return this._Date_Insurance;
			}
			set
			{
				if ((this._Date_Insurance != value))
				{
					this.OnDate_InsuranceChanging(value);
					this.SendPropertyChanging();
					this._Date_Insurance = value;
					this.SendPropertyChanged("Date_Insurance");
					this.OnDate_InsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurNO", DbType="NVarChar(50)")]
		public string InsurNO
		{
			get
			{
				return this._InsurNO;
			}
			set
			{
				if ((this._InsurNO != value))
				{
					this.OnInsurNOChanging(value);
					this.SendPropertyChanging();
					this._InsurNO = value;
					this.SendPropertyChanged("InsurNO");
					this.OnInsurNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_INsurance", DbType="NVarChar(50)")]
		public string Kind_INsurance
		{
			get
			{
				return this._Kind_INsurance;
			}
			set
			{
				if ((this._Kind_INsurance != value))
				{
					this.OnKind_INsuranceChanging(value);
					this.SendPropertyChanging();
					this._Kind_INsurance = value;
					this.SendPropertyChanged("Kind_INsurance");
					this.OnKind_INsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarInsurance", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngCarInsurances.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngCarInsurances.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCastMahd")]
	public partial class tblMngCastMahd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CastMahd;
		
		private System.Nullable<int> _Person_No;
		
		private System.Nullable<decimal> _Cast;
		
		private string _Date_Cast;
		
		private string _Describtion;
		
		private System.Nullable<int> _ID_Chiled;
		
		private EntityRef<tblMngChiled> _tblMngChiled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CastMahdChanging(int value);
    partial void OnID_CastMahdChanged();
    partial void OnPerson_NoChanging(System.Nullable<int> value);
    partial void OnPerson_NoChanged();
    partial void OnCastChanging(System.Nullable<decimal> value);
    partial void OnCastChanged();
    partial void OnDate_CastChanging(string value);
    partial void OnDate_CastChanged();
    partial void OnDescribtionChanging(string value);
    partial void OnDescribtionChanged();
    partial void OnID_ChiledChanging(System.Nullable<int> value);
    partial void OnID_ChiledChanged();
    #endregion
		
		public tblMngCastMahd()
		{
			this._tblMngChiled = default(EntityRef<tblMngChiled>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CastMahd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CastMahd
		{
			get
			{
				return this._ID_CastMahd;
			}
			set
			{
				if ((this._ID_CastMahd != value))
				{
					this.OnID_CastMahdChanging(value);
					this.SendPropertyChanging();
					this._ID_CastMahd = value;
					this.SendPropertyChanged("ID_CastMahd");
					this.OnID_CastMahdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_No", DbType="Int")]
		public System.Nullable<int> Person_No
		{
			get
			{
				return this._Person_No;
			}
			set
			{
				if ((this._Person_No != value))
				{
					this.OnPerson_NoChanging(value);
					this.SendPropertyChanging();
					this._Person_No = value;
					this.SendPropertyChanged("Person_No");
					this.OnPerson_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cast", DbType="Money")]
		public System.Nullable<decimal> Cast
		{
			get
			{
				return this._Cast;
			}
			set
			{
				if ((this._Cast != value))
				{
					this.OnCastChanging(value);
					this.SendPropertyChanging();
					this._Cast = value;
					this.SendPropertyChanged("Cast");
					this.OnCastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Cast", DbType="NVarChar(10)")]
		public string Date_Cast
		{
			get
			{
				return this._Date_Cast;
			}
			set
			{
				if ((this._Date_Cast != value))
				{
					this.OnDate_CastChanging(value);
					this.SendPropertyChanging();
					this._Date_Cast = value;
					this.SendPropertyChanged("Date_Cast");
					this.OnDate_CastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Describtion", DbType="NVarChar(200)")]
		public string Describtion
		{
			get
			{
				return this._Describtion;
			}
			set
			{
				if ((this._Describtion != value))
				{
					this.OnDescribtionChanging(value);
					this.SendPropertyChanging();
					this._Describtion = value;
					this.SendPropertyChanged("Describtion");
					this.OnDescribtionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Chiled", DbType="Int")]
		public System.Nullable<int> ID_Chiled
		{
			get
			{
				return this._ID_Chiled;
			}
			set
			{
				if ((this._ID_Chiled != value))
				{
					if (this._tblMngChiled.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ChiledChanging(value);
					this.SendPropertyChanging();
					this._ID_Chiled = value;
					this.SendPropertyChanged("ID_Chiled");
					this.OnID_ChiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngCastMahd", Storage="_tblMngChiled", ThisKey="ID_Chiled", OtherKey="ID_Chiled", IsForeignKey=true)]
		public tblMngChiled tblMngChiled
		{
			get
			{
				return this._tblMngChiled.Entity;
			}
			set
			{
				tblMngChiled previousValue = this._tblMngChiled.Entity;
				if (((previousValue != value) 
							|| (this._tblMngChiled.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngChiled.Entity = null;
						previousValue.tblMngCastMahds.Remove(this);
					}
					this._tblMngChiled.Entity = value;
					if ((value != null))
					{
						value.tblMngCastMahds.Add(this);
						this._ID_Chiled = value.ID_Chiled;
					}
					else
					{
						this._ID_Chiled = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngChiled");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngChiled")]
	public partial class tblMngChiled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Chiled;
		
		private string _Date_Req;
		
		private System.Nullable<int> _Peson_No;
		
		private string _Address_Job;
		
		private string _Phone;
		
		private string _ChiledParentname;
		
		private string _ChiledParentLname;
		
		private string _Chiled_Name;
		
		private string _Chiled_Family;
		
		private string _Sex;
		
		private string _Date_Brith;
		
		private string _Describtion;
		
		private string _Date_Exit;
		
		private EntitySet<tblMngCastMahd> _tblMngCastMahds;
		
		private EntityRef<tblMngChiled> _tblMngChiled2;
		
		private EntitySet<tblMngStatusChiled> _tblMngStatusChileds;
		
		private EntitySet<tblMngStatusChiled> _tblMngStatusChileds1;
		
		private EntityRef<tblMngChiled> _tblMngChiled1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ChiledChanging(int value);
    partial void OnID_ChiledChanged();
    partial void OnDate_ReqChanging(string value);
    partial void OnDate_ReqChanged();
    partial void OnPeson_NoChanging(System.Nullable<int> value);
    partial void OnPeson_NoChanged();
    partial void OnAddress_JobChanging(string value);
    partial void OnAddress_JobChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnChiledParentnameChanging(string value);
    partial void OnChiledParentnameChanged();
    partial void OnChiledParentLnameChanging(string value);
    partial void OnChiledParentLnameChanged();
    partial void OnChiled_NameChanging(string value);
    partial void OnChiled_NameChanged();
    partial void OnChiled_FamilyChanging(string value);
    partial void OnChiled_FamilyChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnDate_BrithChanging(string value);
    partial void OnDate_BrithChanged();
    partial void OnDescribtionChanging(string value);
    partial void OnDescribtionChanged();
    partial void OnDate_ExitChanging(string value);
    partial void OnDate_ExitChanged();
    #endregion
		
		public tblMngChiled()
		{
			this._tblMngCastMahds = new EntitySet<tblMngCastMahd>(new Action<tblMngCastMahd>(this.attach_tblMngCastMahds), new Action<tblMngCastMahd>(this.detach_tblMngCastMahds));
			this._tblMngChiled2 = default(EntityRef<tblMngChiled>);
			this._tblMngStatusChileds = new EntitySet<tblMngStatusChiled>(new Action<tblMngStatusChiled>(this.attach_tblMngStatusChileds), new Action<tblMngStatusChiled>(this.detach_tblMngStatusChileds));
			this._tblMngStatusChileds1 = new EntitySet<tblMngStatusChiled>(new Action<tblMngStatusChiled>(this.attach_tblMngStatusChileds1), new Action<tblMngStatusChiled>(this.detach_tblMngStatusChileds1));
			this._tblMngChiled1 = default(EntityRef<tblMngChiled>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Chiled", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Chiled
		{
			get
			{
				return this._ID_Chiled;
			}
			set
			{
				if ((this._ID_Chiled != value))
				{
					if (this._tblMngChiled1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ChiledChanging(value);
					this.SendPropertyChanging();
					this._ID_Chiled = value;
					this.SendPropertyChanged("ID_Chiled");
					this.OnID_ChiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Req", DbType="NVarChar(10)")]
		public string Date_Req
		{
			get
			{
				return this._Date_Req;
			}
			set
			{
				if ((this._Date_Req != value))
				{
					this.OnDate_ReqChanging(value);
					this.SendPropertyChanging();
					this._Date_Req = value;
					this.SendPropertyChanged("Date_Req");
					this.OnDate_ReqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peson_No", DbType="Int")]
		public System.Nullable<int> Peson_No
		{
			get
			{
				return this._Peson_No;
			}
			set
			{
				if ((this._Peson_No != value))
				{
					this.OnPeson_NoChanging(value);
					this.SendPropertyChanging();
					this._Peson_No = value;
					this.SendPropertyChanged("Peson_No");
					this.OnPeson_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Job", DbType="NVarChar(200)")]
		public string Address_Job
		{
			get
			{
				return this._Address_Job;
			}
			set
			{
				if ((this._Address_Job != value))
				{
					this.OnAddress_JobChanging(value);
					this.SendPropertyChanging();
					this._Address_Job = value;
					this.SendPropertyChanged("Address_Job");
					this.OnAddress_JobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiledParentname", DbType="NVarChar(50)")]
		public string ChiledParentname
		{
			get
			{
				return this._ChiledParentname;
			}
			set
			{
				if ((this._ChiledParentname != value))
				{
					this.OnChiledParentnameChanging(value);
					this.SendPropertyChanging();
					this._ChiledParentname = value;
					this.SendPropertyChanged("ChiledParentname");
					this.OnChiledParentnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiledParentLname", DbType="NVarChar(50)")]
		public string ChiledParentLname
		{
			get
			{
				return this._ChiledParentLname;
			}
			set
			{
				if ((this._ChiledParentLname != value))
				{
					this.OnChiledParentLnameChanging(value);
					this.SendPropertyChanging();
					this._ChiledParentLname = value;
					this.SendPropertyChanged("ChiledParentLname");
					this.OnChiledParentLnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiled_Name", DbType="NVarChar(50)")]
		public string Chiled_Name
		{
			get
			{
				return this._Chiled_Name;
			}
			set
			{
				if ((this._Chiled_Name != value))
				{
					this.OnChiled_NameChanging(value);
					this.SendPropertyChanging();
					this._Chiled_Name = value;
					this.SendPropertyChanged("Chiled_Name");
					this.OnChiled_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiled_Family", DbType="NVarChar(50)")]
		public string Chiled_Family
		{
			get
			{
				return this._Chiled_Family;
			}
			set
			{
				if ((this._Chiled_Family != value))
				{
					this.OnChiled_FamilyChanging(value);
					this.SendPropertyChanging();
					this._Chiled_Family = value;
					this.SendPropertyChanged("Chiled_Family");
					this.OnChiled_FamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Brith", DbType="NVarChar(10)")]
		public string Date_Brith
		{
			get
			{
				return this._Date_Brith;
			}
			set
			{
				if ((this._Date_Brith != value))
				{
					this.OnDate_BrithChanging(value);
					this.SendPropertyChanging();
					this._Date_Brith = value;
					this.SendPropertyChanged("Date_Brith");
					this.OnDate_BrithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Describtion", DbType="NVarChar(200)")]
		public string Describtion
		{
			get
			{
				return this._Describtion;
			}
			set
			{
				if ((this._Describtion != value))
				{
					this.OnDescribtionChanging(value);
					this.SendPropertyChanging();
					this._Describtion = value;
					this.SendPropertyChanged("Describtion");
					this.OnDescribtionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Exit", DbType="NVarChar(10)")]
		public string Date_Exit
		{
			get
			{
				return this._Date_Exit;
			}
			set
			{
				if ((this._Date_Exit != value))
				{
					this.OnDate_ExitChanging(value);
					this.SendPropertyChanging();
					this._Date_Exit = value;
					this.SendPropertyChanged("Date_Exit");
					this.OnDate_ExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngCastMahd", Storage="_tblMngCastMahds", ThisKey="ID_Chiled", OtherKey="ID_Chiled")]
		public EntitySet<tblMngCastMahd> tblMngCastMahds
		{
			get
			{
				return this._tblMngCastMahds;
			}
			set
			{
				this._tblMngCastMahds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngChiled", Storage="_tblMngChiled2", ThisKey="ID_Chiled", OtherKey="ID_Chiled", IsUnique=true, IsForeignKey=false)]
		public tblMngChiled tblMngChiled2
		{
			get
			{
				return this._tblMngChiled2.Entity;
			}
			set
			{
				tblMngChiled previousValue = this._tblMngChiled2.Entity;
				if (((previousValue != value) 
							|| (this._tblMngChiled2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngChiled2.Entity = null;
						previousValue.tblMngChiled1 = null;
					}
					this._tblMngChiled2.Entity = value;
					if ((value != null))
					{
						value.tblMngChiled1 = this;
					}
					this.SendPropertyChanged("tblMngChiled2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngStatusChiled", Storage="_tblMngStatusChileds", ThisKey="ID_Chiled", OtherKey="Chiled_id")]
		public EntitySet<tblMngStatusChiled> tblMngStatusChileds
		{
			get
			{
				return this._tblMngStatusChileds;
			}
			set
			{
				this._tblMngStatusChileds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngStatusChiled1", Storage="_tblMngStatusChileds1", ThisKey="ID_Chiled", OtherKey="Chiled_id")]
		public EntitySet<tblMngStatusChiled> tblMngStatusChileds1
		{
			get
			{
				return this._tblMngStatusChileds1;
			}
			set
			{
				this._tblMngStatusChileds1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngChiled", Storage="_tblMngChiled1", ThisKey="ID_Chiled", OtherKey="ID_Chiled", IsForeignKey=true)]
		public tblMngChiled tblMngChiled1
		{
			get
			{
				return this._tblMngChiled1.Entity;
			}
			set
			{
				tblMngChiled previousValue = this._tblMngChiled1.Entity;
				if (((previousValue != value) 
							|| (this._tblMngChiled1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngChiled1.Entity = null;
						previousValue.tblMngChiled2 = null;
					}
					this._tblMngChiled1.Entity = value;
					if ((value != null))
					{
						value.tblMngChiled2 = this;
						this._ID_Chiled = value.ID_Chiled;
					}
					else
					{
						this._ID_Chiled = default(int);
					}
					this.SendPropertyChanged("tblMngChiled1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngCastMahds(tblMngCastMahd entity)
		{
			this.SendPropertyChanging();
			entity.tblMngChiled = this;
		}
		
		private void detach_tblMngCastMahds(tblMngCastMahd entity)
		{
			this.SendPropertyChanging();
			entity.tblMngChiled = null;
		}
		
		private void attach_tblMngStatusChileds(tblMngStatusChiled entity)
		{
			this.SendPropertyChanging();
			entity.tblMngChiled = this;
		}
		
		private void detach_tblMngStatusChileds(tblMngStatusChiled entity)
		{
			this.SendPropertyChanging();
			entity.tblMngChiled = null;
		}
		
		private void attach_tblMngStatusChileds1(tblMngStatusChiled entity)
		{
			this.SendPropertyChanging();
			entity.tblMngChiled1 = this;
		}
		
		private void detach_tblMngStatusChileds1(tblMngStatusChiled entity)
		{
			this.SendPropertyChanging();
			entity.tblMngChiled1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCivilCar")]
	public partial class tblMngCivilCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Car;
		
		private string _Kind_Car;
		
		private string _Car_No;
		
		private string _Captives_No;
		
		private System.Nullable<int> _CCar;
		
		private string _Model;
		
		private string _Color;
		
		private string _Engine_No;
		
		private string _Chassis_No;
		
		private string _Date_DeliveryDepartment;
		
		private string _Date_DeliveryDriver;
		
		private string _description;
		
		private string _CreationUserID;
		
		private string _CreationDate;
		
		private EntitySet<tblMngCarDriver> _tblMngCarDrivers;
		
		private EntitySet<tblMngCarInsurance> _tblMngCarInsurances;
		
		private EntitySet<tblMngFactorRepair> _tblMngFactorRepairs;
		
		private EntitySet<tblMngFuelCar> _tblMngFuelCars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CarChanging(int value);
    partial void OnID_CarChanged();
    partial void OnKind_CarChanging(string value);
    partial void OnKind_CarChanged();
    partial void OnCar_NoChanging(string value);
    partial void OnCar_NoChanged();
    partial void OnCaptives_NoChanging(string value);
    partial void OnCaptives_NoChanged();
    partial void OnCCarChanging(System.Nullable<int> value);
    partial void OnCCarChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnEngine_NoChanging(string value);
    partial void OnEngine_NoChanged();
    partial void OnChassis_NoChanging(string value);
    partial void OnChassis_NoChanged();
    partial void OnDate_DeliveryDepartmentChanging(string value);
    partial void OnDate_DeliveryDepartmentChanged();
    partial void OnDate_DeliveryDriverChanging(string value);
    partial void OnDate_DeliveryDriverChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public tblMngCivilCar()
		{
			this._tblMngCarDrivers = new EntitySet<tblMngCarDriver>(new Action<tblMngCarDriver>(this.attach_tblMngCarDrivers), new Action<tblMngCarDriver>(this.detach_tblMngCarDrivers));
			this._tblMngCarInsurances = new EntitySet<tblMngCarInsurance>(new Action<tblMngCarInsurance>(this.attach_tblMngCarInsurances), new Action<tblMngCarInsurance>(this.detach_tblMngCarInsurances));
			this._tblMngFactorRepairs = new EntitySet<tblMngFactorRepair>(new Action<tblMngFactorRepair>(this.attach_tblMngFactorRepairs), new Action<tblMngFactorRepair>(this.detach_tblMngFactorRepairs));
			this._tblMngFuelCars = new EntitySet<tblMngFuelCar>(new Action<tblMngFuelCar>(this.attach_tblMngFuelCars), new Action<tblMngFuelCar>(this.detach_tblMngFuelCars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Car", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Car
		{
			get
			{
				return this._ID_Car;
			}
			set
			{
				if ((this._ID_Car != value))
				{
					this.OnID_CarChanging(value);
					this.SendPropertyChanging();
					this._ID_Car = value;
					this.SendPropertyChanged("ID_Car");
					this.OnID_CarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_Car", DbType="NVarChar(50)")]
		public string Kind_Car
		{
			get
			{
				return this._Kind_Car;
			}
			set
			{
				if ((this._Kind_Car != value))
				{
					this.OnKind_CarChanging(value);
					this.SendPropertyChanging();
					this._Kind_Car = value;
					this.SendPropertyChanged("Kind_Car");
					this.OnKind_CarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car_No", DbType="NVarChar(50)")]
		public string Car_No
		{
			get
			{
				return this._Car_No;
			}
			set
			{
				if ((this._Car_No != value))
				{
					this.OnCar_NoChanging(value);
					this.SendPropertyChanging();
					this._Car_No = value;
					this.SendPropertyChanged("Car_No");
					this.OnCar_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Captives_No", DbType="NVarChar(50)")]
		public string Captives_No
		{
			get
			{
				return this._Captives_No;
			}
			set
			{
				if ((this._Captives_No != value))
				{
					this.OnCaptives_NoChanging(value);
					this.SendPropertyChanging();
					this._Captives_No = value;
					this.SendPropertyChanged("Captives_No");
					this.OnCaptives_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCar", DbType="Int")]
		public System.Nullable<int> CCar
		{
			get
			{
				return this._CCar;
			}
			set
			{
				if ((this._CCar != value))
				{
					this.OnCCarChanging(value);
					this.SendPropertyChanging();
					this._CCar = value;
					this.SendPropertyChanged("CCar");
					this.OnCCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NChar(10)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Engine_No", DbType="NVarChar(50)")]
		public string Engine_No
		{
			get
			{
				return this._Engine_No;
			}
			set
			{
				if ((this._Engine_No != value))
				{
					this.OnEngine_NoChanging(value);
					this.SendPropertyChanging();
					this._Engine_No = value;
					this.SendPropertyChanged("Engine_No");
					this.OnEngine_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chassis_No", DbType="NVarChar(50)")]
		public string Chassis_No
		{
			get
			{
				return this._Chassis_No;
			}
			set
			{
				if ((this._Chassis_No != value))
				{
					this.OnChassis_NoChanging(value);
					this.SendPropertyChanging();
					this._Chassis_No = value;
					this.SendPropertyChanged("Chassis_No");
					this.OnChassis_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_DeliveryDepartment", DbType="NChar(10)")]
		public string Date_DeliveryDepartment
		{
			get
			{
				return this._Date_DeliveryDepartment;
			}
			set
			{
				if ((this._Date_DeliveryDepartment != value))
				{
					this.OnDate_DeliveryDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Date_DeliveryDepartment = value;
					this.SendPropertyChanged("Date_DeliveryDepartment");
					this.OnDate_DeliveryDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_DeliveryDriver", DbType="NChar(10)")]
		public string Date_DeliveryDriver
		{
			get
			{
				return this._Date_DeliveryDriver;
			}
			set
			{
				if ((this._Date_DeliveryDriver != value))
				{
					this.OnDate_DeliveryDriverChanging(value);
					this.SendPropertyChanging();
					this._Date_DeliveryDriver = value;
					this.SendPropertyChanged("Date_DeliveryDriver");
					this.OnDate_DeliveryDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NVarChar(50)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarDriver", Storage="_tblMngCarDrivers", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngCarDriver> tblMngCarDrivers
		{
			get
			{
				return this._tblMngCarDrivers;
			}
			set
			{
				this._tblMngCarDrivers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarInsurance", Storage="_tblMngCarInsurances", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngCarInsurance> tblMngCarInsurances
		{
			get
			{
				return this._tblMngCarInsurances;
			}
			set
			{
				this._tblMngCarInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFactorRepair", Storage="_tblMngFactorRepairs", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngFactorRepair> tblMngFactorRepairs
		{
			get
			{
				return this._tblMngFactorRepairs;
			}
			set
			{
				this._tblMngFactorRepairs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFuelCar", Storage="_tblMngFuelCars", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngFuelCar> tblMngFuelCars
		{
			get
			{
				return this._tblMngFuelCars;
			}
			set
			{
				this._tblMngFuelCars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
		
		private void attach_tblMngCarInsurances(tblMngCarInsurance entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngCarInsurances(tblMngCarInsurance entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
		
		private void attach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
		
		private void attach_tblMngFuelCars(tblMngFuelCar entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngFuelCars(tblMngFuelCar entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCprGroup")]
	public partial class tblMngCprGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Shift;
		
		private string _Requster;
		
		private string _RequsterDepartment;
		
		private string _RequstTimePage;
		
		private string _TimeWarningPage;
		
		private System.Nullable<int> _NumberOfPaging;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CteationUserID;
		
		private string _CreationTime;
		
		private EntityRef<Shift> _Shift1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShiftChanging(System.Nullable<int> value);
    partial void OnShiftChanged();
    partial void OnRequsterChanging(string value);
    partial void OnRequsterChanged();
    partial void OnRequsterDepartmentChanging(string value);
    partial void OnRequsterDepartmentChanged();
    partial void OnRequstTimePageChanging(string value);
    partial void OnRequstTimePageChanged();
    partial void OnTimeWarningPageChanging(string value);
    partial void OnTimeWarningPageChanged();
    partial void OnNumberOfPagingChanging(System.Nullable<int> value);
    partial void OnNumberOfPagingChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCteationUserIDChanging(string value);
    partial void OnCteationUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public tblMngCprGroup()
		{
			this._Shift1 = default(EntityRef<Shift>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="Int")]
		public System.Nullable<int> Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					if (this._Shift1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requster", DbType="NVarChar(50)")]
		public string Requster
		{
			get
			{
				return this._Requster;
			}
			set
			{
				if ((this._Requster != value))
				{
					this.OnRequsterChanging(value);
					this.SendPropertyChanging();
					this._Requster = value;
					this.SendPropertyChanged("Requster");
					this.OnRequsterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequsterDepartment", DbType="NVarChar(50)")]
		public string RequsterDepartment
		{
			get
			{
				return this._RequsterDepartment;
			}
			set
			{
				if ((this._RequsterDepartment != value))
				{
					this.OnRequsterDepartmentChanging(value);
					this.SendPropertyChanging();
					this._RequsterDepartment = value;
					this.SendPropertyChanged("RequsterDepartment");
					this.OnRequsterDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequstTimePage", DbType="NVarChar(5)")]
		public string RequstTimePage
		{
			get
			{
				return this._RequstTimePage;
			}
			set
			{
				if ((this._RequstTimePage != value))
				{
					this.OnRequstTimePageChanging(value);
					this.SendPropertyChanging();
					this._RequstTimePage = value;
					this.SendPropertyChanged("RequstTimePage");
					this.OnRequstTimePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeWarningPage", DbType="NVarChar(5)")]
		public string TimeWarningPage
		{
			get
			{
				return this._TimeWarningPage;
			}
			set
			{
				if ((this._TimeWarningPage != value))
				{
					this.OnTimeWarningPageChanging(value);
					this.SendPropertyChanging();
					this._TimeWarningPage = value;
					this.SendPropertyChanged("TimeWarningPage");
					this.OnTimeWarningPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPaging", DbType="Int")]
		public System.Nullable<int> NumberOfPaging
		{
			get
			{
				return this._NumberOfPaging;
			}
			set
			{
				if ((this._NumberOfPaging != value))
				{
					this.OnNumberOfPagingChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPaging = value;
					this.SendPropertyChanged("NumberOfPaging");
					this.OnNumberOfPagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CteationUserID", DbType="NChar(10)")]
		public string CteationUserID
		{
			get
			{
				return this._CteationUserID;
			}
			set
			{
				if ((this._CteationUserID != value))
				{
					this.OnCteationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CteationUserID = value;
					this.SendPropertyChanged("CteationUserID");
					this.OnCteationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_tblMngCprGroup", Storage="_Shift1", ThisKey="Shift", OtherKey="ID", IsForeignKey=true)]
		public Shift Shift1
		{
			get
			{
				return this._Shift1.Entity;
			}
			set
			{
				Shift previousValue = this._Shift1.Entity;
				if (((previousValue != value) 
							|| (this._Shift1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift1.Entity = null;
						previousValue.tblMngCprGroups.Remove(this);
					}
					this._Shift1.Entity = value;
					if ((value != null))
					{
						value.tblMngCprGroups.Add(this);
						this._Shift = value.ID;
					}
					else
					{
						this._Shift = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shift1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngDaily_routine_function")]
	public partial class tblMngDaily_routine_function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Driver;
		
		private string _Date;
		
		private string _LeavingTime;
		
		private string _EntranceTime;
		
		private string _MainJob;
		
		private string _SubJob;
		
		private string _Extra_urbanMission;
		
		private string _CreationDate;
		
		private string _CreationUserID;
		
		private string _CreationTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDriverChanging(string value);
    partial void OnDriverChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnLeavingTimeChanging(string value);
    partial void OnLeavingTimeChanged();
    partial void OnEntranceTimeChanging(string value);
    partial void OnEntranceTimeChanged();
    partial void OnMainJobChanging(string value);
    partial void OnMainJobChanged();
    partial void OnSubJobChanging(string value);
    partial void OnSubJobChanged();
    partial void OnExtra_urbanMissionChanging(string value);
    partial void OnExtra_urbanMissionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public tblMngDaily_routine_function()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="NVarChar(50)")]
		public string Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeavingTime", DbType="NVarChar(5)")]
		public string LeavingTime
		{
			get
			{
				return this._LeavingTime;
			}
			set
			{
				if ((this._LeavingTime != value))
				{
					this.OnLeavingTimeChanging(value);
					this.SendPropertyChanging();
					this._LeavingTime = value;
					this.SendPropertyChanged("LeavingTime");
					this.OnLeavingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTime", DbType="NVarChar(5)")]
		public string EntranceTime
		{
			get
			{
				return this._EntranceTime;
			}
			set
			{
				if ((this._EntranceTime != value))
				{
					this.OnEntranceTimeChanging(value);
					this.SendPropertyChanging();
					this._EntranceTime = value;
					this.SendPropertyChanged("EntranceTime");
					this.OnEntranceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainJob", DbType="NVarChar(50)")]
		public string MainJob
		{
			get
			{
				return this._MainJob;
			}
			set
			{
				if ((this._MainJob != value))
				{
					this.OnMainJobChanging(value);
					this.SendPropertyChanging();
					this._MainJob = value;
					this.SendPropertyChanged("MainJob");
					this.OnMainJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubJob", DbType="NVarChar(50)")]
		public string SubJob
		{
			get
			{
				return this._SubJob;
			}
			set
			{
				if ((this._SubJob != value))
				{
					this.OnSubJobChanging(value);
					this.SendPropertyChanging();
					this._SubJob = value;
					this.SendPropertyChanged("SubJob");
					this.OnSubJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Extra-urbanMission]", Storage="_Extra_urbanMission", DbType="NVarChar(50)")]
		public string Extra_urbanMission
		{
			get
			{
				return this._Extra_urbanMission;
			}
			set
			{
				if ((this._Extra_urbanMission != value))
				{
					this.OnExtra_urbanMissionChanging(value);
					this.SendPropertyChanging();
					this._Extra_urbanMission = value;
					this.SendPropertyChanged("Extra_urbanMission");
					this.OnExtra_urbanMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngDailyRep")]
	public partial class tblMngDailyRep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Function;
		
		private System.Nullable<int> _IDDriver;
		
		private System.Nullable<int> _IDCar;
		
		private string _ExitDate;
		
		private string _ExitTime;
		
		private System.Nullable<int> _IDPath;
		
		private string _OtherWork;
		
		private string _Mission;
		
		private string _ExtraMission;
		
		private string _TypeMission;
		
		private string _carType;
		
		private string _CreationDate;
		
		private string _CreationUserID;
		
		private string _CreationTime;
		
		private EntityRef<tblMngtransportPersonel> _tblMngtransportPersonel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FunctionChanging(int value);
    partial void OnID_FunctionChanged();
    partial void OnIDDriverChanging(System.Nullable<int> value);
    partial void OnIDDriverChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    partial void OnExitDateChanging(string value);
    partial void OnExitDateChanged();
    partial void OnExitTimeChanging(string value);
    partial void OnExitTimeChanged();
    partial void OnIDPathChanging(System.Nullable<int> value);
    partial void OnIDPathChanged();
    partial void OnOtherWorkChanging(string value);
    partial void OnOtherWorkChanged();
    partial void OnMissionChanging(string value);
    partial void OnMissionChanged();
    partial void OnExtraMissionChanging(string value);
    partial void OnExtraMissionChanged();
    partial void OnTypeMissionChanging(string value);
    partial void OnTypeMissionChanged();
    partial void OncarTypeChanging(string value);
    partial void OncarTypeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public tblMngDailyRep()
		{
			this._tblMngtransportPersonel = default(EntityRef<tblMngtransportPersonel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Function", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Function
		{
			get
			{
				return this._ID_Function;
			}
			set
			{
				if ((this._ID_Function != value))
				{
					this.OnID_FunctionChanging(value);
					this.SendPropertyChanging();
					this._ID_Function = value;
					this.SendPropertyChanged("ID_Function");
					this.OnID_FunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDriver", DbType="Int")]
		public System.Nullable<int> IDDriver
		{
			get
			{
				return this._IDDriver;
			}
			set
			{
				if ((this._IDDriver != value))
				{
					if (this._tblMngtransportPersonel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDriverChanging(value);
					this.SendPropertyChanging();
					this._IDDriver = value;
					this.SendPropertyChanged("IDDriver");
					this.OnIDDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="NVarChar(10)")]
		public string ExitDate
		{
			get
			{
				return this._ExitDate;
			}
			set
			{
				if ((this._ExitDate != value))
				{
					this.OnExitDateChanging(value);
					this.SendPropertyChanging();
					this._ExitDate = value;
					this.SendPropertyChanged("ExitDate");
					this.OnExitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitTime", DbType="NVarChar(5)")]
		public string ExitTime
		{
			get
			{
				return this._ExitTime;
			}
			set
			{
				if ((this._ExitTime != value))
				{
					this.OnExitTimeChanging(value);
					this.SendPropertyChanging();
					this._ExitTime = value;
					this.SendPropertyChanged("ExitTime");
					this.OnExitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPath", DbType="Int")]
		public System.Nullable<int> IDPath
		{
			get
			{
				return this._IDPath;
			}
			set
			{
				if ((this._IDPath != value))
				{
					this.OnIDPathChanging(value);
					this.SendPropertyChanging();
					this._IDPath = value;
					this.SendPropertyChanged("IDPath");
					this.OnIDPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherWork", DbType="NVarChar(100)")]
		public string OtherWork
		{
			get
			{
				return this._OtherWork;
			}
			set
			{
				if ((this._OtherWork != value))
				{
					this.OnOtherWorkChanging(value);
					this.SendPropertyChanging();
					this._OtherWork = value;
					this.SendPropertyChanged("OtherWork");
					this.OnOtherWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission", DbType="NVarChar(100)")]
		public string Mission
		{
			get
			{
				return this._Mission;
			}
			set
			{
				if ((this._Mission != value))
				{
					this.OnMissionChanging(value);
					this.SendPropertyChanging();
					this._Mission = value;
					this.SendPropertyChanged("Mission");
					this.OnMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraMission", DbType="NVarChar(100)")]
		public string ExtraMission
		{
			get
			{
				return this._ExtraMission;
			}
			set
			{
				if ((this._ExtraMission != value))
				{
					this.OnExtraMissionChanging(value);
					this.SendPropertyChanging();
					this._ExtraMission = value;
					this.SendPropertyChanged("ExtraMission");
					this.OnExtraMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMission", DbType="NVarChar(30)")]
		public string TypeMission
		{
			get
			{
				return this._TypeMission;
			}
			set
			{
				if ((this._TypeMission != value))
				{
					this.OnTypeMissionChanging(value);
					this.SendPropertyChanging();
					this._TypeMission = value;
					this.SendPropertyChanged("TypeMission");
					this.OnTypeMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carType", DbType="NChar(10)")]
		public string carType
		{
			get
			{
				return this._carType;
			}
			set
			{
				if ((this._carType != value))
				{
					this.OncarTypeChanging(value);
					this.SendPropertyChanging();
					this._carType = value;
					this.SendPropertyChanged("carType");
					this.OncarTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngDailyRep", Storage="_tblMngtransportPersonel", ThisKey="IDDriver", OtherKey="ID", IsForeignKey=true)]
		public tblMngtransportPersonel tblMngtransportPersonel
		{
			get
			{
				return this._tblMngtransportPersonel.Entity;
			}
			set
			{
				tblMngtransportPersonel previousValue = this._tblMngtransportPersonel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngtransportPersonel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngtransportPersonel.Entity = null;
						previousValue.tblMngDailyReps.Remove(this);
					}
					this._tblMngtransportPersonel.Entity = value;
					if ((value != null))
					{
						value.tblMngDailyReps.Add(this);
						this._IDDriver = value.ID;
					}
					else
					{
						this._IDDriver = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngtransportPersonel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngDirectionCar")]
	public partial class tblMngDirectionCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Direction;
		
		private string _Direction_name;
		
		private string _Kind_Direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DirectionChanging(int value);
    partial void OnID_DirectionChanged();
    partial void OnDirection_nameChanging(string value);
    partial void OnDirection_nameChanged();
    partial void OnKind_DirectionChanging(string value);
    partial void OnKind_DirectionChanged();
    #endregion
		
		public tblMngDirectionCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Direction", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Direction
		{
			get
			{
				return this._ID_Direction;
			}
			set
			{
				if ((this._ID_Direction != value))
				{
					this.OnID_DirectionChanging(value);
					this.SendPropertyChanging();
					this._ID_Direction = value;
					this.SendPropertyChanged("ID_Direction");
					this.OnID_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction_name", DbType="NVarChar(20)")]
		public string Direction_name
		{
			get
			{
				return this._Direction_name;
			}
			set
			{
				if ((this._Direction_name != value))
				{
					this.OnDirection_nameChanging(value);
					this.SendPropertyChanging();
					this._Direction_name = value;
					this.SendPropertyChanged("Direction_name");
					this.OnDirection_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_Direction", DbType="NVarChar(20)")]
		public string Kind_Direction
		{
			get
			{
				return this._Kind_Direction;
			}
			set
			{
				if ((this._Kind_Direction != value))
				{
					this.OnKind_DirectionChanging(value);
					this.SendPropertyChanging();
					this._Kind_Direction = value;
					this.SendPropertyChanged("Kind_Direction");
					this.OnKind_DirectionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngFactorRepair")]
	public partial class tblMngFactorRepair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceOrDevice;
		
		private System.Nullable<decimal> _Price;
		
		private string _Repairman;
		
		private System.Nullable<int> _FactorID;
		
		private string _Phone;
		
		private string _Addres;
		
		private string _Date_Repairer;
		
		private string _Date_Failure;
		
		private string _failureOrProblem;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _CreationUserID;
		
		private System.Nullable<int> _IDCar;
		
		private System.Nullable<int> _IDDriver;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
		private EntityRef<tblMngtransportPersonel> _tblMngtransportPersonel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceOrDeviceChanging(string value);
    partial void OnServiceOrDeviceChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRepairmanChanging(string value);
    partial void OnRepairmanChanged();
    partial void OnFactorIDChanging(System.Nullable<int> value);
    partial void OnFactorIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddresChanging(string value);
    partial void OnAddresChanged();
    partial void OnDate_RepairerChanging(string value);
    partial void OnDate_RepairerChanged();
    partial void OnDate_FailureChanging(string value);
    partial void OnDate_FailureChanged();
    partial void OnfailureOrProblemChanging(string value);
    partial void OnfailureOrProblemChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    partial void OnIDDriverChanging(System.Nullable<int> value);
    partial void OnIDDriverChanged();
    #endregion
		
		public tblMngFactorRepair()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			this._tblMngtransportPersonel = default(EntityRef<tblMngtransportPersonel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrDevice", DbType="NVarChar(20)")]
		public string ServiceOrDevice
		{
			get
			{
				return this._ServiceOrDevice;
			}
			set
			{
				if ((this._ServiceOrDevice != value))
				{
					this.OnServiceOrDeviceChanging(value);
					this.SendPropertyChanging();
					this._ServiceOrDevice = value;
					this.SendPropertyChanged("ServiceOrDevice");
					this.OnServiceOrDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Repairman", DbType="NVarChar(30)")]
		public string Repairman
		{
			get
			{
				return this._Repairman;
			}
			set
			{
				if ((this._Repairman != value))
				{
					this.OnRepairmanChanging(value);
					this.SendPropertyChanging();
					this._Repairman = value;
					this.SendPropertyChanged("Repairman");
					this.OnRepairmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorID", DbType="Int")]
		public System.Nullable<int> FactorID
		{
			get
			{
				return this._FactorID;
			}
			set
			{
				if ((this._FactorID != value))
				{
					this.OnFactorIDChanging(value);
					this.SendPropertyChanging();
					this._FactorID = value;
					this.SendPropertyChanged("FactorID");
					this.OnFactorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="NVarChar(200)")]
		public string Addres
		{
			get
			{
				return this._Addres;
			}
			set
			{
				if ((this._Addres != value))
				{
					this.OnAddresChanging(value);
					this.SendPropertyChanging();
					this._Addres = value;
					this.SendPropertyChanged("Addres");
					this.OnAddresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Repairer", DbType="NVarChar(10)")]
		public string Date_Repairer
		{
			get
			{
				return this._Date_Repairer;
			}
			set
			{
				if ((this._Date_Repairer != value))
				{
					this.OnDate_RepairerChanging(value);
					this.SendPropertyChanging();
					this._Date_Repairer = value;
					this.SendPropertyChanged("Date_Repairer");
					this.OnDate_RepairerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Failure", DbType="NVarChar(10)")]
		public string Date_Failure
		{
			get
			{
				return this._Date_Failure;
			}
			set
			{
				if ((this._Date_Failure != value))
				{
					this.OnDate_FailureChanging(value);
					this.SendPropertyChanging();
					this._Date_Failure = value;
					this.SendPropertyChanged("Date_Failure");
					this.OnDate_FailureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_failureOrProblem", DbType="NVarChar(30)")]
		public string failureOrProblem
		{
			get
			{
				return this._failureOrProblem;
			}
			set
			{
				if ((this._failureOrProblem != value))
				{
					this.OnfailureOrProblemChanging(value);
					this.SendPropertyChanging();
					this._failureOrProblem = value;
					this.SendPropertyChanged("failureOrProblem");
					this.OnfailureOrProblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDriver", DbType="Int")]
		public System.Nullable<int> IDDriver
		{
			get
			{
				return this._IDDriver;
			}
			set
			{
				if ((this._IDDriver != value))
				{
					if (this._tblMngtransportPersonel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDriverChanging(value);
					this.SendPropertyChanging();
					this._IDDriver = value;
					this.SendPropertyChanged("IDDriver");
					this.OnIDDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFactorRepair", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngFactorRepairs.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngFactorRepairs.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngFactorRepair", Storage="_tblMngtransportPersonel", ThisKey="IDDriver", OtherKey="ID", IsForeignKey=true)]
		public tblMngtransportPersonel tblMngtransportPersonel
		{
			get
			{
				return this._tblMngtransportPersonel.Entity;
			}
			set
			{
				tblMngtransportPersonel previousValue = this._tblMngtransportPersonel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngtransportPersonel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngtransportPersonel.Entity = null;
						previousValue.tblMngFactorRepairs.Remove(this);
					}
					this._tblMngtransportPersonel.Entity = value;
					if ((value != null))
					{
						value.tblMngFactorRepairs.Add(this);
						this._IDDriver = value.ID;
					}
					else
					{
						this._IDDriver = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngtransportPersonel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngFuelCar")]
	public partial class tblMngFuelCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Fuel;
		
		private string _Time_fuel;
		
		private string _Date_Fuel;
		
		private System.Nullable<int> _Kilometer_No;
		
		private System.Nullable<int> _driverID;
		
		private string _Description;
		
		private System.Nullable<int> _IDCar;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FuelChanging(int value);
    partial void OnID_FuelChanged();
    partial void OnTime_fuelChanging(string value);
    partial void OnTime_fuelChanged();
    partial void OnDate_FuelChanging(string value);
    partial void OnDate_FuelChanged();
    partial void OnKilometer_NoChanging(System.Nullable<int> value);
    partial void OnKilometer_NoChanged();
    partial void OndriverIDChanging(System.Nullable<int> value);
    partial void OndriverIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    #endregion
		
		public tblMngFuelCar()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Fuel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Fuel
		{
			get
			{
				return this._ID_Fuel;
			}
			set
			{
				if ((this._ID_Fuel != value))
				{
					this.OnID_FuelChanging(value);
					this.SendPropertyChanging();
					this._ID_Fuel = value;
					this.SendPropertyChanged("ID_Fuel");
					this.OnID_FuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_fuel", DbType="NVarChar(5)")]
		public string Time_fuel
		{
			get
			{
				return this._Time_fuel;
			}
			set
			{
				if ((this._Time_fuel != value))
				{
					this.OnTime_fuelChanging(value);
					this.SendPropertyChanging();
					this._Time_fuel = value;
					this.SendPropertyChanged("Time_fuel");
					this.OnTime_fuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Fuel", DbType="NVarChar(10)")]
		public string Date_Fuel
		{
			get
			{
				return this._Date_Fuel;
			}
			set
			{
				if ((this._Date_Fuel != value))
				{
					this.OnDate_FuelChanging(value);
					this.SendPropertyChanging();
					this._Date_Fuel = value;
					this.SendPropertyChanged("Date_Fuel");
					this.OnDate_FuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kilometer_No", DbType="Int")]
		public System.Nullable<int> Kilometer_No
		{
			get
			{
				return this._Kilometer_No;
			}
			set
			{
				if ((this._Kilometer_No != value))
				{
					this.OnKilometer_NoChanging(value);
					this.SendPropertyChanging();
					this._Kilometer_No = value;
					this.SendPropertyChanged("Kilometer_No");
					this.OnKilometer_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverID", DbType="Int")]
		public System.Nullable<int> driverID
		{
			get
			{
				return this._driverID;
			}
			set
			{
				if ((this._driverID != value))
				{
					this.OndriverIDChanging(value);
					this.SendPropertyChanging();
					this._driverID = value;
					this.SendPropertyChanged("driverID");
					this.OndriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFuelCar", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngFuelCars.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngFuelCars.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngGroup")]
	public partial class tblMngGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Goroup;
		
		private System.Nullable<int> _IDMasterNurce;
		
		private string _Group_Name;
		
		private string _Date_StartJob;
		
		private EntityRef<tblMngMasterNurse> _tblMngMasterNurse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GoroupChanging(int value);
    partial void OnID_GoroupChanged();
    partial void OnIDMasterNurceChanging(System.Nullable<int> value);
    partial void OnIDMasterNurceChanged();
    partial void OnGroup_NameChanging(string value);
    partial void OnGroup_NameChanged();
    partial void OnDate_StartJobChanging(string value);
    partial void OnDate_StartJobChanged();
    #endregion
		
		public tblMngGroup()
		{
			this._tblMngMasterNurse = default(EntityRef<tblMngMasterNurse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Goroup", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Goroup
		{
			get
			{
				return this._ID_Goroup;
			}
			set
			{
				if ((this._ID_Goroup != value))
				{
					this.OnID_GoroupChanging(value);
					this.SendPropertyChanging();
					this._ID_Goroup = value;
					this.SendPropertyChanged("ID_Goroup");
					this.OnID_GoroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMasterNurce", DbType="Int")]
		public System.Nullable<int> IDMasterNurce
		{
			get
			{
				return this._IDMasterNurce;
			}
			set
			{
				if ((this._IDMasterNurce != value))
				{
					if (this._tblMngMasterNurse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMasterNurceChanging(value);
					this.SendPropertyChanging();
					this._IDMasterNurce = value;
					this.SendPropertyChanged("IDMasterNurce");
					this.OnIDMasterNurceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Name", DbType="NVarChar(20)")]
		public string Group_Name
		{
			get
			{
				return this._Group_Name;
			}
			set
			{
				if ((this._Group_Name != value))
				{
					this.OnGroup_NameChanging(value);
					this.SendPropertyChanging();
					this._Group_Name = value;
					this.SendPropertyChanged("Group_Name");
					this.OnGroup_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_StartJob", DbType="NVarChar(10)")]
		public string Date_StartJob
		{
			get
			{
				return this._Date_StartJob;
			}
			set
			{
				if ((this._Date_StartJob != value))
				{
					this.OnDate_StartJobChanging(value);
					this.SendPropertyChanging();
					this._Date_StartJob = value;
					this.SendPropertyChanged("Date_StartJob");
					this.OnDate_StartJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngMasterNurse_tblMngGroup", Storage="_tblMngMasterNurse", ThisKey="IDMasterNurce", OtherKey="MasterNurse_ID", IsForeignKey=true)]
		public tblMngMasterNurse tblMngMasterNurse
		{
			get
			{
				return this._tblMngMasterNurse.Entity;
			}
			set
			{
				tblMngMasterNurse previousValue = this._tblMngMasterNurse.Entity;
				if (((previousValue != value) 
							|| (this._tblMngMasterNurse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngMasterNurse.Entity = null;
						previousValue.tblMngGroups.Remove(this);
					}
					this._tblMngMasterNurse.Entity = value;
					if ((value != null))
					{
						value.tblMngGroups.Add(this);
						this._IDMasterNurce = value.MasterNurse_ID;
					}
					else
					{
						this._IDMasterNurce = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngMasterNurse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngHistoryHome")]
	public partial class tblMngHistoryHome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PersonalID;
		
		private string _Description;
		
		private string _FDate;
		
		private string _ToDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonalIDChanging(System.Nullable<int> value);
    partial void OnPersonalIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFDateChanging(string value);
    partial void OnFDateChanged();
    partial void OnToDateChanging(string value);
    partial void OnToDateChanged();
    #endregion
		
		public tblMngHistoryHome()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalID", DbType="Int")]
		public System.Nullable<int> PersonalID
		{
			get
			{
				return this._PersonalID;
			}
			set
			{
				if ((this._PersonalID != value))
				{
					this.OnPersonalIDChanging(value);
					this.SendPropertyChanging();
					this._PersonalID = value;
					this.SendPropertyChanged("PersonalID");
					this.OnPersonalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDate", DbType="NVarChar(10)")]
		public string FDate
		{
			get
			{
				return this._FDate;
			}
			set
			{
				if ((this._FDate != value))
				{
					this.OnFDateChanging(value);
					this.SendPropertyChanging();
					this._FDate = value;
					this.SendPropertyChanged("FDate");
					this.OnFDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="NVarChar(10)")]
		public string ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngHomeRequst")]
	public partial class tblMngHomeRequst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SaveDate;
		
		private System.Nullable<int> _PersonalID;
		
		private string _PointHome;
		
		private string _FirstChoose;
		
		private string _SecenedChoose;
		
		private string _ThirthChoose;
		
		private string _RecentHome;
		
		private string _Discription;
		
		private System.Nullable<bool> _Confirm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSaveDateChanging(string value);
    partial void OnSaveDateChanged();
    partial void OnPersonalIDChanging(System.Nullable<int> value);
    partial void OnPersonalIDChanged();
    partial void OnPointHomeChanging(string value);
    partial void OnPointHomeChanged();
    partial void OnFirstChooseChanging(string value);
    partial void OnFirstChooseChanged();
    partial void OnSecenedChooseChanging(string value);
    partial void OnSecenedChooseChanged();
    partial void OnThirthChooseChanging(string value);
    partial void OnThirthChooseChanged();
    partial void OnRecentHomeChanging(string value);
    partial void OnRecentHomeChanged();
    partial void OnDiscriptionChanging(string value);
    partial void OnDiscriptionChanged();
    partial void OnConfirmChanging(System.Nullable<bool> value);
    partial void OnConfirmChanged();
    #endregion
		
		public tblMngHomeRequst()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveDate", DbType="NVarChar(10)")]
		public string SaveDate
		{
			get
			{
				return this._SaveDate;
			}
			set
			{
				if ((this._SaveDate != value))
				{
					this.OnSaveDateChanging(value);
					this.SendPropertyChanging();
					this._SaveDate = value;
					this.SendPropertyChanged("SaveDate");
					this.OnSaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalID", DbType="Int")]
		public System.Nullable<int> PersonalID
		{
			get
			{
				return this._PersonalID;
			}
			set
			{
				if ((this._PersonalID != value))
				{
					this.OnPersonalIDChanging(value);
					this.SendPropertyChanging();
					this._PersonalID = value;
					this.SendPropertyChanged("PersonalID");
					this.OnPersonalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointHome", DbType="NVarChar(50)")]
		public string PointHome
		{
			get
			{
				return this._PointHome;
			}
			set
			{
				if ((this._PointHome != value))
				{
					this.OnPointHomeChanging(value);
					this.SendPropertyChanging();
					this._PointHome = value;
					this.SendPropertyChanged("PointHome");
					this.OnPointHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstChoose", DbType="NVarChar(50)")]
		public string FirstChoose
		{
			get
			{
				return this._FirstChoose;
			}
			set
			{
				if ((this._FirstChoose != value))
				{
					this.OnFirstChooseChanging(value);
					this.SendPropertyChanging();
					this._FirstChoose = value;
					this.SendPropertyChanged("FirstChoose");
					this.OnFirstChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecenedChoose", DbType="NVarChar(50)")]
		public string SecenedChoose
		{
			get
			{
				return this._SecenedChoose;
			}
			set
			{
				if ((this._SecenedChoose != value))
				{
					this.OnSecenedChooseChanging(value);
					this.SendPropertyChanging();
					this._SecenedChoose = value;
					this.SendPropertyChanged("SecenedChoose");
					this.OnSecenedChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirthChoose", DbType="NVarChar(50)")]
		public string ThirthChoose
		{
			get
			{
				return this._ThirthChoose;
			}
			set
			{
				if ((this._ThirthChoose != value))
				{
					this.OnThirthChooseChanging(value);
					this.SendPropertyChanging();
					this._ThirthChoose = value;
					this.SendPropertyChanged("ThirthChoose");
					this.OnThirthChooseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecentHome", DbType="NVarChar(50)")]
		public string RecentHome
		{
			get
			{
				return this._RecentHome;
			}
			set
			{
				if ((this._RecentHome != value))
				{
					this.OnRecentHomeChanging(value);
					this.SendPropertyChanging();
					this._RecentHome = value;
					this.SendPropertyChanged("RecentHome");
					this.OnRecentHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="NVarChar(MAX)")]
		public string Discription
		{
			get
			{
				return this._Discription;
			}
			set
			{
				if ((this._Discription != value))
				{
					this.OnDiscriptionChanging(value);
					this.SendPropertyChanging();
					this._Discription = value;
					this.SendPropertyChanged("Discription");
					this.OnDiscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
		public System.Nullable<bool> Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngKindergarten")]
	public partial class tblMngKindergarten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Group_Name;
		
		private System.Nullable<int> _Chiled_ID;
		
		private string _Date_EnterChiled;
		
		private string _Des;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroup_NameChanging(string value);
    partial void OnGroup_NameChanged();
    partial void OnChiled_IDChanging(System.Nullable<int> value);
    partial void OnChiled_IDChanged();
    partial void OnDate_EnterChiledChanging(string value);
    partial void OnDate_EnterChiledChanged();
    partial void OnDesChanging(string value);
    partial void OnDesChanged();
    #endregion
		
		public tblMngKindergarten()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Name", DbType="NVarChar(50)")]
		public string Group_Name
		{
			get
			{
				return this._Group_Name;
			}
			set
			{
				if ((this._Group_Name != value))
				{
					this.OnGroup_NameChanging(value);
					this.SendPropertyChanging();
					this._Group_Name = value;
					this.SendPropertyChanged("Group_Name");
					this.OnGroup_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiled_ID", DbType="Int")]
		public System.Nullable<int> Chiled_ID
		{
			get
			{
				return this._Chiled_ID;
			}
			set
			{
				if ((this._Chiled_ID != value))
				{
					this.OnChiled_IDChanging(value);
					this.SendPropertyChanging();
					this._Chiled_ID = value;
					this.SendPropertyChanged("Chiled_ID");
					this.OnChiled_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_EnterChiled", DbType="NVarChar(10)")]
		public string Date_EnterChiled
		{
			get
			{
				return this._Date_EnterChiled;
			}
			set
			{
				if ((this._Date_EnterChiled != value))
				{
					this.OnDate_EnterChiledChanging(value);
					this.SendPropertyChanging();
					this._Date_EnterChiled = value;
					this.SendPropertyChanged("Date_EnterChiled");
					this.OnDate_EnterChiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Des", DbType="NVarChar(MAX)")]
		public string Des
		{
			get
			{
				return this._Des;
			}
			set
			{
				if ((this._Des != value))
				{
					this.OnDesChanging(value);
					this.SendPropertyChanging();
					this._Des = value;
					this.SendPropertyChanged("Des");
					this.OnDesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngLeaseDriver")]
	public partial class tblMngLeaseDriver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _Family;
		
		private string _Kind_Car;
		
		private string _Time_OprationCar;
		
		private string _Lease_No;
		
		private string _Service_Location;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnKind_CarChanging(string value);
    partial void OnKind_CarChanged();
    partial void OnTime_OprationCarChanging(string value);
    partial void OnTime_OprationCarChanged();
    partial void OnLease_NoChanging(string value);
    partial void OnLease_NoChanged();
    partial void OnService_LocationChanging(string value);
    partial void OnService_LocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblMngLeaseDriver()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(20)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(30)")]
		public string Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				if ((this._Family != value))
				{
					this.OnFamilyChanging(value);
					this.SendPropertyChanging();
					this._Family = value;
					this.SendPropertyChanged("Family");
					this.OnFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_Car", DbType="NVarChar(20)")]
		public string Kind_Car
		{
			get
			{
				return this._Kind_Car;
			}
			set
			{
				if ((this._Kind_Car != value))
				{
					this.OnKind_CarChanging(value);
					this.SendPropertyChanging();
					this._Kind_Car = value;
					this.SendPropertyChanged("Kind_Car");
					this.OnKind_CarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_OprationCar", DbType="NVarChar(5)")]
		public string Time_OprationCar
		{
			get
			{
				return this._Time_OprationCar;
			}
			set
			{
				if ((this._Time_OprationCar != value))
				{
					this.OnTime_OprationCarChanging(value);
					this.SendPropertyChanging();
					this._Time_OprationCar = value;
					this.SendPropertyChanged("Time_OprationCar");
					this.OnTime_OprationCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lease_No", DbType="NVarChar(20)")]
		public string Lease_No
		{
			get
			{
				return this._Lease_No;
			}
			set
			{
				if ((this._Lease_No != value))
				{
					this.OnLease_NoChanging(value);
					this.SendPropertyChanging();
					this._Lease_No = value;
					this.SendPropertyChanged("Lease_No");
					this.OnLease_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Location", DbType="NVarChar(20)")]
		public string Service_Location
		{
			get
			{
				return this._Service_Location;
			}
			set
			{
				if ((this._Service_Location != value))
				{
					this.OnService_LocationChanging(value);
					this.SendPropertyChanging();
					this._Service_Location = value;
					this.SendPropertyChanged("Service_Location");
					this.OnService_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngMasterNurse")]
	public partial class tblMngMasterNurse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MasterNurse_ID;
		
		private string _FName;
		
		private string _LName;
		
		private string _Person_No;
		
		private string _kind_Recruitment;
		
		private string _Date_Recruitment;
		
		private string _LastDegree;
		
		private string _description;
		
		private EntitySet<tblMngGroup> _tblMngGroups;
		
		private EntityRef<tblMngMasterNurse> _tblMngMasterNurse2;
		
		private EntityRef<tblMngMasterNurse> _tblMngMasterNurse1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterNurse_IDChanging(int value);
    partial void OnMasterNurse_IDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnPerson_NoChanging(string value);
    partial void OnPerson_NoChanged();
    partial void Onkind_RecruitmentChanging(string value);
    partial void Onkind_RecruitmentChanged();
    partial void OnDate_RecruitmentChanging(string value);
    partial void OnDate_RecruitmentChanged();
    partial void OnLastDegreeChanging(string value);
    partial void OnLastDegreeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public tblMngMasterNurse()
		{
			this._tblMngGroups = new EntitySet<tblMngGroup>(new Action<tblMngGroup>(this.attach_tblMngGroups), new Action<tblMngGroup>(this.detach_tblMngGroups));
			this._tblMngMasterNurse2 = default(EntityRef<tblMngMasterNurse>);
			this._tblMngMasterNurse1 = default(EntityRef<tblMngMasterNurse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterNurse_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MasterNurse_ID
		{
			get
			{
				return this._MasterNurse_ID;
			}
			set
			{
				if ((this._MasterNurse_ID != value))
				{
					if (this._tblMngMasterNurse1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterNurse_IDChanging(value);
					this.SendPropertyChanging();
					this._MasterNurse_ID = value;
					this.SendPropertyChanged("MasterNurse_ID");
					this.OnMasterNurse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_No", DbType="NVarChar(50)")]
		public string Person_No
		{
			get
			{
				return this._Person_No;
			}
			set
			{
				if ((this._Person_No != value))
				{
					this.OnPerson_NoChanging(value);
					this.SendPropertyChanging();
					this._Person_No = value;
					this.SendPropertyChanged("Person_No");
					this.OnPerson_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind_Recruitment", DbType="NVarChar(20)")]
		public string kind_Recruitment
		{
			get
			{
				return this._kind_Recruitment;
			}
			set
			{
				if ((this._kind_Recruitment != value))
				{
					this.Onkind_RecruitmentChanging(value);
					this.SendPropertyChanging();
					this._kind_Recruitment = value;
					this.SendPropertyChanged("kind_Recruitment");
					this.Onkind_RecruitmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Recruitment", DbType="NVarChar(10)")]
		public string Date_Recruitment
		{
			get
			{
				return this._Date_Recruitment;
			}
			set
			{
				if ((this._Date_Recruitment != value))
				{
					this.OnDate_RecruitmentChanging(value);
					this.SendPropertyChanging();
					this._Date_Recruitment = value;
					this.SendPropertyChanged("Date_Recruitment");
					this.OnDate_RecruitmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDegree", DbType="NVarChar(30)")]
		public string LastDegree
		{
			get
			{
				return this._LastDegree;
			}
			set
			{
				if ((this._LastDegree != value))
				{
					this.OnLastDegreeChanging(value);
					this.SendPropertyChanging();
					this._LastDegree = value;
					this.SendPropertyChanged("LastDegree");
					this.OnLastDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngMasterNurse_tblMngGroup", Storage="_tblMngGroups", ThisKey="MasterNurse_ID", OtherKey="IDMasterNurce")]
		public EntitySet<tblMngGroup> tblMngGroups
		{
			get
			{
				return this._tblMngGroups;
			}
			set
			{
				this._tblMngGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngMasterNurse_tblMngMasterNurse", Storage="_tblMngMasterNurse2", ThisKey="MasterNurse_ID", OtherKey="MasterNurse_ID", IsUnique=true, IsForeignKey=false)]
		public tblMngMasterNurse tblMngMasterNurse2
		{
			get
			{
				return this._tblMngMasterNurse2.Entity;
			}
			set
			{
				tblMngMasterNurse previousValue = this._tblMngMasterNurse2.Entity;
				if (((previousValue != value) 
							|| (this._tblMngMasterNurse2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngMasterNurse2.Entity = null;
						previousValue.tblMngMasterNurse1 = null;
					}
					this._tblMngMasterNurse2.Entity = value;
					if ((value != null))
					{
						value.tblMngMasterNurse1 = this;
					}
					this.SendPropertyChanged("tblMngMasterNurse2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngMasterNurse_tblMngMasterNurse", Storage="_tblMngMasterNurse1", ThisKey="MasterNurse_ID", OtherKey="MasterNurse_ID", IsForeignKey=true)]
		public tblMngMasterNurse tblMngMasterNurse1
		{
			get
			{
				return this._tblMngMasterNurse1.Entity;
			}
			set
			{
				tblMngMasterNurse previousValue = this._tblMngMasterNurse1.Entity;
				if (((previousValue != value) 
							|| (this._tblMngMasterNurse1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngMasterNurse1.Entity = null;
						previousValue.tblMngMasterNurse2 = null;
					}
					this._tblMngMasterNurse1.Entity = value;
					if ((value != null))
					{
						value.tblMngMasterNurse2 = this;
						this._MasterNurse_ID = value.MasterNurse_ID;
					}
					else
					{
						this._MasterNurse_ID = default(int);
					}
					this.SendPropertyChanged("tblMngMasterNurse1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngGroups(tblMngGroup entity)
		{
			this.SendPropertyChanging();
			entity.tblMngMasterNurse = this;
		}
		
		private void detach_tblMngGroups(tblMngGroup entity)
		{
			this.SendPropertyChanging();
			entity.tblMngMasterNurse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngNotResponse")]
	public partial class tblMngNotResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _RelatedUnit;
		
		private string _InteralNumber;
		
		private string _NotResponseNumber;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnRelatedUnitChanging(string value);
    partial void OnRelatedUnitChanged();
    partial void OnInteralNumberChanging(string value);
    partial void OnInteralNumberChanged();
    partial void OnNotResponseNumberChanging(string value);
    partial void OnNotResponseNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblMngNotResponse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedUnit", DbType="NVarChar(50)")]
		public string RelatedUnit
		{
			get
			{
				return this._RelatedUnit;
			}
			set
			{
				if ((this._RelatedUnit != value))
				{
					this.OnRelatedUnitChanging(value);
					this.SendPropertyChanging();
					this._RelatedUnit = value;
					this.SendPropertyChanged("RelatedUnit");
					this.OnRelatedUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteralNumber", DbType="NVarChar(50)")]
		public string InteralNumber
		{
			get
			{
				return this._InteralNumber;
			}
			set
			{
				if ((this._InteralNumber != value))
				{
					this.OnInteralNumberChanging(value);
					this.SendPropertyChanging();
					this._InteralNumber = value;
					this.SendPropertyChanged("InteralNumber");
					this.OnInteralNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotResponseNumber", DbType="NVarChar(50)")]
		public string NotResponseNumber
		{
			get
			{
				return this._NotResponseNumber;
			}
			set
			{
				if ((this._NotResponseNumber != value))
				{
					this.OnNotResponseNumberChanging(value);
					this.SendPropertyChanging();
					this._NotResponseNumber = value;
					this.SendPropertyChanged("NotResponseNumber");
					this.OnNotResponseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[tblMngOut-of-CareCalls]")]
	public partial class tblMngOut_of_CareCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _ConversationType;
		
		private string _ReqName;
		
		private string _InteralNO;
		
		private string _Result;
		
		private string _ReservationTime;
		
		private string _CallTime;
		
		private System.Nullable<int> _TelecommunicationsEmployee;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _CreationUserID;
		
		private EntityRef<tblMngTelecomunicationPersonnel> _tblMngTelecomunicationPersonnel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnConversationTypeChanging(string value);
    partial void OnConversationTypeChanged();
    partial void OnReqNameChanging(string value);
    partial void OnReqNameChanged();
    partial void OnInteralNOChanging(string value);
    partial void OnInteralNOChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnReservationTimeChanging(string value);
    partial void OnReservationTimeChanged();
    partial void OnCallTimeChanging(string value);
    partial void OnCallTimeChanged();
    partial void OnTelecommunicationsEmployeeChanging(System.Nullable<int> value);
    partial void OnTelecommunicationsEmployeeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    #endregion
		
		public tblMngOut_of_CareCall()
		{
			this._tblMngTelecomunicationPersonnel = default(EntityRef<tblMngTelecomunicationPersonnel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationType", DbType="NVarChar(50)")]
		public string ConversationType
		{
			get
			{
				return this._ConversationType;
			}
			set
			{
				if ((this._ConversationType != value))
				{
					this.OnConversationTypeChanging(value);
					this.SendPropertyChanging();
					this._ConversationType = value;
					this.SendPropertyChanged("ConversationType");
					this.OnConversationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqName", DbType="NVarChar(50)")]
		public string ReqName
		{
			get
			{
				return this._ReqName;
			}
			set
			{
				if ((this._ReqName != value))
				{
					this.OnReqNameChanging(value);
					this.SendPropertyChanging();
					this._ReqName = value;
					this.SendPropertyChanged("ReqName");
					this.OnReqNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteralNO", DbType="NVarChar(50)")]
		public string InteralNO
		{
			get
			{
				return this._InteralNO;
			}
			set
			{
				if ((this._InteralNO != value))
				{
					this.OnInteralNOChanging(value);
					this.SendPropertyChanging();
					this._InteralNO = value;
					this.SendPropertyChanged("InteralNO");
					this.OnInteralNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationTime", DbType="NVarChar(10)")]
		public string ReservationTime
		{
			get
			{
				return this._ReservationTime;
			}
			set
			{
				if ((this._ReservationTime != value))
				{
					this.OnReservationTimeChanging(value);
					this.SendPropertyChanging();
					this._ReservationTime = value;
					this.SendPropertyChanged("ReservationTime");
					this.OnReservationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallTime", DbType="NVarChar(10)")]
		public string CallTime
		{
			get
			{
				return this._CallTime;
			}
			set
			{
				if ((this._CallTime != value))
				{
					this.OnCallTimeChanging(value);
					this.SendPropertyChanging();
					this._CallTime = value;
					this.SendPropertyChanged("CallTime");
					this.OnCallTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelecommunicationsEmployee", DbType="Int")]
		public System.Nullable<int> TelecommunicationsEmployee
		{
			get
			{
				return this._TelecommunicationsEmployee;
			}
			set
			{
				if ((this._TelecommunicationsEmployee != value))
				{
					if (this._tblMngTelecomunicationPersonnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelecommunicationsEmployeeChanging(value);
					this.SendPropertyChanging();
					this._TelecommunicationsEmployee = value;
					this.SendPropertyChanged("TelecommunicationsEmployee");
					this.OnTelecommunicationsEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngTelecomunicationPersonnel_tblMngOut_of_CareCall", Storage="_tblMngTelecomunicationPersonnel", ThisKey="TelecommunicationsEmployee", OtherKey="ID", IsForeignKey=true)]
		public tblMngTelecomunicationPersonnel tblMngTelecomunicationPersonnel
		{
			get
			{
				return this._tblMngTelecomunicationPersonnel.Entity;
			}
			set
			{
				tblMngTelecomunicationPersonnel previousValue = this._tblMngTelecomunicationPersonnel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngTelecomunicationPersonnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngTelecomunicationPersonnel.Entity = null;
						previousValue.tblMngOut_of_CareCalls.Remove(this);
					}
					this._tblMngTelecomunicationPersonnel.Entity = value;
					if ((value != null))
					{
						value.tblMngOut_of_CareCalls.Add(this);
						this._TelecommunicationsEmployee = value.ID;
					}
					else
					{
						this._TelecommunicationsEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngTelecomunicationPersonnel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngStatusChiled")]
	public partial class tblMngStatusChiled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _Chiled_id;
		
		private string _Shift_Work;
		
		private string _Brief_Repot;
		
		private EntityRef<tblMngChiled> _tblMngChiled;
		
		private EntityRef<tblMngChiled> _tblMngChiled1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnChiled_idChanging(System.Nullable<int> value);
    partial void OnChiled_idChanged();
    partial void OnShift_WorkChanging(string value);
    partial void OnShift_WorkChanged();
    partial void OnBrief_RepotChanging(string value);
    partial void OnBrief_RepotChanged();
    #endregion
		
		public tblMngStatusChiled()
		{
			this._tblMngChiled = default(EntityRef<tblMngChiled>);
			this._tblMngChiled1 = default(EntityRef<tblMngChiled>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiled_id", DbType="Int")]
		public System.Nullable<int> Chiled_id
		{
			get
			{
				return this._Chiled_id;
			}
			set
			{
				if ((this._Chiled_id != value))
				{
					if ((this._tblMngChiled.HasLoadedOrAssignedValue || this._tblMngChiled1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChiled_idChanging(value);
					this.SendPropertyChanging();
					this._Chiled_id = value;
					this.SendPropertyChanged("Chiled_id");
					this.OnChiled_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Work", DbType="NVarChar(50)")]
		public string Shift_Work
		{
			get
			{
				return this._Shift_Work;
			}
			set
			{
				if ((this._Shift_Work != value))
				{
					this.OnShift_WorkChanging(value);
					this.SendPropertyChanging();
					this._Shift_Work = value;
					this.SendPropertyChanged("Shift_Work");
					this.OnShift_WorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brief_Repot", DbType="NVarChar(MAX)")]
		public string Brief_Repot
		{
			get
			{
				return this._Brief_Repot;
			}
			set
			{
				if ((this._Brief_Repot != value))
				{
					this.OnBrief_RepotChanging(value);
					this.SendPropertyChanging();
					this._Brief_Repot = value;
					this.SendPropertyChanged("Brief_Repot");
					this.OnBrief_RepotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngStatusChiled", Storage="_tblMngChiled", ThisKey="Chiled_id", OtherKey="ID_Chiled", IsForeignKey=true)]
		public tblMngChiled tblMngChiled
		{
			get
			{
				return this._tblMngChiled.Entity;
			}
			set
			{
				tblMngChiled previousValue = this._tblMngChiled.Entity;
				if (((previousValue != value) 
							|| (this._tblMngChiled.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngChiled.Entity = null;
						previousValue.tblMngStatusChileds.Remove(this);
					}
					this._tblMngChiled.Entity = value;
					if ((value != null))
					{
						value.tblMngStatusChileds.Add(this);
						this._Chiled_id = value.ID_Chiled;
					}
					else
					{
						this._Chiled_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngChiled");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngChiled_tblMngStatusChiled1", Storage="_tblMngChiled1", ThisKey="Chiled_id", OtherKey="ID_Chiled", IsForeignKey=true)]
		public tblMngChiled tblMngChiled1
		{
			get
			{
				return this._tblMngChiled1.Entity;
			}
			set
			{
				tblMngChiled previousValue = this._tblMngChiled1.Entity;
				if (((previousValue != value) 
							|| (this._tblMngChiled1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngChiled1.Entity = null;
						previousValue.tblMngStatusChileds1.Remove(this);
					}
					this._tblMngChiled1.Entity = value;
					if ((value != null))
					{
						value.tblMngStatusChileds1.Add(this);
						this._Chiled_id = value.ID_Chiled;
					}
					else
					{
						this._Chiled_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngChiled1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngTelecomunicationPersonnel")]
	public partial class tblMngTelecomunicationPersonnel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _LName;
		
		private string _EmploymentType;
		
		private EntitySet<tblMngOut_of_CareCall> _tblMngOut_of_CareCalls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnEmploymentTypeChanging(string value);
    partial void OnEmploymentTypeChanged();
    #endregion
		
		public tblMngTelecomunicationPersonnel()
		{
			this._tblMngOut_of_CareCalls = new EntitySet<tblMngOut_of_CareCall>(new Action<tblMngOut_of_CareCall>(this.attach_tblMngOut_of_CareCalls), new Action<tblMngOut_of_CareCall>(this.detach_tblMngOut_of_CareCalls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="NVarChar(50)")]
		public string EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this.OnEmploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._EmploymentType = value;
					this.SendPropertyChanged("EmploymentType");
					this.OnEmploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngTelecomunicationPersonnel_tblMngOut_of_CareCall", Storage="_tblMngOut_of_CareCalls", ThisKey="ID", OtherKey="TelecommunicationsEmployee")]
		public EntitySet<tblMngOut_of_CareCall> tblMngOut_of_CareCalls
		{
			get
			{
				return this._tblMngOut_of_CareCalls;
			}
			set
			{
				this._tblMngOut_of_CareCalls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngOut_of_CareCalls(tblMngOut_of_CareCall entity)
		{
			this.SendPropertyChanging();
			entity.tblMngTelecomunicationPersonnel = this;
		}
		
		private void detach_tblMngOut_of_CareCalls(tblMngOut_of_CareCall entity)
		{
			this.SendPropertyChanging();
			entity.tblMngTelecomunicationPersonnel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngTicketPhone")]
	public partial class tblMngTicketPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDM;
		
		private string _TicketNumber;
		
		private System.Nullable<int> _Amount;
		
		private string _Date;
		
		private string _PhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMChanging(System.Nullable<int> value);
    partial void OnIDMChanged();
    partial void OnTicketNumberChanging(string value);
    partial void OnTicketNumberChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public tblMngTicketPhone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDM", DbType="Int")]
		public System.Nullable<int> IDM
		{
			get
			{
				return this._IDM;
			}
			set
			{
				if ((this._IDM != value))
				{
					this.OnIDMChanging(value);
					this.SendPropertyChanging();
					this._IDM = value;
					this.SendPropertyChanged("IDM");
					this.OnIDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketNumber", DbType="NVarChar(50)")]
		public string TicketNumber
		{
			get
			{
				return this._TicketNumber;
			}
			set
			{
				if ((this._TicketNumber != value))
				{
					this.OnTicketNumberChanging(value);
					this.SendPropertyChanging();
					this._TicketNumber = value;
					this.SendPropertyChanged("TicketNumber");
					this.OnTicketNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngTrainingChiled")]
	public partial class tblMngTrainingChiled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _Chiled_Name;
		
		private string _Shift_Work;
		
		private string _Kind_Training;
		
		private string _Status_Chiled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnChiled_NameChanging(string value);
    partial void OnChiled_NameChanged();
    partial void OnShift_WorkChanging(string value);
    partial void OnShift_WorkChanged();
    partial void OnKind_TrainingChanging(string value);
    partial void OnKind_TrainingChanged();
    partial void OnStatus_ChiledChanging(string value);
    partial void OnStatus_ChiledChanged();
    #endregion
		
		public tblMngTrainingChiled()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chiled_Name", DbType="NVarChar(30)")]
		public string Chiled_Name
		{
			get
			{
				return this._Chiled_Name;
			}
			set
			{
				if ((this._Chiled_Name != value))
				{
					this.OnChiled_NameChanging(value);
					this.SendPropertyChanging();
					this._Chiled_Name = value;
					this.SendPropertyChanged("Chiled_Name");
					this.OnChiled_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift_Work", DbType="NVarChar(10)")]
		public string Shift_Work
		{
			get
			{
				return this._Shift_Work;
			}
			set
			{
				if ((this._Shift_Work != value))
				{
					this.OnShift_WorkChanging(value);
					this.SendPropertyChanging();
					this._Shift_Work = value;
					this.SendPropertyChanged("Shift_Work");
					this.OnShift_WorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_Training", DbType="NVarChar(20)")]
		public string Kind_Training
		{
			get
			{
				return this._Kind_Training;
			}
			set
			{
				if ((this._Kind_Training != value))
				{
					this.OnKind_TrainingChanging(value);
					this.SendPropertyChanging();
					this._Kind_Training = value;
					this.SendPropertyChanged("Kind_Training");
					this.OnKind_TrainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Chiled", DbType="NVarChar(10)")]
		public string Status_Chiled
		{
			get
			{
				return this._Status_Chiled;
			}
			set
			{
				if ((this._Status_Chiled != value))
				{
					this.OnStatus_ChiledChanging(value);
					this.SendPropertyChanging();
					this._Status_Chiled = value;
					this.SendPropertyChanged("Status_Chiled");
					this.OnStatus_ChiledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngtransportPersonel")]
	public partial class tblMngtransportPersonel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Lname;
		
		private string _Date_Hired;
		
		private string _Description;
		
		private string _CarType;
		
		private string _WorkTime;
		
		private string _StiNum;
		
		private string _WorkPlace;
		
		private string _Type;
		
		private System.Nullable<int> _IDD;
		
		private EntitySet<tblMngCarDriver> _tblMngCarDrivers;
		
		private EntitySet<tblMngDailyRep> _tblMngDailyReps;
		
		private EntitySet<tblMngFactorRepair> _tblMngFactorRepairs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLnameChanging(string value);
    partial void OnLnameChanged();
    partial void OnDate_HiredChanging(string value);
    partial void OnDate_HiredChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCarTypeChanging(string value);
    partial void OnCarTypeChanged();
    partial void OnWorkTimeChanging(string value);
    partial void OnWorkTimeChanged();
    partial void OnStiNumChanging(string value);
    partial void OnStiNumChanged();
    partial void OnWorkPlaceChanging(string value);
    partial void OnWorkPlaceChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIDDChanging(System.Nullable<int> value);
    partial void OnIDDChanged();
    #endregion
		
		public tblMngtransportPersonel()
		{
			this._tblMngCarDrivers = new EntitySet<tblMngCarDriver>(new Action<tblMngCarDriver>(this.attach_tblMngCarDrivers), new Action<tblMngCarDriver>(this.detach_tblMngCarDrivers));
			this._tblMngDailyReps = new EntitySet<tblMngDailyRep>(new Action<tblMngDailyRep>(this.attach_tblMngDailyReps), new Action<tblMngDailyRep>(this.detach_tblMngDailyReps));
			this._tblMngFactorRepairs = new EntitySet<tblMngFactorRepair>(new Action<tblMngFactorRepair>(this.attach_tblMngFactorRepairs), new Action<tblMngFactorRepair>(this.detach_tblMngFactorRepairs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lname", DbType="NVarChar(30)")]
		public string Lname
		{
			get
			{
				return this._Lname;
			}
			set
			{
				if ((this._Lname != value))
				{
					this.OnLnameChanging(value);
					this.SendPropertyChanging();
					this._Lname = value;
					this.SendPropertyChanged("Lname");
					this.OnLnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Hired", DbType="NVarChar(10)")]
		public string Date_Hired
		{
			get
			{
				return this._Date_Hired;
			}
			set
			{
				if ((this._Date_Hired != value))
				{
					this.OnDate_HiredChanging(value);
					this.SendPropertyChanging();
					this._Date_Hired = value;
					this.SendPropertyChanged("Date_Hired");
					this.OnDate_HiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarType", DbType="NVarChar(50)")]
		public string CarType
		{
			get
			{
				return this._CarType;
			}
			set
			{
				if ((this._CarType != value))
				{
					this.OnCarTypeChanging(value);
					this.SendPropertyChanging();
					this._CarType = value;
					this.SendPropertyChanged("CarType");
					this.OnCarTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="NChar(10)")]
		public string WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StiNum", DbType="NVarChar(20)")]
		public string StiNum
		{
			get
			{
				return this._StiNum;
			}
			set
			{
				if ((this._StiNum != value))
				{
					this.OnStiNumChanging(value);
					this.SendPropertyChanging();
					this._StiNum = value;
					this.SendPropertyChanged("StiNum");
					this.OnStiNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPlace", DbType="NVarChar(50)")]
		public string WorkPlace
		{
			get
			{
				return this._WorkPlace;
			}
			set
			{
				if ((this._WorkPlace != value))
				{
					this.OnWorkPlaceChanging(value);
					this.SendPropertyChanging();
					this._WorkPlace = value;
					this.SendPropertyChanged("WorkPlace");
					this.OnWorkPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDD", DbType="Int")]
		public System.Nullable<int> IDD
		{
			get
			{
				return this._IDD;
			}
			set
			{
				if ((this._IDD != value))
				{
					this.OnIDDChanging(value);
					this.SendPropertyChanging();
					this._IDD = value;
					this.SendPropertyChanged("IDD");
					this.OnIDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngCarDriver", Storage="_tblMngCarDrivers", ThisKey="ID", OtherKey="Driver_ID")]
		public EntitySet<tblMngCarDriver> tblMngCarDrivers
		{
			get
			{
				return this._tblMngCarDrivers;
			}
			set
			{
				this._tblMngCarDrivers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngDailyRep", Storage="_tblMngDailyReps", ThisKey="ID", OtherKey="IDDriver")]
		public EntitySet<tblMngDailyRep> tblMngDailyReps
		{
			get
			{
				return this._tblMngDailyReps;
			}
			set
			{
				this._tblMngDailyReps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngFactorRepair", Storage="_tblMngFactorRepairs", ThisKey="ID", OtherKey="IDDriver")]
		public EntitySet<tblMngFactorRepair> tblMngFactorRepairs
		{
			get
			{
				return this._tblMngFactorRepairs;
			}
			set
			{
				this._tblMngFactorRepairs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = this;
		}
		
		private void detach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = null;
		}
		
		private void attach_tblMngDailyReps(tblMngDailyRep entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = this;
		}
		
		private void detach_tblMngDailyReps(tblMngDailyRep entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = null;
		}
		
		private void attach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = this;
		}
		
		private void detach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestHistory")]
	public partial class TestHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _PersonID;
		
		private System.Guid _TestID;
		
		private string _Date;
		
		private string _Result;
		
		private string _NormalRange;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnTestIDChanging(System.Guid value);
    partial void OnTestIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnNormalRangeChanging(string value);
    partial void OnNormalRangeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public TestHistory()
		{
			this._Person = default(EntityRef<Person>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TestID
		{
			get
			{
				return this._TestID;
			}
			set
			{
				if ((this._TestID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestIDChanging(value);
					this.SendPropertyChanging();
					this._TestID = value;
					this.SendPropertyChanged("TestID");
					this.OnTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(300)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalRange", DbType="NVarChar(300)")]
		public string NormalRange
		{
			get
			{
				return this._NormalRange;
			}
			set
			{
				if ((this._NormalRange != value))
				{
					this.OnNormalRangeChanging(value);
					this.SendPropertyChanging();
					this._NormalRange = value;
					this.SendPropertyChanged("NormalRange");
					this.OnNormalRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TestHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TestHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TestHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_TestHistory", Storage="_Service", ThisKey="TestID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.TestHistories.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.TestHistories.Add(this);
						this._TestID = value.ID;
					}
					else
					{
						this._TestID = default(System.Guid);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tmpSexPyramid")]
	public partial class tmpSexPyramid
	{
		
		private string _SexStr;
		
		private string _AgeSTR;
		
		private System.Nullable<int> _Expr1;
		
		private int _SortOrder;
		
		private string _Zone;
		
		public tmpSexPyramid()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexStr", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string SexStr
		{
			get
			{
				return this._SexStr;
			}
			set
			{
				if ((this._SexStr != value))
				{
					this._SexStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeSTR", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string AgeSTR
		{
			get
			{
				return this._AgeSTR;
			}
			set
			{
				if ((this._AgeSTR != value))
				{
					this._AgeSTR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Int")]
		public System.Nullable<int> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this._Zone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _GivenServiceMID;
		
		private System.Guid _FromStaffID;
		
		private System.Guid _ToStaffID;
		
		private int _CreatorID;
		
		private string _Date;
		
		private string _Time;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenServiceMIDChanging(System.Guid value);
    partial void OnGivenServiceMIDChanged();
    partial void OnFromStaffIDChanging(System.Guid value);
    partial void OnFromStaffIDChanged();
    partial void OnToStaffIDChanging(System.Guid value);
    partial void OnToStaffIDChanged();
    partial void OnCreatorIDChanging(int value);
    partial void OnCreatorIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public Transfer()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceMID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GivenServiceMID
		{
			get
			{
				return this._GivenServiceMID;
			}
			set
			{
				if ((this._GivenServiceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenServiceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceMID = value;
					this.SendPropertyChanged("GivenServiceMID");
					this.OnGivenServiceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FromStaffID
		{
			get
			{
				return this._FromStaffID;
			}
			set
			{
				if ((this._FromStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStaffIDChanging(value);
					this.SendPropertyChanging();
					this._FromStaffID = value;
					this.SendPropertyChanged("FromStaffID");
					this.OnFromStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ToStaffID
		{
			get
			{
				return this._ToStaffID;
			}
			set
			{
				if ((this._ToStaffID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStaffIDChanging(value);
					this.SendPropertyChanging();
					this._ToStaffID = value;
					this.SendPropertyChanged("ToStaffID");
					this.OnToStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int NOT NULL")]
		public int CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Transfer", Storage="_GivenServiceM", ThisKey="GivenServiceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Transfers.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Transfers.Add(this);
						this._GivenServiceMID = value.ID;
					}
					else
					{
						this._GivenServiceMID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer", Storage="_Staff", ThisKey="FromStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Transfers.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Transfers.Add(this);
						this._FromStaffID = value.ID;
					}
					else
					{
						this._FromStaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transfer1", Storage="_Staff1", ThisKey="ToStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.Transfers1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.Transfers1.Add(this);
						this._ToStaffID = value.ID;
					}
					else
					{
						this._ToStaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransmissionOfPatients")]
	public partial class TransmissionOfPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GSMID;
		
		private System.Nullable<System.Guid> _FromStaff;
		
		private System.Nullable<System.Guid> _ToStaff;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGSMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGSMIDChanged();
    partial void OnFromStaffChanging(System.Nullable<System.Guid> value);
    partial void OnFromStaffChanged();
    partial void OnToStaffChanging(System.Nullable<System.Guid> value);
    partial void OnToStaffChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public TransmissionOfPatient()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGSMIDChanging(value);
					this.SendPropertyChanging();
					this._GSMID = value;
					this.SendPropertyChanged("GSMID");
					this.OnGSMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStaff", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FromStaff
		{
			get
			{
				return this._FromStaff;
			}
			set
			{
				if ((this._FromStaff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromStaffChanging(value);
					this.SendPropertyChanging();
					this._FromStaff = value;
					this.SendPropertyChanged("FromStaff");
					this.OnFromStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStaff", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ToStaff
		{
			get
			{
				return this._ToStaff;
			}
			set
			{
				if ((this._ToStaff != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToStaffChanging(value);
					this.SendPropertyChanging();
					this._ToStaff = value;
					this.SendPropertyChanged("ToStaff");
					this.OnToStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TransmissionOfPatient", Storage="_GivenServiceM", ThisKey="GSMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.TransmissionOfPatients.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.TransmissionOfPatients.Add(this);
						this._GSMID = value.ID;
					}
					else
					{
						this._GSMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TransmissionOfPatient", Storage="_Staff", ThisKey="FromStaff", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.TransmissionOfPatients.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.TransmissionOfPatients.Add(this);
						this._FromStaff = value.ID;
					}
					else
					{
						this._FromStaff = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TransmissionOfPatient1", Storage="_Staff1", ThisKey="ToStaff", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.TransmissionOfPatients1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.TransmissionOfPatients1.Add(this);
						this._ToStaff = value.ID;
					}
					else
					{
						this._ToStaff = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreatmentProgresses")]
	public partial class TreatmentProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GivenserviceMID;
		
		private System.Nullable<long> _DosseirID;
		
		private string _PROGRESSNote;
		
		private string _Date;
		
		private string _Time;
		
		private EntityRef<Dossier> _Dossier;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGivenserviceMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenserviceMIDChanged();
    partial void OnDosseirIDChanging(System.Nullable<long> value);
    partial void OnDosseirIDChanged();
    partial void OnPROGRESSNoteChanging(string value);
    partial void OnPROGRESSNoteChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public TreatmentProgress()
		{
			this._Dossier = default(EntityRef<Dossier>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenserviceMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenserviceMID
		{
			get
			{
				return this._GivenserviceMID;
			}
			set
			{
				if ((this._GivenserviceMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenserviceMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenserviceMID = value;
					this.SendPropertyChanged("GivenserviceMID");
					this.OnGivenserviceMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DosseirID", DbType="BigInt")]
		public System.Nullable<long> DosseirID
		{
			get
			{
				return this._DosseirID;
			}
			set
			{
				if ((this._DosseirID != value))
				{
					if (this._Dossier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDosseirIDChanging(value);
					this.SendPropertyChanging();
					this._DosseirID = value;
					this.SendPropertyChanged("DosseirID");
					this.OnDosseirIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROGRESSNote", DbType="NVarChar(200)")]
		public string PROGRESSNote
		{
			get
			{
				return this._PROGRESSNote;
			}
			set
			{
				if ((this._PROGRESSNote != value))
				{
					this.OnPROGRESSNoteChanging(value);
					this.SendPropertyChanging();
					this._PROGRESSNote = value;
					this.SendPropertyChanged("PROGRESSNote");
					this.OnPROGRESSNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dossier_TreatmentProgress", Storage="_Dossier", ThisKey="DosseirID", OtherKey="ID", IsForeignKey=true)]
		public Dossier Dossier
		{
			get
			{
				return this._Dossier.Entity;
			}
			set
			{
				Dossier previousValue = this._Dossier.Entity;
				if (((previousValue != value) 
							|| (this._Dossier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dossier.Entity = null;
						previousValue.TreatmentProgresses.Remove(this);
					}
					this._Dossier.Entity = value;
					if ((value != null))
					{
						value.TreatmentProgresses.Add(this);
						this._DosseirID = value.ID;
					}
					else
					{
						this._DosseirID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Dossier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TreatmentProgress", Storage="_GivenServiceM", ThisKey="GivenserviceMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.TreatmentProgresses.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.TreatmentProgresses.Add(this);
						this._GivenserviceMID = value.ID;
					}
					else
					{
						this._GivenserviceMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Triage")]
	public partial class Triage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private string _AccidentDate;
		
		private string _AccidentTime;
		
		private string _AccidentLocation;
		
		private string _LoginDate;
		
		private string _LoginTime;
		
		private string _TurnToVisit;
		
		private string _PreviousVisit;
		
		private string _FirstVisitTime;
		
		private string _ActionTime;
		
		private string _ActionType;
		
		private string _HowToRefer;
		
		private string _MainComplaint;
		
		private string _AllergyHistory;
		
		private string _ConsciousnessLevel;
		
		private bool _Lethargy;
		
		private bool _Pain;
		
		private string _MedicalHistory;
		
		private string _MedicineHistory;
		
		private string _BP;
		
		private string _PR;
		
		private string _RR;
		
		private string _T;
		
		private string _SPO2;
		
		private bool _Facility;
		
		private string _FacilityCount;
		
		private string _Levell;
		
		private string _ReferTo;
		
		private string _ReferenceDate;
		
		private string _ReferenceTime;
		
		private string _Time;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _IWEW;
		
		private string _AVPUScale;
		
		private bool _AirwayRisk;
		
		private bool _RespiratoryDistress;
		
		private bool _Cyanosis;
		
		private bool _ShockSigns;
		
		private bool _SPO2LessThan90;
		
		private bool _PregnantWoman;
		
		private EntitySet<TriageCPR> _TriageCPRs;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnAccidentDateChanging(string value);
    partial void OnAccidentDateChanged();
    partial void OnAccidentTimeChanging(string value);
    partial void OnAccidentTimeChanged();
    partial void OnAccidentLocationChanging(string value);
    partial void OnAccidentLocationChanged();
    partial void OnLoginDateChanging(string value);
    partial void OnLoginDateChanged();
    partial void OnLoginTimeChanging(string value);
    partial void OnLoginTimeChanged();
    partial void OnTurnToVisitChanging(string value);
    partial void OnTurnToVisitChanged();
    partial void OnPreviousVisitChanging(string value);
    partial void OnPreviousVisitChanged();
    partial void OnFirstVisitTimeChanging(string value);
    partial void OnFirstVisitTimeChanged();
    partial void OnActionTimeChanging(string value);
    partial void OnActionTimeChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnHowToReferChanging(string value);
    partial void OnHowToReferChanged();
    partial void OnMainComplaintChanging(string value);
    partial void OnMainComplaintChanged();
    partial void OnAllergyHistoryChanging(string value);
    partial void OnAllergyHistoryChanged();
    partial void OnConsciousnessLevelChanging(string value);
    partial void OnConsciousnessLevelChanged();
    partial void OnLethargyChanging(bool value);
    partial void OnLethargyChanged();
    partial void OnPainChanging(bool value);
    partial void OnPainChanged();
    partial void OnMedicalHistoryChanging(string value);
    partial void OnMedicalHistoryChanged();
    partial void OnMedicineHistoryChanging(string value);
    partial void OnMedicineHistoryChanged();
    partial void OnBPChanging(string value);
    partial void OnBPChanged();
    partial void OnPRChanging(string value);
    partial void OnPRChanged();
    partial void OnRRChanging(string value);
    partial void OnRRChanged();
    partial void OnTChanging(string value);
    partial void OnTChanged();
    partial void OnSPO2Changing(string value);
    partial void OnSPO2Changed();
    partial void OnFacilityChanging(bool value);
    partial void OnFacilityChanged();
    partial void OnFacilityCountChanging(string value);
    partial void OnFacilityCountChanged();
    partial void OnLevellChanging(string value);
    partial void OnLevellChanged();
    partial void OnReferToChanging(string value);
    partial void OnReferToChanged();
    partial void OnReferenceDateChanging(string value);
    partial void OnReferenceDateChanged();
    partial void OnReferenceTimeChanging(string value);
    partial void OnReferenceTimeChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnIWEWChanging(string value);
    partial void OnIWEWChanged();
    partial void OnAVPUScaleChanging(string value);
    partial void OnAVPUScaleChanged();
    partial void OnAirwayRiskChanging(bool value);
    partial void OnAirwayRiskChanged();
    partial void OnRespiratoryDistressChanging(bool value);
    partial void OnRespiratoryDistressChanged();
    partial void OnCyanosisChanging(bool value);
    partial void OnCyanosisChanged();
    partial void OnShockSignsChanging(bool value);
    partial void OnShockSignsChanged();
    partial void OnSPO2LessThan90Changing(bool value);
    partial void OnSPO2LessThan90Changed();
    partial void OnPregnantWomanChanging(bool value);
    partial void OnPregnantWomanChanged();
    #endregion
		
		public Triage()
		{
			this._TriageCPRs = new EntitySet<TriageCPR>(new Action<TriageCPR>(this.attach_TriageCPRs), new Action<TriageCPR>(this.detach_TriageCPRs));
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentDate", DbType="NVarChar(10)")]
		public string AccidentDate
		{
			get
			{
				return this._AccidentDate;
			}
			set
			{
				if ((this._AccidentDate != value))
				{
					this.OnAccidentDateChanging(value);
					this.SendPropertyChanging();
					this._AccidentDate = value;
					this.SendPropertyChanged("AccidentDate");
					this.OnAccidentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentTime", DbType="NVarChar(8)")]
		public string AccidentTime
		{
			get
			{
				return this._AccidentTime;
			}
			set
			{
				if ((this._AccidentTime != value))
				{
					this.OnAccidentTimeChanging(value);
					this.SendPropertyChanging();
					this._AccidentTime = value;
					this.SendPropertyChanged("AccidentTime");
					this.OnAccidentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentLocation", DbType="NVarChar(500)")]
		public string AccidentLocation
		{
			get
			{
				return this._AccidentLocation;
			}
			set
			{
				if ((this._AccidentLocation != value))
				{
					this.OnAccidentLocationChanging(value);
					this.SendPropertyChanging();
					this._AccidentLocation = value;
					this.SendPropertyChanged("AccidentLocation");
					this.OnAccidentLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="NVarChar(10)")]
		public string LoginDate
		{
			get
			{
				return this._LoginDate;
			}
			set
			{
				if ((this._LoginDate != value))
				{
					this.OnLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LoginDate = value;
					this.SendPropertyChanged("LoginDate");
					this.OnLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTime", DbType="NVarChar(8)")]
		public string LoginTime
		{
			get
			{
				return this._LoginTime;
			}
			set
			{
				if ((this._LoginTime != value))
				{
					this.OnLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LoginTime = value;
					this.SendPropertyChanged("LoginTime");
					this.OnLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnToVisit", DbType="NVarChar(10)")]
		public string TurnToVisit
		{
			get
			{
				return this._TurnToVisit;
			}
			set
			{
				if ((this._TurnToVisit != value))
				{
					this.OnTurnToVisitChanging(value);
					this.SendPropertyChanging();
					this._TurnToVisit = value;
					this.SendPropertyChanged("TurnToVisit");
					this.OnTurnToVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousVisit", DbType="NVarChar(50)")]
		public string PreviousVisit
		{
			get
			{
				return this._PreviousVisit;
			}
			set
			{
				if ((this._PreviousVisit != value))
				{
					this.OnPreviousVisitChanging(value);
					this.SendPropertyChanging();
					this._PreviousVisit = value;
					this.SendPropertyChanged("PreviousVisit");
					this.OnPreviousVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstVisitTime", DbType="NVarChar(8)")]
		public string FirstVisitTime
		{
			get
			{
				return this._FirstVisitTime;
			}
			set
			{
				if ((this._FirstVisitTime != value))
				{
					this.OnFirstVisitTimeChanging(value);
					this.SendPropertyChanging();
					this._FirstVisitTime = value;
					this.SendPropertyChanged("FirstVisitTime");
					this.OnFirstVisitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTime", DbType="NVarChar(8)")]
		public string ActionTime
		{
			get
			{
				return this._ActionTime;
			}
			set
			{
				if ((this._ActionTime != value))
				{
					this.OnActionTimeChanging(value);
					this.SendPropertyChanging();
					this._ActionTime = value;
					this.SendPropertyChanged("ActionTime");
					this.OnActionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(50)")]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowToRefer", DbType="NVarChar(100)")]
		public string HowToRefer
		{
			get
			{
				return this._HowToRefer;
			}
			set
			{
				if ((this._HowToRefer != value))
				{
					this.OnHowToReferChanging(value);
					this.SendPropertyChanging();
					this._HowToRefer = value;
					this.SendPropertyChanged("HowToRefer");
					this.OnHowToReferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainComplaint", DbType="NVarChar(500)")]
		public string MainComplaint
		{
			get
			{
				return this._MainComplaint;
			}
			set
			{
				if ((this._MainComplaint != value))
				{
					this.OnMainComplaintChanging(value);
					this.SendPropertyChanging();
					this._MainComplaint = value;
					this.SendPropertyChanged("MainComplaint");
					this.OnMainComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllergyHistory", DbType="NVarChar(500)")]
		public string AllergyHistory
		{
			get
			{
				return this._AllergyHistory;
			}
			set
			{
				if ((this._AllergyHistory != value))
				{
					this.OnAllergyHistoryChanging(value);
					this.SendPropertyChanging();
					this._AllergyHistory = value;
					this.SendPropertyChanged("AllergyHistory");
					this.OnAllergyHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsciousnessLevel", DbType="NVarChar(30)")]
		public string ConsciousnessLevel
		{
			get
			{
				return this._ConsciousnessLevel;
			}
			set
			{
				if ((this._ConsciousnessLevel != value))
				{
					this.OnConsciousnessLevelChanging(value);
					this.SendPropertyChanging();
					this._ConsciousnessLevel = value;
					this.SendPropertyChanged("ConsciousnessLevel");
					this.OnConsciousnessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lethargy", DbType="Bit NOT NULL")]
		public bool Lethargy
		{
			get
			{
				return this._Lethargy;
			}
			set
			{
				if ((this._Lethargy != value))
				{
					this.OnLethargyChanging(value);
					this.SendPropertyChanging();
					this._Lethargy = value;
					this.SendPropertyChanged("Lethargy");
					this.OnLethargyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pain", DbType="Bit NOT NULL")]
		public bool Pain
		{
			get
			{
				return this._Pain;
			}
			set
			{
				if ((this._Pain != value))
				{
					this.OnPainChanging(value);
					this.SendPropertyChanging();
					this._Pain = value;
					this.SendPropertyChanged("Pain");
					this.OnPainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistory", DbType="NVarChar(200)")]
		public string MedicalHistory
		{
			get
			{
				return this._MedicalHistory;
			}
			set
			{
				if ((this._MedicalHistory != value))
				{
					this.OnMedicalHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistory = value;
					this.SendPropertyChanged("MedicalHistory");
					this.OnMedicalHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineHistory", DbType="NVarChar(200)")]
		public string MedicineHistory
		{
			get
			{
				return this._MedicineHistory;
			}
			set
			{
				if ((this._MedicineHistory != value))
				{
					this.OnMedicineHistoryChanging(value);
					this.SendPropertyChanging();
					this._MedicineHistory = value;
					this.SendPropertyChanged("MedicineHistory");
					this.OnMedicineHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BP", DbType="NVarChar(20)")]
		public string BP
		{
			get
			{
				return this._BP;
			}
			set
			{
				if ((this._BP != value))
				{
					this.OnBPChanging(value);
					this.SendPropertyChanging();
					this._BP = value;
					this.SendPropertyChanged("BP");
					this.OnBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="NVarChar(20)")]
		public string PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RR", DbType="NVarChar(20)")]
		public string RR
		{
			get
			{
				return this._RR;
			}
			set
			{
				if ((this._RR != value))
				{
					this.OnRRChanging(value);
					this.SendPropertyChanging();
					this._RR = value;
					this.SendPropertyChanged("RR");
					this.OnRRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T", DbType="NVarChar(20)")]
		public string T
		{
			get
			{
				return this._T;
			}
			set
			{
				if ((this._T != value))
				{
					this.OnTChanging(value);
					this.SendPropertyChanging();
					this._T = value;
					this.SendPropertyChanged("T");
					this.OnTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2", DbType="NVarChar(20)")]
		public string SPO2
		{
			get
			{
				return this._SPO2;
			}
			set
			{
				if ((this._SPO2 != value))
				{
					this.OnSPO2Changing(value);
					this.SendPropertyChanging();
					this._SPO2 = value;
					this.SendPropertyChanged("SPO2");
					this.OnSPO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility", DbType="Bit NOT NULL")]
		public bool Facility
		{
			get
			{
				return this._Facility;
			}
			set
			{
				if ((this._Facility != value))
				{
					this.OnFacilityChanging(value);
					this.SendPropertyChanging();
					this._Facility = value;
					this.SendPropertyChanged("Facility");
					this.OnFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityCount", DbType="NVarChar(10)")]
		public string FacilityCount
		{
			get
			{
				return this._FacilityCount;
			}
			set
			{
				if ((this._FacilityCount != value))
				{
					this.OnFacilityCountChanging(value);
					this.SendPropertyChanging();
					this._FacilityCount = value;
					this.SendPropertyChanged("FacilityCount");
					this.OnFacilityCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Levell", DbType="NVarChar(10)")]
		public string Levell
		{
			get
			{
				return this._Levell;
			}
			set
			{
				if ((this._Levell != value))
				{
					this.OnLevellChanging(value);
					this.SendPropertyChanging();
					this._Levell = value;
					this.SendPropertyChanged("Levell");
					this.OnLevellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferTo", DbType="NVarChar(10)")]
		public string ReferTo
		{
			get
			{
				return this._ReferTo;
			}
			set
			{
				if ((this._ReferTo != value))
				{
					this.OnReferToChanging(value);
					this.SendPropertyChanging();
					this._ReferTo = value;
					this.SendPropertyChanged("ReferTo");
					this.OnReferToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDate", DbType="NVarChar(10)")]
		public string ReferenceDate
		{
			get
			{
				return this._ReferenceDate;
			}
			set
			{
				if ((this._ReferenceDate != value))
				{
					this.OnReferenceDateChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDate = value;
					this.SendPropertyChanged("ReferenceDate");
					this.OnReferenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceTime", DbType="NVarChar(8)")]
		public string ReferenceTime
		{
			get
			{
				return this._ReferenceTime;
			}
			set
			{
				if ((this._ReferenceTime != value))
				{
					this.OnReferenceTimeChanging(value);
					this.SendPropertyChanging();
					this._ReferenceTime = value;
					this.SendPropertyChanged("ReferenceTime");
					this.OnReferenceTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IWEW", DbType="NVarChar(50)")]
		public string IWEW
		{
			get
			{
				return this._IWEW;
			}
			set
			{
				if ((this._IWEW != value))
				{
					this.OnIWEWChanging(value);
					this.SendPropertyChanging();
					this._IWEW = value;
					this.SendPropertyChanged("IWEW");
					this.OnIWEWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVPUScale", DbType="NVarChar(5)")]
		public string AVPUScale
		{
			get
			{
				return this._AVPUScale;
			}
			set
			{
				if ((this._AVPUScale != value))
				{
					this.OnAVPUScaleChanging(value);
					this.SendPropertyChanging();
					this._AVPUScale = value;
					this.SendPropertyChanged("AVPUScale");
					this.OnAVPUScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirwayRisk", DbType="Bit NOT NULL")]
		public bool AirwayRisk
		{
			get
			{
				return this._AirwayRisk;
			}
			set
			{
				if ((this._AirwayRisk != value))
				{
					this.OnAirwayRiskChanging(value);
					this.SendPropertyChanging();
					this._AirwayRisk = value;
					this.SendPropertyChanged("AirwayRisk");
					this.OnAirwayRiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RespiratoryDistress", DbType="Bit NOT NULL")]
		public bool RespiratoryDistress
		{
			get
			{
				return this._RespiratoryDistress;
			}
			set
			{
				if ((this._RespiratoryDistress != value))
				{
					this.OnRespiratoryDistressChanging(value);
					this.SendPropertyChanging();
					this._RespiratoryDistress = value;
					this.SendPropertyChanged("RespiratoryDistress");
					this.OnRespiratoryDistressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cyanosis", DbType="Bit NOT NULL")]
		public bool Cyanosis
		{
			get
			{
				return this._Cyanosis;
			}
			set
			{
				if ((this._Cyanosis != value))
				{
					this.OnCyanosisChanging(value);
					this.SendPropertyChanging();
					this._Cyanosis = value;
					this.SendPropertyChanged("Cyanosis");
					this.OnCyanosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShockSigns", DbType="Bit NOT NULL")]
		public bool ShockSigns
		{
			get
			{
				return this._ShockSigns;
			}
			set
			{
				if ((this._ShockSigns != value))
				{
					this.OnShockSignsChanging(value);
					this.SendPropertyChanging();
					this._ShockSigns = value;
					this.SendPropertyChanged("ShockSigns");
					this.OnShockSignsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO2LessThan90", DbType="Bit NOT NULL")]
		public bool SPO2LessThan90
		{
			get
			{
				return this._SPO2LessThan90;
			}
			set
			{
				if ((this._SPO2LessThan90 != value))
				{
					this.OnSPO2LessThan90Changing(value);
					this.SendPropertyChanging();
					this._SPO2LessThan90 = value;
					this.SendPropertyChanged("SPO2LessThan90");
					this.OnSPO2LessThan90Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PregnantWoman", DbType="Bit NOT NULL")]
		public bool PregnantWoman
		{
			get
			{
				return this._PregnantWoman;
			}
			set
			{
				if ((this._PregnantWoman != value))
				{
					this.OnPregnantWomanChanging(value);
					this.SendPropertyChanging();
					this._PregnantWoman = value;
					this.SendPropertyChanged("PregnantWoman");
					this.OnPregnantWomanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageCPR", Storage="_TriageCPRs", ThisKey="ID", OtherKey="TriageID")]
		public EntitySet<TriageCPR> TriageCPRs
		{
			get
			{
				return this._TriageCPRs;
			}
			set
			{
				this._TriageCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="TriageID")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Triage", Storage="_GivenServiceM", ThisKey="GivenMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Triages.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Triages.Add(this);
						this._GivenMID = value.ID;
					}
					else
					{
						this._GivenMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Triage", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Triages.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Triages.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = this;
		}
		
		private void detach_TriageCPRs(TriageCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = null;
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.Triage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageAdmission")]
	public partial class TriageAdmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _EmergencyNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmergencyNumberChanging(System.Nullable<int> value);
    partial void OnEmergencyNumberChanged();
    #endregion
		
		public TriageAdmission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyNumber", DbType="Int")]
		public System.Nullable<int> EmergencyNumber
		{
			get
			{
				return this._EmergencyNumber;
			}
			set
			{
				if ((this._EmergencyNumber != value))
				{
					this.OnEmergencyNumberChanging(value);
					this.SendPropertyChanging();
					this._EmergencyNumber = value;
					this.SendPropertyChanged("EmergencyNumber");
					this.OnEmergencyNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageCPR")]
	public partial class TriageCPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _IDStaffpresent;
		
		private System.Nullable<System.Guid> _IDStaffAnesthesia;
		
		private System.Nullable<System.Guid> _IDStaffInternal;
		
		private string _OtherStaff;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private string _timeCode;
		
		private string _DateStopHeart;
		
		private string _timeStopHeart;
		
		private string _timePresenceCPR;
		
		private string _CauseStopHeart;
		
		private string _ConditionDescription;
		
		private string _timeEnd;
		
		private System.Nullable<bool> _CprUnsuccessful;
		
		private string _Result;
		
		private string _causeCprUnsuccessful;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Triage> _Triage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnIDStaffpresentChanging(System.Nullable<System.Guid> value);
    partial void OnIDStaffpresentChanged();
    partial void OnIDStaffAnesthesiaChanging(System.Nullable<System.Guid> value);
    partial void OnIDStaffAnesthesiaChanged();
    partial void OnIDStaffInternalChanging(System.Nullable<System.Guid> value);
    partial void OnIDStaffInternalChanged();
    partial void OnOtherStaffChanging(string value);
    partial void OnOtherStaffChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OntimeCodeChanging(string value);
    partial void OntimeCodeChanged();
    partial void OnDateStopHeartChanging(string value);
    partial void OnDateStopHeartChanged();
    partial void OntimeStopHeartChanging(string value);
    partial void OntimeStopHeartChanged();
    partial void OntimePresenceCPRChanging(string value);
    partial void OntimePresenceCPRChanged();
    partial void OnCauseStopHeartChanging(string value);
    partial void OnCauseStopHeartChanged();
    partial void OnConditionDescriptionChanging(string value);
    partial void OnConditionDescriptionChanged();
    partial void OntimeEndChanging(string value);
    partial void OntimeEndChanged();
    partial void OnCprUnsuccessfulChanging(System.Nullable<bool> value);
    partial void OnCprUnsuccessfulChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OncauseCprUnsuccessfulChanging(string value);
    partial void OncauseCprUnsuccessfulChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageCPR()
		{
			this._Person = default(EntityRef<Person>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Triage = default(EntityRef<Triage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStaffpresent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDStaffpresent
		{
			get
			{
				return this._IDStaffpresent;
			}
			set
			{
				if ((this._IDStaffpresent != value))
				{
					if ((this._Staff.HasLoadedOrAssignedValue || this._Staff2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStaffpresentChanging(value);
					this.SendPropertyChanging();
					this._IDStaffpresent = value;
					this.SendPropertyChanged("IDStaffpresent");
					this.OnIDStaffpresentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStaffAnesthesia", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDStaffAnesthesia
		{
			get
			{
				return this._IDStaffAnesthesia;
			}
			set
			{
				if ((this._IDStaffAnesthesia != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStaffAnesthesiaChanging(value);
					this.SendPropertyChanging();
					this._IDStaffAnesthesia = value;
					this.SendPropertyChanged("IDStaffAnesthesia");
					this.OnIDStaffAnesthesiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStaffInternal", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDStaffInternal
		{
			get
			{
				return this._IDStaffInternal;
			}
			set
			{
				if ((this._IDStaffInternal != value))
				{
					this.OnIDStaffInternalChanging(value);
					this.SendPropertyChanging();
					this._IDStaffInternal = value;
					this.SendPropertyChanged("IDStaffInternal");
					this.OnIDStaffInternalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherStaff", DbType="NVarChar(MAX)")]
		public string OtherStaff
		{
			get
			{
				return this._OtherStaff;
			}
			set
			{
				if ((this._OtherStaff != value))
				{
					this.OnOtherStaffChanging(value);
					this.SendPropertyChanging();
					this._OtherStaff = value;
					this.SendPropertyChanged("OtherStaff");
					this.OnOtherStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					if (this._Triage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeCode", DbType="NVarChar(8)")]
		public string timeCode
		{
			get
			{
				return this._timeCode;
			}
			set
			{
				if ((this._timeCode != value))
				{
					this.OntimeCodeChanging(value);
					this.SendPropertyChanging();
					this._timeCode = value;
					this.SendPropertyChanged("timeCode");
					this.OntimeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStopHeart", DbType="NVarChar(10)")]
		public string DateStopHeart
		{
			get
			{
				return this._DateStopHeart;
			}
			set
			{
				if ((this._DateStopHeart != value))
				{
					this.OnDateStopHeartChanging(value);
					this.SendPropertyChanging();
					this._DateStopHeart = value;
					this.SendPropertyChanged("DateStopHeart");
					this.OnDateStopHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeStopHeart", DbType="NVarChar(8)")]
		public string timeStopHeart
		{
			get
			{
				return this._timeStopHeart;
			}
			set
			{
				if ((this._timeStopHeart != value))
				{
					this.OntimeStopHeartChanging(value);
					this.SendPropertyChanging();
					this._timeStopHeart = value;
					this.SendPropertyChanged("timeStopHeart");
					this.OntimeStopHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timePresenceCPR", DbType="NVarChar(8)")]
		public string timePresenceCPR
		{
			get
			{
				return this._timePresenceCPR;
			}
			set
			{
				if ((this._timePresenceCPR != value))
				{
					this.OntimePresenceCPRChanging(value);
					this.SendPropertyChanging();
					this._timePresenceCPR = value;
					this.SendPropertyChanged("timePresenceCPR");
					this.OntimePresenceCPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseStopHeart", DbType="NVarChar(100)")]
		public string CauseStopHeart
		{
			get
			{
				return this._CauseStopHeart;
			}
			set
			{
				if ((this._CauseStopHeart != value))
				{
					this.OnCauseStopHeartChanging(value);
					this.SendPropertyChanging();
					this._CauseStopHeart = value;
					this.SendPropertyChanged("CauseStopHeart");
					this.OnCauseStopHeartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDescription", DbType="NVarChar(100)")]
		public string ConditionDescription
		{
			get
			{
				return this._ConditionDescription;
			}
			set
			{
				if ((this._ConditionDescription != value))
				{
					this.OnConditionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ConditionDescription = value;
					this.SendPropertyChanged("ConditionDescription");
					this.OnConditionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeEnd", DbType="NVarChar(8)")]
		public string timeEnd
		{
			get
			{
				return this._timeEnd;
			}
			set
			{
				if ((this._timeEnd != value))
				{
					this.OntimeEndChanging(value);
					this.SendPropertyChanging();
					this._timeEnd = value;
					this.SendPropertyChanged("timeEnd");
					this.OntimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CprUnsuccessful", DbType="Bit")]
		public System.Nullable<bool> CprUnsuccessful
		{
			get
			{
				return this._CprUnsuccessful;
			}
			set
			{
				if ((this._CprUnsuccessful != value))
				{
					this.OnCprUnsuccessfulChanging(value);
					this.SendPropertyChanging();
					this._CprUnsuccessful = value;
					this.SendPropertyChanged("CprUnsuccessful");
					this.OnCprUnsuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_causeCprUnsuccessful", DbType="NVarChar(MAX)")]
		public string causeCprUnsuccessful
		{
			get
			{
				return this._causeCprUnsuccessful;
			}
			set
			{
				if ((this._causeCprUnsuccessful != value))
				{
					this.OncauseCprUnsuccessfulChanging(value);
					this.SendPropertyChanging();
					this._causeCprUnsuccessful = value;
					this.SendPropertyChanged("causeCprUnsuccessful");
					this.OncauseCprUnsuccessfulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageCPR", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageCPRs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR", Storage="_Staff", ThisKey="IDStaffpresent", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.TriageCPRs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs.Add(this);
						this._IDStaffpresent = value.ID;
					}
					else
					{
						this._IDStaffpresent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR1", Storage="_Staff1", ThisKey="IDStaffAnesthesia", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.TriageCPRs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs1.Add(this);
						this._IDStaffAnesthesia = value.ID;
					}
					else
					{
						this._IDStaffAnesthesia = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_TriageCPR2", Storage="_Staff2", ThisKey="IDStaffpresent", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.TriageCPRs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs2.Add(this);
						this._IDStaffpresent = value.ID;
					}
					else
					{
						this._IDStaffpresent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageCPR", Storage="_Triage", ThisKey="TriageID", OtherKey="ID", IsForeignKey=true)]
		public Triage Triage
		{
			get
			{
				return this._Triage.Entity;
			}
			set
			{
				Triage previousValue = this._Triage.Entity;
				if (((previousValue != value) 
							|| (this._Triage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Triage.Entity = null;
						previousValue.TriageCPRs.Remove(this);
					}
					this._Triage.Entity = value;
					if ((value != null))
					{
						value.TriageCPRs.Add(this);
						this._TriageID = value.ID;
					}
					else
					{
						this._TriageID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Triage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageCPRType")]
	public partial class TriageCPRType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private string _Title;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntitySet<TriageEmergencyCPR> _TriageEmergencyCPRs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageCPRType()
		{
			this._TriageEmergencyCPRs = new EntitySet<TriageEmergencyCPR>(new Action<TriageEmergencyCPR>(this.attach_TriageEmergencyCPRs), new Action<TriageEmergencyCPR>(this.detach_TriageEmergencyCPRs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TriageCPRType_TriageEmergencyCPR", Storage="_TriageEmergencyCPRs", ThisKey="ID", OtherKey="TyPeID")]
		public EntitySet<TriageEmergencyCPR> TriageEmergencyCPRs
		{
			get
			{
				return this._TriageEmergencyCPRs;
			}
			set
			{
				this._TriageEmergencyCPRs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.TriageCPRType = this;
		}
		
		private void detach_TriageEmergencyCPRs(TriageEmergencyCPR entity)
		{
			this.SendPropertyChanging();
			entity.TriageCPRType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageDossierEM")]
	public partial class TriageDossierEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private string _redcartDate;
		
		private string _redcarttime;
		
		private string _datebastrimovaghat;
		
		private string _timebastarimovaghat;
		
		private string _datebastrighati;
		
		private string _timebastarighati;
		
		private string _dateezam;
		
		private string _timeEzam;
		
		private string _dateOutpation;
		
		private string _timeOutpation;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private bool _Lackofvitalsigns;
		
		private string _Typeofpatient;
		
		private bool _Leavepersonalconsent;
		
		private string _Causetoleave;
		
		private string _Descrptionleave;
		
		private bool _AgeUnder12;
		
		private string _AdmitType;
		
		private string _Detach;
		
		private bool _Blood;
		
		private bool _OperaingRoom;
		
		private bool _Rejecttreatment;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OnredcartDateChanging(string value);
    partial void OnredcartDateChanged();
    partial void OnredcarttimeChanging(string value);
    partial void OnredcarttimeChanged();
    partial void OndatebastrimovaghatChanging(string value);
    partial void OndatebastrimovaghatChanged();
    partial void OntimebastarimovaghatChanging(string value);
    partial void OntimebastarimovaghatChanged();
    partial void OndatebastrighatiChanging(string value);
    partial void OndatebastrighatiChanged();
    partial void OntimebastarighatiChanging(string value);
    partial void OntimebastarighatiChanged();
    partial void OndateezamChanging(string value);
    partial void OndateezamChanged();
    partial void OntimeEzamChanging(string value);
    partial void OntimeEzamChanged();
    partial void OndateOutpationChanging(string value);
    partial void OndateOutpationChanged();
    partial void OntimeOutpationChanging(string value);
    partial void OntimeOutpationChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnLackofvitalsignsChanging(bool value);
    partial void OnLackofvitalsignsChanged();
    partial void OnTypeofpatientChanging(string value);
    partial void OnTypeofpatientChanged();
    partial void OnLeavepersonalconsentChanging(bool value);
    partial void OnLeavepersonalconsentChanged();
    partial void OnCausetoleaveChanging(string value);
    partial void OnCausetoleaveChanged();
    partial void OnDescrptionleaveChanging(string value);
    partial void OnDescrptionleaveChanged();
    partial void OnAgeUnder12Changing(bool value);
    partial void OnAgeUnder12Changed();
    partial void OnAdmitTypeChanging(string value);
    partial void OnAdmitTypeChanged();
    partial void OnDetachChanging(string value);
    partial void OnDetachChanged();
    partial void OnBloodChanging(bool value);
    partial void OnBloodChanged();
    partial void OnOperaingRoomChanging(bool value);
    partial void OnOperaingRoomChanged();
    partial void OnRejecttreatmentChanging(bool value);
    partial void OnRejecttreatmentChanged();
    #endregion
		
		public TriageDossierEM()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redcartDate", DbType="NVarChar(10)")]
		public string redcartDate
		{
			get
			{
				return this._redcartDate;
			}
			set
			{
				if ((this._redcartDate != value))
				{
					this.OnredcartDateChanging(value);
					this.SendPropertyChanging();
					this._redcartDate = value;
					this.SendPropertyChanged("redcartDate");
					this.OnredcartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redcarttime", DbType="NVarChar(8)")]
		public string redcarttime
		{
			get
			{
				return this._redcarttime;
			}
			set
			{
				if ((this._redcarttime != value))
				{
					this.OnredcarttimeChanging(value);
					this.SendPropertyChanging();
					this._redcarttime = value;
					this.SendPropertyChanged("redcarttime");
					this.OnredcarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebastrimovaghat", DbType="NVarChar(10)")]
		public string datebastrimovaghat
		{
			get
			{
				return this._datebastrimovaghat;
			}
			set
			{
				if ((this._datebastrimovaghat != value))
				{
					this.OndatebastrimovaghatChanging(value);
					this.SendPropertyChanging();
					this._datebastrimovaghat = value;
					this.SendPropertyChanged("datebastrimovaghat");
					this.OndatebastrimovaghatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timebastarimovaghat", DbType="NVarChar(8)")]
		public string timebastarimovaghat
		{
			get
			{
				return this._timebastarimovaghat;
			}
			set
			{
				if ((this._timebastarimovaghat != value))
				{
					this.OntimebastarimovaghatChanging(value);
					this.SendPropertyChanging();
					this._timebastarimovaghat = value;
					this.SendPropertyChanged("timebastarimovaghat");
					this.OntimebastarimovaghatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebastrighati", DbType="NVarChar(10)")]
		public string datebastrighati
		{
			get
			{
				return this._datebastrighati;
			}
			set
			{
				if ((this._datebastrighati != value))
				{
					this.OndatebastrighatiChanging(value);
					this.SendPropertyChanging();
					this._datebastrighati = value;
					this.SendPropertyChanged("datebastrighati");
					this.OndatebastrighatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timebastarighati", DbType="NVarChar(8)")]
		public string timebastarighati
		{
			get
			{
				return this._timebastarighati;
			}
			set
			{
				if ((this._timebastarighati != value))
				{
					this.OntimebastarighatiChanging(value);
					this.SendPropertyChanging();
					this._timebastarighati = value;
					this.SendPropertyChanged("timebastarighati");
					this.OntimebastarighatiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateezam", DbType="NVarChar(10)")]
		public string dateezam
		{
			get
			{
				return this._dateezam;
			}
			set
			{
				if ((this._dateezam != value))
				{
					this.OndateezamChanging(value);
					this.SendPropertyChanging();
					this._dateezam = value;
					this.SendPropertyChanged("dateezam");
					this.OndateezamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeEzam", DbType="NVarChar(8)")]
		public string timeEzam
		{
			get
			{
				return this._timeEzam;
			}
			set
			{
				if ((this._timeEzam != value))
				{
					this.OntimeEzamChanging(value);
					this.SendPropertyChanging();
					this._timeEzam = value;
					this.SendPropertyChanged("timeEzam");
					this.OntimeEzamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOutpation", DbType="NVarChar(10)")]
		public string dateOutpation
		{
			get
			{
				return this._dateOutpation;
			}
			set
			{
				if ((this._dateOutpation != value))
				{
					this.OndateOutpationChanging(value);
					this.SendPropertyChanging();
					this._dateOutpation = value;
					this.SendPropertyChanged("dateOutpation");
					this.OndateOutpationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeOutpation", DbType="NVarChar(8)")]
		public string timeOutpation
		{
			get
			{
				return this._timeOutpation;
			}
			set
			{
				if ((this._timeOutpation != value))
				{
					this.OntimeOutpationChanging(value);
					this.SendPropertyChanging();
					this._timeOutpation = value;
					this.SendPropertyChanged("timeOutpation");
					this.OntimeOutpationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lackofvitalsigns", DbType="Bit NOT NULL")]
		public bool Lackofvitalsigns
		{
			get
			{
				return this._Lackofvitalsigns;
			}
			set
			{
				if ((this._Lackofvitalsigns != value))
				{
					this.OnLackofvitalsignsChanging(value);
					this.SendPropertyChanging();
					this._Lackofvitalsigns = value;
					this.SendPropertyChanged("Lackofvitalsigns");
					this.OnLackofvitalsignsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typeofpatient", DbType="NVarChar(50)")]
		public string Typeofpatient
		{
			get
			{
				return this._Typeofpatient;
			}
			set
			{
				if ((this._Typeofpatient != value))
				{
					this.OnTypeofpatientChanging(value);
					this.SendPropertyChanging();
					this._Typeofpatient = value;
					this.SendPropertyChanged("Typeofpatient");
					this.OnTypeofpatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leavepersonalconsent", DbType="Bit NOT NULL")]
		public bool Leavepersonalconsent
		{
			get
			{
				return this._Leavepersonalconsent;
			}
			set
			{
				if ((this._Leavepersonalconsent != value))
				{
					this.OnLeavepersonalconsentChanging(value);
					this.SendPropertyChanging();
					this._Leavepersonalconsent = value;
					this.SendPropertyChanged("Leavepersonalconsent");
					this.OnLeavepersonalconsentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Causetoleave", DbType="NVarChar(50)")]
		public string Causetoleave
		{
			get
			{
				return this._Causetoleave;
			}
			set
			{
				if ((this._Causetoleave != value))
				{
					this.OnCausetoleaveChanging(value);
					this.SendPropertyChanging();
					this._Causetoleave = value;
					this.SendPropertyChanged("Causetoleave");
					this.OnCausetoleaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrptionleave", DbType="NVarChar(50)")]
		public string Descrptionleave
		{
			get
			{
				return this._Descrptionleave;
			}
			set
			{
				if ((this._Descrptionleave != value))
				{
					this.OnDescrptionleaveChanging(value);
					this.SendPropertyChanging();
					this._Descrptionleave = value;
					this.SendPropertyChanged("Descrptionleave");
					this.OnDescrptionleaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeUnder12", DbType="Bit NOT NULL")]
		public bool AgeUnder12
		{
			get
			{
				return this._AgeUnder12;
			}
			set
			{
				if ((this._AgeUnder12 != value))
				{
					this.OnAgeUnder12Changing(value);
					this.SendPropertyChanging();
					this._AgeUnder12 = value;
					this.SendPropertyChanged("AgeUnder12");
					this.OnAgeUnder12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitType", DbType="NVarChar(50)")]
		public string AdmitType
		{
			get
			{
				return this._AdmitType;
			}
			set
			{
				if ((this._AdmitType != value))
				{
					this.OnAdmitTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmitType = value;
					this.SendPropertyChanged("AdmitType");
					this.OnAdmitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detach", DbType="NVarChar(50)")]
		public string Detach
		{
			get
			{
				return this._Detach;
			}
			set
			{
				if ((this._Detach != value))
				{
					this.OnDetachChanging(value);
					this.SendPropertyChanging();
					this._Detach = value;
					this.SendPropertyChanged("Detach");
					this.OnDetachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blood", DbType="Bit NOT NULL")]
		public bool Blood
		{
			get
			{
				return this._Blood;
			}
			set
			{
				if ((this._Blood != value))
				{
					this.OnBloodChanging(value);
					this.SendPropertyChanging();
					this._Blood = value;
					this.SendPropertyChanged("Blood");
					this.OnBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaingRoom", DbType="Bit NOT NULL")]
		public bool OperaingRoom
		{
			get
			{
				return this._OperaingRoom;
			}
			set
			{
				if ((this._OperaingRoom != value))
				{
					this.OnOperaingRoomChanging(value);
					this.SendPropertyChanging();
					this._OperaingRoom = value;
					this.SendPropertyChanged("OperaingRoom");
					this.OnOperaingRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rejecttreatment", DbType="Bit NOT NULL")]
		public bool Rejecttreatment
		{
			get
			{
				return this._Rejecttreatment;
			}
			set
			{
				if ((this._Rejecttreatment != value))
				{
					this.OnRejecttreatmentChanging(value);
					this.SendPropertyChanging();
					this._Rejecttreatment = value;
					this.SendPropertyChanged("Rejecttreatment");
					this.OnRejecttreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_TriageDossierEM", Storage="_GivenServiceM", ThisKey="GivenMID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.TriageDossierEMs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.TriageDossierEMs.Add(this);
						this._GivenMID = value.ID;
					}
					else
					{
						this._GivenMID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageDossierEM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageDossierEMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageDossierEMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEmergencyCPR")]
	public partial class TriageEmergencyCPR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _TriageID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private System.Nullable<System.Guid> _TyPeID;
		
		private string _Date;
		
		private string _time;
		
		private System.Nullable<bool> _Succeeded;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private string _Typeofdisease;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Triage> _Triage;
		
		private EntityRef<TriageCPRType> _TriageCPRType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnTriageIDChanging(System.Nullable<System.Guid> value);
    partial void OnTriageIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnTyPeIDChanging(System.Nullable<System.Guid> value);
    partial void OnTyPeIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnSucceededChanging(System.Nullable<bool> value);
    partial void OnSucceededChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    partial void OnTypeofdiseaseChanging(string value);
    partial void OnTypeofdiseaseChanged();
    #endregion
		
		public TriageEmergencyCPR()
		{
			this._Person = default(EntityRef<Person>);
			this._Triage = default(EntityRef<Triage>);
			this._TriageCPRType = default(EntityRef<TriageCPRType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriageID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TriageID
		{
			get
			{
				return this._TriageID;
			}
			set
			{
				if ((this._TriageID != value))
				{
					if (this._Triage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTriageIDChanging(value);
					this.SendPropertyChanging();
					this._TriageID = value;
					this.SendPropertyChanged("TriageID");
					this.OnTriageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TyPeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TyPeID
		{
			get
			{
				return this._TyPeID;
			}
			set
			{
				if ((this._TyPeID != value))
				{
					if (this._TriageCPRType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTyPeIDChanging(value);
					this.SendPropertyChanging();
					this._TyPeID = value;
					this.SendPropertyChanged("TyPeID");
					this.OnTyPeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(8)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Succeeded", DbType="Bit")]
		public System.Nullable<bool> Succeeded
		{
			get
			{
				return this._Succeeded;
			}
			set
			{
				if ((this._Succeeded != value))
				{
					this.OnSucceededChanging(value);
					this.SendPropertyChanging();
					this._Succeeded = value;
					this.SendPropertyChanged("Succeeded");
					this.OnSucceededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typeofdisease", DbType="NVarChar(50)")]
		public string Typeofdisease
		{
			get
			{
				return this._Typeofdisease;
			}
			set
			{
				if ((this._Typeofdisease != value))
				{
					this.OnTypeofdiseaseChanging(value);
					this.SendPropertyChanging();
					this._Typeofdisease = value;
					this.SendPropertyChanged("Typeofdisease");
					this.OnTypeofdiseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEmergencyCPR", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Triage_TriageEmergencyCPR", Storage="_Triage", ThisKey="TriageID", OtherKey="ID", IsForeignKey=true)]
		public Triage Triage
		{
			get
			{
				return this._Triage.Entity;
			}
			set
			{
				Triage previousValue = this._Triage.Entity;
				if (((previousValue != value) 
							|| (this._Triage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Triage.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._Triage.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._TriageID = value.ID;
					}
					else
					{
						this._TriageID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Triage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TriageCPRType_TriageEmergencyCPR", Storage="_TriageCPRType", ThisKey="TyPeID", OtherKey="ID", IsForeignKey=true)]
		public TriageCPRType TriageCPRType
		{
			get
			{
				return this._TriageCPRType.Entity;
			}
			set
			{
				TriageCPRType previousValue = this._TriageCPRType.Entity;
				if (((previousValue != value) 
							|| (this._TriageCPRType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TriageCPRType.Entity = null;
						previousValue.TriageEmergencyCPRs.Remove(this);
					}
					this._TriageCPRType.Entity = value;
					if ((value != null))
					{
						value.TriageEmergencyCPRs.Add(this);
						this._TyPeID = value.ID;
					}
					else
					{
						this._TyPeID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TriageCPRType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEMGAccident")]
	public partial class TriageEMGAccident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _ACCDate;
		
		private string _ACCDriver;
		
		private string _ACCAber;
		
		private string _ACCSarneshin;
		
		private string _ACCcar;
		
		private string _ACCInjury;
		
		private string _ACCplace;
		
		private string _ACCsign;
		
		private string _Accapply;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnACCDateChanging(string value);
    partial void OnACCDateChanged();
    partial void OnACCDriverChanging(string value);
    partial void OnACCDriverChanged();
    partial void OnACCAberChanging(string value);
    partial void OnACCAberChanged();
    partial void OnACCSarneshinChanging(string value);
    partial void OnACCSarneshinChanged();
    partial void OnACCcarChanging(string value);
    partial void OnACCcarChanged();
    partial void OnACCInjuryChanging(string value);
    partial void OnACCInjuryChanged();
    partial void OnACCplaceChanging(string value);
    partial void OnACCplaceChanged();
    partial void OnACCsignChanging(string value);
    partial void OnACCsignChanged();
    partial void OnAccapplyChanging(string value);
    partial void OnAccapplyChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEMGAccident()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCDate", DbType="NVarChar(10)")]
		public string ACCDate
		{
			get
			{
				return this._ACCDate;
			}
			set
			{
				if ((this._ACCDate != value))
				{
					this.OnACCDateChanging(value);
					this.SendPropertyChanging();
					this._ACCDate = value;
					this.SendPropertyChanged("ACCDate");
					this.OnACCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCDriver", DbType="NVarChar(50)")]
		public string ACCDriver
		{
			get
			{
				return this._ACCDriver;
			}
			set
			{
				if ((this._ACCDriver != value))
				{
					this.OnACCDriverChanging(value);
					this.SendPropertyChanging();
					this._ACCDriver = value;
					this.SendPropertyChanged("ACCDriver");
					this.OnACCDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCAber", DbType="NVarChar(50)")]
		public string ACCAber
		{
			get
			{
				return this._ACCAber;
			}
			set
			{
				if ((this._ACCAber != value))
				{
					this.OnACCAberChanging(value);
					this.SendPropertyChanging();
					this._ACCAber = value;
					this.SendPropertyChanged("ACCAber");
					this.OnACCAberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCSarneshin", DbType="NVarChar(50)")]
		public string ACCSarneshin
		{
			get
			{
				return this._ACCSarneshin;
			}
			set
			{
				if ((this._ACCSarneshin != value))
				{
					this.OnACCSarneshinChanging(value);
					this.SendPropertyChanging();
					this._ACCSarneshin = value;
					this.SendPropertyChanged("ACCSarneshin");
					this.OnACCSarneshinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCcar", DbType="NVarChar(50)")]
		public string ACCcar
		{
			get
			{
				return this._ACCcar;
			}
			set
			{
				if ((this._ACCcar != value))
				{
					this.OnACCcarChanging(value);
					this.SendPropertyChanging();
					this._ACCcar = value;
					this.SendPropertyChanged("ACCcar");
					this.OnACCcarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCInjury", DbType="NVarChar(50)")]
		public string ACCInjury
		{
			get
			{
				return this._ACCInjury;
			}
			set
			{
				if ((this._ACCInjury != value))
				{
					this.OnACCInjuryChanging(value);
					this.SendPropertyChanging();
					this._ACCInjury = value;
					this.SendPropertyChanged("ACCInjury");
					this.OnACCInjuryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCplace", DbType="NVarChar(50)")]
		public string ACCplace
		{
			get
			{
				return this._ACCplace;
			}
			set
			{
				if ((this._ACCplace != value))
				{
					this.OnACCplaceChanging(value);
					this.SendPropertyChanging();
					this._ACCplace = value;
					this.SendPropertyChanged("ACCplace");
					this.OnACCplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCsign", DbType="NVarChar(MAX)")]
		public string ACCsign
		{
			get
			{
				return this._ACCsign;
			}
			set
			{
				if ((this._ACCsign != value))
				{
					this.OnACCsignChanging(value);
					this.SendPropertyChanging();
					this._ACCsign = value;
					this.SendPropertyChanged("ACCsign");
					this.OnACCsignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accapply", DbType="NVarChar(MAX)")]
		public string Accapply
		{
			get
			{
				return this._Accapply;
			}
			set
			{
				if ((this._Accapply != value))
				{
					this.OnAccapplyChanging(value);
					this.SendPropertyChanging();
					this._Accapply = value;
					this.SendPropertyChanged("Accapply");
					this.OnAccapplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGAccident", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEMGAccidents.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEMGAccidents.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEMGincident")]
	public partial class TriageEMGincident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _AccureDate;
		
		private string _AccuerCity;
		
		private string _AccuerKind;
		
		private string _AccuerPlace;
		
		private string _AccuerReg;
		
		private string _AccuerResult;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnAccureDateChanging(string value);
    partial void OnAccureDateChanged();
    partial void OnAccuerCityChanging(string value);
    partial void OnAccuerCityChanged();
    partial void OnAccuerKindChanging(string value);
    partial void OnAccuerKindChanged();
    partial void OnAccuerPlaceChanging(string value);
    partial void OnAccuerPlaceChanged();
    partial void OnAccuerRegChanging(string value);
    partial void OnAccuerRegChanged();
    partial void OnAccuerResultChanging(string value);
    partial void OnAccuerResultChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEMGincident()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccureDate", DbType="NVarChar(10)")]
		public string AccureDate
		{
			get
			{
				return this._AccureDate;
			}
			set
			{
				if ((this._AccureDate != value))
				{
					this.OnAccureDateChanging(value);
					this.SendPropertyChanging();
					this._AccureDate = value;
					this.SendPropertyChanged("AccureDate");
					this.OnAccureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerCity", DbType="NVarChar(50)")]
		public string AccuerCity
		{
			get
			{
				return this._AccuerCity;
			}
			set
			{
				if ((this._AccuerCity != value))
				{
					this.OnAccuerCityChanging(value);
					this.SendPropertyChanging();
					this._AccuerCity = value;
					this.SendPropertyChanged("AccuerCity");
					this.OnAccuerCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerKind", DbType="NVarChar(50)")]
		public string AccuerKind
		{
			get
			{
				return this._AccuerKind;
			}
			set
			{
				if ((this._AccuerKind != value))
				{
					this.OnAccuerKindChanging(value);
					this.SendPropertyChanging();
					this._AccuerKind = value;
					this.SendPropertyChanged("AccuerKind");
					this.OnAccuerKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerPlace", DbType="NVarChar(50)")]
		public string AccuerPlace
		{
			get
			{
				return this._AccuerPlace;
			}
			set
			{
				if ((this._AccuerPlace != value))
				{
					this.OnAccuerPlaceChanging(value);
					this.SendPropertyChanging();
					this._AccuerPlace = value;
					this.SendPropertyChanged("AccuerPlace");
					this.OnAccuerPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerReg", DbType="NVarChar(50)")]
		public string AccuerReg
		{
			get
			{
				return this._AccuerReg;
			}
			set
			{
				if ((this._AccuerReg != value))
				{
					this.OnAccuerRegChanging(value);
					this.SendPropertyChanging();
					this._AccuerReg = value;
					this.SendPropertyChanged("AccuerReg");
					this.OnAccuerRegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccuerResult", DbType="NVarChar(50)")]
		public string AccuerResult
		{
			get
			{
				return this._AccuerResult;
			}
			set
			{
				if ((this._AccuerResult != value))
				{
					this.OnAccuerResultChanging(value);
					this.SendPropertyChanging();
					this._AccuerResult = value;
					this.SendPropertyChanged("AccuerResult");
					this.OnAccuerResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGincident", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEMGincidents.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEMGincidents.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriageEMGkhodkoshi")]
	public partial class TriageEMGkhodkoshi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _GivenMID;
		
		private System.Nullable<System.Guid> _IDPerson;
		
		private string _Date;
		
		private string _Time;
		
		private string _Reason;
		
		private string _Vasile;
		
		private string _ResultID;
		
		private string _RavaniBackgrand;
		
		private string _JesmiBackgrand;
		
		private string _EghdamBackgrand;
		
		private string _Takmilkonande;
		
		private string _Taeedkonande;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private string _UserFullname;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnGivenMIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenMIDChanged();
    partial void OnIDPersonChanging(System.Nullable<System.Guid> value);
    partial void OnIDPersonChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnVasileChanging(string value);
    partial void OnVasileChanged();
    partial void OnResultIDChanging(string value);
    partial void OnResultIDChanged();
    partial void OnRavaniBackgrandChanging(string value);
    partial void OnRavaniBackgrandChanged();
    partial void OnJesmiBackgrandChanging(string value);
    partial void OnJesmiBackgrandChanged();
    partial void OnEghdamBackgrandChanging(string value);
    partial void OnEghdamBackgrandChanged();
    partial void OnTakmilkonandeChanging(string value);
    partial void OnTakmilkonandeChanged();
    partial void OnTaeedkonandeChanging(string value);
    partial void OnTaeedkonandeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnUserFullnameChanging(string value);
    partial void OnUserFullnameChanged();
    #endregion
		
		public TriageEMGkhodkoshi()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenMID
		{
			get
			{
				return this._GivenMID;
			}
			set
			{
				if ((this._GivenMID != value))
				{
					this.OnGivenMIDChanging(value);
					this.SendPropertyChanging();
					this._GivenMID = value;
					this.SendPropertyChanged("GivenMID");
					this.OnGivenMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPerson", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDPerson
		{
			get
			{
				return this._IDPerson;
			}
			set
			{
				if ((this._IDPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonChanging(value);
					this.SendPropertyChanging();
					this._IDPerson = value;
					this.SendPropertyChanged("IDPerson");
					this.OnIDPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(50)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vasile", DbType="NVarChar(50)")]
		public string Vasile
		{
			get
			{
				return this._Vasile;
			}
			set
			{
				if ((this._Vasile != value))
				{
					this.OnVasileChanging(value);
					this.SendPropertyChanging();
					this._Vasile = value;
					this.SendPropertyChanged("Vasile");
					this.OnVasileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", DbType="NVarChar(50)")]
		public string ResultID
		{
			get
			{
				return this._ResultID;
			}
			set
			{
				if ((this._ResultID != value))
				{
					this.OnResultIDChanging(value);
					this.SendPropertyChanging();
					this._ResultID = value;
					this.SendPropertyChanged("ResultID");
					this.OnResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RavaniBackgrand", DbType="NVarChar(MAX)")]
		public string RavaniBackgrand
		{
			get
			{
				return this._RavaniBackgrand;
			}
			set
			{
				if ((this._RavaniBackgrand != value))
				{
					this.OnRavaniBackgrandChanging(value);
					this.SendPropertyChanging();
					this._RavaniBackgrand = value;
					this.SendPropertyChanged("RavaniBackgrand");
					this.OnRavaniBackgrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JesmiBackgrand", DbType="NVarChar(MAX)")]
		public string JesmiBackgrand
		{
			get
			{
				return this._JesmiBackgrand;
			}
			set
			{
				if ((this._JesmiBackgrand != value))
				{
					this.OnJesmiBackgrandChanging(value);
					this.SendPropertyChanging();
					this._JesmiBackgrand = value;
					this.SendPropertyChanged("JesmiBackgrand");
					this.OnJesmiBackgrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EghdamBackgrand", DbType="NVarChar(MAX)")]
		public string EghdamBackgrand
		{
			get
			{
				return this._EghdamBackgrand;
			}
			set
			{
				if ((this._EghdamBackgrand != value))
				{
					this.OnEghdamBackgrandChanging(value);
					this.SendPropertyChanging();
					this._EghdamBackgrand = value;
					this.SendPropertyChanged("EghdamBackgrand");
					this.OnEghdamBackgrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Takmilkonande", DbType="NVarChar(MAX)")]
		public string Takmilkonande
		{
			get
			{
				return this._Takmilkonande;
			}
			set
			{
				if ((this._Takmilkonande != value))
				{
					this.OnTakmilkonandeChanging(value);
					this.SendPropertyChanging();
					this._Takmilkonande = value;
					this.SendPropertyChanged("Takmilkonande");
					this.OnTakmilkonandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taeedkonande", DbType="NVarChar(MAX)")]
		public string Taeedkonande
		{
			get
			{
				return this._Taeedkonande;
			}
			set
			{
				if ((this._Taeedkonande != value))
				{
					this.OnTaeedkonandeChanging(value);
					this.SendPropertyChanging();
					this._Taeedkonande = value;
					this.SendPropertyChanged("Taeedkonande");
					this.OnTaeedkonandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullname", DbType="NVarChar(50)")]
		public string UserFullname
		{
			get
			{
				return this._UserFullname;
			}
			set
			{
				if ((this._UserFullname != value))
				{
					this.OnUserFullnameChanging(value);
					this.SendPropertyChanging();
					this._UserFullname = value;
					this.SendPropertyChanged("UserFullname");
					this.OnUserFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TriageEMGkhodkoshi", Storage="_Person", ThisKey="IDPerson", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TriageEMGkhodkoshis.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TriageEMGkhodkoshis.Add(this);
						this._IDPerson = value.ID;
					}
					else
					{
						this._IDPerson = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TriagePartialData")]
	public partial class TriagePartialData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TriagePartialDataID;
		
		private string _Title;
		
		private System.Nullable<int> _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTriagePartialDataIDChanging(int value);
    partial void OnTriagePartialDataIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public TriagePartialData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriagePartialDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TriagePartialDataID
		{
			get
			{
				return this._TriagePartialDataID;
			}
			set
			{
				if ((this._TriagePartialDataID != value))
				{
					this.OnTriagePartialDataIDChanging(value);
					this.SendPropertyChanging();
					this._TriagePartialDataID = value;
					this.SendPropertyChanged("TriagePartialDataID");
					this.OnTriagePartialDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TtblPerson")]
	public partial class TtblPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonID;
		
		private string _Name;
		
		private string _LName;
		
		private string _Des;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnDesChanging(string value);
    partial void OnDesChanged();
    #endregion
		
		public TtblPerson()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Des", DbType="NVarChar(50)")]
		public string Des
		{
			get
			{
				return this._Des;
			}
			set
			{
				if ((this._Des != value))
				{
					this.OnDesChanging(value);
					this.SendPropertyChanging();
					this._Des = value;
					this.SendPropertyChanged("Des");
					this.OnDesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TtblTelePlace")]
	public partial class TtblTelePlace
	{
		
		private int _TelPlaceID;
		
		private string _Tele;
		
		private string _DateGive;
		
		private string _DateTake;
		
		private string _Place;
		
		private string _Person;
		
		private System.Nullable<bool> _Active;
		
		private string _Des;
		
		private string _Kind;
		
		private string _Type;
		
		private string _UserCreation;
		
		private string _UserDate;
		
		private string _GroupID;
		
		public TtblTelePlace()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelPlaceID", DbType="Int NOT NULL")]
		public int TelPlaceID
		{
			get
			{
				return this._TelPlaceID;
			}
			set
			{
				if ((this._TelPlaceID != value))
				{
					this._TelPlaceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tele", DbType="NChar(10)")]
		public string Tele
		{
			get
			{
				return this._Tele;
			}
			set
			{
				if ((this._Tele != value))
				{
					this._Tele = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateGive", DbType="NChar(10)")]
		public string DateGive
		{
			get
			{
				return this._DateGive;
			}
			set
			{
				if ((this._DateGive != value))
				{
					this._DateGive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTake", DbType="NChar(10)")]
		public string DateTake
		{
			get
			{
				return this._DateTake;
			}
			set
			{
				if ((this._DateTake != value))
				{
					this._DateTake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(50)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this._Place = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="NVarChar(50)")]
		public string Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this._Person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Des", DbType="NVarChar(50)")]
		public string Des
		{
			get
			{
				return this._Des;
			}
			set
			{
				if ((this._Des != value))
				{
					this._Des = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="NVarChar(50)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this._Kind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreation", DbType="NVarChar(50)")]
		public string UserCreation
		{
			get
			{
				return this._UserCreation;
			}
			set
			{
				if ((this._UserCreation != value))
				{
					this._UserCreation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDate", DbType="NChar(10)")]
		public string UserDate
		{
			get
			{
				return this._UserDate;
			}
			set
			{
				if ((this._UserDate != value))
				{
					this._UserDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="NVarChar(50)")]
		public string GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeOfICDCode")]
	public partial class TypeOfICDCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private System.Nullable<int> _OrderID;
		
		private EntitySet<ICD10> _ICD10s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    #endregion
		
		public TypeOfICDCode()
		{
			this._ICD10s = new EntitySet<ICD10>(new Action<ICD10>(this.attach_ICD10s), new Action<ICD10>(this.detach_ICD10s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeOfICDCode_ICD10", Storage="_ICD10s", ThisKey="ID", OtherKey="ReportCodeType")]
		public EntitySet<ICD10> ICD10s
		{
			get
			{
				return this._ICD10s;
			}
			set
			{
				this._ICD10s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ICD10s(ICD10 entity)
		{
			this.SendPropertyChanging();
			entity.TypeOfICDCode = this;
		}
		
		private void detach_ICD10s(ICD10 entity)
		{
			this.SendPropertyChanging();
			entity.TypeOfICDCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewMainTmp")]
	public partial class ViewMainTmp
	{
		
		private string _CatName;
		
		private string _CompanyType;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _MainDate;
		
		private string _MainDep;
		
		private string _FunctorName;
		
		private string _Patient;
		
		private string _ServiceName;
		
		private string _MainDepParent;
		
		private string _IOType;
		
		private string _Insurance;
		
		public ViewMainTmp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(100)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this._CompanyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDate", DbType="NVarChar(10)")]
		public string MainDate
		{
			get
			{
				return this._MainDate;
			}
			set
			{
				if ((this._MainDate != value))
				{
					this._MainDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDep", DbType="NVarChar(100)")]
		public string MainDep
		{
			get
			{
				return this._MainDep;
			}
			set
			{
				if ((this._MainDep != value))
				{
					this._MainDep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorName", DbType="NVarChar(100)")]
		public string FunctorName
		{
			get
			{
				return this._FunctorName;
			}
			set
			{
				if ((this._FunctorName != value))
				{
					this._FunctorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient", DbType="NVarChar(100)")]
		public string Patient
		{
			get
			{
				return this._Patient;
			}
			set
			{
				if ((this._Patient != value))
				{
					this._Patient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(300)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDepParent", DbType="NVarChar(100)")]
		public string MainDepParent
		{
			get
			{
				return this._MainDepParent;
			}
			set
			{
				if ((this._MainDepParent != value))
				{
					this._MainDepParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOType", DbType="NVarChar(50)")]
		public string IOType
		{
			get
			{
				return this._IOType;
			}
			set
			{
				if ((this._IOType != value))
				{
					this._IOType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="NVarChar(100)")]
		public string Insurance
		{
			get
			{
				return this._Insurance;
			}
			set
			{
				if ((this._Insurance != value))
				{
					this._Insurance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViewMainTmpSmall")]
	public partial class ViewMainTmpSmall
	{
		
		private string _CatName;
		
		private string _CompanyType;
		
		private System.Nullable<decimal> _PayMent;
		
		private string _Month;
		
		private string _Year;
		
		private string _MainDep;
		
		private string _MainDepParent;
		
		private string _IOType;
		
		private string _Insurance;
		
		public ViewMainTmpSmall()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatName", DbType="NVarChar(100)")]
		public string CatName
		{
			get
			{
				return this._CatName;
			}
			set
			{
				if ((this._CatName != value))
				{
					this._CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(100)")]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this._CompanyType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayMent", DbType="Money")]
		public System.Nullable<decimal> PayMent
		{
			get
			{
				return this._PayMent;
			}
			set
			{
				if ((this._PayMent != value))
				{
					this._PayMent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(10)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(10)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDep", DbType="NVarChar(100)")]
		public string MainDep
		{
			get
			{
				return this._MainDep;
			}
			set
			{
				if ((this._MainDep != value))
				{
					this._MainDep = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDepParent", DbType="NVarChar(100)")]
		public string MainDepParent
		{
			get
			{
				return this._MainDepParent;
			}
			set
			{
				if ((this._MainDepParent != value))
				{
					this._MainDepParent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOType", DbType="NVarChar(50)")]
		public string IOType
		{
			get
			{
				return this._IOType;
			}
			set
			{
				if ((this._IOType != value))
				{
					this._IOType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance", DbType="NVarChar(100)")]
		public string Insurance
		{
			get
			{
				return this._Insurance;
			}
			set
			{
				if ((this._Insurance != value))
				{
					this._Insurance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Comment;
		
		private string _ChiefComplaint;
		
		private string _Ago;
		
		private System.Nullable<short> _Since;
		
		private string _AccompanyingDocument;
		
		private System.Nullable<bool> _RO;
		
		private System.Nullable<int> _IMP;
		
		private System.Nullable<int> _DDx1;
		
		private System.Nullable<int> _DDx2;
		
		private string _Organ;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
		private EntityRef<ICD10> _ICD10;
		
		private EntityRef<ICD10> _ICD101;
		
		private EntityRef<ICD10> _ICD102;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnChiefComplaintChanging(string value);
    partial void OnChiefComplaintChanged();
    partial void OnAgoChanging(string value);
    partial void OnAgoChanged();
    partial void OnSinceChanging(System.Nullable<short> value);
    partial void OnSinceChanged();
    partial void OnAccompanyingDocumentChanging(string value);
    partial void OnAccompanyingDocumentChanged();
    partial void OnROChanging(System.Nullable<bool> value);
    partial void OnROChanged();
    partial void OnIMPChanging(System.Nullable<int> value);
    partial void OnIMPChanged();
    partial void OnDDx1Changing(System.Nullable<int> value);
    partial void OnDDx1Changed();
    partial void OnDDx2Changing(System.Nullable<int> value);
    partial void OnDDx2Changed();
    partial void OnOrganChanging(string value);
    partial void OnOrganChanged();
    #endregion
		
		public Visit()
		{
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			this._ICD10 = default(EntityRef<ICD10>);
			this._ICD101 = default(EntityRef<ICD10>);
			this._ICD102 = default(EntityRef<ICD10>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefComplaint", DbType="NVarChar(100)")]
		public string ChiefComplaint
		{
			get
			{
				return this._ChiefComplaint;
			}
			set
			{
				if ((this._ChiefComplaint != value))
				{
					this.OnChiefComplaintChanging(value);
					this.SendPropertyChanging();
					this._ChiefComplaint = value;
					this.SendPropertyChanged("ChiefComplaint");
					this.OnChiefComplaintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NVarChar(10)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this.OnAgoChanging(value);
					this.SendPropertyChanging();
					this._Ago = value;
					this.SendPropertyChanged("Ago");
					this.OnAgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="SmallInt")]
		public System.Nullable<short> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this.OnSinceChanging(value);
					this.SendPropertyChanging();
					this._Since = value;
					this.SendPropertyChanged("Since");
					this.OnSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccompanyingDocument", DbType="NVarChar(MAX)")]
		public string AccompanyingDocument
		{
			get
			{
				return this._AccompanyingDocument;
			}
			set
			{
				if ((this._AccompanyingDocument != value))
				{
					this.OnAccompanyingDocumentChanging(value);
					this.SendPropertyChanging();
					this._AccompanyingDocument = value;
					this.SendPropertyChanged("AccompanyingDocument");
					this.OnAccompanyingDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RO", DbType="Bit")]
		public System.Nullable<bool> RO
		{
			get
			{
				return this._RO;
			}
			set
			{
				if ((this._RO != value))
				{
					this.OnROChanging(value);
					this.SendPropertyChanging();
					this._RO = value;
					this.SendPropertyChanged("RO");
					this.OnROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMP", DbType="Int")]
		public System.Nullable<int> IMP
		{
			get
			{
				return this._IMP;
			}
			set
			{
				if ((this._IMP != value))
				{
					if (this._ICD10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIMPChanging(value);
					this.SendPropertyChanging();
					this._IMP = value;
					this.SendPropertyChanged("IMP");
					this.OnIMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx1", DbType="Int")]
		public System.Nullable<int> DDx1
		{
			get
			{
				return this._DDx1;
			}
			set
			{
				if ((this._DDx1 != value))
				{
					if (this._ICD101.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx1Changing(value);
					this.SendPropertyChanging();
					this._DDx1 = value;
					this.SendPropertyChanged("DDx1");
					this.OnDDx1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx2", DbType="Int")]
		public System.Nullable<int> DDx2
		{
			get
			{
				return this._DDx2;
			}
			set
			{
				if ((this._DDx2 != value))
				{
					if (this._ICD102.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx2Changing(value);
					this.SendPropertyChanging();
					this._DDx2 = value;
					this.SendPropertyChanged("DDx2");
					this.OnDDx2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organ", DbType="NVarChar(100)")]
		public string Organ
		{
			get
			{
				return this._Organ;
			}
			set
			{
				if ((this._Organ != value))
				{
					this.OnOrganChanging(value);
					this.SendPropertyChanging();
					this._Organ = value;
					this.SendPropertyChanged("Organ");
					this.OnOrganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Visit", Storage="_GivenServiceM", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Visit = null;
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Visit = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit", Storage="_ICD10", ThisKey="IMP", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD10
		{
			get
			{
				return this._ICD10.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD10.Entity;
				if (((previousValue != value) 
							|| (this._ICD10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD10.Entity = null;
						previousValue.Visits.Remove(this);
					}
					this._ICD10.Entity = value;
					if ((value != null))
					{
						value.Visits.Add(this);
						this._IMP = value.ID;
					}
					else
					{
						this._IMP = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit1", Storage="_ICD101", ThisKey="DDx1", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD101
		{
			get
			{
				return this._ICD101.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD101.Entity;
				if (((previousValue != value) 
							|| (this._ICD101.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD101.Entity = null;
						previousValue.Visits1.Remove(this);
					}
					this._ICD101.Entity = value;
					if ((value != null))
					{
						value.Visits1.Add(this);
						this._DDx1 = value.ID;
					}
					else
					{
						this._DDx1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD101");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_Visit2", Storage="_ICD102", ThisKey="DDx2", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD102
		{
			get
			{
				return this._ICD102.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD102.Entity;
				if (((previousValue != value) 
							|| (this._ICD102.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD102.Entity = null;
						previousValue.Visits2.Remove(this);
					}
					this._ICD102.Entity = value;
					if ((value != null))
					{
						value.Visits2.Add(this);
						this._DDx2 = value.ID;
					}
					else
					{
						this._DDx2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD102");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitHistory")]
	public partial class VisitHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _PersonID;
		
		private string _Date;
		
		private string _Doctor;
		
		private string _CC;
		
		private System.Nullable<short> _Since;
		
		private string _Ago;
		
		private string _Comment;
		
		private System.Nullable<int> _IMP;
		
		private System.Nullable<int> _DDx1;
		
		private System.Nullable<int> _DDx2;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _CreatorUserID;
		
		private EntityRef<ICD10> _ICD10;
		
		private EntityRef<ICD10> _ICD101;
		
		private EntityRef<ICD10> _ICD102;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Guid value);
    partial void OnPersonIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnDoctorChanging(string value);
    partial void OnDoctorChanged();
    partial void OnCCChanging(string value);
    partial void OnCCChanged();
    partial void OnSinceChanging(System.Nullable<short> value);
    partial void OnSinceChanged();
    partial void OnAgoChanging(string value);
    partial void OnAgoChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnIMPChanging(System.Nullable<int> value);
    partial void OnIMPChanged();
    partial void OnDDx1Changing(System.Nullable<int> value);
    partial void OnDDx1Changed();
    partial void OnDDx2Changing(System.Nullable<int> value);
    partial void OnDDx2Changed();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    #endregion
		
		public VisitHistory()
		{
			this._ICD10 = default(EntityRef<ICD10>);
			this._ICD101 = default(EntityRef<ICD10>);
			this._ICD102 = default(EntityRef<ICD10>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				if ((this._Doctor != value))
				{
					this.OnDoctorChanging(value);
					this.SendPropertyChanging();
					this._Doctor = value;
					this.SendPropertyChanged("Doctor");
					this.OnDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC", DbType="NVarChar(100)")]
		public string CC
		{
			get
			{
				return this._CC;
			}
			set
			{
				if ((this._CC != value))
				{
					this.OnCCChanging(value);
					this.SendPropertyChanging();
					this._CC = value;
					this.SendPropertyChanged("CC");
					this.OnCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="SmallInt")]
		public System.Nullable<short> Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this.OnSinceChanging(value);
					this.SendPropertyChanging();
					this._Since = value;
					this.SendPropertyChanged("Since");
					this.OnSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ago", DbType="NChar(10)")]
		public string Ago
		{
			get
			{
				return this._Ago;
			}
			set
			{
				if ((this._Ago != value))
				{
					this.OnAgoChanging(value);
					this.SendPropertyChanging();
					this._Ago = value;
					this.SendPropertyChanged("Ago");
					this.OnAgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(300)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMP", DbType="Int")]
		public System.Nullable<int> IMP
		{
			get
			{
				return this._IMP;
			}
			set
			{
				if ((this._IMP != value))
				{
					if (this._ICD10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIMPChanging(value);
					this.SendPropertyChanging();
					this._IMP = value;
					this.SendPropertyChanged("IMP");
					this.OnIMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx1", DbType="Int")]
		public System.Nullable<int> DDx1
		{
			get
			{
				return this._DDx1;
			}
			set
			{
				if ((this._DDx1 != value))
				{
					if (this._ICD101.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx1Changing(value);
					this.SendPropertyChanging();
					this._DDx1 = value;
					this.SendPropertyChanged("DDx1");
					this.OnDDx1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDx2", DbType="Int")]
		public System.Nullable<int> DDx2
		{
			get
			{
				return this._DDx2;
			}
			set
			{
				if ((this._DDx2 != value))
				{
					if (this._ICD102.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDx2Changing(value);
					this.SendPropertyChanging();
					this._DDx2 = value;
					this.SendPropertyChanged("DDx2");
					this.OnDDx2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_VisitHistory", Storage="_ICD10", ThisKey="IMP", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD10
		{
			get
			{
				return this._ICD10.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD10.Entity;
				if (((previousValue != value) 
							|| (this._ICD10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD10.Entity = null;
						previousValue.VisitHistories.Remove(this);
					}
					this._ICD10.Entity = value;
					if ((value != null))
					{
						value.VisitHistories.Add(this);
						this._IMP = value.ID;
					}
					else
					{
						this._IMP = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_VisitHistory1", Storage="_ICD101", ThisKey="DDx1", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD101
		{
			get
			{
				return this._ICD101.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD101.Entity;
				if (((previousValue != value) 
							|| (this._ICD101.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD101.Entity = null;
						previousValue.VisitHistories1.Remove(this);
					}
					this._ICD101.Entity = value;
					if ((value != null))
					{
						value.VisitHistories1.Add(this);
						this._DDx1 = value.ID;
					}
					else
					{
						this._DDx1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD101");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICD10_VisitHistory2", Storage="_ICD102", ThisKey="DDx2", OtherKey="ID", IsForeignKey=true)]
		public ICD10 ICD102
		{
			get
			{
				return this._ICD102.Entity;
			}
			set
			{
				ICD10 previousValue = this._ICD102.Entity;
				if (((previousValue != value) 
							|| (this._ICD102.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICD102.Entity = null;
						previousValue.VisitHistories2.Remove(this);
					}
					this._ICD102.Entity = value;
					if ((value != null))
					{
						value.VisitHistories2.Add(this);
						this._DDx2 = value.ID;
					}
					else
					{
						this._DDx2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICD102");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_VisitHistory", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.VisitHistories.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.VisitHistories.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PeriodicCalenderID;
		
		private System.Guid _StaffID;
		
		private int _ShiftID;
		
		private string _Date;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _GivenCapacity;
		
		private System.Nullable<int> _InaccessibleCapacity;
		
		private System.Nullable<int> _GivenInaccessible;
		
		private System.Nullable<int> _GivenDispatch;
		
		private System.Nullable<int> _DispatchCapacity;
		
		private string _BeginTime;
		
		private string _EndTime;
		
		private string _Comment;
		
		private System.Guid _DepartmentID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<PeriodicCalender> _PeriodicCalender;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPeriodicCalenderIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalenderIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnGivenCapacityChanging(System.Nullable<int> value);
    partial void OnGivenCapacityChanged();
    partial void OnInaccessibleCapacityChanging(System.Nullable<int> value);
    partial void OnInaccessibleCapacityChanged();
    partial void OnGivenInaccessibleChanging(System.Nullable<int> value);
    partial void OnGivenInaccessibleChanged();
    partial void OnGivenDispatchChanging(System.Nullable<int> value);
    partial void OnGivenDispatchChanged();
    partial void OnDispatchCapacityChanging(System.Nullable<int> value);
    partial void OnDispatchCapacityChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public Agenda()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Definition = default(EntityRef<Definition>);
			this._Department = default(EntityRef<Department>);
			this._PeriodicCalender = default(EntityRef<PeriodicCalender>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalenderID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalenderID
		{
			get
			{
				return this._PeriodicCalenderID;
			}
			set
			{
				if ((this._PeriodicCalenderID != value))
				{
					if (this._PeriodicCalender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodicCalenderIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalenderID = value;
					this.SendPropertyChanged("PeriodicCalenderID");
					this.OnPeriodicCalenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenCapacity", DbType="Int")]
		public System.Nullable<int> GivenCapacity
		{
			get
			{
				return this._GivenCapacity;
			}
			set
			{
				if ((this._GivenCapacity != value))
				{
					this.OnGivenCapacityChanging(value);
					this.SendPropertyChanging();
					this._GivenCapacity = value;
					this.SendPropertyChanged("GivenCapacity");
					this.OnGivenCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InaccessibleCapacity", DbType="Int")]
		public System.Nullable<int> InaccessibleCapacity
		{
			get
			{
				return this._InaccessibleCapacity;
			}
			set
			{
				if ((this._InaccessibleCapacity != value))
				{
					this.OnInaccessibleCapacityChanging(value);
					this.SendPropertyChanging();
					this._InaccessibleCapacity = value;
					this.SendPropertyChanged("InaccessibleCapacity");
					this.OnInaccessibleCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenInaccessible", DbType="Int")]
		public System.Nullable<int> GivenInaccessible
		{
			get
			{
				return this._GivenInaccessible;
			}
			set
			{
				if ((this._GivenInaccessible != value))
				{
					this.OnGivenInaccessibleChanging(value);
					this.SendPropertyChanging();
					this._GivenInaccessible = value;
					this.SendPropertyChanged("GivenInaccessible");
					this.OnGivenInaccessibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenDispatch", DbType="Int")]
		public System.Nullable<int> GivenDispatch
		{
			get
			{
				return this._GivenDispatch;
			}
			set
			{
				if ((this._GivenDispatch != value))
				{
					this.OnGivenDispatchChanging(value);
					this.SendPropertyChanging();
					this._GivenDispatch = value;
					this.SendPropertyChanged("GivenDispatch");
					this.OnGivenDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchCapacity", DbType="Int")]
		public System.Nullable<int> DispatchCapacity
		{
			get
			{
				return this._DispatchCapacity;
			}
			set
			{
				if ((this._DispatchCapacity != value))
				{
					this.OnDispatchCapacityChanging(value);
					this.SendPropertyChanging();
					this._DispatchCapacity = value;
					this.SendPropertyChanged("DispatchCapacity");
					this.OnDispatchCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="NChar(5)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="AgendaID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Agenda", Storage="_Definition", ThisKey="ShiftID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ShiftID = value.ID;
					}
					else
					{
						this._ShiftID = default(int);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodicCalender_Agenda", Storage="_PeriodicCalender", ThisKey="PeriodicCalenderID", OtherKey="ID", IsForeignKey=true)]
		public PeriodicCalender PeriodicCalender
		{
			get
			{
				return this._PeriodicCalender.Entity;
			}
			set
			{
				PeriodicCalender previousValue = this._PeriodicCalender.Entity;
				if (((previousValue != value) 
							|| (this._PeriodicCalender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodicCalender.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._PeriodicCalender.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._PeriodicCalenderID = value.ID;
					}
					else
					{
						this._PeriodicCalenderID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("PeriodicCalender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = null;
		}
	}
}
#pragma warning restore 1591
