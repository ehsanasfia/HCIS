#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HcisDispatchConfirm.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCIS")]
	public partial class HCISDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertSpeciality(Speciality instance);
    partial void UpdateSpeciality(Speciality instance);
    partial void DeleteSpeciality(Speciality instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertQA(QA instance);
    partial void UpdateQA(QA instance);
    partial void DeleteQA(QA instance);
    partial void InsertGivenServiceM(GivenServiceM instance);
    partial void UpdateGivenServiceM(GivenServiceM instance);
    partial void DeleteGivenServiceM(GivenServiceM instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertAgenda(Agenda instance);
    partial void UpdateAgenda(Agenda instance);
    partial void DeleteAgenda(Agenda instance);
    partial void InsertDispatchReason(DispatchReason instance);
    partial void UpdateDispatchReason(DispatchReason instance);
    partial void DeleteDispatchReason(DispatchReason instance);
    partial void InsertDispatch(Dispatch instance);
    partial void UpdateDispatch(Dispatch instance);
    partial void DeleteDispatch(Dispatch instance);
    #endregion
		
		public HCISDataClassesDataContext() : 
				base(global::HcisDispatchConfirm.Properties.Settings.Default.HCISConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HCISDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Vw_HcisDispatchConfirmMain> Vw_HcisDispatchConfirmMains
		{
			get
			{
				return this.GetTable<Vw_HcisDispatchConfirmMain>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Speciality> Specialities
		{
			get
			{
				return this.GetTable<Speciality>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Vw_HcisDispatchConfirm> Vw_HcisDispatchConfirms
		{
			get
			{
				return this.GetTable<Vw_HcisDispatchConfirm>();
			}
		}
		
		public System.Data.Linq.Table<QA> QAs
		{
			get
			{
				return this.GetTable<QA>();
			}
		}
		
		public System.Data.Linq.Table<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this.GetTable<GivenServiceM>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Agenda> Agendas
		{
			get
			{
				return this.GetTable<Agenda>();
			}
		}
		
		public System.Data.Linq.Table<DispatchReason> DispatchReasons
		{
			get
			{
				return this.GetTable<DispatchReason>();
			}
		}
		
		public System.Data.Linq.Table<Dispatch> Dispatches
		{
			get
			{
				return this.GetTable<Dispatch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_HcisDispatchConfirmMain")]
	public partial class Vw_HcisDispatchConfirmMain
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private System.Guid _GSMID;
		
		private string _Name;
		
		private string _Date;
		
		private string _Time;
		
		private System.Guid _ID;
		
		public Vw_HcisDispatchConfirmMain()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					this._GSMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _Code;
		
		private string _MedicalSystemCode;
		
		private string _Position;
		
		private string _RoomNumber;
		
		private System.Nullable<int> _UserID;
		
		private string _UserType;
		
		private System.Nullable<int> _SpecialityID;
		
		private string _SpecialityDegree;
		
		private string _OrganizationLevel;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs1;
		
		private EntitySet<GivenServiceM> _GivenServiceMs2;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Speciality> _Speciality;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnMedicalSystemCodeChanging(string value);
    partial void OnMedicalSystemCodeChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnSpecialityDegreeChanging(string value);
    partial void OnSpecialityDegreeChanged();
    partial void OnOrganizationLevelChanging(string value);
    partial void OnOrganizationLevelChanged();
    #endregion
		
		public Staff()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._GivenServiceMs1 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs1), new Action<GivenServiceM>(this.detach_GivenServiceMs1));
			this._GivenServiceMs2 = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs2), new Action<GivenServiceM>(this.detach_GivenServiceMs2));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Speciality = default(EntityRef<Speciality>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalSystemCode", DbType="NVarChar(20)")]
		public string MedicalSystemCode
		{
			get
			{
				return this._MedicalSystemCode;
			}
			set
			{
				if ((this._MedicalSystemCode != value))
				{
					this.OnMedicalSystemCodeChanging(value);
					this.SendPropertyChanging();
					this._MedicalSystemCode = value;
					this.SendPropertyChanged("MedicalSystemCode");
					this.OnMedicalSystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(200)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(100)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityDegree", DbType="NVarChar(20)")]
		public string SpecialityDegree
		{
			get
			{
				return this._SpecialityDegree;
			}
			set
			{
				if ((this._SpecialityDegree != value))
				{
					this.OnSpecialityDegreeChanging(value);
					this.SendPropertyChanging();
					this._SpecialityDegree = value;
					this.SendPropertyChanged("SpecialityDegree");
					this.OnSpecialityDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationLevel", DbType="NVarChar(100)")]
		public string OrganizationLevel
		{
			get
			{
				return this._OrganizationLevel;
			}
			set
			{
				if ((this._OrganizationLevel != value))
				{
					this.OnOrganizationLevelChanging(value);
					this.SendPropertyChanging();
					this._OrganizationLevel = value;
					this.SendPropertyChanged("OrganizationLevel");
					this.OnOrganizationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="RequestStaffID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_GivenServiceMs1", ThisKey="ID", OtherKey="FunctorID")]
		public EntitySet<GivenServiceM> GivenServiceMs1
		{
			get
			{
				return this._GivenServiceMs1;
			}
			set
			{
				this._GivenServiceMs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_GivenServiceMs2", ThisKey="ID", OtherKey="TechnicianID")]
		public EntitySet<GivenServiceM> GivenServiceMs2
		{
			get
			{
				return this._GivenServiceMs2;
			}
			set
			{
				this._GivenServiceMs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="StaffID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Staffs.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Staffs.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Person", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Staff = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(System.Guid);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = this;
		}
		
		private void detach_GivenServiceMs1(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff1 = null;
		}
		
		private void attach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = this;
		}
		
		private void detach_GivenServiceMs2(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Staff2 = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldID;
		
		private System.Nullable<int> _OldParentID;
		
		private System.Nullable<int> _CategoryID;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Name_En;
		
		private string _CaliforniaCode;
		
		private string _SalamatBookletCode;
		
		private System.Nullable<int> _SpecialityID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private string _Shape;
		
		private string _MESCCode_No;
		
		private System.Nullable<bool> _NIS;
		
		private bool _EmergencyFav;
		
		private string _HIXCode;
		
		private System.Nullable<double> _K;
		
		private System.Nullable<double> _BasicK;
		
		private System.Nullable<double> _SupplementBasicK;
		
		private System.Nullable<int> _Value;
		
		private System.Nullable<int> _ResultType;
		
		private System.Nullable<bool> _FinanceConfirm;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _RetireeID;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<QA> _QAs1;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnOldParentIDChanging(System.Nullable<int> value);
    partial void OnOldParentIDChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnName_EnChanging(string value);
    partial void OnName_EnChanged();
    partial void OnCaliforniaCodeChanging(string value);
    partial void OnCaliforniaCodeChanged();
    partial void OnSalamatBookletCodeChanging(string value);
    partial void OnSalamatBookletCodeChanged();
    partial void OnSpecialityIDChanging(System.Nullable<int> value);
    partial void OnSpecialityIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShapeChanging(string value);
    partial void OnShapeChanged();
    partial void OnMESCCode_NoChanging(string value);
    partial void OnMESCCode_NoChanged();
    partial void OnNISChanging(System.Nullable<bool> value);
    partial void OnNISChanged();
    partial void OnEmergencyFavChanging(bool value);
    partial void OnEmergencyFavChanged();
    partial void OnHIXCodeChanging(string value);
    partial void OnHIXCodeChanged();
    partial void OnKChanging(System.Nullable<double> value);
    partial void OnKChanged();
    partial void OnBasicKChanging(System.Nullable<double> value);
    partial void OnBasicKChanged();
    partial void OnSupplementBasicKChanging(System.Nullable<double> value);
    partial void OnSupplementBasicKChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    partial void OnResultTypeChanging(System.Nullable<int> value);
    partial void OnResultTypeChanged();
    partial void OnFinanceConfirmChanging(System.Nullable<bool> value);
    partial void OnFinanceConfirmChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRetireeIDChanging(System.Nullable<int> value);
    partial void OnRetireeIDChanged();
    #endregion
		
		public Service()
		{
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._QAs1 = new EntitySet<QA>(new Action<QA>(this.attach_QAs1), new Action<QA>(this.detach_QAs1));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Service1 = default(EntityRef<Service>);
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldParentID", DbType="Int")]
		public System.Nullable<int> OldParentID
		{
			get
			{
				return this._OldParentID;
			}
			set
			{
				if ((this._OldParentID != value))
				{
					this.OnOldParentIDChanging(value);
					this.SendPropertyChanging();
					this._OldParentID = value;
					this.SendPropertyChanged("OldParentID");
					this.OnOldParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_En", DbType="NVarChar(MAX)")]
		public string Name_En
		{
			get
			{
				return this._Name_En;
			}
			set
			{
				if ((this._Name_En != value))
				{
					this.OnName_EnChanging(value);
					this.SendPropertyChanging();
					this._Name_En = value;
					this.SendPropertyChanged("Name_En");
					this.OnName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaliforniaCode", DbType="NVarChar(50)")]
		public string CaliforniaCode
		{
			get
			{
				return this._CaliforniaCode;
			}
			set
			{
				if ((this._CaliforniaCode != value))
				{
					this.OnCaliforniaCodeChanging(value);
					this.SendPropertyChanging();
					this._CaliforniaCode = value;
					this.SendPropertyChanged("CaliforniaCode");
					this.OnCaliforniaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalamatBookletCode", DbType="NVarChar(50)")]
		public string SalamatBookletCode
		{
			get
			{
				return this._SalamatBookletCode;
			}
			set
			{
				if ((this._SalamatBookletCode != value))
				{
					this.OnSalamatBookletCodeChanging(value);
					this.SendPropertyChanging();
					this._SalamatBookletCode = value;
					this.SendPropertyChanged("SalamatBookletCode");
					this.OnSalamatBookletCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int")]
		public System.Nullable<int> SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shape", DbType="NVarChar(50)")]
		public string Shape
		{
			get
			{
				return this._Shape;
			}
			set
			{
				if ((this._Shape != value))
				{
					this.OnShapeChanging(value);
					this.SendPropertyChanging();
					this._Shape = value;
					this.SendPropertyChanged("Shape");
					this.OnShapeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MESCCode_No", DbType="NVarChar(50)")]
		public string MESCCode_No
		{
			get
			{
				return this._MESCCode_No;
			}
			set
			{
				if ((this._MESCCode_No != value))
				{
					this.OnMESCCode_NoChanging(value);
					this.SendPropertyChanging();
					this._MESCCode_No = value;
					this.SendPropertyChanged("MESCCode_No");
					this.OnMESCCode_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIS", DbType="Bit")]
		public System.Nullable<bool> NIS
		{
			get
			{
				return this._NIS;
			}
			set
			{
				if ((this._NIS != value))
				{
					this.OnNISChanging(value);
					this.SendPropertyChanging();
					this._NIS = value;
					this.SendPropertyChanged("NIS");
					this.OnNISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyFav", DbType="Bit NOT NULL")]
		public bool EmergencyFav
		{
			get
			{
				return this._EmergencyFav;
			}
			set
			{
				if ((this._EmergencyFav != value))
				{
					this.OnEmergencyFavChanging(value);
					this.SendPropertyChanging();
					this._EmergencyFav = value;
					this.SendPropertyChanged("EmergencyFav");
					this.OnEmergencyFavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIXCode", DbType="NVarChar(50)")]
		public string HIXCode
		{
			get
			{
				return this._HIXCode;
			}
			set
			{
				if ((this._HIXCode != value))
				{
					this.OnHIXCodeChanging(value);
					this.SendPropertyChanging();
					this._HIXCode = value;
					this.SendPropertyChanged("HIXCode");
					this.OnHIXCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K", DbType="Float")]
		public System.Nullable<double> K
		{
			get
			{
				return this._K;
			}
			set
			{
				if ((this._K != value))
				{
					this.OnKChanging(value);
					this.SendPropertyChanging();
					this._K = value;
					this.SendPropertyChanged("K");
					this.OnKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicK", DbType="Float")]
		public System.Nullable<double> BasicK
		{
			get
			{
				return this._BasicK;
			}
			set
			{
				if ((this._BasicK != value))
				{
					this.OnBasicKChanging(value);
					this.SendPropertyChanging();
					this._BasicK = value;
					this.SendPropertyChanged("BasicK");
					this.OnBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplementBasicK", DbType="Float")]
		public System.Nullable<double> SupplementBasicK
		{
			get
			{
				return this._SupplementBasicK;
			}
			set
			{
				if ((this._SupplementBasicK != value))
				{
					this.OnSupplementBasicKChanging(value);
					this.SendPropertyChanging();
					this._SupplementBasicK = value;
					this.SendPropertyChanged("SupplementBasicK");
					this.OnSupplementBasicKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="Int")]
		public System.Nullable<int> ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceConfirm", DbType="Bit")]
		public System.Nullable<bool> FinanceConfirm
		{
			get
			{
				return this._FinanceConfirm;
			}
			set
			{
				if ((this._FinanceConfirm != value))
				{
					this.OnFinanceConfirmChanging(value);
					this.SendPropertyChanging();
					this._FinanceConfirm = value;
					this.SendPropertyChanged("FinanceConfirm");
					this.OnFinanceConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetireeID", DbType="Int")]
		public System.Nullable<int> RetireeID
		{
			get
			{
				return this._RetireeID;
			}
			set
			{
				if ((this._RetireeID != value))
				{
					this.OnRetireeIDChanging(value);
					this.SendPropertyChanging();
					this._RetireeID = value;
					this.SendPropertyChanged("RetireeID");
					this.OnRetireeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Services", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Departments", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_QAs", ThisKey="ID", OtherKey="QuestionnariID")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_QAs1", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<QA> QAs1
		{
			get
			{
				return this._QAs1;
			}
			set
			{
				this._QAs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="ServiceID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Service", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = this;
		}
		
		private void detach_QAs1(QA entity)
		{
			this.SendPropertyChanging();
			entity.Service1 = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Speciality")]
	public partial class Speciality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _OldID;
		
		private string _Speciality1;
		
		private System.Nullable<int> _HeadUserID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdProfessionType;
		
		private EntitySet<Staff> _Staffs;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<DispatchReason> _DispatchReasons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOldIDChanging(System.Nullable<int> value);
    partial void OnOldIDChanged();
    partial void OnSpeciality1Changing(string value);
    partial void OnSpeciality1Changed();
    partial void OnHeadUserIDChanging(System.Nullable<int> value);
    partial void OnHeadUserIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdProfessionTypeChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdProfessionTypeChanged();
    #endregion
		
		public Speciality()
		{
			this._Staffs = new EntitySet<Staff>(new Action<Staff>(this.attach_Staffs), new Action<Staff>(this.detach_Staffs));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._DispatchReasons = new EntitySet<DispatchReason>(new Action<DispatchReason>(this.attach_DispatchReasons), new Action<DispatchReason>(this.detach_DispatchReasons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldID", DbType="Int")]
		public System.Nullable<int> OldID
		{
			get
			{
				return this._OldID;
			}
			set
			{
				if ((this._OldID != value))
				{
					this.OnOldIDChanging(value);
					this.SendPropertyChanging();
					this._OldID = value;
					this.SendPropertyChanged("OldID");
					this.OnOldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Speciality", Storage="_Speciality1", DbType="NVarChar(50)")]
		public string Speciality1
		{
			get
			{
				return this._Speciality1;
			}
			set
			{
				if ((this._Speciality1 != value))
				{
					this.OnSpeciality1Changing(value);
					this.SendPropertyChanging();
					this._Speciality1 = value;
					this.SendPropertyChanged("Speciality1");
					this.OnSpeciality1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadUserID", DbType="Int")]
		public System.Nullable<int> HeadUserID
		{
			get
			{
				return this._HeadUserID;
			}
			set
			{
				if ((this._HeadUserID != value))
				{
					this.OnHeadUserIDChanging(value);
					this.SendPropertyChanging();
					this._HeadUserID = value;
					this.SendPropertyChanged("HeadUserID");
					this.OnHeadUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdProfessionType", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdProfessionType
		{
			get
			{
				return this._SATAIdProfessionType;
			}
			set
			{
				if ((this._SATAIdProfessionType != value))
				{
					this.OnSATAIdProfessionTypeChanging(value);
					this.SendPropertyChanging();
					this._SATAIdProfessionType = value;
					this.SendPropertyChanged("SATAIdProfessionType");
					this.OnSATAIdProfessionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Staff", Storage="_Staffs", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Staff> Staffs
		{
			get
			{
				return this._Staffs;
			}
			set
			{
				this._Staffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_Service", Storage="_Services", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_DispatchReason", Storage="_DispatchReasons", ThisKey="ID", OtherKey="SpecialityID")]
		public EntitySet<DispatchReason> DispatchReasons
		{
			get
			{
				return this._DispatchReasons;
			}
			set
			{
				this._DispatchReasons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Staffs(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
		
		private void attach_DispatchReasons(DispatchReason entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = this;
		}
		
		private void detach_DispatchReasons(DispatchReason entity)
		{
			this.SendPropertyChanging();
			entity.Speciality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<int> _OldId;
		
		private int _IDInt;
		
		private System.Nullable<int> _IDIntParent;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<System.Guid> _Parent;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private System.Nullable<int> _SepasID;
		
		private System.Nullable<System.Guid> _SATAIdWardRef;
		
		private System.Nullable<int> _SataIdWardRefint;
		
		private System.Nullable<decimal> _VisitAmountPerHour;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Agenda> _Agendas;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnOldIdChanging(System.Nullable<int> value);
    partial void OnOldIdChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnIDIntParentChanging(System.Nullable<int> value);
    partial void OnIDIntParentChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnSepasIDChanging(System.Nullable<int> value);
    partial void OnSepasIDChanged();
    partial void OnSATAIdWardRefChanging(System.Nullable<System.Guid> value);
    partial void OnSATAIdWardRefChanged();
    partial void OnSataIdWardRefintChanging(System.Nullable<int> value);
    partial void OnSataIdWardRefintChanged();
    partial void OnVisitAmountPerHourChanging(System.Nullable<decimal> value);
    partial void OnVisitAmountPerHourChanged();
    #endregion
		
		public Department()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Agendas = new EntitySet<Agenda>(new Action<Agenda>(this.attach_Agendas), new Action<Agenda>(this.detach_Agendas));
			this._Department1 = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldId", DbType="Int")]
		public System.Nullable<int> OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				if ((this._OldId != value))
				{
					this.OnOldIdChanging(value);
					this.SendPropertyChanging();
					this._OldId = value;
					this.SendPropertyChanged("OldId");
					this.OnOldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntParent", DbType="Int")]
		public System.Nullable<int> IDIntParent
		{
			get
			{
				return this._IDIntParent;
			}
			set
			{
				if ((this._IDIntParent != value))
				{
					this.OnIDIntParentChanging(value);
					this.SendPropertyChanging();
					this._IDIntParent = value;
					this.SendPropertyChanged("IDIntParent");
					this.OnIDIntParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SepasID", DbType="Int")]
		public System.Nullable<int> SepasID
		{
			get
			{
				return this._SepasID;
			}
			set
			{
				if ((this._SepasID != value))
				{
					this.OnSepasIDChanging(value);
					this.SendPropertyChanging();
					this._SepasID = value;
					this.SendPropertyChanged("SepasID");
					this.OnSepasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SATAIdWardRef", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SATAIdWardRef
		{
			get
			{
				return this._SATAIdWardRef;
			}
			set
			{
				if ((this._SATAIdWardRef != value))
				{
					this.OnSATAIdWardRefChanging(value);
					this.SendPropertyChanging();
					this._SATAIdWardRef = value;
					this.SendPropertyChanged("SATAIdWardRef");
					this.OnSATAIdWardRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SataIdWardRefint", DbType="Int")]
		public System.Nullable<int> SataIdWardRefint
		{
			get
			{
				return this._SataIdWardRefint;
			}
			set
			{
				if ((this._SataIdWardRefint != value))
				{
					this.OnSataIdWardRefintChanging(value);
					this.SendPropertyChanging();
					this._SataIdWardRefint = value;
					this.SendPropertyChanged("SataIdWardRefint");
					this.OnSataIdWardRefintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitAmountPerHour", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> VisitAmountPerHour
		{
			get
			{
				return this._VisitAmountPerHour;
			}
			set
			{
				if ((this._VisitAmountPerHour != value))
				{
					this.OnVisitAmountPerHourChanging(value);
					this.SendPropertyChanging();
					this._VisitAmountPerHour = value;
					this.SendPropertyChanged("VisitAmountPerHour");
					this.OnVisitAmountPerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Agendas", ThisKey="ID", OtherKey="DepartmentID")]
		public EntitySet<Agenda> Agendas
		{
			get
			{
				return this._Agendas;
			}
			set
			{
				this._Agendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Department", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Agendas(Agenda entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vw_HcisDispatchConfirm")]
	public partial class Vw_HcisDispatchConfirm
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _Name;
		
		private string _Description;
		
		private string _MResult;
		
		private System.Guid _GSMID;
		
		private System.Guid _ID;
		
		private string _Expr1;
		
		public Vw_HcisDispatchConfirm()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this._NationalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this._PersonalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this._MResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSMID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GSMID
		{
			get
			{
				return this._GSMID;
			}
			set
			{
				if ((this._GSMID != value))
				{
					this._GSMID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(MAX)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QA")]
	public partial class QA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _IDGivenServiceM;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<System.Guid> _QuestionnariID;
		
		private System.Nullable<int> _ResultN;
		
		private System.Nullable<bool> _ResultCHK;
		
		private string _MResult;
		
		private string _Description;
		
		private string _Date;
		
		private string _CreationDate;
		
		private System.Nullable<int> _CreationUser;
		
		private System.Nullable<System.Guid> _GivenServiceDID;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Service> _Service1;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDGivenServiceMChanging(System.Nullable<System.Guid> value);
    partial void OnIDGivenServiceMChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnQuestionnariIDChanging(System.Nullable<System.Guid> value);
    partial void OnQuestionnariIDChanged();
    partial void OnResultNChanging(System.Nullable<int> value);
    partial void OnResultNChanged();
    partial void OnResultCHKChanging(System.Nullable<bool> value);
    partial void OnResultCHKChanged();
    partial void OnMResultChanging(string value);
    partial void OnMResultChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(System.Nullable<int> value);
    partial void OnCreationUserChanged();
    partial void OnGivenServiceDIDChanging(System.Nullable<System.Guid> value);
    partial void OnGivenServiceDIDChanged();
    #endregion
		
		public QA()
		{
			this._Service = default(EntityRef<Service>);
			this._Service1 = default(EntityRef<Service>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGivenServiceM", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IDGivenServiceM
		{
			get
			{
				return this._IDGivenServiceM;
			}
			set
			{
				if ((this._IDGivenServiceM != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGivenServiceMChanging(value);
					this.SendPropertyChanging();
					this._IDGivenServiceM = value;
					this.SendPropertyChanged("IDGivenServiceM");
					this.OnIDGivenServiceMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Service1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnariID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> QuestionnariID
		{
			get
			{
				return this._QuestionnariID;
			}
			set
			{
				if ((this._QuestionnariID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnariIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionnariID = value;
					this.SendPropertyChanged("QuestionnariID");
					this.OnQuestionnariIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultN", DbType="Int")]
		public System.Nullable<int> ResultN
		{
			get
			{
				return this._ResultN;
			}
			set
			{
				if ((this._ResultN != value))
				{
					this.OnResultNChanging(value);
					this.SendPropertyChanging();
					this._ResultN = value;
					this.SendPropertyChanged("ResultN");
					this.OnResultNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCHK", DbType="Bit")]
		public System.Nullable<bool> ResultCHK
		{
			get
			{
				return this._ResultCHK;
			}
			set
			{
				if ((this._ResultCHK != value))
				{
					this.OnResultCHKChanging(value);
					this.SendPropertyChanging();
					this._ResultCHK = value;
					this.SendPropertyChanged("ResultCHK");
					this.OnResultCHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MResult", DbType="NVarChar(500)")]
		public string MResult
		{
			get
			{
				return this._MResult;
			}
			set
			{
				if ((this._MResult != value))
				{
					this.OnMResultChanging(value);
					this.SendPropertyChanging();
					this._MResult = value;
					this.SendPropertyChanged("MResult");
					this.OnMResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="Int")]
		public System.Nullable<int> CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenServiceDID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GivenServiceDID
		{
			get
			{
				return this._GivenServiceDID;
			}
			set
			{
				if ((this._GivenServiceDID != value))
				{
					this.OnGivenServiceDIDChanging(value);
					this.SendPropertyChanging();
					this._GivenServiceDID = value;
					this.SendPropertyChanged("GivenServiceDID");
					this.OnGivenServiceDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA", Storage="_Service", ThisKey="QuestionnariID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._QuestionnariID = value.ID;
					}
					else
					{
						this._QuestionnariID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_QA1", Storage="_Service1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public Service Service1
		{
			get
			{
				return this._Service1.Entity;
			}
			set
			{
				Service previousValue = this._Service1.Entity;
				if (((previousValue != value) 
							|| (this._Service1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service1.Entity = null;
						previousValue.QAs1.Remove(this);
					}
					this._Service1.Entity = value;
					if ((value != null))
					{
						value.QAs1.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_GivenServiceM", ThisKey="IDGivenServiceM", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.QAs.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.QAs.Add(this);
						this._IDGivenServiceM = value.ID;
					}
					else
					{
						this._IDGivenServiceM = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GivenServiceM")]
	public partial class GivenServiceM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PersonID;
		
		private System.Nullable<System.Guid> _RequestStaffID;
		
		private System.Nullable<int> _InsuranceID;
		
		private System.Nullable<long> _DossierID;
		
		private System.Nullable<System.Guid> _ParentID;
		
		private System.Nullable<int> _ShiftID;
		
		private System.Nullable<System.Guid> _AgendaID;
		
		private System.Nullable<System.Guid> _DepartmentID;
		
		private System.Nullable<int> _RoomNumber;
		
		private System.Nullable<System.Guid> _PeriodicCalendeID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private System.Nullable<System.Guid> _FunctorID;
		
		private System.Nullable<System.Guid> _TechnicianID;
		
		private System.Nullable<System.Guid> _PhysioOrderMID;
		
		private System.Nullable<System.Guid> _BedID;
		
		private int _SerialNumber;
		
		private System.Nullable<int> _VisitType;
		
		private string _Date;
		
		private string _Time;
		
		private string _InsuranceNo;
		
		private string _RequestDate;
		
		private string _RequestTime;
		
		private string _AdmitDate;
		
		private string _AdmitTime;
		
		private System.Nullable<int> _NumberOfOrgans;
		
		private System.Nullable<int> _RequestedTime;
		
		private string _BookletType;
		
		private string _BookletDate;
		
		private string _BookletExpireDate;
		
		private string _AnsweringDate;
		
		private string _TurningDate;
		
		private string _TurningTime;
		
		private string _BookletSerialNumber;
		
		private string _BookletPageNumber;
		
		private decimal _PayedPrice;
		
		private decimal _PaymentPrice;
		
		private decimal _TotalPrice;
		
		private string _SendToDrTime;
		
		private bool _SendToDr;
		
		private bool _Admitted;
		
		private string _ConfirmDate;
		
		private string _ConfirmTime;
		
		private bool _Confirm;
		
		private bool _Payed;
		
		private bool _Priority;
		
		private bool _RemissionStatus;
		
		private bool _Screening;
		
		private bool _Cancelled;
		
		private bool _Reflected;
		
		private string _Comment;
		
		private System.Nullable<int> _DailySN;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationTime;
		
		private string _CreationDate;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _ComplementInsurance;
		
		private string _ComplementInsuranceNO;
		
		private System.Nullable<System.Guid> _RefrenceID;
		
		private bool _Portable;
		
		private System.Nullable<double> _ConfirmFinanceSumK;
		
		private string _AdmissionType;
		
		private EntitySet<QA> _QAs;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<GivenServiceM> _GivenServiceM1;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Staff> _Staff1;
		
		private EntityRef<Staff> _Staff2;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Agenda> _Agenda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPersonIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonIDChanged();
    partial void OnRequestStaffIDChanging(System.Nullable<System.Guid> value);
    partial void OnRequestStaffIDChanged();
    partial void OnInsuranceIDChanging(System.Nullable<int> value);
    partial void OnInsuranceIDChanged();
    partial void OnDossierIDChanging(System.Nullable<long> value);
    partial void OnDossierIDChanged();
    partial void OnParentIDChanging(System.Nullable<System.Guid> value);
    partial void OnParentIDChanged();
    partial void OnShiftIDChanging(System.Nullable<int> value);
    partial void OnShiftIDChanged();
    partial void OnAgendaIDChanging(System.Nullable<System.Guid> value);
    partial void OnAgendaIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<System.Guid> value);
    partial void OnDepartmentIDChanged();
    partial void OnRoomNumberChanging(System.Nullable<int> value);
    partial void OnRoomNumberChanged();
    partial void OnPeriodicCalendeIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalendeIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnFunctorIDChanging(System.Nullable<System.Guid> value);
    partial void OnFunctorIDChanged();
    partial void OnTechnicianIDChanging(System.Nullable<System.Guid> value);
    partial void OnTechnicianIDChanged();
    partial void OnPhysioOrderMIDChanging(System.Nullable<System.Guid> value);
    partial void OnPhysioOrderMIDChanged();
    partial void OnBedIDChanging(System.Nullable<System.Guid> value);
    partial void OnBedIDChanged();
    partial void OnSerialNumberChanging(int value);
    partial void OnSerialNumberChanged();
    partial void OnVisitTypeChanging(System.Nullable<int> value);
    partial void OnVisitTypeChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnRequestDateChanging(string value);
    partial void OnRequestDateChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnAdmitDateChanging(string value);
    partial void OnAdmitDateChanged();
    partial void OnAdmitTimeChanging(string value);
    partial void OnAdmitTimeChanged();
    partial void OnNumberOfOrgansChanging(System.Nullable<int> value);
    partial void OnNumberOfOrgansChanged();
    partial void OnRequestedTimeChanging(System.Nullable<int> value);
    partial void OnRequestedTimeChanged();
    partial void OnBookletTypeChanging(string value);
    partial void OnBookletTypeChanged();
    partial void OnBookletDateChanging(string value);
    partial void OnBookletDateChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAnsweringDateChanging(string value);
    partial void OnAnsweringDateChanged();
    partial void OnTurningDateChanging(string value);
    partial void OnTurningDateChanged();
    partial void OnTurningTimeChanging(string value);
    partial void OnTurningTimeChanged();
    partial void OnBookletSerialNumberChanging(string value);
    partial void OnBookletSerialNumberChanged();
    partial void OnBookletPageNumberChanging(string value);
    partial void OnBookletPageNumberChanged();
    partial void OnPayedPriceChanging(decimal value);
    partial void OnPayedPriceChanged();
    partial void OnPaymentPriceChanging(decimal value);
    partial void OnPaymentPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnSendToDrTimeChanging(string value);
    partial void OnSendToDrTimeChanged();
    partial void OnSendToDrChanging(bool value);
    partial void OnSendToDrChanged();
    partial void OnAdmittedChanging(bool value);
    partial void OnAdmittedChanged();
    partial void OnConfirmDateChanging(string value);
    partial void OnConfirmDateChanged();
    partial void OnConfirmTimeChanging(string value);
    partial void OnConfirmTimeChanged();
    partial void OnConfirmChanging(bool value);
    partial void OnConfirmChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnPriorityChanging(bool value);
    partial void OnPriorityChanged();
    partial void OnRemissionStatusChanging(bool value);
    partial void OnRemissionStatusChanged();
    partial void OnScreeningChanging(bool value);
    partial void OnScreeningChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnReflectedChanging(bool value);
    partial void OnReflectedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDailySNChanging(System.Nullable<int> value);
    partial void OnDailySNChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnComplementInsuranceChanging(string value);
    partial void OnComplementInsuranceChanged();
    partial void OnComplementInsuranceNOChanging(string value);
    partial void OnComplementInsuranceNOChanged();
    partial void OnRefrenceIDChanging(System.Nullable<System.Guid> value);
    partial void OnRefrenceIDChanged();
    partial void OnPortableChanging(bool value);
    partial void OnPortableChanged();
    partial void OnConfirmFinanceSumKChanging(System.Nullable<double> value);
    partial void OnConfirmFinanceSumKChanged();
    partial void OnAdmissionTypeChanging(string value);
    partial void OnAdmissionTypeChanged();
    #endregion
		
		public GivenServiceM()
		{
			this._QAs = new EntitySet<QA>(new Action<QA>(this.attach_QAs), new Action<QA>(this.detach_QAs));
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Department = default(EntityRef<Department>);
			this._GivenServiceM1 = default(EntityRef<GivenServiceM>);
			this._Staff = default(EntityRef<Staff>);
			this._Staff1 = default(EntityRef<Staff>);
			this._Staff2 = default(EntityRef<Staff>);
			this._Person = default(EntityRef<Person>);
			this._Agenda = default(EntityRef<Agenda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStaffID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RequestStaffID
		{
			get
			{
				return this._RequestStaffID;
			}
			set
			{
				if ((this._RequestStaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStaffID = value;
					this.SendPropertyChanged("RequestStaffID");
					this.OnRequestStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Int")]
		public System.Nullable<int> InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DossierID", DbType="BigInt")]
		public System.Nullable<long> DossierID
		{
			get
			{
				return this._DossierID;
			}
			set
			{
				if ((this._DossierID != value))
				{
					this.OnDossierIDChanging(value);
					this.SendPropertyChanging();
					this._DossierID = value;
					this.SendPropertyChanged("DossierID");
					this.OnDossierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._GivenServiceM1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int")]
		public System.Nullable<int> ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgendaID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AgendaID
		{
			get
			{
				return this._AgendaID;
			}
			set
			{
				if ((this._AgendaID != value))
				{
					if (this._Agenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgendaIDChanging(value);
					this.SendPropertyChanging();
					this._AgendaID = value;
					this.SendPropertyChanged("AgendaID");
					this.OnAgendaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int")]
		public System.Nullable<int> RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalendeID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalendeID
		{
			get
			{
				return this._PeriodicCalendeID;
			}
			set
			{
				if ((this._PeriodicCalendeID != value))
				{
					this.OnPeriodicCalendeIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalendeID = value;
					this.SendPropertyChanged("PeriodicCalendeID");
					this.OnPeriodicCalendeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctorID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FunctorID
		{
			get
			{
				return this._FunctorID;
			}
			set
			{
				if ((this._FunctorID != value))
				{
					if (this._Staff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctorIDChanging(value);
					this.SendPropertyChanging();
					this._FunctorID = value;
					this.SendPropertyChanged("FunctorID");
					this.OnFunctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicianID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TechnicianID
		{
			get
			{
				return this._TechnicianID;
			}
			set
			{
				if ((this._TechnicianID != value))
				{
					if (this._Staff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicianIDChanging(value);
					this.SendPropertyChanging();
					this._TechnicianID = value;
					this.SendPropertyChanged("TechnicianID");
					this.OnTechnicianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysioOrderMID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PhysioOrderMID
		{
			get
			{
				return this._PhysioOrderMID;
			}
			set
			{
				if ((this._PhysioOrderMID != value))
				{
					this.OnPhysioOrderMIDChanging(value);
					this.SendPropertyChanging();
					this._PhysioOrderMID = value;
					this.SendPropertyChanged("PhysioOrderMID");
					this.OnPhysioOrderMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BedID
		{
			get
			{
				return this._BedID;
			}
			set
			{
				if ((this._BedID != value))
				{
					this.OnBedIDChanging(value);
					this.SendPropertyChanging();
					this._BedID = value;
					this.SendPropertyChanged("BedID");
					this.OnBedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitType", DbType="Int")]
		public System.Nullable<int> VisitType
		{
			get
			{
				return this._VisitType;
			}
			set
			{
				if ((this._VisitType != value))
				{
					this.OnVisitTypeChanging(value);
					this.SendPropertyChanging();
					this._VisitType = value;
					this.SendPropertyChanged("VisitType");
					this.OnVisitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(8)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="NVarChar(10)")]
		public string RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="NVarChar(8)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitDate", DbType="NVarChar(10)")]
		public string AdmitDate
		{
			get
			{
				return this._AdmitDate;
			}
			set
			{
				if ((this._AdmitDate != value))
				{
					this.OnAdmitDateChanging(value);
					this.SendPropertyChanging();
					this._AdmitDate = value;
					this.SendPropertyChanged("AdmitDate");
					this.OnAdmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmitTime", DbType="NVarChar(8)")]
		public string AdmitTime
		{
			get
			{
				return this._AdmitTime;
			}
			set
			{
				if ((this._AdmitTime != value))
				{
					this.OnAdmitTimeChanging(value);
					this.SendPropertyChanging();
					this._AdmitTime = value;
					this.SendPropertyChanged("AdmitTime");
					this.OnAdmitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfOrgans", DbType="Int")]
		public System.Nullable<int> NumberOfOrgans
		{
			get
			{
				return this._NumberOfOrgans;
			}
			set
			{
				if ((this._NumberOfOrgans != value))
				{
					this.OnNumberOfOrgansChanging(value);
					this.SendPropertyChanging();
					this._NumberOfOrgans = value;
					this.SendPropertyChanged("NumberOfOrgans");
					this.OnNumberOfOrgansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedTime", DbType="Int")]
		public System.Nullable<int> RequestedTime
		{
			get
			{
				return this._RequestedTime;
			}
			set
			{
				if ((this._RequestedTime != value))
				{
					this.OnRequestedTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestedTime = value;
					this.SendPropertyChanged("RequestedTime");
					this.OnRequestedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletType", DbType="NVarChar(20)")]
		public string BookletType
		{
			get
			{
				return this._BookletType;
			}
			set
			{
				if ((this._BookletType != value))
				{
					this.OnBookletTypeChanging(value);
					this.SendPropertyChanging();
					this._BookletType = value;
					this.SendPropertyChanged("BookletType");
					this.OnBookletTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletDate", DbType="NVarChar(10)")]
		public string BookletDate
		{
			get
			{
				return this._BookletDate;
			}
			set
			{
				if ((this._BookletDate != value))
				{
					this.OnBookletDateChanging(value);
					this.SendPropertyChanging();
					this._BookletDate = value;
					this.SendPropertyChanged("BookletDate");
					this.OnBookletDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweringDate", DbType="NVarChar(10)")]
		public string AnsweringDate
		{
			get
			{
				return this._AnsweringDate;
			}
			set
			{
				if ((this._AnsweringDate != value))
				{
					this.OnAnsweringDateChanging(value);
					this.SendPropertyChanging();
					this._AnsweringDate = value;
					this.SendPropertyChanged("AnsweringDate");
					this.OnAnsweringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningDate", DbType="NVarChar(10)")]
		public string TurningDate
		{
			get
			{
				return this._TurningDate;
			}
			set
			{
				if ((this._TurningDate != value))
				{
					this.OnTurningDateChanging(value);
					this.SendPropertyChanging();
					this._TurningDate = value;
					this.SendPropertyChanged("TurningDate");
					this.OnTurningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurningTime", DbType="NVarChar(8)")]
		public string TurningTime
		{
			get
			{
				return this._TurningTime;
			}
			set
			{
				if ((this._TurningTime != value))
				{
					this.OnTurningTimeChanging(value);
					this.SendPropertyChanging();
					this._TurningTime = value;
					this.SendPropertyChanged("TurningTime");
					this.OnTurningTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletSerialNumber", DbType="NVarChar(50)")]
		public string BookletSerialNumber
		{
			get
			{
				return this._BookletSerialNumber;
			}
			set
			{
				if ((this._BookletSerialNumber != value))
				{
					this.OnBookletSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletSerialNumber = value;
					this.SendPropertyChanged("BookletSerialNumber");
					this.OnBookletSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletPageNumber", DbType="NVarChar(25)")]
		public string BookletPageNumber
		{
			get
			{
				return this._BookletPageNumber;
			}
			set
			{
				if ((this._BookletPageNumber != value))
				{
					this.OnBookletPageNumberChanging(value);
					this.SendPropertyChanging();
					this._BookletPageNumber = value;
					this.SendPropertyChanged("BookletPageNumber");
					this.OnBookletPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayedPrice", DbType="Money NOT NULL")]
		public decimal PayedPrice
		{
			get
			{
				return this._PayedPrice;
			}
			set
			{
				if ((this._PayedPrice != value))
				{
					this.OnPayedPriceChanging(value);
					this.SendPropertyChanging();
					this._PayedPrice = value;
					this.SendPropertyChanged("PayedPrice");
					this.OnPayedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPrice", DbType="Money NOT NULL")]
		public decimal PaymentPrice
		{
			get
			{
				return this._PaymentPrice;
			}
			set
			{
				if ((this._PaymentPrice != value))
				{
					this.OnPaymentPriceChanging(value);
					this.SendPropertyChanging();
					this._PaymentPrice = value;
					this.SendPropertyChanged("PaymentPrice");
					this.OnPaymentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDrTime", DbType="NVarChar(8)")]
		public string SendToDrTime
		{
			get
			{
				return this._SendToDrTime;
			}
			set
			{
				if ((this._SendToDrTime != value))
				{
					this.OnSendToDrTimeChanging(value);
					this.SendPropertyChanging();
					this._SendToDrTime = value;
					this.SendPropertyChanged("SendToDrTime");
					this.OnSendToDrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendToDr", DbType="Bit NOT NULL")]
		public bool SendToDr
		{
			get
			{
				return this._SendToDr;
			}
			set
			{
				if ((this._SendToDr != value))
				{
					this.OnSendToDrChanging(value);
					this.SendPropertyChanging();
					this._SendToDr = value;
					this.SendPropertyChanged("SendToDr");
					this.OnSendToDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admitted", DbType="Bit NOT NULL")]
		public bool Admitted
		{
			get
			{
				return this._Admitted;
			}
			set
			{
				if ((this._Admitted != value))
				{
					this.OnAdmittedChanging(value);
					this.SendPropertyChanging();
					this._Admitted = value;
					this.SendPropertyChanged("Admitted");
					this.OnAdmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="NVarChar(10)")]
		public string ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="NVarChar(10)")]
		public string ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit NOT NULL")]
		public bool Confirm
		{
			get
			{
				return this._Confirm;
			}
			set
			{
				if ((this._Confirm != value))
				{
					this.OnConfirmChanging(value);
					this.SendPropertyChanging();
					this._Confirm = value;
					this.SendPropertyChanged("Confirm");
					this.OnConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Bit NOT NULL")]
		public bool Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemissionStatus", DbType="Bit NOT NULL")]
		public bool RemissionStatus
		{
			get
			{
				return this._RemissionStatus;
			}
			set
			{
				if ((this._RemissionStatus != value))
				{
					this.OnRemissionStatusChanging(value);
					this.SendPropertyChanging();
					this._RemissionStatus = value;
					this.SendPropertyChanged("RemissionStatus");
					this.OnRemissionStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screening", DbType="Bit NOT NULL")]
		public bool Screening
		{
			get
			{
				return this._Screening;
			}
			set
			{
				if ((this._Screening != value))
				{
					this.OnScreeningChanging(value);
					this.SendPropertyChanging();
					this._Screening = value;
					this.SendPropertyChanged("Screening");
					this.OnScreeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflected", DbType="Bit NOT NULL")]
		public bool Reflected
		{
			get
			{
				return this._Reflected;
			}
			set
			{
				if ((this._Reflected != value))
				{
					this.OnReflectedChanging(value);
					this.SendPropertyChanging();
					this._Reflected = value;
					this.SendPropertyChanged("Reflected");
					this.OnReflectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailySN", DbType="Int")]
		public System.Nullable<int> DailySN
		{
			get
			{
				return this._DailySN;
			}
			set
			{
				if ((this._DailySN != value))
				{
					this.OnDailySNChanging(value);
					this.SendPropertyChanging();
					this._DailySN = value;
					this.SendPropertyChanged("DailySN");
					this.OnDailySNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsurance", DbType="NVarChar(50)")]
		public string ComplementInsurance
		{
			get
			{
				return this._ComplementInsurance;
			}
			set
			{
				if ((this._ComplementInsurance != value))
				{
					this.OnComplementInsuranceChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsurance = value;
					this.SendPropertyChanged("ComplementInsurance");
					this.OnComplementInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplementInsuranceNO", DbType="NVarChar(50)")]
		public string ComplementInsuranceNO
		{
			get
			{
				return this._ComplementInsuranceNO;
			}
			set
			{
				if ((this._ComplementInsuranceNO != value))
				{
					this.OnComplementInsuranceNOChanging(value);
					this.SendPropertyChanging();
					this._ComplementInsuranceNO = value;
					this.SendPropertyChanged("ComplementInsuranceNO");
					this.OnComplementInsuranceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefrenceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RefrenceID
		{
			get
			{
				return this._RefrenceID;
			}
			set
			{
				if ((this._RefrenceID != value))
				{
					this.OnRefrenceIDChanging(value);
					this.SendPropertyChanging();
					this._RefrenceID = value;
					this.SendPropertyChanged("RefrenceID");
					this.OnRefrenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portable", DbType="Bit NOT NULL")]
		public bool Portable
		{
			get
			{
				return this._Portable;
			}
			set
			{
				if ((this._Portable != value))
				{
					this.OnPortableChanging(value);
					this.SendPropertyChanging();
					this._Portable = value;
					this.SendPropertyChanged("Portable");
					this.OnPortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmFinanceSumK", DbType="Float")]
		public System.Nullable<double> ConfirmFinanceSumK
		{
			get
			{
				return this._ConfirmFinanceSumK;
			}
			set
			{
				if ((this._ConfirmFinanceSumK != value))
				{
					this.OnConfirmFinanceSumKChanging(value);
					this.SendPropertyChanging();
					this._ConfirmFinanceSumK = value;
					this.SendPropertyChanged("ConfirmFinanceSumK");
					this.OnConfirmFinanceSumKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionType", DbType="NVarChar(50)")]
		public string AdmissionType
		{
			get
			{
				return this._AdmissionType;
			}
			set
			{
				if ((this._AdmissionType != value))
				{
					this.OnAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionType = value;
					this.SendPropertyChanged("AdmissionType");
					this.OnAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_QA", Storage="_QAs", ThisKey="ID", OtherKey="IDGivenServiceM")]
		public EntitySet<QA> QAs
		{
			get
			{
				return this._QAs;
			}
			set
			{
				this._QAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="GsmID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_GivenServiceM", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_GivenServiceM", Storage="_GivenServiceM1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM1
		{
			get
			{
				return this._GivenServiceM1.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM1.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM1.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._GivenServiceM1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM", Storage="_Staff", ThisKey="RequestStaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._RequestStaffID = value.ID;
					}
					else
					{
						this._RequestStaffID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM1", Storage="_Staff1", ThisKey="FunctorID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff1
		{
			get
			{
				return this._Staff1.Entity;
			}
			set
			{
				Staff previousValue = this._Staff1.Entity;
				if (((previousValue != value) 
							|| (this._Staff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff1.Entity = null;
						previousValue.GivenServiceMs1.Remove(this);
					}
					this._Staff1.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs1.Add(this);
						this._FunctorID = value.ID;
					}
					else
					{
						this._FunctorID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_GivenServiceM2", Storage="_Staff2", ThisKey="TechnicianID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff2
		{
			get
			{
				return this._Staff2.Entity;
			}
			set
			{
				Staff previousValue = this._Staff2.Entity;
				if (((previousValue != value) 
							|| (this._Staff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff2.Entity = null;
						previousValue.GivenServiceMs2.Remove(this);
					}
					this._Staff2.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs2.Add(this);
						this._TechnicianID = value.ID;
					}
					else
					{
						this._TechnicianID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Staff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_Person", ThisKey="PersonID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._PersonID = value.ID;
					}
					else
					{
						this._PersonID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_Agenda", ThisKey="AgendaID", OtherKey="ID", IsForeignKey=true)]
		public Agenda Agenda
		{
			get
			{
				return this._Agenda.Entity;
			}
			set
			{
				Agenda previousValue = this._Agenda.Entity;
				if (((previousValue != value) 
							|| (this._Agenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agenda.Entity = null;
						previousValue.GivenServiceMs.Remove(this);
					}
					this._Agenda.Entity = value;
					if ((value != null))
					{
						value.GivenServiceMs.Add(this);
						this._AgendaID = value.ID;
					}
					else
					{
						this._AgendaID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Agenda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_QAs(QA entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM1 = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.GivenServiceM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _MedicalID;
		
		private string _FamilyNumber;
		
		private System.Nullable<System.Guid> _FamilyDoctor;
		
		private System.Nullable<System.Guid> _FamilyNurse;
		
		private string _NationalCode;
		
		private string _PersonalCode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<bool> _Sex;
		
		private string _IdentityNumber;
		
		private string _IdentityPlace;
		
		private string _FatherName;
		
		private string _BirthDate;
		
		private string _BirthPlace;
		
		private string _Phone;
		
		private string _CellularPhone;
		
		private string _WorkPhone;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Address;
		
		private string _WorkAddress;
		
		private string _InsuranceName;
		
		private string _InsuranceNo;
		
		private string _Education;
		
		private string _Comment;
		
		private string _MaritalStatus;
		
		private string _Religion;
		
		private string _CurrentJob;
		
		private string _BloodType;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<int> _Barcode;
		
		private System.Nullable<int> _CreatorUser;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModificator;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private string _BookletExpireDate;
		
		private bool _AllowInstallment;
		
		private bool _NotUse;
		
		private bool _Visibel;
		
		private bool _Death;
		
		private string _DeathTime;
		
		private string _DeathDate;
		
		private string _DialectLanguage;
		
		private bool _Forieng;
		
		private string _Nationality;
		
		private string _PassportNumber;
		
		private EntityRef<Staff> _Staff;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Person> _Persons1;
		
		private EntityRef<Person> _Person1;
		
		private EntityRef<Person> _Person2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMedicalIDChanging(string value);
    partial void OnMedicalIDChanged();
    partial void OnFamilyNumberChanging(string value);
    partial void OnFamilyNumberChanged();
    partial void OnFamilyDoctorChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyDoctorChanged();
    partial void OnFamilyNurseChanging(System.Nullable<System.Guid> value);
    partial void OnFamilyNurseChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnPersonalCodeChanging(string value);
    partial void OnPersonalCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnIdentityPlaceChanging(string value);
    partial void OnIdentityPlaceChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnBirthDateChanging(string value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellularPhoneChanging(string value);
    partial void OnCellularPhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnWorkAddressChanging(string value);
    partial void OnWorkAddressChanged();
    partial void OnInsuranceNameChanging(string value);
    partial void OnInsuranceNameChanged();
    partial void OnInsuranceNoChanging(string value);
    partial void OnInsuranceNoChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnCurrentJobChanging(string value);
    partial void OnCurrentJobChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnBarcodeChanging(System.Nullable<int> value);
    partial void OnBarcodeChanged();
    partial void OnCreatorUserChanging(System.Nullable<int> value);
    partial void OnCreatorUserChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModificatorChanging(System.Nullable<int> value);
    partial void OnLastModificatorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnBookletExpireDateChanging(string value);
    partial void OnBookletExpireDateChanged();
    partial void OnAllowInstallmentChanging(bool value);
    partial void OnAllowInstallmentChanged();
    partial void OnNotUseChanging(bool value);
    partial void OnNotUseChanged();
    partial void OnVisibelChanging(bool value);
    partial void OnVisibelChanged();
    partial void OnDeathChanging(bool value);
    partial void OnDeathChanged();
    partial void OnDeathTimeChanging(string value);
    partial void OnDeathTimeChanged();
    partial void OnDeathDateChanging(string value);
    partial void OnDeathDateChanged();
    partial void OnDialectLanguageChanging(string value);
    partial void OnDialectLanguageChanged();
    partial void OnForiengChanging(bool value);
    partial void OnForiengChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    #endregion
		
		public Person()
		{
			this._Staff = default(EntityRef<Staff>);
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Persons1 = new EntitySet<Person>(new Action<Person>(this.attach_Persons1), new Action<Person>(this.detach_Persons1));
			this._Person1 = default(EntityRef<Person>);
			this._Person2 = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalID", DbType="NVarChar(13)")]
		public string MedicalID
		{
			get
			{
				return this._MedicalID;
			}
			set
			{
				if ((this._MedicalID != value))
				{
					this.OnMedicalIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalID = value;
					this.SendPropertyChanged("MedicalID");
					this.OnMedicalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNumber", DbType="NVarChar(10)")]
		public string FamilyNumber
		{
			get
			{
				return this._FamilyNumber;
			}
			set
			{
				if ((this._FamilyNumber != value))
				{
					this.OnFamilyNumberChanging(value);
					this.SendPropertyChanging();
					this._FamilyNumber = value;
					this.SendPropertyChanged("FamilyNumber");
					this.OnFamilyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyDoctor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyDoctor
		{
			get
			{
				return this._FamilyDoctor;
			}
			set
			{
				if ((this._FamilyDoctor != value))
				{
					if (this._Person1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyDoctorChanging(value);
					this.SendPropertyChanging();
					this._FamilyDoctor = value;
					this.SendPropertyChanged("FamilyDoctor");
					this.OnFamilyDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNurse", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FamilyNurse
		{
			get
			{
				return this._FamilyNurse;
			}
			set
			{
				if ((this._FamilyNurse != value))
				{
					if (this._Person2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFamilyNurseChanging(value);
					this.SendPropertyChanging();
					this._FamilyNurse = value;
					this.SendPropertyChanged("FamilyNurse");
					this.OnFamilyNurseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="NVarChar(10)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalCode", DbType="NVarChar(10)")]
		public string PersonalCode
		{
			get
			{
				return this._PersonalCode;
			}
			set
			{
				if ((this._PersonalCode != value))
				{
					this.OnPersonalCodeChanging(value);
					this.SendPropertyChanging();
					this._PersonalCode = value;
					this.SendPropertyChanged("PersonalCode");
					this.OnPersonalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(10)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityPlace", DbType="NVarChar(50)")]
		public string IdentityPlace
		{
			get
			{
				return this._IdentityPlace;
			}
			set
			{
				if ((this._IdentityPlace != value))
				{
					this.OnIdentityPlaceChanging(value);
					this.SendPropertyChanging();
					this._IdentityPlace = value;
					this.SendPropertyChanged("IdentityPlace");
					this.OnIdentityPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(100)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="NVarChar(10)")]
		public string BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="NVarChar(50)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellularPhone", DbType="NVarChar(25)")]
		public string CellularPhone
		{
			get
			{
				return this._CellularPhone;
			}
			set
			{
				if ((this._CellularPhone != value))
				{
					this.OnCellularPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellularPhone = value;
					this.SendPropertyChanged("CellularPhone");
					this.OnCellularPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(25)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAddress", DbType="NVarChar(300)")]
		public string WorkAddress
		{
			get
			{
				return this._WorkAddress;
			}
			set
			{
				if ((this._WorkAddress != value))
				{
					this.OnWorkAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkAddress = value;
					this.SendPropertyChanged("WorkAddress");
					this.OnWorkAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceName", DbType="NVarChar(50)")]
		public string InsuranceName
		{
			get
			{
				return this._InsuranceName;
			}
			set
			{
				if ((this._InsuranceName != value))
				{
					this.OnInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._InsuranceName = value;
					this.SendPropertyChanged("InsuranceName");
					this.OnInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceNo", DbType="NVarChar(50)")]
		public string InsuranceNo
		{
			get
			{
				return this._InsuranceNo;
			}
			set
			{
				if ((this._InsuranceNo != value))
				{
					this.OnInsuranceNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceNo = value;
					this.SendPropertyChanged("InsuranceNo");
					this.OnInsuranceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(100)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="NVarChar(50)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentJob", DbType="NVarChar(500)")]
		public string CurrentJob
		{
			get
			{
				return this._CurrentJob;
			}
			set
			{
				if ((this._CurrentJob != value))
				{
					this.OnCurrentJobChanging(value);
					this.SendPropertyChanging();
					this._CurrentJob = value;
					this.SendPropertyChanged("CurrentJob");
					this.OnCurrentJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(20)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Float")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="Int")]
		public System.Nullable<int> Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUser", DbType="Int")]
		public System.Nullable<int> CreatorUser
		{
			get
			{
				return this._CreatorUser;
			}
			set
			{
				if ((this._CreatorUser != value))
				{
					this.OnCreatorUserChanging(value);
					this.SendPropertyChanging();
					this._CreatorUser = value;
					this.SendPropertyChanged("CreatorUser");
					this.OnCreatorUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificator", DbType="Int")]
		public System.Nullable<int> LastModificator
		{
			get
			{
				return this._LastModificator;
			}
			set
			{
				if ((this._LastModificator != value))
				{
					this.OnLastModificatorChanging(value);
					this.SendPropertyChanging();
					this._LastModificator = value;
					this.SendPropertyChanged("LastModificator");
					this.OnLastModificatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookletExpireDate", DbType="NVarChar(10)")]
		public string BookletExpireDate
		{
			get
			{
				return this._BookletExpireDate;
			}
			set
			{
				if ((this._BookletExpireDate != value))
				{
					this.OnBookletExpireDateChanging(value);
					this.SendPropertyChanging();
					this._BookletExpireDate = value;
					this.SendPropertyChanged("BookletExpireDate");
					this.OnBookletExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowInstallment", DbType="Bit NOT NULL")]
		public bool AllowInstallment
		{
			get
			{
				return this._AllowInstallment;
			}
			set
			{
				if ((this._AllowInstallment != value))
				{
					this.OnAllowInstallmentChanging(value);
					this.SendPropertyChanging();
					this._AllowInstallment = value;
					this.SendPropertyChanged("AllowInstallment");
					this.OnAllowInstallmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotUse", DbType="Bit NOT NULL")]
		public bool NotUse
		{
			get
			{
				return this._NotUse;
			}
			set
			{
				if ((this._NotUse != value))
				{
					this.OnNotUseChanging(value);
					this.SendPropertyChanging();
					this._NotUse = value;
					this.SendPropertyChanged("NotUse");
					this.OnNotUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibel", DbType="Bit NOT NULL")]
		public bool Visibel
		{
			get
			{
				return this._Visibel;
			}
			set
			{
				if ((this._Visibel != value))
				{
					this.OnVisibelChanging(value);
					this.SendPropertyChanging();
					this._Visibel = value;
					this.SendPropertyChanged("Visibel");
					this.OnVisibelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Death", DbType="Bit NOT NULL")]
		public bool Death
		{
			get
			{
				return this._Death;
			}
			set
			{
				if ((this._Death != value))
				{
					this.OnDeathChanging(value);
					this.SendPropertyChanging();
					this._Death = value;
					this.SendPropertyChanged("Death");
					this.OnDeathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTime", DbType="NVarChar(8)")]
		public string DeathTime
		{
			get
			{
				return this._DeathTime;
			}
			set
			{
				if ((this._DeathTime != value))
				{
					this.OnDeathTimeChanging(value);
					this.SendPropertyChanging();
					this._DeathTime = value;
					this.SendPropertyChanged("DeathTime");
					this.OnDeathTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathDate", DbType="NVarChar(10)")]
		public string DeathDate
		{
			get
			{
				return this._DeathDate;
			}
			set
			{
				if ((this._DeathDate != value))
				{
					this.OnDeathDateChanging(value);
					this.SendPropertyChanging();
					this._DeathDate = value;
					this.SendPropertyChanged("DeathDate");
					this.OnDeathDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialectLanguage", DbType="NVarChar(50)")]
		public string DialectLanguage
		{
			get
			{
				return this._DialectLanguage;
			}
			set
			{
				if ((this._DialectLanguage != value))
				{
					this.OnDialectLanguageChanging(value);
					this.SendPropertyChanging();
					this._DialectLanguage = value;
					this.SendPropertyChanged("DialectLanguage");
					this.OnDialectLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forieng", DbType="Bit NOT NULL")]
		public bool Forieng
		{
			get
			{
				return this._Forieng;
			}
			set
			{
				if ((this._Forieng != value))
				{
					this.OnForiengChanging(value);
					this.SendPropertyChanging();
					this._Forieng = value;
					this.SendPropertyChanged("Forieng");
					this.OnForiengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(50)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Staff", Storage="_Staff", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Person = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="PersonID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Persons", ThisKey="ID", OtherKey="FamilyDoctor")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Persons1", ThisKey="ID", OtherKey="FamilyNurse")]
		public EntitySet<Person> Persons1
		{
			get
			{
				return this._Persons1;
			}
			set
			{
				this._Persons1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person", Storage="_Person1", ThisKey="FamilyDoctor", OtherKey="ID", IsForeignKey=true)]
		public Person Person1
		{
			get
			{
				return this._Person1.Entity;
			}
			set
			{
				Person previousValue = this._Person1.Entity;
				if (((previousValue != value) 
							|| (this._Person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person1.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Person1.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._FamilyDoctor = value.ID;
					}
					else
					{
						this._FamilyDoctor = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Person1", Storage="_Person2", ThisKey="FamilyNurse", OtherKey="ID", IsForeignKey=true)]
		public Person Person2
		{
			get
			{
				return this._Person2.Entity;
			}
			set
			{
				Person previousValue = this._Person2.Entity;
				if (((previousValue != value) 
							|| (this._Person2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person2.Entity = null;
						previousValue.Persons1.Remove(this);
					}
					this._Person2.Entity = value;
					if ((value != null))
					{
						value.Persons1.Add(this);
						this._FamilyNurse = value.ID;
					}
					else
					{
						this._FamilyNurse = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Person2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person1 = null;
		}
		
		private void attach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = this;
		}
		
		private void detach_Persons1(Person entity)
		{
			this.SendPropertyChanging();
			entity.Person2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agenda")]
	public partial class Agenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _PeriodicCalenderID;
		
		private System.Guid _StaffID;
		
		private int _ShiftID;
		
		private string _Date;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _GivenCapacity;
		
		private System.Nullable<int> _InaccessibleCapacity;
		
		private System.Nullable<int> _GivenInaccessible;
		
		private System.Nullable<int> _GivenDispatch;
		
		private System.Nullable<int> _DispatchCapacity;
		
		private string _BeginTime;
		
		private string _EndTime;
		
		private string _Comment;
		
		private System.Guid _DepartmentID;
		
		private System.Nullable<System.Guid> _ServiceID;
		
		private System.Nullable<bool> _Deleted;
		
		private EntitySet<GivenServiceM> _GivenServiceMs;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnPeriodicCalenderIDChanging(System.Nullable<System.Guid> value);
    partial void OnPeriodicCalenderIDChanged();
    partial void OnStaffIDChanging(System.Guid value);
    partial void OnStaffIDChanged();
    partial void OnShiftIDChanging(int value);
    partial void OnShiftIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnGivenCapacityChanging(System.Nullable<int> value);
    partial void OnGivenCapacityChanged();
    partial void OnInaccessibleCapacityChanging(System.Nullable<int> value);
    partial void OnInaccessibleCapacityChanged();
    partial void OnGivenInaccessibleChanging(System.Nullable<int> value);
    partial void OnGivenInaccessibleChanged();
    partial void OnGivenDispatchChanging(System.Nullable<int> value);
    partial void OnGivenDispatchChanged();
    partial void OnDispatchCapacityChanging(System.Nullable<int> value);
    partial void OnDispatchCapacityChanged();
    partial void OnBeginTimeChanging(string value);
    partial void OnBeginTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    partial void OnServiceIDChanging(System.Nullable<System.Guid> value);
    partial void OnServiceIDChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public Agenda()
		{
			this._GivenServiceMs = new EntitySet<GivenServiceM>(new Action<GivenServiceM>(this.attach_GivenServiceMs), new Action<GivenServiceM>(this.detach_GivenServiceMs));
			this._Department = default(EntityRef<Department>);
			this._Service = default(EntityRef<Service>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodicCalenderID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PeriodicCalenderID
		{
			get
			{
				return this._PeriodicCalenderID;
			}
			set
			{
				if ((this._PeriodicCalenderID != value))
				{
					this.OnPeriodicCalenderIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodicCalenderID = value;
					this.SendPropertyChanged("PeriodicCalenderID");
					this.OnPeriodicCalenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="Int NOT NULL")]
		public int ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenCapacity", DbType="Int")]
		public System.Nullable<int> GivenCapacity
		{
			get
			{
				return this._GivenCapacity;
			}
			set
			{
				if ((this._GivenCapacity != value))
				{
					this.OnGivenCapacityChanging(value);
					this.SendPropertyChanging();
					this._GivenCapacity = value;
					this.SendPropertyChanged("GivenCapacity");
					this.OnGivenCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InaccessibleCapacity", DbType="Int")]
		public System.Nullable<int> InaccessibleCapacity
		{
			get
			{
				return this._InaccessibleCapacity;
			}
			set
			{
				if ((this._InaccessibleCapacity != value))
				{
					this.OnInaccessibleCapacityChanging(value);
					this.SendPropertyChanging();
					this._InaccessibleCapacity = value;
					this.SendPropertyChanged("InaccessibleCapacity");
					this.OnInaccessibleCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenInaccessible", DbType="Int")]
		public System.Nullable<int> GivenInaccessible
		{
			get
			{
				return this._GivenInaccessible;
			}
			set
			{
				if ((this._GivenInaccessible != value))
				{
					this.OnGivenInaccessibleChanging(value);
					this.SendPropertyChanging();
					this._GivenInaccessible = value;
					this.SendPropertyChanged("GivenInaccessible");
					this.OnGivenInaccessibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenDispatch", DbType="Int")]
		public System.Nullable<int> GivenDispatch
		{
			get
			{
				return this._GivenDispatch;
			}
			set
			{
				if ((this._GivenDispatch != value))
				{
					this.OnGivenDispatchChanging(value);
					this.SendPropertyChanging();
					this._GivenDispatch = value;
					this.SendPropertyChanged("GivenDispatch");
					this.OnGivenDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchCapacity", DbType="Int")]
		public System.Nullable<int> DispatchCapacity
		{
			get
			{
				return this._DispatchCapacity;
			}
			set
			{
				if ((this._DispatchCapacity != value))
				{
					this.OnDispatchCapacityChanging(value);
					this.SendPropertyChanging();
					this._DispatchCapacity = value;
					this.SendPropertyChanged("DispatchCapacity");
					this.OnDispatchCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginTime", DbType="NChar(5)")]
		public string BeginTime
		{
			get
			{
				return this._BeginTime;
			}
			set
			{
				if ((this._BeginTime != value))
				{
					this.OnBeginTimeChanging(value);
					this.SendPropertyChanging();
					this._BeginTime = value;
					this.SendPropertyChanged("BeginTime");
					this.OnBeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NChar(5)")]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agenda_GivenServiceM", Storage="_GivenServiceMs", ThisKey="ID", OtherKey="AgendaID")]
		public EntitySet<GivenServiceM> GivenServiceMs
		{
			get
			{
				return this._GivenServiceMs;
			}
			set
			{
				this._GivenServiceMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Agenda", Storage="_Department", ThisKey="DepartmentID", OtherKey="ID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._DepartmentID = value.ID;
					}
					else
					{
						this._DepartmentID = default(System.Guid);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Agenda", Storage="_Service", ThisKey="ServiceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._ServiceID = value.ID;
					}
					else
					{
						this._ServiceID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Agenda", Storage="_Staff", ThisKey="StaffID", OtherKey="ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Agendas.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Agendas.Add(this);
						this._StaffID = value.ID;
					}
					else
					{
						this._StaffID = default(System.Guid);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = this;
		}
		
		private void detach_GivenServiceMs(GivenServiceM entity)
		{
			this.SendPropertyChanging();
			entity.Agenda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DispatchReason")]
	public partial class DispatchReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SpecialityID;
		
		private string _Title;
		
		private System.Nullable<int> _NationalID;
		
		private string _Description;
		
		private bool _EmergencyResons;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntityRef<Speciality> _Speciality;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpecialityIDChanging(int value);
    partial void OnSpecialityIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNationalIDChanging(System.Nullable<int> value);
    partial void OnNationalIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEmergencyResonsChanging(bool value);
    partial void OnEmergencyResonsChanged();
    #endregion
		
		public DispatchReason()
		{
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Speciality = default(EntityRef<Speciality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityID", DbType="Int NOT NULL")]
		public int SpecialityID
		{
			get
			{
				return this._SpecialityID;
			}
			set
			{
				if ((this._SpecialityID != value))
				{
					if (this._Speciality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialityIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialityID = value;
					this.SendPropertyChanged("SpecialityID");
					this.OnSpecialityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(3000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="Int")]
		public System.Nullable<int> NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyResons", DbType="Bit NOT NULL")]
		public bool EmergencyResons
		{
			get
			{
				return this._EmergencyResons;
			}
			set
			{
				if ((this._EmergencyResons != value))
				{
					this.OnEmergencyResonsChanging(value);
					this.SendPropertyChanging();
					this._EmergencyResons = value;
					this.SendPropertyChanged("EmergencyResons");
					this.OnEmergencyResonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispatchReason_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="DispatchResonID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Speciality_DispatchReason", Storage="_Speciality", ThisKey="SpecialityID", OtherKey="ID", IsForeignKey=true)]
		public Speciality Speciality
		{
			get
			{
				return this._Speciality.Entity;
			}
			set
			{
				Speciality previousValue = this._Speciality.Entity;
				if (((previousValue != value) 
							|| (this._Speciality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Speciality.Entity = null;
						previousValue.DispatchReasons.Remove(this);
					}
					this._Speciality.Entity = value;
					if ((value != null))
					{
						value.DispatchReasons.Add(this);
						this._SpecialityID = value.ID;
					}
					else
					{
						this._SpecialityID = default(int);
					}
					this.SendPropertyChanged("Speciality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.DispatchReason = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.DispatchReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dispatch")]
	public partial class Dispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _GsmID;
		
		private System.Nullable<int> _DispatchResonID;
		
		private string _Comment;
		
		private System.Nullable<int> _CreatorUserID;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private System.Nullable<int> _LastModifactor;
		
		private string _LastModificationDate;
		
		private string _LastModificationTime;
		
		private bool _Deleted;
		
		private bool _Confirmation;
		
		private string _ConfirmationDate;
		
		private string _ConfirmationTime;
		
		private System.Nullable<int> _ConfirmationUserID;
		
		private EntityRef<DispatchReason> _DispatchReason;
		
		private EntityRef<GivenServiceM> _GivenServiceM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGsmIDChanging(System.Nullable<System.Guid> value);
    partial void OnGsmIDChanged();
    partial void OnDispatchResonIDChanging(System.Nullable<int> value);
    partial void OnDispatchResonIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreatorUserIDChanging(System.Nullable<int> value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnLastModifactorChanging(System.Nullable<int> value);
    partial void OnLastModifactorChanged();
    partial void OnLastModificationDateChanging(string value);
    partial void OnLastModificationDateChanged();
    partial void OnLastModificationTimeChanging(string value);
    partial void OnLastModificationTimeChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnConfirmationChanging(bool value);
    partial void OnConfirmationChanged();
    partial void OnConfirmationDateChanging(string value);
    partial void OnConfirmationDateChanged();
    partial void OnConfirmationTimeChanging(string value);
    partial void OnConfirmationTimeChanged();
    partial void OnConfirmationUserIDChanging(System.Nullable<int> value);
    partial void OnConfirmationUserIDChanged();
    #endregion
		
		public Dispatch()
		{
			this._DispatchReason = default(EntityRef<DispatchReason>);
			this._GivenServiceM = default(EntityRef<GivenServiceM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GsmID
		{
			get
			{
				return this._GsmID;
			}
			set
			{
				if ((this._GsmID != value))
				{
					if (this._GivenServiceM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGsmIDChanging(value);
					this.SendPropertyChanging();
					this._GsmID = value;
					this.SendPropertyChanged("GsmID");
					this.OnGsmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchResonID", DbType="Int")]
		public System.Nullable<int> DispatchResonID
		{
			get
			{
				return this._DispatchResonID;
			}
			set
			{
				if ((this._DispatchResonID != value))
				{
					if (this._DispatchReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDispatchResonIDChanging(value);
					this.SendPropertyChanging();
					this._DispatchResonID = value;
					this.SendPropertyChanged("DispatchResonID");
					this.OnDispatchResonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(3000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorUserID", DbType="Int")]
		public System.Nullable<int> CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(8)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifactor", DbType="Int")]
		public System.Nullable<int> LastModifactor
		{
			get
			{
				return this._LastModifactor;
			}
			set
			{
				if ((this._LastModifactor != value))
				{
					this.OnLastModifactorChanging(value);
					this.SendPropertyChanging();
					this._LastModifactor = value;
					this.SendPropertyChanged("LastModifactor");
					this.OnLastModifactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationDate", DbType="NVarChar(10)")]
		public string LastModificationDate
		{
			get
			{
				return this._LastModificationDate;
			}
			set
			{
				if ((this._LastModificationDate != value))
				{
					this.OnLastModificationDateChanging(value);
					this.SendPropertyChanging();
					this._LastModificationDate = value;
					this.SendPropertyChanged("LastModificationDate");
					this.OnLastModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModificationTime", DbType="NVarChar(8)")]
		public string LastModificationTime
		{
			get
			{
				return this._LastModificationTime;
			}
			set
			{
				if ((this._LastModificationTime != value))
				{
					this.OnLastModificationTimeChanging(value);
					this.SendPropertyChanging();
					this._LastModificationTime = value;
					this.SendPropertyChanged("LastModificationTime");
					this.OnLastModificationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmation", DbType="Bit NOT NULL")]
		public bool Confirmation
		{
			get
			{
				return this._Confirmation;
			}
			set
			{
				if ((this._Confirmation != value))
				{
					this.OnConfirmationChanging(value);
					this.SendPropertyChanging();
					this._Confirmation = value;
					this.SendPropertyChanged("Confirmation");
					this.OnConfirmationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationDate", DbType="NVarChar(10)")]
		public string ConfirmationDate
		{
			get
			{
				return this._ConfirmationDate;
			}
			set
			{
				if ((this._ConfirmationDate != value))
				{
					this.OnConfirmationDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationDate = value;
					this.SendPropertyChanged("ConfirmationDate");
					this.OnConfirmationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationTime", DbType="NVarChar(8)")]
		public string ConfirmationTime
		{
			get
			{
				return this._ConfirmationTime;
			}
			set
			{
				if ((this._ConfirmationTime != value))
				{
					this.OnConfirmationTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationTime = value;
					this.SendPropertyChanged("ConfirmationTime");
					this.OnConfirmationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationUserID", DbType="Int")]
		public System.Nullable<int> ConfirmationUserID
		{
			get
			{
				return this._ConfirmationUserID;
			}
			set
			{
				if ((this._ConfirmationUserID != value))
				{
					this.OnConfirmationUserIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationUserID = value;
					this.SendPropertyChanged("ConfirmationUserID");
					this.OnConfirmationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DispatchReason_Dispatch", Storage="_DispatchReason", ThisKey="DispatchResonID", OtherKey="ID", IsForeignKey=true)]
		public DispatchReason DispatchReason
		{
			get
			{
				return this._DispatchReason.Entity;
			}
			set
			{
				DispatchReason previousValue = this._DispatchReason.Entity;
				if (((previousValue != value) 
							|| (this._DispatchReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DispatchReason.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._DispatchReason.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._DispatchResonID = value.ID;
					}
					else
					{
						this._DispatchResonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DispatchReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GivenServiceM_Dispatch", Storage="_GivenServiceM", ThisKey="GsmID", OtherKey="ID", IsForeignKey=true)]
		public GivenServiceM GivenServiceM
		{
			get
			{
				return this._GivenServiceM.Entity;
			}
			set
			{
				GivenServiceM previousValue = this._GivenServiceM.Entity;
				if (((previousValue != value) 
							|| (this._GivenServiceM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GivenServiceM.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._GivenServiceM.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._GsmID = value.ID;
					}
					else
					{
						this._GsmID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("GivenServiceM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
