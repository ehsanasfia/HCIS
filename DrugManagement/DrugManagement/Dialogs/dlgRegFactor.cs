using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DrugManagement.Data;

namespace DrugManagement.Dialogs
{
    public partial class dlgRegFactor : DevExpress.XtraEditors.XtraForm
    {
        HCISDataContexDataContext dc = new HCISDataContexDataContext();
        List<FactorD> lst = new List<FactorD>();
        public FactorM ObjectFM { get; set; }
        // List<FactorD> lst1 = new List<FactorD>();
        public bool MES;
        //List<ViweMAXMESE> lst1 = new List<ViweMAXMESE>();
        public dlgRegFactor()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            //  factorDsBindingSource.DataSource = new DrugManagement.Data.HCISDataContexDataContext().FactorDs;
        }

        private void dlgRegFactor_Load(object sender, EventArgs e)
        {
            radioGroup1.EditValue = false;
            GetData();
            txtFactorDate.Text = MainModule.GetPersianDate(DateTime.Now);
            var x = DateTime.Now;
            var y = x.AddDays(30);
            textEdit1.Text = MainModule.GetPersianDate(y);
            //textEdit1.Text = (int.Parse(txtFactorDate.Text)+  int.Parse("30")).ToString() ;

            //  txtExpireDate.Text = MainModule.GetPersianDate(DateTime.Now);
        }
        private void GetData()
        {
            drugTransfereeBindingSource.DataSource = dc.DrugTransferees.ToList();
            departmentBindingSource.DataSource = dc.Departments.Where(c => c.TypeID == 12 && c.Pharmacy.ID == c.ID && c.Name != "انبار").ToList();
            if (ObjectFM == null)
            {
                ObjectFM = new FactorM();
            }
            companyBindingSource.DataSource = dc.Companies.ToList();
            //var org = MainModule.MyDepartment.ID;
            //if (org == null)
            //{
            //    aPPharmcyDrugBindingSource.DataSource = null;
            //    return;
            //}
            //aPPharmcyDrugBindingSource.DataSource = dc.AP_PharmcyDrugs.Where(c => c.PharmacyID == org).OrderBy(c => c.NameandShape).ToList();

            aPPharmcyDrugAnbarBindingSource.DataSource = dc.AP_PharmcyDrugAnbars.OrderBy(c => c.Name).ToList();
            //  orderBindingSource.DataSource = dc.Orders.OrderByDescending(c => c.RequestD.RequestM.CreationTime).OrderByDescending(c => c.RequestD.RequestM.CreationDate).ToList();

        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            //if (txtAmount.Text == "")
            //{
            //    MessageBox.Show("تعداد را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            //    return;
            //}

            //if (txtPrice.Text == "")
            //{
            //    MessageBox.Show("مبلغ فروش را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            //    return;
            //}
            FactorD u = new FactorD();
            if (MES == true)
            {
                u.MESCCode_No = txtMCSE.Text;
            }
            else
            {
                u.MESCCode_No = "";
            }

            u.AmountBuy = Int32.Parse(txtAmount.Text);
            u.Price = Int32.Parse(txtPrice.Text);
            u.ExpireDate = txtExpireDate.Text;
            //u.NumPageProduct = Int32.Parse(txtNumPageProduct.Text);
            u.FactorM = ObjectFM;
            if (lst.Any(c => c.AP_PharmcyDrugAnbar == u.AP_PharmcyDrugAnbar)) { MessageBox.Show("دارو قبلا به لیست اضافه شده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading); }
            // u.DrugName = (skpDrug.EditValue as Service).Name;
            //u.LastModificationDate = MainModule.GetPersianDate(DateTime.Now);
            //u.LastModificationTime = DateTime.Now.ToString("HH:mm");
            lst.Add(u);
            //requestDsBindingSource.DataSource = lst;
            gridControl1.RefreshDataSource();
            factorDBindingSource1.DataSource = lst;
            // GetData();
            txtAmount.Text = "";
            skpDrug.EditValue = null;
            txtPrice.Text = null;
            txtMCSE.Text = null;
            // txtDiscount.Text = "0";

        }

        private void btnDeleted_Click(object sender, EventArgs e)
        {
            var row = factorDBindingSource1.Current as FactorD;
            lst.Remove(row);
            factorDBindingSource1.DataSource = lst;
            gridControl1.RefreshDataSource();
            GetData();
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void btnOk_Click(object sender, EventArgs e)
        {

        }

        private void barButtonItem32_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Close();
        }

        private void barButtonItem31_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {

        }

        private void mmdDescription_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void skpDrug_KeyPress(object sender, KeyPressEventArgs e)
        {

        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            var row = factorDBindingSource1.Current as FactorD;

            lst.Remove(row);

            factorDBindingSource1.DataSource = lst;
            gridControl1.RefreshDataSource();
            GetData();
        }

        private void barButtonItem33_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var row = factorDBindingSource1.Current as FactorD;

            lst.Remove(row);

            factorDBindingSource1.DataSource = lst;
            gridControl1.RefreshDataSource();
            GetData();
        }

        private void simpleButton1_Click_1(object sender, EventArgs e)
        {
            foreach (var item in lst)
            {
                if (item.AmountBuy == null)
                {
                    MessageBox.Show("مقدار یا مبلغ برای( " + item.AP_PharmcyDrugAnbar.Name + " )وارد نشده است.", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                    return;
                }

            }

            if (lkpComapany.EditValue == null)
            {
                MessageBox.Show("نام توزیع کننده را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
            if (lkpResponsibleSale.EditValue == null)
            {
                MessageBox.Show("تحویل گیرنده را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }


            //foreach (var item in lst)
            //    if (item.AmountBuy == null)
            //    {
            //        MessageBox.Show("قیمت را برای( " + item.Service.Name + " )وارد کنید.", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            //        return;
            //    }

            if (txtFactorDate.Text == "")
            {
                MessageBox.Show("تاریخ فاکتور را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
            //if (lkpComapany.Text == "")
            //{
            //    MessageBox.Show("شرکت را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            //    return;
            //}

            // ObjectFM.ReqMID = ObjectRD.ID;
            //ObjectFM.Department = (lkpDistributor.EditValue as Department);

            ObjectFM.Company = (lkpComapany.EditValue as Company);
            ObjectFM.FactorNumber = txtFactorNumber.Text;
            ObjectFM.DemandNumber = txtDemandNumber.Text;
            ObjectFM.Ordernum = txtORdernum.Text;
            ObjectFM.ReceiptNumber = txtReceiptNumber.Text;
            ObjectFM.Barname = txtBarname.Text;
            ObjectFM.DrugTransferee = (lkpResponsibleSale.EditValue as DrugTransferee);
            ObjectFM.FactorDate = txtFactorDate.Text;
            ObjectFM.CreationDate = MainModule.GetPersianDate(DateTime.Now);
            ObjectFM.CreationTime = DateTime.Now.ToString("HH:mm");
            ObjectFM.CreatorUserID = MainModule.UserID;
            ObjectFM.CreatorUserFullName = MainModule.UserFullName;
            ObjectFM.NeedDate = textEdit1.Text;
            //ObjectFM.DeliveryDate = txtDeliveryDate.Text;
            //  ObjectFM.DeliveryTime = txtTime.Text;
            ObjectFM.Description = mmdDescription.Text;
            ObjectFM.AwardFactor = Boolean.Parse(radioGroup1.EditValue.ToString());
            MessageBox.Show("اطلاعات با موفقيت ثبت  گرديد", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            dc.FactorMs.InsertOnSubmit(ObjectFM);
            dc.SubmitChanges();
            GetData();
            txtFactorNumber.Text = null;
            txtDemandNumber.Text = null;
            txtORdernum.Text = null;
            txtReceiptNumber.Text = null;
            txtBarname.Text = null;
            //lkpResponsibleSale.ed = null;
            txtFactorDate.Text = null;
            //   txtDeliveryDate.Text = null;
            mmdDescription.Text = null;
            lkpComapany.EditValue = null;
            //  txtTime.Text = DateTime.Now.ToString("HH:mm");
            factorDBindingSource1.DataSource = null;

            DialogResult = DialogResult.OK;
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {

            Close();

        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            if (txtAmount.Text == "")
            {
                MessageBox.Show("تعداد را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }

            if (txtPrice.Text == "")
            {
                MessageBox.Show("ارزش را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
            FactorD u = new FactorD();
            u.AP_PharmcyDrugAnbar = (skpDrug.EditValue as AP_PharmcyDrugAnbar);



            u.ExpireDate = txtExpireDate.Text;
            //u.NumPageProduct = Int32.Parse(txtNumPageProduct.Text);
            if (MES == true)
            {
                u.MESCCode_No = txtMCSE.Text;
            }
            else
            {
                u.MESCCode_No = "";
            }

            if (txtAmount == null)
            {
                u.AmountBuy = 0;
            }
            else if (txtAmount != null)
            {
                u.AmountBuy = Int32.Parse(txtAmount.Text);
            }
            if (txtPrice == null)
            {
                u.Price = 0;
            }
            else if (txtPrice != null)
            {
                u.Price = Int32.Parse(txtPrice.Text);
            }
            u.FactorM = ObjectFM;
            if (lst.Any(c => c.AP_PharmcyDrugAnbar == u.AP_PharmcyDrugAnbar)) { MessageBox.Show("دارو قبلا به لیست اضافه شده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading); }
            // u.DrugName = (skpDrug.EditValue as Service).Name;
            //u.LastModificationDate = MainModule.GetPersianDate(DateTime.Now);
            //u.LastModificationTime = DateTime.Now.ToString("HH:mm");
            lst.Add(u);
            //requestDsBindingSource.DataSource = lst;
            gridControl1.RefreshDataSource();
            factorDBindingSource1.DataSource = lst;
            GetData();
            txtAmount.Text = "";
            skpDrug.EditValue = null;
            txtPrice.Text = null;
            txtMCSE.Text = null;
            txtExpireDate.Text = "";
            skpDrug.Select();

        }


        private void skpDrug_KeyPress_1(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Escape)
            {

                var u = new FactorD();

                u.AP_PharmcyDrugAnbar = (skpDrug.EditValue as AP_PharmcyDrugAnbar);
                //u.NumPageProduct = Int32.Parse(txtNumPageProduct.Text);
                //u.AmountBuy = Int32.Parse(txtAmount.Text);
                //u.Price = Int32.Parse(txtPrice.Text);
                //u.ExpireDate = txtExpireDate.Text;
                //  txtAmount.Text = "";
                //   txtPrice.Text = "";

                //u.Discount = Int32.Parse(txtDiscount.Text);
                //u.Tax = Int32.Parse(txtTax.Text);
                //u.Price = Int32.Parse(txtPrice.Text);
                //u.Pack = txtPack.Text;
                u.FactorM = ObjectFM;
                if (lst.Any(c => c.AP_PharmcyDrugAnbar == u.AP_PharmcyDrugAnbar)) { MessageBox.Show("دارو قبلا به لیست اضافه شده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading); }
                // u.DrugName = (skpDrug.EditValue as Service).Name;
                //u.LastModificationDate = MainModule.GetPersianDate(DateTime.Now);
                //u.LastModificationTime = DateTime.Now.ToString("HH:mm");
                lst.Add(u);
                //requestDsBindingSource.DataSource = lst;
                gridControl1.RefreshDataSource();
                factorDBindingSource1.DataSource = lst;
                GetData();
                //txtAmount.Text = "";
                //skpDrug.EditValue = null;
                //txtPrice.Text = null;
                //txtTax.Text = " 0";
                //txtDiscount.Text = "0";
                //txtNumPageProduct.Text = "0";
            }
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {
            var row = factorDBindingSource1.Current as FactorD;
            if (row == null)
                return;
            lst.Remove(row);
            factorDBindingSource1.DataSource = lst;
            gridControl1.RefreshDataSource();
            //GetData();
        }

        private void skpDrug_EditValueChanged(object sender, EventArgs e)
        {

            var did = skpDrug.EditValue as AP_PharmcyDrugAnbar;
            if (did == null)
            {
                return;
            }
            txtMCSE.Text = dc.AP_PharmcyDrugAnbars.FirstOrDefault(c => c.ID == did.ID).MESCCode_No;
            if (txtMCSE.Text == null || txtMCSE.Text == "" || txtMCSE.Text == " " || txtMCSE.Text == "  " || txtMCSE.Text == "   ")
            {


                //lst1 = dc.FactorDs.ToList();

                //txtMCSE.Text = lst1.Max(c=>c.FiLd)+"" ;
                txtMCSE.Enabled = true;
                MES = true;
            }
            else
            {
                txtMCSE.Enabled = false;
                MES = false;
            }
        }

        private void skpDrug_Popup(object sender, EventArgs e)
        {
            InputLanguage.CurrentInputLanguage = InputLanguage.FromCulture(new System.Globalization.CultureInfo("en-US"));
        }

        private void lkpComapany_Popup(object sender, EventArgs e)
        {
            InputLanguage.CurrentInputLanguage = InputLanguage.FromCulture(new System.Globalization.CultureInfo("fa-IR"));
        }
    }

}