using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using Inventory.Data;
using Inventory.Dialogs;
using Inventory.Forms;

namespace Inventory.Dialogs
{
    public partial class dlgFactor : DevExpress.XtraEditors.XtraForm
    {
        public DataClassesDataContext dc { get; set; }
        public bool isEdit { get; set; }
        public RequestM srv { get; set; }
        public Factor ObjectRM { get; set; }
        List<FactorProduct> lst = new List<FactorProduct>();
        public Factor PHT { get; set; }
        public dlgFactor()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            providersBindingSource.DataSource = new Inventory.Data.DataClassesDataContext().Providers;
        }

        private void btnNo_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void btnOk_Click(object sender, EventArgs e)
        {
        }

        private void dlgFactor_Load(object sender, EventArgs e)
        {
            try {
                txtR.Text = srv.ID + "";
            }
            catch { }
            GetData();
            txtFactorDate.Text = MainModule.GetPersianDate(DateTime.Now);

        }
        private void GetData()
        {
            try {
                txtFactorDate.Text = MainModule.GetPersianDate(DateTime.Now);
                gridControl2.RefreshDataSource();
                if (ObjectRM == null)
                {
                    ObjectRM = new Factor();
                }
                //RequestDBindingSource.DataSource = ObjectRD;
                requestDBindingSource.DataSource = dc.RequestDs
                      .Where(x =>
            (x.IDRequestM == srv.ID && x.WarehouseKeeper == false && x.WKBossPMR == true && x.BudgetPRM == true && x.FinancialPRM == true && x.SupportLibraryPRM == true && x.HealthcareBossPRM == true && x.ProcurementPRM == true && x.OrdersPRM == true && x.Product != null && x.Product.Parent != null && x.PMRLP == "PMR" && (x.MedicalEquipmentPRM == true || x.BuyUnitPRM == true))
            ||
            (x.IDRequestM == srv.ID && x.WKBossLP == true && x.BudgetLP == true && x.FinancialLP == true && x.SupportLibraryLP == true && x.PMRLP == "LP" && x.ProcurementLP)
            ).ToList();
                factorProductBindingSource.DataSource = ObjectRM.FactorProducts.ToList();
                providersBindingSource.DataSource = dc.Providers.Skip(1); }
             
            catch { }
        }

        private void gridView2_DoubleClick(object sender, EventArgs e)
        {
            var row = requestDBindingSource.Current as RequestD;
            if (row == null)
            {

                return;
            }
            if (lst.Any(c => c.IDProduct == row.IDProduct)) { MessageBox.Show("کالا تکراری"); return; }
            var RD = new FactorProduct()
            {

                IDProduct = row.IDProduct,
                Product = row.Product,
                Factor = ObjectRM,
            };


            lst = ObjectRM.FactorProducts.ToList();
            factorProductBindingSource.DataSource = lst;
            factorProductBindingSource.EndEdit();
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (txtFactorDate.Text == "")
            {
                MessageBox.Show("تاریخ فاکتور را وارد کنید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
           
            var pr = lkpProvider.EditValue as Provider;
            if (pr == null)
            {
                MessageBox.Show("فروشنده را انتخاب کنید.", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
            //ObjectRM.FactorNumber = Int32.Parse(txtFactorNumber.Text);
            ObjectRM.FactorDate = txtFactorDate.Text;
            ObjectRM.FactorTime = DateTime.Now.ToString("HH:mm");
            ObjectRM.factorUserid = MainModule.UserID;
            ObjectRM.IDProvider = pr.ID;
            ObjectRM.ResponsibleSale = txtResponsibleSale.Text;
            ObjectRM.IDRequestM = Int32.Parse(txtR.EditValue.ToString());
            dc.Factors.InsertOnSubmit(ObjectRM);
            MessageBox.Show("اطلاعات با موفقیت ثبت  گردید", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            DialogResult = DialogResult.OK;
        }

        private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Close();
        }
    }
}