using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using Inventory.Data;
using Inventory.Dialogs;
using Inventory.Forms;

namespace Inventory.Forms
{
    public partial class frmFactorBuy : DevExpress.XtraEditors.XtraForm
    {
        DataClassesDataContext dc = new DataClassesDataContext();
         public RequestM ap { get; set; }
        List<FactorProduct> lstRd;


        public frmFactorBuy()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            factorBindingSource.DataSource = new Inventory.Data.DataClassesDataContext().Factors;
        }

        private void frmFactorBuy_Load(object sender, EventArgs e)
        {
            GetData();
        }
        private void GetData()
        {

      
            factorBindingSource.DataSource = dc.Factors.Where(x=>x.RequestM.IDWarehouse == Properties.Settings.Default.Install && x.ID != null && x.WarehouseHandling ==null).ToList();

        }

        private void gridView1_Click(object sender, EventArgs e)
        {
            var curent = factorBindingSource.Current as Factor;
            if (curent == null)
                return;

            var RM = dc.RequestMs.Where(c => c.ID == curent.IDRequestM).FirstOrDefault();
            requestDBindingSource.DataSource = dc.RequestDs.Where(x => x.IDRequestM == RM.ID &&( x.WarehouseKeeper == false || x.PMRLP == "PMR" || x.PMRLP == "LP")).ToList();


            lstRd = dc.FactorProducts.Where(x => x.IDFactor == curent.ID ).ToList();
            factorProductBindingSource.DataSource = lstRd;

            
    

        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
           
            var rm = factorBindingSource.Current as Factor;
            if (rm == null)
            {
                return;
            }
            foreach (var item in lstRd)
                if (item.AmountBuy == null)
                {
                    MessageBox.Show("مقدار ورودی را برای( " + item.Product.FaName + " )وارد کنید.", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                    return;
                }
                //else if (item.BuyPMRLP == true)
                //{
                //    MessageBox.Show("تحویل داده شده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                //    return;
                //}

                else
                {
                    if (item.AmountBuy > 0)
                    {
                        item.WarehouseKeeper = true;

                        //item. = MainModule.GetPersianDate(DateTime.Now);
                        //item.IBTime = DateTime.Now.ToString("HH:mm");
                        //item.IBUser = MainModule.RoleName + "";
                        //item.PMRLP = "";
                        //item.DatePMRLP = "";
                        //item.TimePMRLP = "";
                        rm.WarehouseKeeperDate = MainModule.GetPersianDate(DateTime.Now);
                        rm.WarehouseKeeperTime = DateTime.Now.ToString("HH:mm");
                        rm.factorUserid = MainModule.UserID;
                    }

                    else if (item.AmountBuy == 0)
                    {
                        item.WarehouseKeeper = false;
                        rm.WarehouseKeeperDate = MainModule.GetPersianDate(DateTime.Now);
                        rm.WarehouseKeeperTime = DateTime.Now.ToString("HH:mm");
                        rm.factorUserid = MainModule.UserID;
                    }
                }

            gridControl1.RefreshDataSource();
            gridControl3.RefreshDataSource();
            dc.SubmitChanges();
            GetData();




            ///////////////////////////////////////////////////
            //var curent = factorBindingSource.Current as Factor;
            //if (curent == null)
            //    return;

            bool trueFound = true;
            foreach (var item in lstRd)
            {
                if (item.WarehouseKeeper == true)
                {
                    rm.WarehouseKeeper = true;
                    trueFound = false;
                    break;
                }
            }
            if (trueFound == true)
                rm.WarehouseKeeper = false;

            dc.SubmitChanges();
            requestDBindingSource.EndEdit();
            GetData();
            //if (rm.WarehouseKeeper == true)
            //{
                GetData();
                MessageBox.Show("اطلاعات با موفقيت ثبت  گرديد", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            //}
        }

        private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Close();
        }

        private void barButtonItem3_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var current = this.factorBindingSource.Current as Factor;
            var a = new dlgFactorBuy();
            a.srv = current;
            a.dc = dc;
            a.ShowDialog();


        }
    }
}