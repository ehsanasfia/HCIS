using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using Inventory.Dialogs;
using Inventory.Forms;
using Inventory.Data;


namespace Inventory.Forms
{
    public partial class frmUserOrgan : DevExpress.XtraEditors.XtraForm
    {
        public DataClassesDataContext dc { get; set; }
        public Person Pe {get;set;}
        List<Person> lst = new List<Person>();
        List<User> lst1 = new List<User>();
        public frmUserOrgan()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // organsBindingSource.DataSource = new Inventory.Data.DataClassesDataContext().Organs;
        }

        private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Close();
        }

        private void frmUserOrgan_Load(object sender, EventArgs e)
        {
           
           // gridView1.Appearance.Row.BackColor = Color.Red;
            lst1 = dc.Users.ToList();
            userBindingSource.DataSource = lst1;
               
            if(Pe== null)
            {
                return;
            }
            {
                
                searchLookUpEdit1.EditValue = Pe.IDOrgan;
                searchLookUpEdit2.EditValue = Pe.UserID;
                organBindingSource3.DataSource = dc.Organs.ToList();
                personBindingSource.DataSource = dc.Persons.ToList();
            }
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
           // var prs = lkpOrgan.EditValue as Organ;
            if (searchLookUpEdit1.EditValue == null)
            {
                MessageBox.Show("واحد را مشخص نشده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
         
            if (searchLookUpEdit2.EditValue == null)
            {
                MessageBox.Show(" رئیس واحد مشخص نشده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                return;
            }
           


            var x = gridView1.GetSelectedRows();
            foreach (var c in x)
            {
                var a = gridView1.GetRow(c) as User;
                var u = new Person()
                {

                    Boss = false,
                    IDOrgan = Int32.Parse(searchLookUpEdit1.EditValue.ToString()),
                    UserParent = Int32.Parse(searchLookUpEdit2.EditValue.ToString()),
                    FirstName = a.FirstName,
                    LastName = a.LastName,
                    CreationDate = MainModule.GetPersianDate(DateTime.Now),
                    CreationTime = DateTime.Now.ToString("HH:mm"),
                    UserID = a.UserID.Value,
                  
                };
                dc.Persons.InsertOnSubmit(u);
            }

            dc.SubmitChanges();
            MessageBox.Show("اطلاعات با موفقیت ثبت شد", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
            DialogResult = DialogResult.OK;
            
        }
        
        private void gridControl1_Click(object sender, EventArgs e)
        {
            var current = userBindingSource.Current as User;
            if (current.IDOrgan != null)
            {
                var P = dc.Persons.Where(c => c.UserID == current.UserID).FirstOrDefault();
                organBindingSource2.DataSource = dc.Organs.Where(c => c.ID == P.IDOrgan);
                MessageBox.Show("واحد کاربر مشخص شده است", "توجه", MessageBoxButtons.OK, MessageBoxIcon.Hand, MessageBoxDefaultButton.Button1, MessageBoxOptions.RightAlign | MessageBoxOptions.RtlReading);
                
                return;
            }
            else
            {
                //    var P = dc.Persons.Where(c => c.UserID == current.UserID).FirstOrDefault();
                //    organBindingSource2.DataSource = dc.Organs.Where(c => c.ID == P.IDOrgan);
                txtorgan.Text = "";
                return;
            }
        }
    }
}