'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="HCIS")>  _
Partial Public Class HcisDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPerson1(instance As Person1)
    End Sub
  Partial Private Sub UpdatePerson1(instance As Person1)
    End Sub
  Partial Private Sub DeletePerson1(instance As Person1)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SecurityLoginsAndAccessControl.My.MySettings.Default.HCISConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Person1s() As System.Data.Linq.Table(Of Person1)
		Get
			Return Me.GetTable(Of Person1)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Person")>  _
Partial Public Class Person1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As System.Guid
	
	Private _IDInt As Integer
	
	Private _MedicalID As String
	
	Private _FamilyNumber As String
	
	Private _FamilyDoctor As System.Nullable(Of System.Guid)
	
	Private _FamilyNurse As System.Nullable(Of System.Guid)
	
	Private _FDDepartment As System.Nullable(Of System.Guid)
	
	Private _NationalCode As String
	
	Private _PersonalCode As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _Sex As System.Nullable(Of Boolean)
	
	Private _IdentityNumber As String
	
	Private _IdentityPlace As String
	
	Private _FatherName As String
	
	Private _BirthDate As String
	
	Private _BirthPlace As String
	
	Private _Phone As String
	
	Private _CellularPhone As String
	
	Private _WorkPhone As String
	
	Private _Photo As System.Data.Linq.Binary
	
	Private _Address As String
	
	Private _WorkAddress As String
	
	Private _InsuranceName As String
	
	Private _InsuranceNo As String
	
	Private _Education As String
	
	Private _Comment As String
	
	Private _MaritalStatus As String
	
	Private _Religion As String
	
	Private _CurrentJob As String
	
	Private _BloodType As String
	
	Private _Weight As System.Nullable(Of Double)
	
	Private _Height As System.Nullable(Of Double)
	
	Private _Barcode As System.Nullable(Of Integer)
	
	Private _CreatorUser As System.Nullable(Of Integer)
	
	Private _CreationDate As String
	
	Private _CreationTime As String
	
	Private _LastModificator As System.Nullable(Of Integer)
	
	Private _LastModificationDate As String
	
	Private _LastModificationTime As String
	
	Private _BookletExpireDate As String
	
	Private _AllowInstallment As Boolean
	
	Private _NotUse As Boolean
	
	Private _Visibel As Boolean
	
	Private _Death As Boolean
	
	Private _DeathTime As String
	
	Private _DeathDate As String
	
	Private _DialectLanguage As String
	
	Private _Forieng As Boolean
	
	Private _Nationality As String
	
	Private _PassportNumber As String
	
	Private _TS As System.Nullable(Of Date)
	
	Private _InsertTime As System.Nullable(Of Date)
	
	Private _FamilyHealthNurse As String
	
	Private _FamilyHealthResponsible As String
	
	Private _GrowthMonitorExpert As String
	
	Private _MentalExpert As String
	
	Private _NutritionExpert As String
	
	Private _Persons As EntitySet(Of Person1)
	
	Private _Person1s As EntitySet(Of Person1)
	
	Private _Person As EntityRef(Of Person1)
	
	Private _Person1 As EntityRef(Of Person1)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnIDIntChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDIntChanged()
    End Sub
    Partial Private Sub OnMedicalIDChanging(value As String)
    End Sub
    Partial Private Sub OnMedicalIDChanged()
    End Sub
    Partial Private Sub OnFamilyNumberChanging(value As String)
    End Sub
    Partial Private Sub OnFamilyNumberChanged()
    End Sub
    Partial Private Sub OnFamilyDoctorChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnFamilyDoctorChanged()
    End Sub
    Partial Private Sub OnFamilyNurseChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnFamilyNurseChanged()
    End Sub
    Partial Private Sub OnFDDepartmentChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnFDDepartmentChanged()
    End Sub
    Partial Private Sub OnNationalCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNationalCodeChanged()
    End Sub
    Partial Private Sub OnPersonalCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPersonalCodeChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnIdentityNumberChanging(value As String)
    End Sub
    Partial Private Sub OnIdentityNumberChanged()
    End Sub
    Partial Private Sub OnIdentityPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnIdentityPlaceChanged()
    End Sub
    Partial Private Sub OnFatherNameChanging(value As String)
    End Sub
    Partial Private Sub OnFatherNameChanged()
    End Sub
    Partial Private Sub OnBirthDateChanging(value As String)
    End Sub
    Partial Private Sub OnBirthDateChanged()
    End Sub
    Partial Private Sub OnBirthPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnBirthPlaceChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnCellularPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnCellularPhoneChanged()
    End Sub
    Partial Private Sub OnWorkPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnWorkPhoneChanged()
    End Sub
    Partial Private Sub OnPhotoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnPhotoChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnWorkAddressChanging(value As String)
    End Sub
    Partial Private Sub OnWorkAddressChanged()
    End Sub
    Partial Private Sub OnInsuranceNameChanging(value As String)
    End Sub
    Partial Private Sub OnInsuranceNameChanged()
    End Sub
    Partial Private Sub OnInsuranceNoChanging(value As String)
    End Sub
    Partial Private Sub OnInsuranceNoChanged()
    End Sub
    Partial Private Sub OnEducationChanging(value As String)
    End Sub
    Partial Private Sub OnEducationChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnMaritalStatusChanging(value As String)
    End Sub
    Partial Private Sub OnMaritalStatusChanged()
    End Sub
    Partial Private Sub OnReligionChanging(value As String)
    End Sub
    Partial Private Sub OnReligionChanged()
    End Sub
    Partial Private Sub OnCurrentJobChanging(value As String)
    End Sub
    Partial Private Sub OnCurrentJobChanged()
    End Sub
    Partial Private Sub OnBloodTypeChanging(value As String)
    End Sub
    Partial Private Sub OnBloodTypeChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnHeightChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnHeightChanged()
    End Sub
    Partial Private Sub OnBarcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBarcodeChanged()
    End Sub
    Partial Private Sub OnCreatorUserChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreatorUserChanged()
    End Sub
    Partial Private Sub OnCreationDateChanging(value As String)
    End Sub
    Partial Private Sub OnCreationDateChanged()
    End Sub
    Partial Private Sub OnCreationTimeChanging(value As String)
    End Sub
    Partial Private Sub OnCreationTimeChanged()
    End Sub
    Partial Private Sub OnLastModificatorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLastModificatorChanged()
    End Sub
    Partial Private Sub OnLastModificationDateChanging(value As String)
    End Sub
    Partial Private Sub OnLastModificationDateChanged()
    End Sub
    Partial Private Sub OnLastModificationTimeChanging(value As String)
    End Sub
    Partial Private Sub OnLastModificationTimeChanged()
    End Sub
    Partial Private Sub OnBookletExpireDateChanging(value As String)
    End Sub
    Partial Private Sub OnBookletExpireDateChanged()
    End Sub
    Partial Private Sub OnAllowInstallmentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAllowInstallmentChanged()
    End Sub
    Partial Private Sub OnNotUseChanging(value As Boolean)
    End Sub
    Partial Private Sub OnNotUseChanged()
    End Sub
    Partial Private Sub OnVisibelChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVisibelChanged()
    End Sub
    Partial Private Sub OnDeathChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDeathChanged()
    End Sub
    Partial Private Sub OnDeathTimeChanging(value As String)
    End Sub
    Partial Private Sub OnDeathTimeChanged()
    End Sub
    Partial Private Sub OnDeathDateChanging(value As String)
    End Sub
    Partial Private Sub OnDeathDateChanged()
    End Sub
    Partial Private Sub OnDialectLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnDialectLanguageChanged()
    End Sub
    Partial Private Sub OnForiengChanging(value As Boolean)
    End Sub
    Partial Private Sub OnForiengChanged()
    End Sub
    Partial Private Sub OnNationalityChanging(value As String)
    End Sub
    Partial Private Sub OnNationalityChanged()
    End Sub
    Partial Private Sub OnPassportNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPassportNumberChanged()
    End Sub
    Partial Private Sub OnTSChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTSChanged()
    End Sub
    Partial Private Sub OnInsertTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnInsertTimeChanged()
    End Sub
    Partial Private Sub OnFamilyHealthNurseChanging(value As String)
    End Sub
    Partial Private Sub OnFamilyHealthNurseChanged()
    End Sub
    Partial Private Sub OnFamilyHealthResponsibleChanging(value As String)
    End Sub
    Partial Private Sub OnFamilyHealthResponsibleChanged()
    End Sub
    Partial Private Sub OnGrowthMonitorExpertChanging(value As String)
    End Sub
    Partial Private Sub OnGrowthMonitorExpertChanged()
    End Sub
    Partial Private Sub OnMentalExpertChanging(value As String)
    End Sub
    Partial Private Sub OnMentalExpertChanged()
    End Sub
    Partial Private Sub OnNutritionExpertChanging(value As String)
    End Sub
    Partial Private Sub OnNutritionExpertChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Persons = New EntitySet(Of Person1)(AddressOf Me.attach_Persons, AddressOf Me.detach_Persons)
		Me._Person1s = New EntitySet(Of Person1)(AddressOf Me.attach_Person1s, AddressOf Me.detach_Person1s)
		Me._Person = CType(Nothing, EntityRef(Of Person1))
		Me._Person1 = CType(Nothing, EntityRef(Of Person1))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As System.Guid
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDInt", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDInt() As Integer
		Get
			Return Me._IDInt
		End Get
		Set
			If ((Me._IDInt = value)  _
						= false) Then
				Me.OnIDIntChanging(value)
				Me.SendPropertyChanging
				Me._IDInt = value
				Me.SendPropertyChanged("IDInt")
				Me.OnIDIntChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MedicalID", DbType:="NVarChar(13)")>  _
	Public Property MedicalID() As String
		Get
			Return Me._MedicalID
		End Get
		Set
			If (String.Equals(Me._MedicalID, value) = false) Then
				Me.OnMedicalIDChanging(value)
				Me.SendPropertyChanging
				Me._MedicalID = value
				Me.SendPropertyChanged("MedicalID")
				Me.OnMedicalIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyNumber", DbType:="NVarChar(10)")>  _
	Public Property FamilyNumber() As String
		Get
			Return Me._FamilyNumber
		End Get
		Set
			If (String.Equals(Me._FamilyNumber, value) = false) Then
				Me.OnFamilyNumberChanging(value)
				Me.SendPropertyChanging
				Me._FamilyNumber = value
				Me.SendPropertyChanged("FamilyNumber")
				Me.OnFamilyNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyDoctor", DbType:="UniqueIdentifier")>  _
	Public Property FamilyDoctor() As System.Nullable(Of System.Guid)
		Get
			Return Me._FamilyDoctor
		End Get
		Set
			If (Me._FamilyDoctor.Equals(value) = false) Then
				If Me._Person.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFamilyDoctorChanging(value)
				Me.SendPropertyChanging
				Me._FamilyDoctor = value
				Me.SendPropertyChanged("FamilyDoctor")
				Me.OnFamilyDoctorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyNurse", DbType:="UniqueIdentifier")>  _
	Public Property FamilyNurse() As System.Nullable(Of System.Guid)
		Get
			Return Me._FamilyNurse
		End Get
		Set
			If (Me._FamilyNurse.Equals(value) = false) Then
				If Me._Person1.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFamilyNurseChanging(value)
				Me.SendPropertyChanging
				Me._FamilyNurse = value
				Me.SendPropertyChanged("FamilyNurse")
				Me.OnFamilyNurseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FDDepartment", DbType:="UniqueIdentifier")>  _
	Public Property FDDepartment() As System.Nullable(Of System.Guid)
		Get
			Return Me._FDDepartment
		End Get
		Set
			If (Me._FDDepartment.Equals(value) = false) Then
				Me.OnFDDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._FDDepartment = value
				Me.SendPropertyChanged("FDDepartment")
				Me.OnFDDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NationalCode", DbType:="NVarChar(10)")>  _
	Public Property NationalCode() As String
		Get
			Return Me._NationalCode
		End Get
		Set
			If (String.Equals(Me._NationalCode, value) = false) Then
				Me.OnNationalCodeChanging(value)
				Me.SendPropertyChanging
				Me._NationalCode = value
				Me.SendPropertyChanged("NationalCode")
				Me.OnNationalCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersonalCode", DbType:="NVarChar(10)")>  _
	Public Property PersonalCode() As String
		Get
			Return Me._PersonalCode
		End Get
		Set
			If (String.Equals(Me._PersonalCode, value) = false) Then
				Me.OnPersonalCodeChanging(value)
				Me.SendPropertyChanging
				Me._PersonalCode = value
				Me.SendPropertyChanged("PersonalCode")
				Me.OnPersonalCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(100)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(100)")>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sex", DbType:="Bit")>  _
	Public Property Sex() As System.Nullable(Of Boolean)
		Get
			Return Me._Sex
		End Get
		Set
			If (Me._Sex.Equals(value) = false) Then
				Me.OnSexChanging(value)
				Me.SendPropertyChanging
				Me._Sex = value
				Me.SendPropertyChanged("Sex")
				Me.OnSexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdentityNumber", DbType:="NVarChar(10)")>  _
	Public Property IdentityNumber() As String
		Get
			Return Me._IdentityNumber
		End Get
		Set
			If (String.Equals(Me._IdentityNumber, value) = false) Then
				Me.OnIdentityNumberChanging(value)
				Me.SendPropertyChanging
				Me._IdentityNumber = value
				Me.SendPropertyChanged("IdentityNumber")
				Me.OnIdentityNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdentityPlace", DbType:="NVarChar(50)")>  _
	Public Property IdentityPlace() As String
		Get
			Return Me._IdentityPlace
		End Get
		Set
			If (String.Equals(Me._IdentityPlace, value) = false) Then
				Me.OnIdentityPlaceChanging(value)
				Me.SendPropertyChanging
				Me._IdentityPlace = value
				Me.SendPropertyChanged("IdentityPlace")
				Me.OnIdentityPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FatherName", DbType:="NVarChar(100)")>  _
	Public Property FatherName() As String
		Get
			Return Me._FatherName
		End Get
		Set
			If (String.Equals(Me._FatherName, value) = false) Then
				Me.OnFatherNameChanging(value)
				Me.SendPropertyChanging
				Me._FatherName = value
				Me.SendPropertyChanged("FatherName")
				Me.OnFatherNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDate", DbType:="NVarChar(10)")>  _
	Public Property BirthDate() As String
		Get
			Return Me._BirthDate
		End Get
		Set
			If (String.Equals(Me._BirthDate, value) = false) Then
				Me.OnBirthDateChanging(value)
				Me.SendPropertyChanging
				Me._BirthDate = value
				Me.SendPropertyChanged("BirthDate")
				Me.OnBirthDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthPlace", DbType:="NVarChar(50)")>  _
	Public Property BirthPlace() As String
		Get
			Return Me._BirthPlace
		End Get
		Set
			If (String.Equals(Me._BirthPlace, value) = false) Then
				Me.OnBirthPlaceChanging(value)
				Me.SendPropertyChanging
				Me._BirthPlace = value
				Me.SendPropertyChanged("BirthPlace")
				Me.OnBirthPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="NVarChar(25)")>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me.OnPhoneChanging(value)
				Me.SendPropertyChanging
				Me._Phone = value
				Me.SendPropertyChanged("Phone")
				Me.OnPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CellularPhone", DbType:="NVarChar(25)")>  _
	Public Property CellularPhone() As String
		Get
			Return Me._CellularPhone
		End Get
		Set
			If (String.Equals(Me._CellularPhone, value) = false) Then
				Me.OnCellularPhoneChanging(value)
				Me.SendPropertyChanging
				Me._CellularPhone = value
				Me.SendPropertyChanged("CellularPhone")
				Me.OnCellularPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkPhone", DbType:="NVarChar(25)")>  _
	Public Property WorkPhone() As String
		Get
			Return Me._WorkPhone
		End Get
		Set
			If (String.Equals(Me._WorkPhone, value) = false) Then
				Me.OnWorkPhoneChanging(value)
				Me.SendPropertyChanging
				Me._WorkPhone = value
				Me.SendPropertyChanged("WorkPhone")
				Me.OnWorkPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Photo", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Photo() As System.Data.Linq.Binary
		Get
			Return Me._Photo
		End Get
		Set
			If (Object.Equals(Me._Photo, value) = false) Then
				Me.OnPhotoChanging(value)
				Me.SendPropertyChanging
				Me._Photo = value
				Me.SendPropertyChanged("Photo")
				Me.OnPhotoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(300)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkAddress", DbType:="NVarChar(300)")>  _
	Public Property WorkAddress() As String
		Get
			Return Me._WorkAddress
		End Get
		Set
			If (String.Equals(Me._WorkAddress, value) = false) Then
				Me.OnWorkAddressChanging(value)
				Me.SendPropertyChanging
				Me._WorkAddress = value
				Me.SendPropertyChanged("WorkAddress")
				Me.OnWorkAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceName", DbType:="NVarChar(50)")>  _
	Public Property InsuranceName() As String
		Get
			Return Me._InsuranceName
		End Get
		Set
			If (String.Equals(Me._InsuranceName, value) = false) Then
				Me.OnInsuranceNameChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceName = value
				Me.SendPropertyChanged("InsuranceName")
				Me.OnInsuranceNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsuranceNo", DbType:="NVarChar(50)")>  _
	Public Property InsuranceNo() As String
		Get
			Return Me._InsuranceNo
		End Get
		Set
			If (String.Equals(Me._InsuranceNo, value) = false) Then
				Me.OnInsuranceNoChanging(value)
				Me.SendPropertyChanging
				Me._InsuranceNo = value
				Me.SendPropertyChanged("InsuranceNo")
				Me.OnInsuranceNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Education", DbType:="NVarChar(100)")>  _
	Public Property Education() As String
		Get
			Return Me._Education
		End Get
		Set
			If (String.Equals(Me._Education, value) = false) Then
				Me.OnEducationChanging(value)
				Me.SendPropertyChanging
				Me._Education = value
				Me.SendPropertyChanged("Education")
				Me.OnEducationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(MAX)")>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaritalStatus", DbType:="NVarChar(50)")>  _
	Public Property MaritalStatus() As String
		Get
			Return Me._MaritalStatus
		End Get
		Set
			If (String.Equals(Me._MaritalStatus, value) = false) Then
				Me.OnMaritalStatusChanging(value)
				Me.SendPropertyChanging
				Me._MaritalStatus = value
				Me.SendPropertyChanged("MaritalStatus")
				Me.OnMaritalStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Religion", DbType:="NVarChar(50)")>  _
	Public Property Religion() As String
		Get
			Return Me._Religion
		End Get
		Set
			If (String.Equals(Me._Religion, value) = false) Then
				Me.OnReligionChanging(value)
				Me.SendPropertyChanging
				Me._Religion = value
				Me.SendPropertyChanged("Religion")
				Me.OnReligionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentJob", DbType:="NVarChar(500)")>  _
	Public Property CurrentJob() As String
		Get
			Return Me._CurrentJob
		End Get
		Set
			If (String.Equals(Me._CurrentJob, value) = false) Then
				Me.OnCurrentJobChanging(value)
				Me.SendPropertyChanging
				Me._CurrentJob = value
				Me.SendPropertyChanged("CurrentJob")
				Me.OnCurrentJobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BloodType", DbType:="NVarChar(20)")>  _
	Public Property BloodType() As String
		Get
			Return Me._BloodType
		End Get
		Set
			If (String.Equals(Me._BloodType, value) = false) Then
				Me.OnBloodTypeChanging(value)
				Me.SendPropertyChanging
				Me._BloodType = value
				Me.SendPropertyChanged("BloodType")
				Me.OnBloodTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Float")>  _
	Public Property Weight() As System.Nullable(Of Double)
		Get
			Return Me._Weight
		End Get
		Set
			If (Me._Weight.Equals(value) = false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Float")>  _
	Public Property Height() As System.Nullable(Of Double)
		Get
			Return Me._Height
		End Get
		Set
			If (Me._Height.Equals(value) = false) Then
				Me.OnHeightChanging(value)
				Me.SendPropertyChanging
				Me._Height = value
				Me.SendPropertyChanged("Height")
				Me.OnHeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barcode", DbType:="Int")>  _
	Public Property Barcode() As System.Nullable(Of Integer)
		Get
			Return Me._Barcode
		End Get
		Set
			If (Me._Barcode.Equals(value) = false) Then
				Me.OnBarcodeChanging(value)
				Me.SendPropertyChanging
				Me._Barcode = value
				Me.SendPropertyChanged("Barcode")
				Me.OnBarcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatorUser", DbType:="Int")>  _
	Public Property CreatorUser() As System.Nullable(Of Integer)
		Get
			Return Me._CreatorUser
		End Get
		Set
			If (Me._CreatorUser.Equals(value) = false) Then
				Me.OnCreatorUserChanging(value)
				Me.SendPropertyChanging
				Me._CreatorUser = value
				Me.SendPropertyChanged("CreatorUser")
				Me.OnCreatorUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationDate", DbType:="NVarChar(10)")>  _
	Public Property CreationDate() As String
		Get
			Return Me._CreationDate
		End Get
		Set
			If (String.Equals(Me._CreationDate, value) = false) Then
				Me.OnCreationDateChanging(value)
				Me.SendPropertyChanging
				Me._CreationDate = value
				Me.SendPropertyChanged("CreationDate")
				Me.OnCreationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreationTime", DbType:="NVarChar(8)")>  _
	Public Property CreationTime() As String
		Get
			Return Me._CreationTime
		End Get
		Set
			If (String.Equals(Me._CreationTime, value) = false) Then
				Me.OnCreationTimeChanging(value)
				Me.SendPropertyChanging
				Me._CreationTime = value
				Me.SendPropertyChanged("CreationTime")
				Me.OnCreationTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModificator", DbType:="Int")>  _
	Public Property LastModificator() As System.Nullable(Of Integer)
		Get
			Return Me._LastModificator
		End Get
		Set
			If (Me._LastModificator.Equals(value) = false) Then
				Me.OnLastModificatorChanging(value)
				Me.SendPropertyChanging
				Me._LastModificator = value
				Me.SendPropertyChanged("LastModificator")
				Me.OnLastModificatorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModificationDate", DbType:="NVarChar(10)")>  _
	Public Property LastModificationDate() As String
		Get
			Return Me._LastModificationDate
		End Get
		Set
			If (String.Equals(Me._LastModificationDate, value) = false) Then
				Me.OnLastModificationDateChanging(value)
				Me.SendPropertyChanging
				Me._LastModificationDate = value
				Me.SendPropertyChanged("LastModificationDate")
				Me.OnLastModificationDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModificationTime", DbType:="NVarChar(8)")>  _
	Public Property LastModificationTime() As String
		Get
			Return Me._LastModificationTime
		End Get
		Set
			If (String.Equals(Me._LastModificationTime, value) = false) Then
				Me.OnLastModificationTimeChanging(value)
				Me.SendPropertyChanging
				Me._LastModificationTime = value
				Me.SendPropertyChanged("LastModificationTime")
				Me.OnLastModificationTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BookletExpireDate", DbType:="NVarChar(10)")>  _
	Public Property BookletExpireDate() As String
		Get
			Return Me._BookletExpireDate
		End Get
		Set
			If (String.Equals(Me._BookletExpireDate, value) = false) Then
				Me.OnBookletExpireDateChanging(value)
				Me.SendPropertyChanging
				Me._BookletExpireDate = value
				Me.SendPropertyChanged("BookletExpireDate")
				Me.OnBookletExpireDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowInstallment", DbType:="Bit NOT NULL")>  _
	Public Property AllowInstallment() As Boolean
		Get
			Return Me._AllowInstallment
		End Get
		Set
			If ((Me._AllowInstallment = value)  _
						= false) Then
				Me.OnAllowInstallmentChanging(value)
				Me.SendPropertyChanging
				Me._AllowInstallment = value
				Me.SendPropertyChanged("AllowInstallment")
				Me.OnAllowInstallmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NotUse", DbType:="Bit NOT NULL")>  _
	Public Property NotUse() As Boolean
		Get
			Return Me._NotUse
		End Get
		Set
			If ((Me._NotUse = value)  _
						= false) Then
				Me.OnNotUseChanging(value)
				Me.SendPropertyChanging
				Me._NotUse = value
				Me.SendPropertyChanged("NotUse")
				Me.OnNotUseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Visibel", DbType:="Bit NOT NULL")>  _
	Public Property Visibel() As Boolean
		Get
			Return Me._Visibel
		End Get
		Set
			If ((Me._Visibel = value)  _
						= false) Then
				Me.OnVisibelChanging(value)
				Me.SendPropertyChanging
				Me._Visibel = value
				Me.SendPropertyChanged("Visibel")
				Me.OnVisibelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Death", DbType:="Bit NOT NULL")>  _
	Public Property Death() As Boolean
		Get
			Return Me._Death
		End Get
		Set
			If ((Me._Death = value)  _
						= false) Then
				Me.OnDeathChanging(value)
				Me.SendPropertyChanging
				Me._Death = value
				Me.SendPropertyChanged("Death")
				Me.OnDeathChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeathTime", DbType:="NVarChar(8)")>  _
	Public Property DeathTime() As String
		Get
			Return Me._DeathTime
		End Get
		Set
			If (String.Equals(Me._DeathTime, value) = false) Then
				Me.OnDeathTimeChanging(value)
				Me.SendPropertyChanging
				Me._DeathTime = value
				Me.SendPropertyChanged("DeathTime")
				Me.OnDeathTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeathDate", DbType:="NVarChar(10)")>  _
	Public Property DeathDate() As String
		Get
			Return Me._DeathDate
		End Get
		Set
			If (String.Equals(Me._DeathDate, value) = false) Then
				Me.OnDeathDateChanging(value)
				Me.SendPropertyChanging
				Me._DeathDate = value
				Me.SendPropertyChanged("DeathDate")
				Me.OnDeathDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DialectLanguage", DbType:="NVarChar(50)")>  _
	Public Property DialectLanguage() As String
		Get
			Return Me._DialectLanguage
		End Get
		Set
			If (String.Equals(Me._DialectLanguage, value) = false) Then
				Me.OnDialectLanguageChanging(value)
				Me.SendPropertyChanging
				Me._DialectLanguage = value
				Me.SendPropertyChanged("DialectLanguage")
				Me.OnDialectLanguageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Forieng", DbType:="Bit NOT NULL")>  _
	Public Property Forieng() As Boolean
		Get
			Return Me._Forieng
		End Get
		Set
			If ((Me._Forieng = value)  _
						= false) Then
				Me.OnForiengChanging(value)
				Me.SendPropertyChanging
				Me._Forieng = value
				Me.SendPropertyChanged("Forieng")
				Me.OnForiengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nationality", DbType:="NVarChar(50)")>  _
	Public Property Nationality() As String
		Get
			Return Me._Nationality
		End Get
		Set
			If (String.Equals(Me._Nationality, value) = false) Then
				Me.OnNationalityChanging(value)
				Me.SendPropertyChanging
				Me._Nationality = value
				Me.SendPropertyChanged("Nationality")
				Me.OnNationalityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PassportNumber", DbType:="NVarChar(50)")>  _
	Public Property PassportNumber() As String
		Get
			Return Me._PassportNumber
		End Get
		Set
			If (String.Equals(Me._PassportNumber, value) = false) Then
				Me.OnPassportNumberChanging(value)
				Me.SendPropertyChanging
				Me._PassportNumber = value
				Me.SendPropertyChanged("PassportNumber")
				Me.OnPassportNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TS", DbType:="DateTime2")>  _
	Public Property TS() As System.Nullable(Of Date)
		Get
			Return Me._TS
		End Get
		Set
			If (Me._TS.Equals(value) = false) Then
				Me.OnTSChanging(value)
				Me.SendPropertyChanging
				Me._TS = value
				Me.SendPropertyChanged("TS")
				Me.OnTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InsertTime", DbType:="DateTime2")>  _
	Public Property InsertTime() As System.Nullable(Of Date)
		Get
			Return Me._InsertTime
		End Get
		Set
			If (Me._InsertTime.Equals(value) = false) Then
				Me.OnInsertTimeChanging(value)
				Me.SendPropertyChanging
				Me._InsertTime = value
				Me.SendPropertyChanged("InsertTime")
				Me.OnInsertTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyHealthNurse", DbType:="NVarChar(150)")>  _
	Public Property FamilyHealthNurse() As String
		Get
			Return Me._FamilyHealthNurse
		End Get
		Set
			If (String.Equals(Me._FamilyHealthNurse, value) = false) Then
				Me.OnFamilyHealthNurseChanging(value)
				Me.SendPropertyChanging
				Me._FamilyHealthNurse = value
				Me.SendPropertyChanged("FamilyHealthNurse")
				Me.OnFamilyHealthNurseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyHealthResponsible", DbType:="NVarChar(150)")>  _
	Public Property FamilyHealthResponsible() As String
		Get
			Return Me._FamilyHealthResponsible
		End Get
		Set
			If (String.Equals(Me._FamilyHealthResponsible, value) = false) Then
				Me.OnFamilyHealthResponsibleChanging(value)
				Me.SendPropertyChanging
				Me._FamilyHealthResponsible = value
				Me.SendPropertyChanged("FamilyHealthResponsible")
				Me.OnFamilyHealthResponsibleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrowthMonitorExpert", DbType:="NVarChar(150)")>  _
	Public Property GrowthMonitorExpert() As String
		Get
			Return Me._GrowthMonitorExpert
		End Get
		Set
			If (String.Equals(Me._GrowthMonitorExpert, value) = false) Then
				Me.OnGrowthMonitorExpertChanging(value)
				Me.SendPropertyChanging
				Me._GrowthMonitorExpert = value
				Me.SendPropertyChanged("GrowthMonitorExpert")
				Me.OnGrowthMonitorExpertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MentalExpert", DbType:="NVarChar(150)")>  _
	Public Property MentalExpert() As String
		Get
			Return Me._MentalExpert
		End Get
		Set
			If (String.Equals(Me._MentalExpert, value) = false) Then
				Me.OnMentalExpertChanging(value)
				Me.SendPropertyChanging
				Me._MentalExpert = value
				Me.SendPropertyChanged("MentalExpert")
				Me.OnMentalExpertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NutritionExpert", DbType:="NVarChar(150)")>  _
	Public Property NutritionExpert() As String
		Get
			Return Me._NutritionExpert
		End Get
		Set
			If (String.Equals(Me._NutritionExpert, value) = false) Then
				Me.OnNutritionExpertChanging(value)
				Me.SendPropertyChanging
				Me._NutritionExpert = value
				Me.SendPropertyChanged("NutritionExpert")
				Me.OnNutritionExpertChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Person_Person", Storage:="_Persons", ThisKey:="ID", OtherKey:="FamilyDoctor")>  _
	Public Property Persons() As EntitySet(Of Person1)
		Get
			Return Me._Persons
		End Get
		Set
			Me._Persons.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Person_Person1", Storage:="_Person1s", ThisKey:="ID", OtherKey:="FamilyNurse")>  _
	Public Property Person1s() As EntitySet(Of Person1)
		Get
			Return Me._Person1s
		End Get
		Set
			Me._Person1s.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Person_Person", Storage:="_Person", ThisKey:="FamilyDoctor", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property Person() As Person1
		Get
			Return Me._Person.Entity
		End Get
		Set
			Dim previousValue As Person1 = Me._Person.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Person.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Person.Entity = Nothing
					previousValue.Persons.Remove(Me)
				End If
				Me._Person.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Persons.Add(Me)
					Me._FamilyDoctor = value.ID
				Else
					Me._FamilyDoctor = CType(Nothing, Nullable(Of System.Guid))
				End If
				Me.SendPropertyChanged("Person")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Person_Person1", Storage:="_Person1", ThisKey:="FamilyNurse", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property Person1() As Person1
		Get
			Return Me._Person1.Entity
		End Get
		Set
			Dim previousValue As Person1 = Me._Person1.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Person1.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Person1.Entity = Nothing
					previousValue.Person1s.Remove(Me)
				End If
				Me._Person1.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Person1s.Add(Me)
					Me._FamilyNurse = value.ID
				Else
					Me._FamilyNurse = CType(Nothing, Nullable(Of System.Guid))
				End If
				Me.SendPropertyChanged("Person1")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Persons(ByVal entity As Person1)
		Me.SendPropertyChanging
		entity.Person = Me
	End Sub
	
	Private Sub detach_Persons(ByVal entity As Person1)
		Me.SendPropertyChanging
		entity.Person = Nothing
	End Sub
	
	Private Sub attach_Person1s(ByVal entity As Person1)
		Me.SendPropertyChanging
		entity.Person1 = Me
	End Sub
	
	Private Sub detach_Person1s(ByVal entity As Person1)
		Me.SendPropertyChanging
		entity.Person1 = Nothing
	End Sub
End Class
