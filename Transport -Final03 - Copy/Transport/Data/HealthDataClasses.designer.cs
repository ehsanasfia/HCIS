#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Transport.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCIS")]
	public partial class HealthDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblWoman(tblWoman instance);
    partial void UpdatetblWoman(tblWoman instance);
    partial void DeletetblWoman(tblWoman instance);
    partial void InserttblQuestionnaire(tblQuestionnaire instance);
    partial void UpdatetblQuestionnaire(tblQuestionnaire instance);
    partial void DeletetblQuestionnaire(tblQuestionnaire instance);
    partial void InserttblAllPhoneNumber(tblAllPhoneNumber instance);
    partial void UpdatetblAllPhoneNumber(tblAllPhoneNumber instance);
    partial void DeletetblAllPhoneNumber(tblAllPhoneNumber instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InserttblMngTicketPhone(tblMngTicketPhone instance);
    partial void UpdatetblMngTicketPhone(tblMngTicketPhone instance);
    partial void DeletetblMngTicketPhone(tblMngTicketPhone instance);
    partial void InserttblMngNotResponse(tblMngNotResponse instance);
    partial void UpdatetblMngNotResponse(tblMngNotResponse instance);
    partial void DeletetblMngNotResponse(tblMngNotResponse instance);
    partial void InserttblMngTelecommunicationPersonnel(tblMngTelecommunicationPersonnel instance);
    partial void UpdatetblMngTelecommunicationPersonnel(tblMngTelecommunicationPersonnel instance);
    partial void DeletetblMngTelecommunicationPersonnel(tblMngTelecommunicationPersonnel instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InserttblMngOut_of_CareCall(tblMngOut_of_CareCall instance);
    partial void UpdatetblMngOut_of_CareCall(tblMngOut_of_CareCall instance);
    partial void DeletetblMngOut_of_CareCall(tblMngOut_of_CareCall instance);
    partial void InserttblMngCprGroup(tblMngCprGroup instance);
    partial void UpdatetblMngCprGroup(tblMngCprGroup instance);
    partial void DeletetblMngCprGroup(tblMngCprGroup instance);
    partial void InserttblMngDirectionCar(tblMngDirectionCar instance);
    partial void UpdatetblMngDirectionCar(tblMngDirectionCar instance);
    partial void DeletetblMngDirectionCar(tblMngDirectionCar instance);
    partial void InserttblMngtransportPersonel(tblMngtransportPersonel instance);
    partial void UpdatetblMngtransportPersonel(tblMngtransportPersonel instance);
    partial void DeletetblMngtransportPersonel(tblMngtransportPersonel instance);
    partial void InserttblMngDailyRep(tblMngDailyRep instance);
    partial void UpdatetblMngDailyRep(tblMngDailyRep instance);
    partial void DeletetblMngDailyRep(tblMngDailyRep instance);
    partial void InserttblMngCarInsurance(tblMngCarInsurance instance);
    partial void UpdatetblMngCarInsurance(tblMngCarInsurance instance);
    partial void DeletetblMngCarInsurance(tblMngCarInsurance instance);
    partial void InserttblMngCivilCar(tblMngCivilCar instance);
    partial void UpdatetblMngCivilCar(tblMngCivilCar instance);
    partial void DeletetblMngCivilCar(tblMngCivilCar instance);
    partial void InserttblMngFuelCar(tblMngFuelCar instance);
    partial void UpdatetblMngFuelCar(tblMngFuelCar instance);
    partial void DeletetblMngFuelCar(tblMngFuelCar instance);
    partial void InserttblMngFactorRepair(tblMngFactorRepair instance);
    partial void UpdatetblMngFactorRepair(tblMngFactorRepair instance);
    partial void DeletetblMngFactorRepair(tblMngFactorRepair instance);
    partial void InserttblMngCarDriver(tblMngCarDriver instance);
    partial void UpdatetblMngCarDriver(tblMngCarDriver instance);
    partial void DeletetblMngCarDriver(tblMngCarDriver instance);
    #endregion
		
		public HealthDataClassesDataContext() : 
				base(global::Transport.Properties.Settings.Default.TransportConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HealthDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HealthDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HealthDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HealthDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblWoman> tblWomans
		{
			get
			{
				return this.GetTable<tblWoman>();
			}
		}
		
		public System.Data.Linq.Table<tblQuestionnaire> tblQuestionnaires
		{
			get
			{
				return this.GetTable<tblQuestionnaire>();
			}
		}
		
		public System.Data.Linq.Table<tblAllPhoneNumber> tblAllPhoneNumbers
		{
			get
			{
				return this.GetTable<tblAllPhoneNumber>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<tblMngTicketPhone> tblMngTicketPhones
		{
			get
			{
				return this.GetTable<tblMngTicketPhone>();
			}
		}
		
		public System.Data.Linq.Table<tblMngNotResponse> tblMngNotResponses
		{
			get
			{
				return this.GetTable<tblMngNotResponse>();
			}
		}
		
		public System.Data.Linq.Table<tblMngTelecommunicationPersonnel> tblMngTelecommunicationPersonnels
		{
			get
			{
				return this.GetTable<tblMngTelecommunicationPersonnel>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shifts
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<tblMngOut_of_CareCall> tblMngOut_of_CareCalls
		{
			get
			{
				return this.GetTable<tblMngOut_of_CareCall>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCprGroup> tblMngCprGroups
		{
			get
			{
				return this.GetTable<tblMngCprGroup>();
			}
		}
		
		public System.Data.Linq.Table<tblMngDirectionCar> tblMngDirectionCars
		{
			get
			{
				return this.GetTable<tblMngDirectionCar>();
			}
		}
		
		public System.Data.Linq.Table<tblMngtransportPersonel> tblMngtransportPersonels
		{
			get
			{
				return this.GetTable<tblMngtransportPersonel>();
			}
		}
		
		public System.Data.Linq.Table<tblMngDailyRep> tblMngDailyReps
		{
			get
			{
				return this.GetTable<tblMngDailyRep>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCarInsurance> tblMngCarInsurances
		{
			get
			{
				return this.GetTable<tblMngCarInsurance>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCivilCar> tblMngCivilCars
		{
			get
			{
				return this.GetTable<tblMngCivilCar>();
			}
		}
		
		public System.Data.Linq.Table<tblMngFuelCar> tblMngFuelCars
		{
			get
			{
				return this.GetTable<tblMngFuelCar>();
			}
		}
		
		public System.Data.Linq.Table<tblMngFactorRepair> tblMngFactorRepairs
		{
			get
			{
				return this.GetTable<tblMngFactorRepair>();
			}
		}
		
		public System.Data.Linq.Table<tblMngCarDriver> tblMngCarDrivers
		{
			get
			{
				return this.GetTable<tblMngCarDriver>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWoman")]
	public partial class tblWoman : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _VisitID;
		
		private string _VisitDate;
		
		private System.Nullable<int> _CatServiceID;
		
		private System.Nullable<int> _ServiceID;
		
		private string _Result;
		
		private System.Nullable<bool> _ResultCheckBOX;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVisitIDChanging(System.Nullable<int> value);
    partial void OnVisitIDChanged();
    partial void OnVisitDateChanging(string value);
    partial void OnVisitDateChanged();
    partial void OnCatServiceIDChanging(System.Nullable<int> value);
    partial void OnCatServiceIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnResultCheckBOXChanging(System.Nullable<bool> value);
    partial void OnResultCheckBOXChanged();
    #endregion
		
		public tblWoman()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="Int")]
		public System.Nullable<int> VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="NChar(10)")]
		public string VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatServiceID", DbType="Int")]
		public System.Nullable<int> CatServiceID
		{
			get
			{
				return this._CatServiceID;
			}
			set
			{
				if ((this._CatServiceID != value))
				{
					this.OnCatServiceIDChanging(value);
					this.SendPropertyChanging();
					this._CatServiceID = value;
					this.SendPropertyChanged("CatServiceID");
					this.OnCatServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCheckBOX", DbType="Bit")]
		public System.Nullable<bool> ResultCheckBOX
		{
			get
			{
				return this._ResultCheckBOX;
			}
			set
			{
				if ((this._ResultCheckBOX != value))
				{
					this.OnResultCheckBOXChanging(value);
					this.SendPropertyChanging();
					this._ResultCheckBOX = value;
					this.SendPropertyChanged("ResultCheckBOX");
					this.OnResultCheckBOXChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblQuestionnaire")]
	public partial class tblQuestionnaire : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Parent;
		
		private string _Question;
		
		private System.Nullable<int> _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnvalueChanging(System.Nullable<int> value);
    partial void OnvalueChanged();
    #endregion
		
		public tblQuestionnaire()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(50)")]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int")]
		public System.Nullable<int> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAllPhoneNumbers")]
	public partial class tblAllPhoneNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Interal;
		
		private string _PhoneType;
		
		private string _PhoneNumber;
		
		private string _DeliveryDate;
		
		private string _Date_Received;
		
		private string _LocationGroup;
		
		private string _Location;
		
		private string _Responsible;
		
		private string _Description;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInteralChanging(string value);
    partial void OnInteralChanged();
    partial void OnPhoneTypeChanging(string value);
    partial void OnPhoneTypeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnDeliveryDateChanging(string value);
    partial void OnDeliveryDateChanged();
    partial void OnDate_ReceivedChanging(string value);
    partial void OnDate_ReceivedChanged();
    partial void OnLocationGroupChanging(string value);
    partial void OnLocationGroupChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnResponsibleChanging(string value);
    partial void OnResponsibleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public tblAllPhoneNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interal", DbType="NVarChar(50)")]
		public string Interal
		{
			get
			{
				return this._Interal;
			}
			set
			{
				if ((this._Interal != value))
				{
					this.OnInteralChanging(value);
					this.SendPropertyChanging();
					this._Interal = value;
					this.SendPropertyChanged("Interal");
					this.OnInteralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneType", DbType="NVarChar(50)")]
		public string PhoneType
		{
			get
			{
				return this._PhoneType;
			}
			set
			{
				if ((this._PhoneType != value))
				{
					this.OnPhoneTypeChanging(value);
					this.SendPropertyChanging();
					this._PhoneType = value;
					this.SendPropertyChanged("PhoneType");
					this.OnPhoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="NVarChar(10)")]
		public string DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Date Received]", Storage="_Date_Received", DbType="NVarChar(10)")]
		public string Date_Received
		{
			get
			{
				return this._Date_Received;
			}
			set
			{
				if ((this._Date_Received != value))
				{
					this.OnDate_ReceivedChanging(value);
					this.SendPropertyChanging();
					this._Date_Received = value;
					this.SendPropertyChanged("Date_Received");
					this.OnDate_ReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGroup", DbType="NVarChar(50)")]
		public string LocationGroup
		{
			get
			{
				return this._LocationGroup;
			}
			set
			{
				if ((this._LocationGroup != value))
				{
					this.OnLocationGroupChanging(value);
					this.SendPropertyChanging();
					this._LocationGroup = value;
					this.SendPropertyChanged("LocationGroup");
					this.OnLocationGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(50)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this.OnResponsibleChanging(value);
					this.SendPropertyChanging();
					this._Responsible = value;
					this.SendPropertyChanged("Responsible");
					this.OnResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _IDInt;
		
		private System.Nullable<int> _IDIntParent;
		
		private System.Nullable<System.Guid> _Parent;
		
		private string _Name;
		
		private string _Location;
		
		private System.Nullable<int> _TypeID;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnIDIntChanging(int value);
    partial void OnIDIntChanged();
    partial void OnIDIntParentChanging(System.Nullable<int> value);
    partial void OnIDIntParentChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    #endregion
		
		public Department()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Department1 = default(EntityRef<Department>);
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDInt", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDInt
		{
			get
			{
				return this._IDInt;
			}
			set
			{
				if ((this._IDInt != value))
				{
					this.OnIDIntChanging(value);
					this.SendPropertyChanging();
					this._IDInt = value;
					this.SendPropertyChanged("IDInt");
					this.OnIDIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDIntParent", DbType="Int")]
		public System.Nullable<int> IDIntParent
		{
			get
			{
				return this._IDIntParent;
			}
			set
			{
				if ((this._IDIntParent != value))
				{
					this.OnIDIntParentChanging(value);
					this.SendPropertyChanging();
					this._IDIntParent = value;
					this.SendPropertyChanged("IDIntParent");
					this.OnIDIntParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Departments", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Department", Storage="_Department1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Definition", ThisKey="TypeID", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._TypeID = value.ID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngTicketPhone")]
	public partial class tblMngTicketPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDM;
		
		private string _TicketNumber;
		
		private System.Nullable<int> _Amount;
		
		private string _Date;
		
		private string _PhoneNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMChanging(System.Nullable<int> value);
    partial void OnIDMChanged();
    partial void OnTicketNumberChanging(string value);
    partial void OnTicketNumberChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public tblMngTicketPhone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDM", DbType="Int")]
		public System.Nullable<int> IDM
		{
			get
			{
				return this._IDM;
			}
			set
			{
				if ((this._IDM != value))
				{
					this.OnIDMChanging(value);
					this.SendPropertyChanging();
					this._IDM = value;
					this.SendPropertyChanged("IDM");
					this.OnIDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketNumber", DbType="NVarChar(50)")]
		public string TicketNumber
		{
			get
			{
				return this._TicketNumber;
			}
			set
			{
				if ((this._TicketNumber != value))
				{
					this.OnTicketNumberChanging(value);
					this.SendPropertyChanging();
					this._TicketNumber = value;
					this.SendPropertyChanged("TicketNumber");
					this.OnTicketNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngNotResponse")]
	public partial class tblMngNotResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _RelatedUnit;
		
		private string _InteralNumber;
		
		private string _NotResponseNumber;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnRelatedUnitChanging(string value);
    partial void OnRelatedUnitChanged();
    partial void OnInteralNumberChanging(string value);
    partial void OnInteralNumberChanged();
    partial void OnNotResponseNumberChanging(string value);
    partial void OnNotResponseNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblMngNotResponse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedUnit", DbType="NVarChar(50)")]
		public string RelatedUnit
		{
			get
			{
				return this._RelatedUnit;
			}
			set
			{
				if ((this._RelatedUnit != value))
				{
					this.OnRelatedUnitChanging(value);
					this.SendPropertyChanging();
					this._RelatedUnit = value;
					this.SendPropertyChanged("RelatedUnit");
					this.OnRelatedUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteralNumber", DbType="NVarChar(50)")]
		public string InteralNumber
		{
			get
			{
				return this._InteralNumber;
			}
			set
			{
				if ((this._InteralNumber != value))
				{
					this.OnInteralNumberChanging(value);
					this.SendPropertyChanging();
					this._InteralNumber = value;
					this.SendPropertyChanged("InteralNumber");
					this.OnInteralNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotResponseNumber", DbType="NVarChar(50)")]
		public string NotResponseNumber
		{
			get
			{
				return this._NotResponseNumber;
			}
			set
			{
				if ((this._NotResponseNumber != value))
				{
					this.OnNotResponseNumberChanging(value);
					this.SendPropertyChanging();
					this._NotResponseNumber = value;
					this.SendPropertyChanged("NotResponseNumber");
					this.OnNotResponseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngTelecommunicationPersonnel")]
	public partial class tblMngTelecommunicationPersonnel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FName;
		
		private string _LName;
		
		private string _EmploymentType;
		
		private EntitySet<tblMngOut_of_CareCall> _tblMngOut_of_CareCalls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnEmploymentTypeChanging(string value);
    partial void OnEmploymentTypeChanged();
    #endregion
		
		public tblMngTelecommunicationPersonnel()
		{
			this._tblMngOut_of_CareCalls = new EntitySet<tblMngOut_of_CareCall>(new Action<tblMngOut_of_CareCall>(this.attach_tblMngOut_of_CareCalls), new Action<tblMngOut_of_CareCall>(this.detach_tblMngOut_of_CareCalls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="NVarChar(50)")]
		public string EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this.OnEmploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._EmploymentType = value;
					this.SendPropertyChanged("EmploymentType");
					this.OnEmploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngTelecommunicationPersonnel_tblMngOut_of_CareCall", Storage="_tblMngOut_of_CareCalls", ThisKey="ID", OtherKey="TelecommunicationsEmployee")]
		public EntitySet<tblMngOut_of_CareCall> tblMngOut_of_CareCalls
		{
			get
			{
				return this._tblMngOut_of_CareCalls;
			}
			set
			{
				this._tblMngOut_of_CareCalls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngOut_of_CareCalls(tblMngOut_of_CareCall entity)
		{
			this.SendPropertyChanging();
			entity.tblMngTelecommunicationPersonnel = this;
		}
		
		private void detach_tblMngOut_of_CareCalls(tblMngOut_of_CareCall entity)
		{
			this.SendPropertyChanging();
			entity.tblMngTelecommunicationPersonnel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Parent;
		
		private string _Name;
		
		private EntitySet<Department> _Departments;
		
		private EntitySet<Definition> _Definitions;
		
		private EntityRef<Definition> _Definition1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Definition()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			this._Definition1 = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
		public System.Nullable<int> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Definition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Department", Storage="_Departments", ThisKey="ID", OtherKey="TypeID")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definitions", ThisKey="ID", OtherKey="Parent")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Definition", Storage="_Definition1", ThisKey="Parent", OtherKey="ID", IsForeignKey=true)]
		public Definition Definition1
		{
			get
			{
				return this._Definition1.Entity;
			}
			set
			{
				Definition previousValue = this._Definition1.Entity;
				if (((previousValue != value) 
							|| (this._Definition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition1.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._Definition1.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._Parent = value.ID;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.Definition1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _ShiftName;
		
		private string _FTime;
		
		private string _ToTime;
		
		private string _CreationDate;
		
		private string _CreationUser;
		
		private EntitySet<tblMngCprGroup> _tblMngCprGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnShiftNameChanging(string value);
    partial void OnShiftNameChanged();
    partial void OnFTimeChanging(string value);
    partial void OnFTimeChanged();
    partial void OnToTimeChanging(string value);
    partial void OnToTimeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserChanging(string value);
    partial void OnCreationUserChanged();
    #endregion
		
		public Shift()
		{
			this._tblMngCprGroups = new EntitySet<tblMngCprGroup>(new Action<tblMngCprGroup>(this.attach_tblMngCprGroups), new Action<tblMngCprGroup>(this.detach_tblMngCprGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftName", DbType="NVarChar(50)")]
		public string ShiftName
		{
			get
			{
				return this._ShiftName;
			}
			set
			{
				if ((this._ShiftName != value))
				{
					this.OnShiftNameChanging(value);
					this.SendPropertyChanging();
					this._ShiftName = value;
					this.SendPropertyChanged("ShiftName");
					this.OnShiftNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTime", DbType="NVarChar(50)")]
		public string FTime
		{
			get
			{
				return this._FTime;
			}
			set
			{
				if ((this._FTime != value))
				{
					this.OnFTimeChanging(value);
					this.SendPropertyChanging();
					this._FTime = value;
					this.SendPropertyChanged("FTime");
					this.OnFTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTime", DbType="NVarChar(50)")]
		public string ToTime
		{
			get
			{
				return this._ToTime;
			}
			set
			{
				if ((this._ToTime != value))
				{
					this.OnToTimeChanging(value);
					this.SendPropertyChanging();
					this._ToTime = value;
					this.SendPropertyChanged("ToTime");
					this.OnToTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUser", DbType="NVarChar(50)")]
		public string CreationUser
		{
			get
			{
				return this._CreationUser;
			}
			set
			{
				if ((this._CreationUser != value))
				{
					this.OnCreationUserChanging(value);
					this.SendPropertyChanging();
					this._CreationUser = value;
					this.SendPropertyChanged("CreationUser");
					this.OnCreationUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_tblMngCprGroup", Storage="_tblMngCprGroups", ThisKey="ID", OtherKey="Shift")]
		public EntitySet<tblMngCprGroup> tblMngCprGroups
		{
			get
			{
				return this._tblMngCprGroups;
			}
			set
			{
				this._tblMngCprGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngCprGroups(tblMngCprGroup entity)
		{
			this.SendPropertyChanging();
			entity.Shift1 = this;
		}
		
		private void detach_tblMngCprGroups(tblMngCprGroup entity)
		{
			this.SendPropertyChanging();
			entity.Shift1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[tblMngOut-of-CareCalls]")]
	public partial class tblMngOut_of_CareCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Date;
		
		private string _ConversationType;
		
		private string _ReqName;
		
		private string _InteralNO;
		
		private string _Result;
		
		private string _ReservationTime;
		
		private string _CallTime;
		
		private System.Nullable<int> _TelecommunicationsEmployee;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _CreationUserID;
		
		private EntityRef<tblMngTelecommunicationPersonnel> _tblMngTelecommunicationPersonnel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnConversationTypeChanging(string value);
    partial void OnConversationTypeChanged();
    partial void OnReqNameChanging(string value);
    partial void OnReqNameChanged();
    partial void OnInteralNOChanging(string value);
    partial void OnInteralNOChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnReservationTimeChanging(string value);
    partial void OnReservationTimeChanged();
    partial void OnCallTimeChanging(string value);
    partial void OnCallTimeChanged();
    partial void OnTelecommunicationsEmployeeChanging(System.Nullable<int> value);
    partial void OnTelecommunicationsEmployeeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    #endregion
		
		public tblMngOut_of_CareCall()
		{
			this._tblMngTelecommunicationPersonnel = default(EntityRef<tblMngTelecommunicationPersonnel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(10)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversationType", DbType="NVarChar(50)")]
		public string ConversationType
		{
			get
			{
				return this._ConversationType;
			}
			set
			{
				if ((this._ConversationType != value))
				{
					this.OnConversationTypeChanging(value);
					this.SendPropertyChanging();
					this._ConversationType = value;
					this.SendPropertyChanged("ConversationType");
					this.OnConversationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqName", DbType="NVarChar(50)")]
		public string ReqName
		{
			get
			{
				return this._ReqName;
			}
			set
			{
				if ((this._ReqName != value))
				{
					this.OnReqNameChanging(value);
					this.SendPropertyChanging();
					this._ReqName = value;
					this.SendPropertyChanged("ReqName");
					this.OnReqNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteralNO", DbType="NVarChar(50)")]
		public string InteralNO
		{
			get
			{
				return this._InteralNO;
			}
			set
			{
				if ((this._InteralNO != value))
				{
					this.OnInteralNOChanging(value);
					this.SendPropertyChanging();
					this._InteralNO = value;
					this.SendPropertyChanged("InteralNO");
					this.OnInteralNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(50)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationTime", DbType="NVarChar(10)")]
		public string ReservationTime
		{
			get
			{
				return this._ReservationTime;
			}
			set
			{
				if ((this._ReservationTime != value))
				{
					this.OnReservationTimeChanging(value);
					this.SendPropertyChanging();
					this._ReservationTime = value;
					this.SendPropertyChanged("ReservationTime");
					this.OnReservationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallTime", DbType="NVarChar(10)")]
		public string CallTime
		{
			get
			{
				return this._CallTime;
			}
			set
			{
				if ((this._CallTime != value))
				{
					this.OnCallTimeChanging(value);
					this.SendPropertyChanging();
					this._CallTime = value;
					this.SendPropertyChanged("CallTime");
					this.OnCallTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelecommunicationsEmployee", DbType="Int")]
		public System.Nullable<int> TelecommunicationsEmployee
		{
			get
			{
				return this._TelecommunicationsEmployee;
			}
			set
			{
				if ((this._TelecommunicationsEmployee != value))
				{
					if (this._tblMngTelecommunicationPersonnel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTelecommunicationsEmployeeChanging(value);
					this.SendPropertyChanging();
					this._TelecommunicationsEmployee = value;
					this.SendPropertyChanged("TelecommunicationsEmployee");
					this.OnTelecommunicationsEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngTelecommunicationPersonnel_tblMngOut_of_CareCall", Storage="_tblMngTelecommunicationPersonnel", ThisKey="TelecommunicationsEmployee", OtherKey="ID", IsForeignKey=true)]
		public tblMngTelecommunicationPersonnel tblMngTelecommunicationPersonnel
		{
			get
			{
				return this._tblMngTelecommunicationPersonnel.Entity;
			}
			set
			{
				tblMngTelecommunicationPersonnel previousValue = this._tblMngTelecommunicationPersonnel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngTelecommunicationPersonnel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngTelecommunicationPersonnel.Entity = null;
						previousValue.tblMngOut_of_CareCalls.Remove(this);
					}
					this._tblMngTelecommunicationPersonnel.Entity = value;
					if ((value != null))
					{
						value.tblMngOut_of_CareCalls.Add(this);
						this._TelecommunicationsEmployee = value.ID;
					}
					else
					{
						this._TelecommunicationsEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngTelecommunicationPersonnel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCprGroup")]
	public partial class tblMngCprGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Shift;
		
		private string _Requster;
		
		private string _RequsterDepartment;
		
		private string _RequstTimePage;
		
		private string _TimeWarningPage;
		
		private System.Nullable<int> _NumberOfPaging;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CteationUserID;
		
		private string _CreationTime;
		
		private EntityRef<Shift> _Shift1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnShiftChanging(System.Nullable<int> value);
    partial void OnShiftChanged();
    partial void OnRequsterChanging(string value);
    partial void OnRequsterChanged();
    partial void OnRequsterDepartmentChanging(string value);
    partial void OnRequsterDepartmentChanged();
    partial void OnRequstTimePageChanging(string value);
    partial void OnRequstTimePageChanged();
    partial void OnTimeWarningPageChanging(string value);
    partial void OnTimeWarningPageChanged();
    partial void OnNumberOfPagingChanging(System.Nullable<int> value);
    partial void OnNumberOfPagingChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCteationUserIDChanging(string value);
    partial void OnCteationUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public tblMngCprGroup()
		{
			this._Shift1 = default(EntityRef<Shift>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="Int")]
		public System.Nullable<int> Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					if (this._Shift1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requster", DbType="NVarChar(50)")]
		public string Requster
		{
			get
			{
				return this._Requster;
			}
			set
			{
				if ((this._Requster != value))
				{
					this.OnRequsterChanging(value);
					this.SendPropertyChanging();
					this._Requster = value;
					this.SendPropertyChanged("Requster");
					this.OnRequsterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequsterDepartment", DbType="NVarChar(50)")]
		public string RequsterDepartment
		{
			get
			{
				return this._RequsterDepartment;
			}
			set
			{
				if ((this._RequsterDepartment != value))
				{
					this.OnRequsterDepartmentChanging(value);
					this.SendPropertyChanging();
					this._RequsterDepartment = value;
					this.SendPropertyChanged("RequsterDepartment");
					this.OnRequsterDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequstTimePage", DbType="NVarChar(5)")]
		public string RequstTimePage
		{
			get
			{
				return this._RequstTimePage;
			}
			set
			{
				if ((this._RequstTimePage != value))
				{
					this.OnRequstTimePageChanging(value);
					this.SendPropertyChanging();
					this._RequstTimePage = value;
					this.SendPropertyChanged("RequstTimePage");
					this.OnRequstTimePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeWarningPage", DbType="NVarChar(5)")]
		public string TimeWarningPage
		{
			get
			{
				return this._TimeWarningPage;
			}
			set
			{
				if ((this._TimeWarningPage != value))
				{
					this.OnTimeWarningPageChanging(value);
					this.SendPropertyChanging();
					this._TimeWarningPage = value;
					this.SendPropertyChanged("TimeWarningPage");
					this.OnTimeWarningPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPaging", DbType="Int")]
		public System.Nullable<int> NumberOfPaging
		{
			get
			{
				return this._NumberOfPaging;
			}
			set
			{
				if ((this._NumberOfPaging != value))
				{
					this.OnNumberOfPagingChanging(value);
					this.SendPropertyChanging();
					this._NumberOfPaging = value;
					this.SendPropertyChanged("NumberOfPaging");
					this.OnNumberOfPagingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CteationUserID", DbType="NChar(10)")]
		public string CteationUserID
		{
			get
			{
				return this._CteationUserID;
			}
			set
			{
				if ((this._CteationUserID != value))
				{
					this.OnCteationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CteationUserID = value;
					this.SendPropertyChanged("CteationUserID");
					this.OnCteationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_tblMngCprGroup", Storage="_Shift1", ThisKey="Shift", OtherKey="ID", IsForeignKey=true)]
		public Shift Shift1
		{
			get
			{
				return this._Shift1.Entity;
			}
			set
			{
				Shift previousValue = this._Shift1.Entity;
				if (((previousValue != value) 
							|| (this._Shift1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift1.Entity = null;
						previousValue.tblMngCprGroups.Remove(this);
					}
					this._Shift1.Entity = value;
					if ((value != null))
					{
						value.tblMngCprGroups.Add(this);
						this._Shift = value.ID;
					}
					else
					{
						this._Shift = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shift1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngDirectionCar")]
	public partial class tblMngDirectionCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Direction;
		
		private string _Direction_name;
		
		private string _Kind_Direction;
		
		private EntitySet<tblMngDailyRep> _tblMngDailyReps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DirectionChanging(int value);
    partial void OnID_DirectionChanged();
    partial void OnDirection_nameChanging(string value);
    partial void OnDirection_nameChanged();
    partial void OnKind_DirectionChanging(string value);
    partial void OnKind_DirectionChanged();
    #endregion
		
		public tblMngDirectionCar()
		{
			this._tblMngDailyReps = new EntitySet<tblMngDailyRep>(new Action<tblMngDailyRep>(this.attach_tblMngDailyReps), new Action<tblMngDailyRep>(this.detach_tblMngDailyReps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Direction", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Direction
		{
			get
			{
				return this._ID_Direction;
			}
			set
			{
				if ((this._ID_Direction != value))
				{
					this.OnID_DirectionChanging(value);
					this.SendPropertyChanging();
					this._ID_Direction = value;
					this.SendPropertyChanged("ID_Direction");
					this.OnID_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction_name", DbType="NVarChar(20)")]
		public string Direction_name
		{
			get
			{
				return this._Direction_name;
			}
			set
			{
				if ((this._Direction_name != value))
				{
					this.OnDirection_nameChanging(value);
					this.SendPropertyChanging();
					this._Direction_name = value;
					this.SendPropertyChanged("Direction_name");
					this.OnDirection_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_Direction", DbType="NVarChar(20)")]
		public string Kind_Direction
		{
			get
			{
				return this._Kind_Direction;
			}
			set
			{
				if ((this._Kind_Direction != value))
				{
					this.OnKind_DirectionChanging(value);
					this.SendPropertyChanging();
					this._Kind_Direction = value;
					this.SendPropertyChanged("Kind_Direction");
					this.OnKind_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngDirectionCar_tblMngDailyRep", Storage="_tblMngDailyReps", ThisKey="ID_Direction", OtherKey="IDPath")]
		public EntitySet<tblMngDailyRep> tblMngDailyReps
		{
			get
			{
				return this._tblMngDailyReps;
			}
			set
			{
				this._tblMngDailyReps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngDailyReps(tblMngDailyRep entity)
		{
			this.SendPropertyChanging();
			entity.tblMngDirectionCar = this;
		}
		
		private void detach_tblMngDailyReps(tblMngDailyRep entity)
		{
			this.SendPropertyChanging();
			entity.tblMngDirectionCar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngtransportPersonel")]
	public partial class tblMngtransportPersonel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Lname;
		
		private string _Date_Hired;
		
		private string _Description;
		
		private string _CarType;
		
		private string _WorkTime;
		
		private string _StiNum;
		
		private string _WorkPlace;
		
		private string _Type;
		
		private EntitySet<tblMngDailyRep> _tblMngDailyReps;
		
		private EntitySet<tblMngFactorRepair> _tblMngFactorRepairs;
		
		private EntitySet<tblMngCarDriver> _tblMngCarDrivers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLnameChanging(string value);
    partial void OnLnameChanged();
    partial void OnDate_HiredChanging(string value);
    partial void OnDate_HiredChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCarTypeChanging(string value);
    partial void OnCarTypeChanged();
    partial void OnWorkTimeChanging(string value);
    partial void OnWorkTimeChanged();
    partial void OnStiNumChanging(string value);
    partial void OnStiNumChanged();
    partial void OnWorkPlaceChanging(string value);
    partial void OnWorkPlaceChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public tblMngtransportPersonel()
		{
			this._tblMngDailyReps = new EntitySet<tblMngDailyRep>(new Action<tblMngDailyRep>(this.attach_tblMngDailyReps), new Action<tblMngDailyRep>(this.detach_tblMngDailyReps));
			this._tblMngFactorRepairs = new EntitySet<tblMngFactorRepair>(new Action<tblMngFactorRepair>(this.attach_tblMngFactorRepairs), new Action<tblMngFactorRepair>(this.detach_tblMngFactorRepairs));
			this._tblMngCarDrivers = new EntitySet<tblMngCarDriver>(new Action<tblMngCarDriver>(this.attach_tblMngCarDrivers), new Action<tblMngCarDriver>(this.detach_tblMngCarDrivers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lname", DbType="NVarChar(30)")]
		public string Lname
		{
			get
			{
				return this._Lname;
			}
			set
			{
				if ((this._Lname != value))
				{
					this.OnLnameChanging(value);
					this.SendPropertyChanging();
					this._Lname = value;
					this.SendPropertyChanged("Lname");
					this.OnLnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Hired", DbType="NVarChar(10)")]
		public string Date_Hired
		{
			get
			{
				return this._Date_Hired;
			}
			set
			{
				if ((this._Date_Hired != value))
				{
					this.OnDate_HiredChanging(value);
					this.SendPropertyChanging();
					this._Date_Hired = value;
					this.SendPropertyChanged("Date_Hired");
					this.OnDate_HiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarType", DbType="NVarChar(50)")]
		public string CarType
		{
			get
			{
				return this._CarType;
			}
			set
			{
				if ((this._CarType != value))
				{
					this.OnCarTypeChanging(value);
					this.SendPropertyChanging();
					this._CarType = value;
					this.SendPropertyChanged("CarType");
					this.OnCarTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="NChar(10)")]
		public string WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StiNum", DbType="NVarChar(20)")]
		public string StiNum
		{
			get
			{
				return this._StiNum;
			}
			set
			{
				if ((this._StiNum != value))
				{
					this.OnStiNumChanging(value);
					this.SendPropertyChanging();
					this._StiNum = value;
					this.SendPropertyChanged("StiNum");
					this.OnStiNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPlace", DbType="NVarChar(50)")]
		public string WorkPlace
		{
			get
			{
				return this._WorkPlace;
			}
			set
			{
				if ((this._WorkPlace != value))
				{
					this.OnWorkPlaceChanging(value);
					this.SendPropertyChanging();
					this._WorkPlace = value;
					this.SendPropertyChanged("WorkPlace");
					this.OnWorkPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngDailyRep", Storage="_tblMngDailyReps", ThisKey="ID", OtherKey="IDDriver")]
		public EntitySet<tblMngDailyRep> tblMngDailyReps
		{
			get
			{
				return this._tblMngDailyReps;
			}
			set
			{
				this._tblMngDailyReps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngFactorRepair", Storage="_tblMngFactorRepairs", ThisKey="ID", OtherKey="IDDriver")]
		public EntitySet<tblMngFactorRepair> tblMngFactorRepairs
		{
			get
			{
				return this._tblMngFactorRepairs;
			}
			set
			{
				this._tblMngFactorRepairs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngCarDriver", Storage="_tblMngCarDrivers", ThisKey="ID", OtherKey="Driver_ID")]
		public EntitySet<tblMngCarDriver> tblMngCarDrivers
		{
			get
			{
				return this._tblMngCarDrivers;
			}
			set
			{
				this._tblMngCarDrivers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngDailyReps(tblMngDailyRep entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = this;
		}
		
		private void detach_tblMngDailyReps(tblMngDailyRep entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = null;
		}
		
		private void attach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = this;
		}
		
		private void detach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = null;
		}
		
		private void attach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = this;
		}
		
		private void detach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngtransportPersonel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngDailyRep")]
	public partial class tblMngDailyRep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Function;
		
		private System.Nullable<int> _IDDriver;
		
		private System.Nullable<int> _IDCar;
		
		private string _ExitDate;
		
		private string _ExitTime;
		
		private System.Nullable<int> _IDPath;
		
		private string _OtherWork;
		
		private string _Mission;
		
		private string _ExtraMission;
		
		private string _TypeMission;
		
		private string _carType;
		
		private string _CreationDate;
		
		private string _CreationUserID;
		
		private string _CreationTime;
		
		private EntityRef<tblMngDirectionCar> _tblMngDirectionCar;
		
		private EntityRef<tblMngtransportPersonel> _tblMngtransportPersonel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FunctionChanging(int value);
    partial void OnID_FunctionChanged();
    partial void OnIDDriverChanging(System.Nullable<int> value);
    partial void OnIDDriverChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    partial void OnExitDateChanging(string value);
    partial void OnExitDateChanged();
    partial void OnExitTimeChanging(string value);
    partial void OnExitTimeChanged();
    partial void OnIDPathChanging(System.Nullable<int> value);
    partial void OnIDPathChanged();
    partial void OnOtherWorkChanging(string value);
    partial void OnOtherWorkChanged();
    partial void OnMissionChanging(string value);
    partial void OnMissionChanged();
    partial void OnExtraMissionChanging(string value);
    partial void OnExtraMissionChanged();
    partial void OnTypeMissionChanging(string value);
    partial void OnTypeMissionChanged();
    partial void OncarTypeChanging(string value);
    partial void OncarTypeChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    #endregion
		
		public tblMngDailyRep()
		{
			this._tblMngDirectionCar = default(EntityRef<tblMngDirectionCar>);
			this._tblMngtransportPersonel = default(EntityRef<tblMngtransportPersonel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Function", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Function
		{
			get
			{
				return this._ID_Function;
			}
			set
			{
				if ((this._ID_Function != value))
				{
					this.OnID_FunctionChanging(value);
					this.SendPropertyChanging();
					this._ID_Function = value;
					this.SendPropertyChanged("ID_Function");
					this.OnID_FunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDriver", DbType="Int")]
		public System.Nullable<int> IDDriver
		{
			get
			{
				return this._IDDriver;
			}
			set
			{
				if ((this._IDDriver != value))
				{
					if (this._tblMngtransportPersonel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDriverChanging(value);
					this.SendPropertyChanging();
					this._IDDriver = value;
					this.SendPropertyChanged("IDDriver");
					this.OnIDDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitDate", DbType="NVarChar(10)")]
		public string ExitDate
		{
			get
			{
				return this._ExitDate;
			}
			set
			{
				if ((this._ExitDate != value))
				{
					this.OnExitDateChanging(value);
					this.SendPropertyChanging();
					this._ExitDate = value;
					this.SendPropertyChanged("ExitDate");
					this.OnExitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitTime", DbType="NVarChar(5)")]
		public string ExitTime
		{
			get
			{
				return this._ExitTime;
			}
			set
			{
				if ((this._ExitTime != value))
				{
					this.OnExitTimeChanging(value);
					this.SendPropertyChanging();
					this._ExitTime = value;
					this.SendPropertyChanged("ExitTime");
					this.OnExitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPath", DbType="Int")]
		public System.Nullable<int> IDPath
		{
			get
			{
				return this._IDPath;
			}
			set
			{
				if ((this._IDPath != value))
				{
					if (this._tblMngDirectionCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPathChanging(value);
					this.SendPropertyChanging();
					this._IDPath = value;
					this.SendPropertyChanged("IDPath");
					this.OnIDPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherWork", DbType="NVarChar(100)")]
		public string OtherWork
		{
			get
			{
				return this._OtherWork;
			}
			set
			{
				if ((this._OtherWork != value))
				{
					this.OnOtherWorkChanging(value);
					this.SendPropertyChanging();
					this._OtherWork = value;
					this.SendPropertyChanged("OtherWork");
					this.OnOtherWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission", DbType="NVarChar(100)")]
		public string Mission
		{
			get
			{
				return this._Mission;
			}
			set
			{
				if ((this._Mission != value))
				{
					this.OnMissionChanging(value);
					this.SendPropertyChanging();
					this._Mission = value;
					this.SendPropertyChanged("Mission");
					this.OnMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraMission", DbType="NVarChar(100)")]
		public string ExtraMission
		{
			get
			{
				return this._ExtraMission;
			}
			set
			{
				if ((this._ExtraMission != value))
				{
					this.OnExtraMissionChanging(value);
					this.SendPropertyChanging();
					this._ExtraMission = value;
					this.SendPropertyChanged("ExtraMission");
					this.OnExtraMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMission", DbType="NVarChar(30)")]
		public string TypeMission
		{
			get
			{
				return this._TypeMission;
			}
			set
			{
				if ((this._TypeMission != value))
				{
					this.OnTypeMissionChanging(value);
					this.SendPropertyChanging();
					this._TypeMission = value;
					this.SendPropertyChanged("TypeMission");
					this.OnTypeMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carType", DbType="NChar(10)")]
		public string carType
		{
			get
			{
				return this._carType;
			}
			set
			{
				if ((this._carType != value))
				{
					this.OncarTypeChanging(value);
					this.SendPropertyChanging();
					this._carType = value;
					this.SendPropertyChanged("carType");
					this.OncarTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngDirectionCar_tblMngDailyRep", Storage="_tblMngDirectionCar", ThisKey="IDPath", OtherKey="ID_Direction", IsForeignKey=true)]
		public tblMngDirectionCar tblMngDirectionCar
		{
			get
			{
				return this._tblMngDirectionCar.Entity;
			}
			set
			{
				tblMngDirectionCar previousValue = this._tblMngDirectionCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngDirectionCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngDirectionCar.Entity = null;
						previousValue.tblMngDailyReps.Remove(this);
					}
					this._tblMngDirectionCar.Entity = value;
					if ((value != null))
					{
						value.tblMngDailyReps.Add(this);
						this._IDPath = value.ID_Direction;
					}
					else
					{
						this._IDPath = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngDirectionCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngDailyRep", Storage="_tblMngtransportPersonel", ThisKey="IDDriver", OtherKey="ID", IsForeignKey=true)]
		public tblMngtransportPersonel tblMngtransportPersonel
		{
			get
			{
				return this._tblMngtransportPersonel.Entity;
			}
			set
			{
				tblMngtransportPersonel previousValue = this._tblMngtransportPersonel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngtransportPersonel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngtransportPersonel.Entity = null;
						previousValue.tblMngDailyReps.Remove(this);
					}
					this._tblMngtransportPersonel.Entity = value;
					if ((value != null))
					{
						value.tblMngDailyReps.Add(this);
						this._IDDriver = value.ID;
					}
					else
					{
						this._IDDriver = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngtransportPersonel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCarInsurance")]
	public partial class tblMngCarInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDCar;
		
		private string _Date_Insurance;
		
		private string _InsurNO;
		
		private string _Kind_INsurance;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    partial void OnDate_InsuranceChanging(string value);
    partial void OnDate_InsuranceChanged();
    partial void OnInsurNOChanging(string value);
    partial void OnInsurNOChanged();
    partial void OnKind_INsuranceChanging(string value);
    partial void OnKind_INsuranceChanged();
    #endregion
		
		public tblMngCarInsurance()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Insurance", DbType="NChar(10)")]
		public string Date_Insurance
		{
			get
			{
				return this._Date_Insurance;
			}
			set
			{
				if ((this._Date_Insurance != value))
				{
					this.OnDate_InsuranceChanging(value);
					this.SendPropertyChanging();
					this._Date_Insurance = value;
					this.SendPropertyChanged("Date_Insurance");
					this.OnDate_InsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurNO", DbType="NVarChar(50)")]
		public string InsurNO
		{
			get
			{
				return this._InsurNO;
			}
			set
			{
				if ((this._InsurNO != value))
				{
					this.OnInsurNOChanging(value);
					this.SendPropertyChanging();
					this._InsurNO = value;
					this.SendPropertyChanged("InsurNO");
					this.OnInsurNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_INsurance", DbType="NVarChar(50)")]
		public string Kind_INsurance
		{
			get
			{
				return this._Kind_INsurance;
			}
			set
			{
				if ((this._Kind_INsurance != value))
				{
					this.OnKind_INsuranceChanging(value);
					this.SendPropertyChanging();
					this._Kind_INsurance = value;
					this.SendPropertyChanged("Kind_INsurance");
					this.OnKind_INsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarInsurance", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngCarInsurances.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngCarInsurances.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCivilCar")]
	public partial class tblMngCivilCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Car;
		
		private string _Kind_Car;
		
		private string _Car_No;
		
		private string _Captives_No;
		
		private System.Nullable<int> _CCar;
		
		private string _Model;
		
		private string _Color;
		
		private string _Engine_No;
		
		private string _Chassis_No;
		
		private string _Date_DeliveryDepartment;
		
		private string _Date_DeliveryDriver;
		
		private string _description;
		
		private string _CreationUserID;
		
		private string _CreationDate;
		
		private EntitySet<tblMngCarInsurance> _tblMngCarInsurances;
		
		private EntitySet<tblMngFuelCar> _tblMngFuelCars;
		
		private EntitySet<tblMngFactorRepair> _tblMngFactorRepairs;
		
		private EntitySet<tblMngCarDriver> _tblMngCarDrivers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CarChanging(int value);
    partial void OnID_CarChanged();
    partial void OnKind_CarChanging(string value);
    partial void OnKind_CarChanged();
    partial void OnCar_NoChanging(string value);
    partial void OnCar_NoChanged();
    partial void OnCaptives_NoChanging(string value);
    partial void OnCaptives_NoChanged();
    partial void OnCCarChanging(System.Nullable<int> value);
    partial void OnCCarChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnEngine_NoChanging(string value);
    partial void OnEngine_NoChanged();
    partial void OnChassis_NoChanging(string value);
    partial void OnChassis_NoChanged();
    partial void OnDate_DeliveryDepartmentChanging(string value);
    partial void OnDate_DeliveryDepartmentChanged();
    partial void OnDate_DeliveryDriverChanging(string value);
    partial void OnDate_DeliveryDriverChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    #endregion
		
		public tblMngCivilCar()
		{
			this._tblMngCarInsurances = new EntitySet<tblMngCarInsurance>(new Action<tblMngCarInsurance>(this.attach_tblMngCarInsurances), new Action<tblMngCarInsurance>(this.detach_tblMngCarInsurances));
			this._tblMngFuelCars = new EntitySet<tblMngFuelCar>(new Action<tblMngFuelCar>(this.attach_tblMngFuelCars), new Action<tblMngFuelCar>(this.detach_tblMngFuelCars));
			this._tblMngFactorRepairs = new EntitySet<tblMngFactorRepair>(new Action<tblMngFactorRepair>(this.attach_tblMngFactorRepairs), new Action<tblMngFactorRepair>(this.detach_tblMngFactorRepairs));
			this._tblMngCarDrivers = new EntitySet<tblMngCarDriver>(new Action<tblMngCarDriver>(this.attach_tblMngCarDrivers), new Action<tblMngCarDriver>(this.detach_tblMngCarDrivers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Car", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Car
		{
			get
			{
				return this._ID_Car;
			}
			set
			{
				if ((this._ID_Car != value))
				{
					this.OnID_CarChanging(value);
					this.SendPropertyChanging();
					this._ID_Car = value;
					this.SendPropertyChanged("ID_Car");
					this.OnID_CarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind_Car", DbType="NVarChar(50)")]
		public string Kind_Car
		{
			get
			{
				return this._Kind_Car;
			}
			set
			{
				if ((this._Kind_Car != value))
				{
					this.OnKind_CarChanging(value);
					this.SendPropertyChanging();
					this._Kind_Car = value;
					this.SendPropertyChanged("Kind_Car");
					this.OnKind_CarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Car_No", DbType="NVarChar(50)")]
		public string Car_No
		{
			get
			{
				return this._Car_No;
			}
			set
			{
				if ((this._Car_No != value))
				{
					this.OnCar_NoChanging(value);
					this.SendPropertyChanging();
					this._Car_No = value;
					this.SendPropertyChanged("Car_No");
					this.OnCar_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Captives_No", DbType="NVarChar(50)")]
		public string Captives_No
		{
			get
			{
				return this._Captives_No;
			}
			set
			{
				if ((this._Captives_No != value))
				{
					this.OnCaptives_NoChanging(value);
					this.SendPropertyChanging();
					this._Captives_No = value;
					this.SendPropertyChanged("Captives_No");
					this.OnCaptives_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCar", DbType="Int")]
		public System.Nullable<int> CCar
		{
			get
			{
				return this._CCar;
			}
			set
			{
				if ((this._CCar != value))
				{
					this.OnCCarChanging(value);
					this.SendPropertyChanging();
					this._CCar = value;
					this.SendPropertyChanged("CCar");
					this.OnCCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NChar(10)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Engine_No", DbType="NVarChar(50)")]
		public string Engine_No
		{
			get
			{
				return this._Engine_No;
			}
			set
			{
				if ((this._Engine_No != value))
				{
					this.OnEngine_NoChanging(value);
					this.SendPropertyChanging();
					this._Engine_No = value;
					this.SendPropertyChanged("Engine_No");
					this.OnEngine_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chassis_No", DbType="NVarChar(50)")]
		public string Chassis_No
		{
			get
			{
				return this._Chassis_No;
			}
			set
			{
				if ((this._Chassis_No != value))
				{
					this.OnChassis_NoChanging(value);
					this.SendPropertyChanging();
					this._Chassis_No = value;
					this.SendPropertyChanged("Chassis_No");
					this.OnChassis_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_DeliveryDepartment", DbType="NChar(10)")]
		public string Date_DeliveryDepartment
		{
			get
			{
				return this._Date_DeliveryDepartment;
			}
			set
			{
				if ((this._Date_DeliveryDepartment != value))
				{
					this.OnDate_DeliveryDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Date_DeliveryDepartment = value;
					this.SendPropertyChanged("Date_DeliveryDepartment");
					this.OnDate_DeliveryDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_DeliveryDriver", DbType="NChar(10)")]
		public string Date_DeliveryDriver
		{
			get
			{
				return this._Date_DeliveryDriver;
			}
			set
			{
				if ((this._Date_DeliveryDriver != value))
				{
					this.OnDate_DeliveryDriverChanging(value);
					this.SendPropertyChanging();
					this._Date_DeliveryDriver = value;
					this.SendPropertyChanged("Date_DeliveryDriver");
					this.OnDate_DeliveryDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NVarChar(50)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NVarChar(50)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarInsurance", Storage="_tblMngCarInsurances", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngCarInsurance> tblMngCarInsurances
		{
			get
			{
				return this._tblMngCarInsurances;
			}
			set
			{
				this._tblMngCarInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFuelCar", Storage="_tblMngFuelCars", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngFuelCar> tblMngFuelCars
		{
			get
			{
				return this._tblMngFuelCars;
			}
			set
			{
				this._tblMngFuelCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFactorRepair", Storage="_tblMngFactorRepairs", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngFactorRepair> tblMngFactorRepairs
		{
			get
			{
				return this._tblMngFactorRepairs;
			}
			set
			{
				this._tblMngFactorRepairs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarDriver", Storage="_tblMngCarDrivers", ThisKey="ID_Car", OtherKey="IDCar")]
		public EntitySet<tblMngCarDriver> tblMngCarDrivers
		{
			get
			{
				return this._tblMngCarDrivers;
			}
			set
			{
				this._tblMngCarDrivers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMngCarInsurances(tblMngCarInsurance entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngCarInsurances(tblMngCarInsurance entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
		
		private void attach_tblMngFuelCars(tblMngFuelCar entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngFuelCars(tblMngFuelCar entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
		
		private void attach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngFactorRepairs(tblMngFactorRepair entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
		
		private void attach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = this;
		}
		
		private void detach_tblMngCarDrivers(tblMngCarDriver entity)
		{
			this.SendPropertyChanging();
			entity.tblMngCivilCar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngFuelCar")]
	public partial class tblMngFuelCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Fuel;
		
		private string _Time_fuel;
		
		private string _Date_Fuel;
		
		private System.Nullable<int> _Kilometer_No;
		
		private System.Nullable<int> _driverID;
		
		private string _Description;
		
		private System.Nullable<int> _IDCar;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FuelChanging(int value);
    partial void OnID_FuelChanged();
    partial void OnTime_fuelChanging(string value);
    partial void OnTime_fuelChanged();
    partial void OnDate_FuelChanging(string value);
    partial void OnDate_FuelChanged();
    partial void OnKilometer_NoChanging(System.Nullable<int> value);
    partial void OnKilometer_NoChanged();
    partial void OndriverIDChanging(System.Nullable<int> value);
    partial void OndriverIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    #endregion
		
		public tblMngFuelCar()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Fuel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Fuel
		{
			get
			{
				return this._ID_Fuel;
			}
			set
			{
				if ((this._ID_Fuel != value))
				{
					this.OnID_FuelChanging(value);
					this.SendPropertyChanging();
					this._ID_Fuel = value;
					this.SendPropertyChanged("ID_Fuel");
					this.OnID_FuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_fuel", DbType="NVarChar(5)")]
		public string Time_fuel
		{
			get
			{
				return this._Time_fuel;
			}
			set
			{
				if ((this._Time_fuel != value))
				{
					this.OnTime_fuelChanging(value);
					this.SendPropertyChanging();
					this._Time_fuel = value;
					this.SendPropertyChanged("Time_fuel");
					this.OnTime_fuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Fuel", DbType="NVarChar(10)")]
		public string Date_Fuel
		{
			get
			{
				return this._Date_Fuel;
			}
			set
			{
				if ((this._Date_Fuel != value))
				{
					this.OnDate_FuelChanging(value);
					this.SendPropertyChanging();
					this._Date_Fuel = value;
					this.SendPropertyChanged("Date_Fuel");
					this.OnDate_FuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kilometer_No", DbType="Int")]
		public System.Nullable<int> Kilometer_No
		{
			get
			{
				return this._Kilometer_No;
			}
			set
			{
				if ((this._Kilometer_No != value))
				{
					this.OnKilometer_NoChanging(value);
					this.SendPropertyChanging();
					this._Kilometer_No = value;
					this.SendPropertyChanged("Kilometer_No");
					this.OnKilometer_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverID", DbType="Int")]
		public System.Nullable<int> driverID
		{
			get
			{
				return this._driverID;
			}
			set
			{
				if ((this._driverID != value))
				{
					this.OndriverIDChanging(value);
					this.SendPropertyChanging();
					this._driverID = value;
					this.SendPropertyChanged("driverID");
					this.OndriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFuelCar", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngFuelCars.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngFuelCars.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngFactorRepair")]
	public partial class tblMngFactorRepair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceOrDevice;
		
		private System.Nullable<decimal> _Price;
		
		private string _Repairman;
		
		private System.Nullable<int> _FactorID;
		
		private string _Phone;
		
		private string _Addres;
		
		private string _Date_Repairer;
		
		private string _Date_Failure;
		
		private string _failureOrProblem;
		
		private string _Description;
		
		private string _CreationDate;
		
		private string _CreationTime;
		
		private string _CreationUserID;
		
		private System.Nullable<int> _IDCar;
		
		private System.Nullable<int> _IDDriver;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
		private EntityRef<tblMngtransportPersonel> _tblMngtransportPersonel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceOrDeviceChanging(string value);
    partial void OnServiceOrDeviceChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnRepairmanChanging(string value);
    partial void OnRepairmanChanged();
    partial void OnFactorIDChanging(System.Nullable<int> value);
    partial void OnFactorIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddresChanging(string value);
    partial void OnAddresChanged();
    partial void OnDate_RepairerChanging(string value);
    partial void OnDate_RepairerChanged();
    partial void OnDate_FailureChanging(string value);
    partial void OnDate_FailureChanged();
    partial void OnfailureOrProblemChanging(string value);
    partial void OnfailureOrProblemChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(string value);
    partial void OnCreationDateChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnCreationUserIDChanging(string value);
    partial void OnCreationUserIDChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    partial void OnIDDriverChanging(System.Nullable<int> value);
    partial void OnIDDriverChanged();
    #endregion
		
		public tblMngFactorRepair()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			this._tblMngtransportPersonel = default(EntityRef<tblMngtransportPersonel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrDevice", DbType="NVarChar(20)")]
		public string ServiceOrDevice
		{
			get
			{
				return this._ServiceOrDevice;
			}
			set
			{
				if ((this._ServiceOrDevice != value))
				{
					this.OnServiceOrDeviceChanging(value);
					this.SendPropertyChanging();
					this._ServiceOrDevice = value;
					this.SendPropertyChanged("ServiceOrDevice");
					this.OnServiceOrDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Repairman", DbType="NVarChar(30)")]
		public string Repairman
		{
			get
			{
				return this._Repairman;
			}
			set
			{
				if ((this._Repairman != value))
				{
					this.OnRepairmanChanging(value);
					this.SendPropertyChanging();
					this._Repairman = value;
					this.SendPropertyChanged("Repairman");
					this.OnRepairmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactorID", DbType="Int")]
		public System.Nullable<int> FactorID
		{
			get
			{
				return this._FactorID;
			}
			set
			{
				if ((this._FactorID != value))
				{
					this.OnFactorIDChanging(value);
					this.SendPropertyChanging();
					this._FactorID = value;
					this.SendPropertyChanged("FactorID");
					this.OnFactorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="NVarChar(200)")]
		public string Addres
		{
			get
			{
				return this._Addres;
			}
			set
			{
				if ((this._Addres != value))
				{
					this.OnAddresChanging(value);
					this.SendPropertyChanging();
					this._Addres = value;
					this.SendPropertyChanged("Addres");
					this.OnAddresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Repairer", DbType="NVarChar(10)")]
		public string Date_Repairer
		{
			get
			{
				return this._Date_Repairer;
			}
			set
			{
				if ((this._Date_Repairer != value))
				{
					this.OnDate_RepairerChanging(value);
					this.SendPropertyChanging();
					this._Date_Repairer = value;
					this.SendPropertyChanged("Date_Repairer");
					this.OnDate_RepairerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Failure", DbType="NVarChar(10)")]
		public string Date_Failure
		{
			get
			{
				return this._Date_Failure;
			}
			set
			{
				if ((this._Date_Failure != value))
				{
					this.OnDate_FailureChanging(value);
					this.SendPropertyChanging();
					this._Date_Failure = value;
					this.SendPropertyChanged("Date_Failure");
					this.OnDate_FailureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_failureOrProblem", DbType="NVarChar(30)")]
		public string failureOrProblem
		{
			get
			{
				return this._failureOrProblem;
			}
			set
			{
				if ((this._failureOrProblem != value))
				{
					this.OnfailureOrProblemChanging(value);
					this.SendPropertyChanging();
					this._failureOrProblem = value;
					this.SendPropertyChanged("failureOrProblem");
					this.OnfailureOrProblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="NChar(10)")]
		public string CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NChar(10)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationUserID", DbType="NChar(10)")]
		public string CreationUserID
		{
			get
			{
				return this._CreationUserID;
			}
			set
			{
				if ((this._CreationUserID != value))
				{
					this.OnCreationUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreationUserID = value;
					this.SendPropertyChanged("CreationUserID");
					this.OnCreationUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDriver", DbType="Int")]
		public System.Nullable<int> IDDriver
		{
			get
			{
				return this._IDDriver;
			}
			set
			{
				if ((this._IDDriver != value))
				{
					if (this._tblMngtransportPersonel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDriverChanging(value);
					this.SendPropertyChanging();
					this._IDDriver = value;
					this.SendPropertyChanged("IDDriver");
					this.OnIDDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngFactorRepair", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngFactorRepairs.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngFactorRepairs.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngFactorRepair", Storage="_tblMngtransportPersonel", ThisKey="IDDriver", OtherKey="ID", IsForeignKey=true)]
		public tblMngtransportPersonel tblMngtransportPersonel
		{
			get
			{
				return this._tblMngtransportPersonel.Entity;
			}
			set
			{
				tblMngtransportPersonel previousValue = this._tblMngtransportPersonel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngtransportPersonel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngtransportPersonel.Entity = null;
						previousValue.tblMngFactorRepairs.Remove(this);
					}
					this._tblMngtransportPersonel.Entity = value;
					if ((value != null))
					{
						value.tblMngFactorRepairs.Add(this);
						this._IDDriver = value.ID;
					}
					else
					{
						this._IDDriver = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngtransportPersonel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMngCarDriver")]
	public partial class tblMngCarDriver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Driver_ID;
		
		private string _Date_Delivery;
		
		private string _Description;
		
		private System.Nullable<int> _IDCar;
		
		private EntityRef<tblMngCivilCar> _tblMngCivilCar;
		
		private EntityRef<tblMngtransportPersonel> _tblMngtransportPersonel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDriver_IDChanging(System.Nullable<int> value);
    partial void OnDriver_IDChanged();
    partial void OnDate_DeliveryChanging(string value);
    partial void OnDate_DeliveryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDCarChanging(System.Nullable<int> value);
    partial void OnIDCarChanged();
    #endregion
		
		public tblMngCarDriver()
		{
			this._tblMngCivilCar = default(EntityRef<tblMngCivilCar>);
			this._tblMngtransportPersonel = default(EntityRef<tblMngtransportPersonel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver_ID", DbType="Int")]
		public System.Nullable<int> Driver_ID
		{
			get
			{
				return this._Driver_ID;
			}
			set
			{
				if ((this._Driver_ID != value))
				{
					if (this._tblMngtransportPersonel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriver_IDChanging(value);
					this.SendPropertyChanging();
					this._Driver_ID = value;
					this.SendPropertyChanged("Driver_ID");
					this.OnDriver_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Delivery", DbType="NVarChar(10)")]
		public string Date_Delivery
		{
			get
			{
				return this._Date_Delivery;
			}
			set
			{
				if ((this._Date_Delivery != value))
				{
					this.OnDate_DeliveryChanging(value);
					this.SendPropertyChanging();
					this._Date_Delivery = value;
					this.SendPropertyChanged("Date_Delivery");
					this.OnDate_DeliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCar", DbType="Int")]
		public System.Nullable<int> IDCar
		{
			get
			{
				return this._IDCar;
			}
			set
			{
				if ((this._IDCar != value))
				{
					if (this._tblMngCivilCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCarChanging(value);
					this.SendPropertyChanging();
					this._IDCar = value;
					this.SendPropertyChanged("IDCar");
					this.OnIDCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngCivilCar_tblMngCarDriver", Storage="_tblMngCivilCar", ThisKey="IDCar", OtherKey="ID_Car", IsForeignKey=true)]
		public tblMngCivilCar tblMngCivilCar
		{
			get
			{
				return this._tblMngCivilCar.Entity;
			}
			set
			{
				tblMngCivilCar previousValue = this._tblMngCivilCar.Entity;
				if (((previousValue != value) 
							|| (this._tblMngCivilCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngCivilCar.Entity = null;
						previousValue.tblMngCarDrivers.Remove(this);
					}
					this._tblMngCivilCar.Entity = value;
					if ((value != null))
					{
						value.tblMngCarDrivers.Add(this);
						this._IDCar = value.ID_Car;
					}
					else
					{
						this._IDCar = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngCivilCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMngtransportPersonel_tblMngCarDriver", Storage="_tblMngtransportPersonel", ThisKey="Driver_ID", OtherKey="ID", IsForeignKey=true)]
		public tblMngtransportPersonel tblMngtransportPersonel
		{
			get
			{
				return this._tblMngtransportPersonel.Entity;
			}
			set
			{
				tblMngtransportPersonel previousValue = this._tblMngtransportPersonel.Entity;
				if (((previousValue != value) 
							|| (this._tblMngtransportPersonel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMngtransportPersonel.Entity = null;
						previousValue.tblMngCarDrivers.Remove(this);
					}
					this._tblMngtransportPersonel.Entity = value;
					if ((value != null))
					{
						value.tblMngCarDrivers.Add(this);
						this._Driver_ID = value.ID;
					}
					else
					{
						this._Driver_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMngtransportPersonel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
